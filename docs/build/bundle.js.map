{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@webcomponents/webcomponentsjs/webcomponents-loader.js","../../node_modules/tslib/tslib.es6.js","../../node_modules/lit-html/lib/dom.js","../../node_modules/lit-html/lib/template.js","../../node_modules/lit-html/lib/modify-template.js","../../node_modules/lit-html/lib/directive.js","../../node_modules/lit-html/lib/part.js","../../node_modules/lit-html/lib/template-instance.js","../../node_modules/lit-html/lib/template-result.js","../../node_modules/lit-html/lib/parts.js","../../node_modules/lit-html/lib/template-factory.js","../../node_modules/lit-html/lib/render.js","../../node_modules/lit-html/lib/default-template-processor.js","../../node_modules/lit-html/lit-html.js","../../node_modules/lit-html/lib/shady-render.js","../../node_modules/lit-element/lib/updating-element.js","../../node_modules/lit-element/lib/decorators.js","../../node_modules/lit-element/lib/css-tag.js","../../node_modules/lit-element/lit-element.js","../../node_modules/@material/mwc-top-app-bar/mwc-top-app-bar-css.js","../../node_modules/@material/top-app-bar/constants.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/top-app-bar/foundation.js","../../node_modules/@material/top-app-bar/standard/foundation.js","../../node_modules/@material/dom/ponyfill.js","../../node_modules/@material/mwc-base/utils.js","../../node_modules/@material/mwc-base/base-element.js","../../node_modules/lit-html/directives/class-map.js","../../node_modules/@material/mwc-top-app-bar/mwc-top-app-bar-base-base.js","../../node_modules/@material/mwc-top-app-bar/mwc-top-app-bar-base.js","../../node_modules/@material/top-app-bar/fixed/foundation.js","../../node_modules/@material/mwc-top-app-bar-fixed/mwc-top-app-bar-fixed-base.js","../../node_modules/@material/mwc-top-app-bar-fixed/mwc-top-app-bar-fixed.js","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../node_modules/lit-html/directives/style-map.js","../../node_modules/@material/mwc-ripple/mwc-ripple-base.js","../../node_modules/@material/mwc-ripple/mwc-ripple-css.js","../../node_modules/@material/mwc-ripple/mwc-ripple.js","../../node_modules/@material/mwc-ripple/ripple-handlers.js","../../node_modules/@material/mwc-icon-button/mwc-icon-button-base.js","../../node_modules/@material/mwc-icon-button/mwc-icon-button-css.js","../../node_modules/@material/mwc-icon-button/mwc-icon-button.js","../../node_modules/blocking-elements/dist/blocking-elements.js","../../node_modules/wicg-inert/src/inert.js","../../node_modules/@material/drawer/constants.js","../../node_modules/@material/drawer/dismissible/foundation.js","../../node_modules/@material/drawer/modal/foundation.js","../../node_modules/@material/mwc-base/observer.js","../../node_modules/@material/mwc-drawer/mwc-drawer-base.js","../../node_modules/@material/mwc-drawer/mwc-drawer-css.js","../../node_modules/@material/mwc-drawer/mwc-drawer.js","../../node_modules/@material/tab-indicator/constants.js","../../node_modules/@material/tab-indicator/foundation.js","../../node_modules/@material/tab-indicator/fading-foundation.js","../../node_modules/@material/tab-indicator/sliding-foundation.js","../../node_modules/@material/mwc-tab-indicator/mwc-tab-indicator-base.js","../../node_modules/@material/mwc-tab-indicator/mwc-tab-indicator-css.js","../../node_modules/@material/mwc-tab-indicator/mwc-tab-indicator.js","../../node_modules/@material/dom/events.js","../../node_modules/@material/mwc-ripple/mwc-ripple-global-css.js","../../node_modules/@material/mwc-ripple/ripple-directive.js","../../node_modules/@material/tab/constants.js","../../node_modules/@material/tab/foundation.js","../../node_modules/@material/mwc-tab/mwc-tab-base.js","../../node_modules/@material/mwc-tab/mwc-tab-css.js","../../node_modules/@material/mwc-tab/mwc-tab.js","../../node_modules/@material/tab-scroller/constants.js","../../node_modules/@material/tab-scroller/rtl-scroller.js","../../node_modules/@material/tab-scroller/rtl-default-scroller.js","../../node_modules/@material/tab-scroller/rtl-negative-scroller.js","../../node_modules/@material/tab-scroller/rtl-reverse-scroller.js","../../node_modules/@material/tab-scroller/foundation.js","../../node_modules/@material/mwc-tab-scroller/mwc-tab-scroller-base.js","../../node_modules/@material/mwc-tab-scroller/mwc-tab-scroller-css.js","../../node_modules/@material/mwc-tab-scroller/mwc-tab-scroller.js","../../node_modules/@material/tab-bar/constants.js","../../node_modules/@material/tab-bar/foundation.js","../../node_modules/@material/mwc-tab-bar/mwc-tab-bar-base.js","../../node_modules/@material/mwc-tab-bar/mwc-tab-bar-css.js","../../node_modules/@material/mwc-tab-bar/mwc-tab-bar.js","../../node_modules/@material/mwc-icon/mwc-icon-host-css.js","../../node_modules/@material/mwc-icon/mwc-icon.js","../../node_modules/@material/snackbar/constants.js","../../node_modules/@material/snackbar/foundation.js","../../node_modules/@material/mwc-snackbar/accessible-snackbar-label-directive.js","../../node_modules/@material/mwc-snackbar/mwc-snackbar-base.js","../../node_modules/@material/mwc-snackbar/mwc-snackbar-css.js","../../node_modules/@material/mwc-snackbar/mwc-snackbar.js","../../node_modules/file-saver/dist/FileSaver.min.js","../../node_modules/file-selector/node_modules/tslib/tslib.es6.js","../../node_modules/file-selector/dist/es5/file.js","../../node_modules/file-selector/dist/es5/file-selector.js","../../node_modules/attr-accept/dist/es/index.js","../../node_modules/svelte-file-dropzone/src/utils/index.js","../../node_modules/svelte-file-dropzone/src/components/Dropzone.svelte","../../src/components/shared/LogoBar/logo.svg","../../node_modules/svelte/store/index.mjs","../../src/applicationSettings.js","../../node_modules/svelte-css-vars/dist/index.mjs","../../src/components/shared/CircleInput/CircleInput.svelte","../../src/components/shared/SimpleField3/SimpleField3.svelte","../../src/components/shared/SimpleField2/SimpleField2.svelte","../../src/components/shared/LogoBar/LogoBar.svelte","../../src/model/worksheet.js","../../src/components/shared/Section/Section.svelte","../../src/components/Worksheet/Page1/Ability/Ability.svelte","../../src/components/shared/SimpleTextField/SimpleTextField.svelte","../../src/components/shared/SimpleNumberField/SimpleNumberField.svelte","../../src/components/Worksheet/Page1/Page1.svelte","../../src/components/Worksheet/Page2/Page2.svelte","../../src/components/Worksheet/Worksheet.svelte","../../node_modules/local-storage/stub.js","../../node_modules/local-storage/parse.js","../../node_modules/local-storage/tracking.js","../../node_modules/local-storage/local-storage.js","../../src/repository/localStorageRepository.js","../../src/App/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * Basic flow of the loader process\n   *\n   * There are 4 flows the loader can take when booting up\n   *\n   * - Synchronous script, no polyfills needed\n   *   - wait for `DOMContentLoaded`\n   *   - fire WCR event, as there could not be any callbacks passed to `waitFor`\n   *\n   * - Synchronous script, polyfills needed\n   *   - document.write the polyfill bundle\n   *   - wait on the `load` event of the bundle to batch Custom Element upgrades\n   *   - wait for `DOMContentLoaded`\n   *   - run callbacks passed to `waitFor`\n   *   - fire WCR event\n   *\n   * - Asynchronous script, no polyfills needed\n   *   - wait for `DOMContentLoaded`\n   *   - run callbacks passed to `waitFor`\n   *   - fire WCR event\n   *\n   * - Asynchronous script, polyfills needed\n   *   - Append the polyfill bundle script\n   *   - wait for `load` event of the bundle\n   *   - batch Custom Element Upgrades\n   *   - run callbacks pass to `waitFor`\n   *   - fire WCR event\n   */\n\n  var polyfillsLoaded = false;\n  var whenLoadedFns = [];\n  var allowUpgrades = false;\n  var flushFn;\n\n  function fireEvent() {\n    window.WebComponents.ready = true;\n    document.dispatchEvent(new CustomEvent('WebComponentsReady', { bubbles: true }));\n  }\n\n  function batchCustomElements() {\n    if (window.customElements && customElements.polyfillWrapFlushCallback) {\n      customElements.polyfillWrapFlushCallback(function (flushCallback) {\n        flushFn = flushCallback;\n        if (allowUpgrades) {\n          flushFn();\n        }\n      });\n    }\n  }\n\n  function asyncReady() {\n    batchCustomElements();\n    ready();\n  }\n\n  function ready() {\n    // bootstrap <template> elements before custom elements\n    if (window.HTMLTemplateElement && HTMLTemplateElement.bootstrap) {\n      HTMLTemplateElement.bootstrap(window.document);\n    }\n    polyfillsLoaded = true;\n    runWhenLoadedFns().then(fireEvent);\n  }\n\n  function runWhenLoadedFns() {\n    allowUpgrades = false;\n    var fnsMap = whenLoadedFns.map(function(fn) {\n      return fn instanceof Function ? fn() : fn;\n    });\n    whenLoadedFns = [];\n    return Promise.all(fnsMap).then(function() {\n      allowUpgrades = true;\n      flushFn && flushFn();\n    }).catch(function(err) {\n      console.error(err);\n    });\n  }\n\n  window.WebComponents = window.WebComponents || {};\n  window.WebComponents.ready = window.WebComponents.ready || false;\n  window.WebComponents.waitFor = window.WebComponents.waitFor || function(waitFn) {\n    if (!waitFn) {\n      return;\n    }\n    whenLoadedFns.push(waitFn);\n    if (polyfillsLoaded) {\n      runWhenLoadedFns();\n    }\n  };\n  window.WebComponents._batchCustomElements = batchCustomElements;\n\n  var name = 'webcomponents-loader.js';\n  // Feature detect which polyfill needs to be imported.\n  var polyfills = [];\n  if (!('attachShadow' in Element.prototype && 'getRootNode' in Element.prototype) ||\n    (window.ShadyDOM && window.ShadyDOM.force)) {\n    polyfills.push('sd');\n  }\n  if (!window.customElements || window.customElements.forcePolyfill) {\n    polyfills.push('ce');\n  }\n\n  var needsTemplate = (function() {\n    // no real <template> because no `content` property (IE and older browsers)\n    var t = document.createElement('template');\n    if (!('content' in t)) {\n      return true;\n    }\n    // broken doc fragment (older Edge)\n    if (!(t.content.cloneNode() instanceof DocumentFragment)) {\n      return true;\n    }\n    // broken <template> cloning (Edge up to at least version 17)\n    var t2 = document.createElement('template');\n    t2.content.appendChild(document.createElement('div'));\n    t.content.appendChild(t2);\n    var clone = t.cloneNode(true);\n    return (clone.content.childNodes.length === 0 ||\n        clone.content.firstChild.content.childNodes.length === 0);\n  })();\n\n  // NOTE: any browser that does not have template or ES6 features\n  // must load the full suite of polyfills.\n  if (!window.Promise || !Array.from || !window.URL || !window.Symbol || needsTemplate) {\n    polyfills = ['sd-ce-pf'];\n  }\n\n  if (polyfills.length) {\n    var url;\n    var polyfillFile = 'bundles/webcomponents-' + polyfills.join('-') + '.js';\n\n    // Load it from the right place.\n    if (window.WebComponents.root) {\n      url = window.WebComponents.root + polyfillFile;\n    } else {\n      var script = document.querySelector('script[src*=\"' + name +'\"]');\n      // Load it from the right place.\n      url = script.src.replace(name, polyfillFile);\n    }\n\n    var newScript = document.createElement('script');\n    newScript.src = url;\n    // if readyState is 'loading', this script is synchronous\n    if (document.readyState === 'loading') {\n      // make sure custom elements are batched whenever parser gets to the injected script\n      newScript.setAttribute('onload', 'window.WebComponents._batchCustomElements()');\n      document.write(newScript.outerHTML);\n      document.addEventListener('DOMContentLoaded', ready);\n    } else {\n      newScript.addEventListener('load', function () {\n        asyncReady();\n      });\n      newScript.addEventListener('error', function () {\n        throw new Error('Could not load polyfill bundle' + url);\n      });\n      document.head.appendChild(newScript);\n    }\n  } else {\n    // if readyState is 'complete', script is loaded imperatively on a spec-compliant browser, so just fire WCR\n    if (document.readyState === 'complete') {\n      polyfillsLoaded = true;\n      fireEvent();\n    } else {\n      // this script may come between DCL and load, so listen for both, and cancel load listener if DCL fires\n      window.addEventListener('load', ready);\n      window.addEventListener('DOMContentLoaded', function() {\n        window.removeEventListener('load', ready);\n        ready();\n      })\n    }\n  }\n})();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module shady-render\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.2.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._updateState = 0;\n        this._instanceProperties = undefined;\n        // Initialize to an unresolved Promise so we can make sure the element has\n        // connected before first update.\n        this._updatePromise = new Promise((res) => this._enableUpdatingResolver = res);\n        /**\n         * Map with keys for any properties that have changed since the last\n         * update cycle with previous values.\n         */\n        this._changedProperties = new Map();\n        /**\n         * Map with keys of properties that should be reflected when updated.\n         */\n        this._reflectingProperties = undefined;\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, _options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this._requestUpdate(name, oldValue);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this._requestUpdate();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This private version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    _requestUpdate(name, oldValue) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            const options = ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this._requestUpdate(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst legacyCustomElement = (tagName, clazz) => {\n    window.customElements.define(tagName, clazz);\n    // Cast as any because TS doesn't recognize the return type as being a\n    // subtype of the decorated class when clazz is typed as\n    // `Constructor<HTMLElement>` for some reason.\n    // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n    // applied to elements however.\n    // tslint:disable-next-line:no-any\n    return clazz;\n};\nconst standardCustomElement = (tagName, descriptor) => {\n    const { kind, elements } = descriptor;\n    return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz) {\n            window.customElements.define(tagName, clazz);\n        }\n    };\n};\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n *\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName) => (classOrDescriptor) => (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\nconst standardProperty = (options, element) => {\n    // When decorating an accessor, pass it through and add property metadata.\n    // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n    // stomp over the user's accessor.\n    if (element.kind === 'method' && element.descriptor &&\n        !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), { finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            } });\n    }\n    else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n            kind: 'field',\n            key: Symbol(),\n            placement: 'own',\n            descriptor: {},\n            // When @babel/plugin-proposal-decorators implements initializers,\n            // do this instead of the initializer below. See:\n            // https://github.com/babel/babel/issues/9260 extras: [\n            //   {\n            //     kind: 'initializer',\n            //     placement: 'own',\n            //     initializer: descriptor.initializer,\n            //   }\n            // ],\n            initializer() {\n                if (typeof element.initializer === 'function') {\n                    this[element.key] = element.initializer.call(this);\n                }\n            },\n            finisher(clazz) {\n                clazz.createProperty(element.key, options);\n            }\n        };\n    }\n};\nconst legacyProperty = (options, proto, name) => {\n    proto.constructor\n        .createProperty(name, options);\n};\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the internalProperty decorator.\n *\n * @example\n *\n *     class MyElement {\n *       @property({ type: Boolean })\n *       clicked = false;\n *     }\n *\n * @ExportDecoratedItems\n */\nexport function property(options) {\n    // tslint:disable-next-line:no-any decorator\n    return (protoOrDescriptor, name) => (name !== undefined) ?\n        legacyProperty(options, protoOrDescriptor, name) :\n        standardProperty(options, protoOrDescriptor);\n}\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n */\nexport function internalProperty(options) {\n    return property({ attribute: false, hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged });\n}\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @query('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n */\nexport function query(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n *     class MyElement {\n *       @queryAsync('#first')\n *       first;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n *\n *     // external usage\n *     async doSomethingWithFirst() {\n *      (await aMyElement.first).doSomething();\n *     }\n */\nexport function queryAsync(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            async get() {\n                await this.updateComplete;\n                return this.renderRoot.querySelector(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n *\n *     class MyElement {\n *       @queryAll('div')\n *       divs;\n *\n *       render() {\n *         return html`\n *           <div id=\"first\"></div>\n *           <div id=\"second\"></div>\n *         `;\n *       }\n *     }\n */\nexport function queryAll(selector) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                return this.renderRoot.querySelectorAll(selector);\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\nconst legacyQuery = (descriptor, proto, name) => {\n    Object.defineProperty(proto, name, descriptor);\n};\nconst standardQuery = (descriptor, element) => ({\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor,\n});\nconst standardEventOptions = (options, element) => {\n    return Object.assign(Object.assign({}, element), { finisher(clazz) {\n            Object.assign(clazz.prototype[element.key], options);\n        } });\n};\nconst legacyEventOptions = \n// tslint:disable-next-line:no-any legacy decorator\n(options, proto, name) => {\n    Object.assign(proto[name], options);\n};\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *       clicked = false;\n *\n *       render() {\n *         return html`\n *           <div @click=${this._onClick}`>\n *             <button></button>\n *           </div>\n *         `;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport function eventOptions(options) {\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    return ((protoOrDescriptor, name) => (name !== undefined) ?\n        legacyEventOptions(options, protoOrDescriptor, name) :\n        standardEventOptions(options, protoOrDescriptor));\n}\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n */\nexport function queryAssignedNodes(slotName = '', flatten = false) {\n    return (protoOrDescriptor, \n    // tslint:disable-next-line:no-any decorator\n    name) => {\n        const descriptor = {\n            get() {\n                const selector = `slot${slotName ? `[name=${slotName}]` : ''}`;\n                const slot = this.renderRoot.querySelector(selector);\n                return slot && slot.assignedNodes({ flatten });\n            },\n            enumerable: true,\n            configurable: true,\n        };\n        return (name !== undefined) ?\n            legacyQuery(descriptor, protoOrDescriptor, name) :\n            standardQuery(descriptor, protoOrDescriptor);\n    };\n}\n//# sourceMappingURL=decorators.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nexport const supportsAdoptingStyleSheets = ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n            // is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.3.1');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (userStyles === undefined) {\n            this._styles = [];\n        }\n        else if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = [userStyles];\n        }\n    }\n    /**\n     * Performs element initialization. By default this calls `createRenderRoot`\n     * to create the element `renderRoot` node and captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot =\n            this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the `static get styles`\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's NodePart - typically a TemplateResult.\n     * Setting properties inside this method will *not* trigger the element to\n     * update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Render method used to render the value to the element's DOM.\n * @param result The value to render.\n * @param container Node into which to render.\n * @param options Element name.\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `.mdc-top-app-bar{background-color:#6200ee;background-color:var(--mdc-theme-primary, #6200ee);color:#fff;display:flex;position:fixed;flex-direction:column;justify-content:space-between;box-sizing:border-box;width:100%;z-index:4}.mdc-top-app-bar .mdc-top-app-bar__action-item,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon{color:#fff;color:var(--mdc-theme-on-primary, #fff)}.mdc-top-app-bar .mdc-top-app-bar__action-item::before,.mdc-top-app-bar .mdc-top-app-bar__action-item::after,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon::before,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon::after{background-color:#fff;background-color:var(--mdc-theme-on-primary, #fff)}.mdc-top-app-bar .mdc-top-app-bar__action-item:hover::before,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon:hover::before{opacity:.08}.mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,.mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:.24}.mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:.24}.mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.24}.mdc-top-app-bar__row{display:flex;position:relative;box-sizing:border-box;width:100%;height:64px}.mdc-top-app-bar__section{display:inline-flex;flex:1 1 auto;align-items:center;min-width:0;padding:8px 12px;z-index:1}.mdc-top-app-bar__section--align-start{justify-content:flex-start;order:-1}.mdc-top-app-bar__section--align-end{justify-content:flex-end;order:1}.mdc-top-app-bar__title{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:1.25rem;font-size:var(--mdc-typography-headline6-font-size, 1.25rem);line-height:2rem;line-height:var(--mdc-typography-headline6-line-height, 2rem);font-weight:500;font-weight:var(--mdc-typography-headline6-font-weight, 500);letter-spacing:0.0125em;letter-spacing:var(--mdc-typography-headline6-letter-spacing, 0.0125em);text-decoration:inherit;text-decoration:var(--mdc-typography-headline6-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-headline6-text-transform, inherit);padding-left:20px;padding-right:0;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;z-index:1}[dir=rtl] .mdc-top-app-bar__title,.mdc-top-app-bar__title[dir=rtl]{padding-left:0;padding-right:20px}.mdc-top-app-bar--short-collapsed{border-top-left-radius:0;border-top-right-radius:0;border-bottom-right-radius:24px;border-bottom-left-radius:0}[dir=rtl] .mdc-top-app-bar--short-collapsed,.mdc-top-app-bar--short-collapsed[dir=rtl]{border-top-left-radius:0;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:24px}.mdc-top-app-bar--short{top:0;right:auto;left:0;width:100%;transition:width 250ms cubic-bezier(0.4, 0, 0.2, 1)}[dir=rtl] .mdc-top-app-bar--short,.mdc-top-app-bar--short[dir=rtl]{right:0;left:auto}.mdc-top-app-bar--short .mdc-top-app-bar__row{height:56px}.mdc-top-app-bar--short .mdc-top-app-bar__section{padding:4px}.mdc-top-app-bar--short .mdc-top-app-bar__title{transition:opacity 200ms cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.mdc-top-app-bar--short-collapsed{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0,0,0,.12);width:56px;transition:width 300ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-top-app-bar--short-collapsed .mdc-top-app-bar__title{display:none}.mdc-top-app-bar--short-collapsed .mdc-top-app-bar__action-item{transition:padding 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item{width:112px}.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end{padding-left:0;padding-right:12px}[dir=rtl] .mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end,.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end[dir=rtl]{padding-left:12px;padding-right:0}.mdc-top-app-bar--dense .mdc-top-app-bar__row{height:48px}.mdc-top-app-bar--dense .mdc-top-app-bar__section{padding:0 4px}.mdc-top-app-bar--dense .mdc-top-app-bar__title{padding-left:12px;padding-right:0}[dir=rtl] .mdc-top-app-bar--dense .mdc-top-app-bar__title,.mdc-top-app-bar--dense .mdc-top-app-bar__title[dir=rtl]{padding-left:0;padding-right:12px}.mdc-top-app-bar--prominent .mdc-top-app-bar__row{height:128px}.mdc-top-app-bar--prominent .mdc-top-app-bar__title{align-self:flex-end;padding-bottom:2px}.mdc-top-app-bar--prominent .mdc-top-app-bar__action-item,.mdc-top-app-bar--prominent .mdc-top-app-bar__navigation-icon{align-self:flex-start}.mdc-top-app-bar--fixed{transition:box-shadow 200ms linear}.mdc-top-app-bar--fixed-scrolled{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0,0,0,.12);transition:box-shadow 200ms linear}.mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__row{height:96px}.mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__section{padding:0 12px}.mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__title{padding-left:20px;padding-right:0;padding-bottom:9px}[dir=rtl] .mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__title,.mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__title[dir=rtl]{padding-left:0;padding-right:20px}.mdc-top-app-bar--fixed-adjust{padding-top:64px}.mdc-top-app-bar--dense-fixed-adjust{padding-top:48px}.mdc-top-app-bar--short-fixed-adjust{padding-top:56px}.mdc-top-app-bar--prominent-fixed-adjust{padding-top:128px}.mdc-top-app-bar--dense-prominent-fixed-adjust{padding-top:96px}@media(max-width: 599px){.mdc-top-app-bar__row{height:56px}.mdc-top-app-bar__section{padding:4px}.mdc-top-app-bar--short{transition:width 200ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-top-app-bar--short-collapsed{transition:width 250ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-top-app-bar--short-collapsed .mdc-top-app-bar__section--align-end{padding-left:0;padding-right:12px}[dir=rtl] .mdc-top-app-bar--short-collapsed .mdc-top-app-bar__section--align-end,.mdc-top-app-bar--short-collapsed .mdc-top-app-bar__section--align-end[dir=rtl]{padding-left:12px;padding-right:0}.mdc-top-app-bar--prominent .mdc-top-app-bar__title{padding-bottom:6px}.mdc-top-app-bar--fixed-adjust{padding-top:56px}}:host{display:block}.mdc-top-app-bar{color:#fff;color:var(--mdc-theme-on-primary, #fff);width:100%;width:var(--mdc-top-app-bar-width, 100%)}.mdc-top-app-bar--prominent #navigation ::slotted(*),.mdc-top-app-bar--prominent #actions ::slotted(*){align-self:flex-start}#navigation ::slotted(*),#actions ::slotted(*){--mdc-icon-button-ripple-opacity: 0.24}.mdc-top-app-bar--short-collapsed #actions ::slotted(*){transition:padding 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-top-app-bar__section--align-center{justify-content:center}.mdc-top-app-bar__section--align-center .mdc-top-app-bar__title{padding-left:0;padding-right:0}.center-title .mdc-top-app-bar__section--align-start,.center-title .mdc-top-app-bar__section--align-end{flex-basis:0}.mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__section--align-center .mdc-top-app-bar__title{padding-left:0;padding-right:0}.mdc-top-app-bar--fixed-scrolled{box-shadow:var(--mdc-top-app-bar-fixed-box-shadow, 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12))}`;\n//# sourceMappingURL=mwc-top-app-bar-css.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    FIXED_CLASS: 'mdc-top-app-bar--fixed',\n    FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',\n    SHORT_CLASS: 'mdc-top-app-bar--short',\n    SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed',\n    SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',\n};\nvar numbers = {\n    DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,\n    MAX_TOP_APP_BAR_HEIGHT: 128,\n};\nvar strings = {\n    ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',\n    NAVIGATION_EVENT: 'MDCTopAppBar:nav',\n    NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',\n    ROOT_SELECTOR: '.mdc-top-app-bar',\n    TITLE_SELECTOR: '.mdc-top-app-bar__title',\n};\nexport { cssClasses, numbers, strings };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCFoundation = /** @class */ (function () {\n    function MDCFoundation(adapter) {\n        if (adapter === void 0) { adapter = {}; }\n        this.adapter = adapter;\n    }\n    Object.defineProperty(MDCFoundation, \"cssClasses\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports every\n            // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"strings\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"numbers\", {\n        get: function () {\n            // Classes extending MDCFoundation should implement this method to return an object which exports all\n            // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCFoundation, \"defaultAdapter\", {\n        get: function () {\n            // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n            // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n            // validation.\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCFoundation.prototype.init = function () {\n        // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    };\n    MDCFoundation.prototype.destroy = function () {\n        // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    };\n    return MDCFoundation;\n}());\nexport { MDCFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar MDCTopAppBarBaseFoundation = /** @class */ (function (_super) {\n    __extends(MDCTopAppBarBaseFoundation, _super);\n    /* istanbul ignore next: optional argument is not a branch statement */\n    function MDCTopAppBarBaseFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCTopAppBarBaseFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCTopAppBarBaseFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTopAppBarBaseFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTopAppBarBaseFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTopAppBarBaseFoundation, \"defaultAdapter\", {\n        /**\n         * See {@link MDCTopAppBarAdapter} for typing information on parameters and return types.\n         */\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                setStyle: function () { return undefined; },\n                getTopAppBarHeight: function () { return 0; },\n                notifyNavigationIconClicked: function () { return undefined; },\n                getViewportScrollY: function () { return 0; },\n                getTotalActionItems: function () { return 0; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Other variants of TopAppBar foundation overrides this method */\n    MDCTopAppBarBaseFoundation.prototype.handleTargetScroll = function () { }; // tslint:disable-line:no-empty\n    /** Other variants of TopAppBar foundation overrides this method */\n    MDCTopAppBarBaseFoundation.prototype.handleWindowResize = function () { }; // tslint:disable-line:no-empty\n    MDCTopAppBarBaseFoundation.prototype.handleNavigationClick = function () {\n        this.adapter.notifyNavigationIconClicked();\n    };\n    return MDCTopAppBarBaseFoundation;\n}(MDCFoundation));\nexport { MDCTopAppBarBaseFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTopAppBarBaseFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { numbers } from '../constants';\nimport { MDCTopAppBarBaseFoundation } from '../foundation';\nvar INITIAL_VALUE = 0;\nvar MDCTopAppBarFoundation = /** @class */ (function (_super) {\n    __extends(MDCTopAppBarFoundation, _super);\n    /* istanbul ignore next: optional argument is not a branch statement */\n    function MDCTopAppBarFoundation(adapter) {\n        var _this = _super.call(this, adapter) || this;\n        /**\n         * Indicates if the top app bar was docked in the previous scroll handler iteration.\n         */\n        _this.wasDocked_ = true;\n        /**\n         * Indicates if the top app bar is docked in the fully shown position.\n         */\n        _this.isDockedShowing_ = true;\n        /**\n         * Variable for current scroll position of the top app bar\n         */\n        _this.currentAppBarOffsetTop_ = 0;\n        /**\n         * Used to prevent the top app bar from being scrolled out of view during resize events\n         */\n        _this.isCurrentlyBeingResized_ = false;\n        /**\n         * The timeout that's used to throttle the resize events\n         */\n        _this.resizeThrottleId_ = INITIAL_VALUE;\n        /**\n         * The timeout that's used to debounce toggling the isCurrentlyBeingResized_ variable after a resize\n         */\n        _this.resizeDebounceId_ = INITIAL_VALUE;\n        _this.lastScrollPosition_ = _this.adapter.getViewportScrollY();\n        _this.topAppBarHeight_ = _this.adapter.getTopAppBarHeight();\n        return _this;\n    }\n    MDCTopAppBarFoundation.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.adapter.setStyle('top', '');\n    };\n    /**\n     * Scroll handler for the default scroll behavior of the top app bar.\n     * @override\n     */\n    MDCTopAppBarFoundation.prototype.handleTargetScroll = function () {\n        var currentScrollPosition = Math.max(this.adapter.getViewportScrollY(), 0);\n        var diff = currentScrollPosition - this.lastScrollPosition_;\n        this.lastScrollPosition_ = currentScrollPosition;\n        // If the window is being resized the lastScrollPosition_ needs to be updated but the\n        // current scroll of the top app bar should stay in the same position.\n        if (!this.isCurrentlyBeingResized_) {\n            this.currentAppBarOffsetTop_ -= diff;\n            if (this.currentAppBarOffsetTop_ > 0) {\n                this.currentAppBarOffsetTop_ = 0;\n            }\n            else if (Math.abs(this.currentAppBarOffsetTop_) > this.topAppBarHeight_) {\n                this.currentAppBarOffsetTop_ = -this.topAppBarHeight_;\n            }\n            this.moveTopAppBar_();\n        }\n    };\n    /**\n     * Top app bar resize handler that throttle/debounce functions that execute updates.\n     * @override\n     */\n    MDCTopAppBarFoundation.prototype.handleWindowResize = function () {\n        var _this = this;\n        // Throttle resize events 10 p/s\n        if (!this.resizeThrottleId_) {\n            this.resizeThrottleId_ = setTimeout(function () {\n                _this.resizeThrottleId_ = INITIAL_VALUE;\n                _this.throttledResizeHandler_();\n            }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n        }\n        this.isCurrentlyBeingResized_ = true;\n        if (this.resizeDebounceId_) {\n            clearTimeout(this.resizeDebounceId_);\n        }\n        this.resizeDebounceId_ = setTimeout(function () {\n            _this.handleTargetScroll();\n            _this.isCurrentlyBeingResized_ = false;\n            _this.resizeDebounceId_ = INITIAL_VALUE;\n        }, numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);\n    };\n    /**\n     * Function to determine if the DOM needs to update.\n     */\n    MDCTopAppBarFoundation.prototype.checkForUpdate_ = function () {\n        var offscreenBoundaryTop = -this.topAppBarHeight_;\n        var hasAnyPixelsOffscreen = this.currentAppBarOffsetTop_ < 0;\n        var hasAnyPixelsOnscreen = this.currentAppBarOffsetTop_ > offscreenBoundaryTop;\n        var partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen;\n        // If it's partially showing, it can't be docked.\n        if (partiallyShowing) {\n            this.wasDocked_ = false;\n        }\n        else {\n            // Not previously docked and not partially showing, it's now docked.\n            if (!this.wasDocked_) {\n                this.wasDocked_ = true;\n                return true;\n            }\n            else if (this.isDockedShowing_ !== hasAnyPixelsOnscreen) {\n                this.isDockedShowing_ = hasAnyPixelsOnscreen;\n                return true;\n            }\n        }\n        return partiallyShowing;\n    };\n    /**\n     * Function to move the top app bar if needed.\n     */\n    MDCTopAppBarFoundation.prototype.moveTopAppBar_ = function () {\n        if (this.checkForUpdate_()) {\n            // Once the top app bar is fully hidden we use the max potential top app bar height as our offset\n            // so the top app bar doesn't show if the window resizes and the new height > the old height.\n            var offset = this.currentAppBarOffsetTop_;\n            if (Math.abs(offset) >= this.topAppBarHeight_) {\n                offset = -numbers.MAX_TOP_APP_BAR_HEIGHT;\n            }\n            this.adapter.setStyle('top', offset + 'px');\n        }\n    };\n    /**\n     * Throttled function that updates the top app bar scrolled values if the\n     * top app bar height changes.\n     */\n    MDCTopAppBarFoundation.prototype.throttledResizeHandler_ = function () {\n        var currentHeight = this.adapter.getTopAppBarHeight();\n        if (this.topAppBarHeight_ !== currentHeight) {\n            this.wasDocked_ = false;\n            // Since the top app bar has a different height depending on the screen width, this\n            // will ensure that the top app bar remains in the correct location if\n            // completely hidden and a resize makes the top app bar a different height.\n            this.currentAppBarOffsetTop_ -= this.topAppBarHeight_ - currentHeight;\n            this.topAppBarHeight_ = currentHeight;\n        }\n        this.handleTargetScroll();\n    };\n    return MDCTopAppBarFoundation;\n}(MDCTopAppBarBaseFoundation));\nexport { MDCTopAppBarFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTopAppBarFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * @fileoverview A \"ponyfill\" is a polyfill that doesn't modify the global prototype chain.\n * This makes ponyfills safer than traditional polyfills, especially for libraries like MDC.\n */\nexport function closest(element, selector) {\n    if (element.closest) {\n        return element.closest(selector);\n    }\n    var el = element;\n    while (el) {\n        if (matches(el, selector)) {\n            return el;\n        }\n        el = el.parentElement;\n    }\n    return null;\n}\nexport function matches(element, selector) {\n    var nativeMatches = element.matches\n        || element.webkitMatchesSelector\n        || element.msMatchesSelector;\n    return nativeMatches.call(element, selector);\n}\n/**\n * Used to compute the estimated scroll width of elements. When an element is\n * hidden due to display: none; being applied to a parent element, the width is\n * returned as 0. However, the element will have a true width once no longer\n * inside a display: none context. This method computes an estimated width when\n * the element is hidden or returns the true width when the element is visble.\n * @param {Element} element the element whose width to estimate\n */\nexport function estimateScrollWidth(element) {\n    // Check the offsetParent. If the element inherits display: none from any\n    // parent, the offsetParent property will be null (see\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n    // This check ensures we only clone the node when necessary.\n    var htmlEl = element;\n    if (htmlEl.offsetParent !== null) {\n        return htmlEl.scrollWidth;\n    }\n    var clone = htmlEl.cloneNode(true);\n    clone.style.setProperty('position', 'absolute');\n    clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n    document.documentElement.appendChild(clone);\n    var scrollWidth = clone.scrollWidth;\n    document.documentElement.removeChild(clone);\n    return scrollWidth;\n}\n//# sourceMappingURL=ponyfill.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Return an element assigned to a given slot that matches the given selector\n */\nimport { matches } from '@material/dom/ponyfill';\n/**\n * Determines whether a node is an element.\n *\n * @param node Node to check\n */\nexport const isNodeElement = (node) => {\n    return node.nodeType === Node.ELEMENT_NODE;\n};\nexport function findAssignedElement(slot, selector) {\n    for (const node of slot.assignedNodes({ flatten: true })) {\n        if (isNodeElement(node)) {\n            const el = node;\n            if (matches(el, selector)) {\n                return el;\n            }\n        }\n    }\n    return null;\n}\nexport function addHasRemoveClass(element) {\n    return {\n        addClass: (className) => {\n            element.classList.add(className);\n        },\n        removeClass: (className) => {\n            element.classList.remove(className);\n        },\n        hasClass: (className) => element.classList.contains(className),\n    };\n}\nlet supportsPassive = false;\nconst fn = () => { };\nconst optionsBlock = {\n    get passive() {\n        supportsPassive = true;\n        return false;\n    }\n};\ndocument.addEventListener('x', fn, optionsBlock);\ndocument.removeEventListener('x', fn);\n/**\n * Do event listeners suport the `passive` option?\n */\nexport const supportsPassiveEventListener = supportsPassive;\nexport const deepActiveElementPath = (doc = window.document) => {\n    let activeElement = doc.activeElement;\n    const path = [];\n    if (!activeElement) {\n        return path;\n    }\n    while (activeElement) {\n        path.push(activeElement);\n        if (activeElement.shadowRoot) {\n            activeElement = activeElement.shadowRoot.activeElement;\n        }\n        else {\n            break;\n        }\n    }\n    return path;\n};\nexport const doesElementContainFocus = (element) => {\n    const activePath = deepActiveElementPath();\n    if (!activePath.length) {\n        return false;\n    }\n    const deepActiveElement = activePath[activePath.length - 1];\n    const focusEv = new Event('check-if-focused', { bubbles: true, composed: true });\n    let composedPath = [];\n    const listener = (ev) => {\n        composedPath = ev.composedPath();\n    };\n    document.body.addEventListener('check-if-focused', listener);\n    deepActiveElement.dispatchEvent(focusEv);\n    document.body.removeEventListener('check-if-focused', listener);\n    return composedPath.indexOf(element) !== -1;\n};\n//# sourceMappingURL=utils.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { LitElement } from 'lit-element';\nexport { addHasRemoveClass } from './utils.js';\n/** @soyCompatible */\nexport class BaseElement extends LitElement {\n    /**\n     * Create and attach the MDC Foundation to the instance\n     */\n    createFoundation() {\n        if (this.mdcFoundation !== undefined) {\n            this.mdcFoundation.destroy();\n        }\n        if (this.mdcFoundationClass) {\n            this.mdcFoundation = new this.mdcFoundationClass(this.createAdapter());\n            this.mdcFoundation.init();\n        }\n    }\n    firstUpdated() {\n        this.createFoundation();\n    }\n}\n//# sourceMappingURL=base-element.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n// IE11 doesn't support classList on SVG elements, so we emulate it with a Set\nclass ClassList {\n    constructor(element) {\n        this.classes = new Set();\n        this.changed = false;\n        this.element = element;\n        const classList = (element.getAttribute('class') || '').split(/\\s+/);\n        for (const cls of classList) {\n            this.classes.add(cls);\n        }\n    }\n    add(cls) {\n        this.classes.add(cls);\n        this.changed = true;\n    }\n    remove(cls) {\n        this.classes.delete(cls);\n        this.changed = true;\n    }\n    commit() {\n        if (this.changed) {\n            let classString = '';\n            this.classes.forEach((cls) => classString += cls + ' ');\n            this.element.setAttribute('class', classString);\n        }\n    }\n}\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst previousClassesCache = new WeakMap();\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `class` if the property value is truthy; if the property value is\n * falsey, the property name is removed from the element's `class`. For example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'class' || part.committer.parts.length > 1) {\n        throw new Error('The `classMap` directive must be used in the `class` attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { element } = committer;\n    let previousClasses = previousClassesCache.get(part);\n    if (previousClasses === undefined) {\n        // Write static classes once\n        // Use setAttribute() because className isn't a string on SVG elements\n        element.setAttribute('class', committer.strings.join(' '));\n        previousClassesCache.set(part, previousClasses = new Set());\n    }\n    const classList = (element.classList || new ClassList(element));\n    // Remove old classes that no longer apply\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousClasses.forEach((name) => {\n        if (!(name in classInfo)) {\n            classList.remove(name);\n            previousClasses.delete(name);\n        }\n    });\n    // Add or remove classes based on their classMap value\n    for (const name in classInfo) {\n        const value = classInfo[name];\n        if (value != previousClasses.has(name)) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            if (value) {\n                classList.add(name);\n                previousClasses.add(name);\n            }\n            else {\n                classList.remove(name);\n                previousClasses.delete(name);\n            }\n        }\n    }\n    if (typeof classList.commit === 'function') {\n        classList.commit();\n    }\n});\n//# sourceMappingURL=class-map.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2019 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element';\nimport { supportsPassiveEventListener } from '@material/mwc-base/utils';\nimport { strings } from '@material/top-app-bar/constants';\nimport MDCTopAppBarBaseFoundation from '@material/top-app-bar/foundation';\nimport { html, property, query } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map.js';\nexport const passiveEventOptionsIfSupported = supportsPassiveEventListener ? { passive: true } : undefined;\nexport class TopAppBarBaseBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this.mdcFoundationClass = MDCTopAppBarBaseFoundation;\n        this.centerTitle = false;\n        this.handleTargetScroll = () => {\n            this.mdcFoundation.handleTargetScroll();\n        };\n        this.handleNavigationClick = () => {\n            this.mdcFoundation.handleNavigationClick();\n        };\n    }\n    get scrollTarget() {\n        return this._scrollTarget || window;\n    }\n    set scrollTarget(value) {\n        this.unregisterScrollListener();\n        const old = this.scrollTarget;\n        this._scrollTarget = value;\n        this.updateRootPosition();\n        this.requestUpdate('scrollTarget', old);\n        this.registerScrollListener();\n    }\n    updateRootPosition() {\n        if (this.mdcRoot) {\n            const windowScroller = this.scrollTarget === window;\n            // we add support for top-app-bar's tied to an element scroller.\n            this.mdcRoot.style.position = windowScroller ? '' : 'absolute';\n        }\n    }\n    render() {\n        // clang-format off\n        let title = html `<span class=\"mdc-top-app-bar__title\"><slot name=\"title\"></slot></span>`;\n        if (this.centerTitle) {\n            title = html `<section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-center\">${title}</section>`;\n        }\n        // clang-format on\n        return html `\n      <header class=\"mdc-top-app-bar ${classMap(this.barClasses())}\">\n      <div class=\"mdc-top-app-bar__row\">\n        <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-start\" id=\"navigation\">\n          <slot name=\"navigationIcon\"\n            @click=${this.handleNavigationClick}></slot>\n          ${this.centerTitle ? null : title}\n        </section>\n        ${this.centerTitle ? title : null}\n        <section class=\"mdc-top-app-bar__section mdc-top-app-bar__section--align-end\" id=\"actions\" role=\"toolbar\">\n          <slot name=\"actionItems\"></slot>\n        </section>\n      </div>\n    </header>\n    <div class=\"${classMap(this.contentClasses())}\">\n      <slot></slot>\n    </div>\n    `;\n    }\n    createAdapter() {\n        return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), { setStyle: (property, value) => this.mdcRoot.style.setProperty(property, value), getTopAppBarHeight: () => this.mdcRoot.clientHeight, notifyNavigationIconClicked: () => {\n                this.dispatchEvent(new Event(strings.NAVIGATION_EVENT, { bubbles: true, cancelable: true }));\n            }, getViewportScrollY: () => this.scrollTarget instanceof Window ?\n                this.scrollTarget.pageYOffset :\n                this.scrollTarget.scrollTop, getTotalActionItems: () => this._actionItemsSlot\n                .assignedNodes({ flatten: true })\n                .length });\n    }\n    registerListeners() {\n        this.registerScrollListener();\n    }\n    unregisterListeners() {\n        this.unregisterScrollListener();\n    }\n    registerScrollListener() {\n        this.scrollTarget.addEventListener('scroll', this.handleTargetScroll, passiveEventOptionsIfSupported);\n    }\n    unregisterScrollListener() {\n        this.scrollTarget.removeEventListener('scroll', this.handleTargetScroll);\n    }\n    firstUpdated() {\n        super.firstUpdated();\n        this.updateRootPosition();\n        this.registerListeners();\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.unregisterListeners();\n    }\n}\n__decorate([\n    query('.mdc-top-app-bar')\n], TopAppBarBaseBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('slot[name=\"actionItems\"]')\n], TopAppBarBaseBase.prototype, \"_actionItemsSlot\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TopAppBarBaseBase.prototype, \"centerTitle\", void 0);\n__decorate([\n    property()\n], TopAppBarBaseBase.prototype, \"scrollTarget\", null);\n//# sourceMappingURL=mwc-top-app-bar-base-base.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport MDCTopAppBarFoundation from '@material/top-app-bar/standard/foundation.js';\nimport { property } from 'lit-element';\nimport { passiveEventOptionsIfSupported, TopAppBarBaseBase } from './mwc-top-app-bar-base-base.js';\nexport class TopAppBarBase extends TopAppBarBaseBase {\n    constructor() {\n        super(...arguments);\n        this.mdcFoundationClass = MDCTopAppBarFoundation;\n        this.prominent = false;\n        this.dense = false;\n        this.handleResize = () => {\n            this.mdcFoundation.handleWindowResize();\n        };\n    }\n    barClasses() {\n        return {\n            'mdc-top-app-bar--dense': this.dense,\n            'mdc-top-app-bar--prominent': this.prominent,\n            'center-title': this.centerTitle,\n        };\n    }\n    contentClasses() {\n        return {\n            'mdc-top-app-bar--fixed-adjust': !this.dense && !this.prominent,\n            'mdc-top-app-bar--dense-fixed-adjust': this.dense && !this.prominent,\n            'mdc-top-app-bar--prominent-fixed-adjust': !this.dense && this.prominent,\n            'mdc-top-app-bar--dense-prominent-fixed-adjust': this.dense && this.prominent,\n        };\n    }\n    registerListeners() {\n        super.registerListeners();\n        window.addEventListener('resize', this.handleResize, passiveEventOptionsIfSupported);\n    }\n    unregisterListeners() {\n        super.unregisterListeners();\n        window.removeEventListener('resize', this.handleResize);\n    }\n}\n__decorate([\n    property({ type: Boolean, reflect: true })\n], TopAppBarBase.prototype, \"prominent\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], TopAppBarBase.prototype, \"dense\", void 0);\n//# sourceMappingURL=mwc-top-app-bar-base.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { cssClasses } from '../constants';\nimport { MDCTopAppBarFoundation } from '../standard/foundation';\nvar MDCFixedTopAppBarFoundation = /** @class */ (function (_super) {\n    __extends(MDCFixedTopAppBarFoundation, _super);\n    function MDCFixedTopAppBarFoundation() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * State variable for the previous scroll iteration top app bar state\n         */\n        _this.wasScrolled_ = false;\n        return _this;\n    }\n    /**\n     * Scroll handler for applying/removing the modifier class on the fixed top app bar.\n     * @override\n     */\n    MDCFixedTopAppBarFoundation.prototype.handleTargetScroll = function () {\n        var currentScroll = this.adapter.getViewportScrollY();\n        if (currentScroll <= 0) {\n            if (this.wasScrolled_) {\n                this.adapter.removeClass(cssClasses.FIXED_SCROLLED_CLASS);\n                this.wasScrolled_ = false;\n            }\n        }\n        else {\n            if (!this.wasScrolled_) {\n                this.adapter.addClass(cssClasses.FIXED_SCROLLED_CLASS);\n                this.wasScrolled_ = true;\n            }\n        }\n    };\n    return MDCFixedTopAppBarFoundation;\n}(MDCTopAppBarFoundation));\nexport { MDCFixedTopAppBarFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFixedTopAppBarFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n@license\nCopyright 2019 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { TopAppBarBase } from '@material/mwc-top-app-bar/mwc-top-app-bar-base';\nimport { passiveEventOptionsIfSupported } from '@material/mwc-top-app-bar/mwc-top-app-bar-base-base';\nimport MDCFixedTopAppBarFoundation from '@material/top-app-bar/fixed/foundation';\nexport class TopAppBarFixedBase extends TopAppBarBase {\n    constructor() {\n        super(...arguments);\n        this.mdcFoundationClass = MDCFixedTopAppBarFoundation;\n    }\n    barClasses() {\n        return Object.assign(Object.assign({}, super.barClasses()), { 'mdc-top-app-bar--fixed': true });\n    }\n    registerListeners() {\n        this.scrollTarget.addEventListener('scroll', this.handleTargetScroll, passiveEventOptionsIfSupported);\n    }\n    unregisterListeners() {\n        this.scrollTarget.removeEventListener('scroll', this.handleTargetScroll);\n    }\n}\n//# sourceMappingURL=mwc-top-app-bar-fixed-base.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2019 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { style } from '@material/mwc-top-app-bar/mwc-top-app-bar-css';\nimport { customElement } from 'lit-element';\nimport { TopAppBarFixedBase } from './mwc-top-app-bar-fixed-base.js';\nlet TopAppBarFixed = class TopAppBarFixed extends TopAppBarFixedBase {\n};\nTopAppBarFixed.styles = style;\nTopAppBarFixed = __decorate([\n    customElement('mwc-top-app-bar-fixed')\n], TopAppBarFixed);\nexport { TopAppBarFixed };\n//# sourceMappingURL=mwc-top-app-bar-fixed.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var cssClasses = {\n    // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n    // given that it's an 'upgrade' to an existing component. That being said it is the root\n    // CSS class that all other CSS classes derive from.\n    BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n    FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n    FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n    ROOT: 'mdc-ripple-upgraded',\n    UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n};\nexport var strings = {\n    VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n    VAR_FG_SIZE: '--mdc-ripple-fg-size',\n    VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n    VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n    VAR_LEFT: '--mdc-ripple-left',\n    VAR_TOP: '--mdc-ripple-top',\n};\nexport var numbers = {\n    DEACTIVATION_TIMEOUT_MS: 225,\n    FG_DEACTIVATION_MS: 150,\n    INITIAL_ORIGIN_SCALE: 0.6,\n    PADDING: 10,\n    TAP_DELAY_MS: 300,\n};\n//# sourceMappingURL=constants.js.map","/**\n * Stores result from supportsCssVariables to avoid redundant processing to\n * detect CSS custom variable support.\n */\nvar supportsCssVariables_;\nexport function supportsCssVariables(windowObj, forceRefresh) {\n    if (forceRefresh === void 0) { forceRefresh = false; }\n    var CSS = windowObj.CSS;\n    var supportsCssVars = supportsCssVariables_;\n    if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n        return supportsCssVariables_;\n    }\n    var supportsFunctionPresent = CSS && typeof CSS.supports === 'function';\n    if (!supportsFunctionPresent) {\n        return false;\n    }\n    var explicitlySupportsCssVars = CSS.supports('--css-vars', 'yes');\n    // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n    // See: README section on Safari\n    var weAreFeatureDetectingSafari10plus = (CSS.supports('(--css-vars: yes)') &&\n        CSS.supports('color', '#00000000'));\n    supportsCssVars =\n        explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus;\n    if (!forceRefresh) {\n        supportsCssVariables_ = supportsCssVars;\n    }\n    return supportsCssVars;\n}\nexport function getNormalizedEventCoords(evt, pageOffset, clientRect) {\n    if (!evt) {\n        return { x: 0, y: 0 };\n    }\n    var x = pageOffset.x, y = pageOffset.y;\n    var documentX = x + clientRect.left;\n    var documentY = y + clientRect.top;\n    var normalizedX;\n    var normalizedY;\n    // Determine touch point relative to the ripple container.\n    if (evt.type === 'touchstart') {\n        var touchEvent = evt;\n        normalizedX = touchEvent.changedTouches[0].pageX - documentX;\n        normalizedY = touchEvent.changedTouches[0].pageY - documentY;\n    }\n    else {\n        var mouseEvent = evt;\n        normalizedX = mouseEvent.pageX - documentX;\n        normalizedY = mouseEvent.pageY - documentY;\n    }\n    return { x: normalizedX, y: normalizedY };\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nimport { getNormalizedEventCoords } from './util';\n// Activation events registered on the root element of each instance for activation\nvar ACTIVATION_EVENT_TYPES = [\n    'touchstart', 'pointerdown', 'mousedown', 'keydown',\n];\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nvar POINTER_DEACTIVATION_EVENT_TYPES = [\n    'touchend', 'pointerup', 'mouseup', 'contextmenu',\n];\n// simultaneous nested activations\nvar activatedTargets = [];\nvar MDCRippleFoundation = /** @class */ (function (_super) {\n    __extends(MDCRippleFoundation, _super);\n    function MDCRippleFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCRippleFoundation.defaultAdapter), adapter)) || this;\n        _this.activationAnimationHasEnded_ = false;\n        _this.activationTimer_ = 0;\n        _this.fgDeactivationRemovalTimer_ = 0;\n        _this.fgScale_ = '0';\n        _this.frame_ = { width: 0, height: 0 };\n        _this.initialSize_ = 0;\n        _this.layoutFrame_ = 0;\n        _this.maxRadius_ = 0;\n        _this.unboundedCoords_ = { left: 0, top: 0 };\n        _this.activationState_ = _this.defaultActivationState_();\n        _this.activationTimerCallback_ = function () {\n            _this.activationAnimationHasEnded_ = true;\n            _this.runDeactivationUXLogicIfReady_();\n        };\n        _this.activateHandler_ = function (e) { return _this.activate_(e); };\n        _this.deactivateHandler_ = function () { return _this.deactivate_(); };\n        _this.focusHandler_ = function () { return _this.handleFocus(); };\n        _this.blurHandler_ = function () { return _this.handleBlur(); };\n        _this.resizeHandler_ = function () { return _this.layout(); };\n        return _this;\n    }\n    Object.defineProperty(MDCRippleFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                browserSupportsCssVars: function () { return true; },\n                computeBoundingRect: function () { return ({ top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 }); },\n                containsEventTarget: function () { return true; },\n                deregisterDocumentInteractionHandler: function () { return undefined; },\n                deregisterInteractionHandler: function () { return undefined; },\n                deregisterResizeHandler: function () { return undefined; },\n                getWindowPageOffset: function () { return ({ x: 0, y: 0 }); },\n                isSurfaceActive: function () { return true; },\n                isSurfaceDisabled: function () { return true; },\n                isUnbounded: function () { return true; },\n                registerDocumentInteractionHandler: function () { return undefined; },\n                registerInteractionHandler: function () { return undefined; },\n                registerResizeHandler: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                updateCssVariable: function () { return undefined; },\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCRippleFoundation.prototype.init = function () {\n        var _this = this;\n        var supportsPressRipple = this.supportsPressRipple_();\n        this.registerRootHandlers_(supportsPressRipple);\n        if (supportsPressRipple) {\n            var _a = MDCRippleFoundation.cssClasses, ROOT_1 = _a.ROOT, UNBOUNDED_1 = _a.UNBOUNDED;\n            requestAnimationFrame(function () {\n                _this.adapter.addClass(ROOT_1);\n                if (_this.adapter.isUnbounded()) {\n                    _this.adapter.addClass(UNBOUNDED_1);\n                    // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n                    _this.layoutInternal_();\n                }\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.destroy = function () {\n        var _this = this;\n        if (this.supportsPressRipple_()) {\n            if (this.activationTimer_) {\n                clearTimeout(this.activationTimer_);\n                this.activationTimer_ = 0;\n                this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n            }\n            if (this.fgDeactivationRemovalTimer_) {\n                clearTimeout(this.fgDeactivationRemovalTimer_);\n                this.fgDeactivationRemovalTimer_ = 0;\n                this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n            }\n            var _a = MDCRippleFoundation.cssClasses, ROOT_2 = _a.ROOT, UNBOUNDED_2 = _a.UNBOUNDED;\n            requestAnimationFrame(function () {\n                _this.adapter.removeClass(ROOT_2);\n                _this.adapter.removeClass(UNBOUNDED_2);\n                _this.removeCssVars_();\n            });\n        }\n        this.deregisterRootHandlers_();\n        this.deregisterDeactivationHandlers_();\n    };\n    /**\n     * @param evt Optional event containing position information.\n     */\n    MDCRippleFoundation.prototype.activate = function (evt) {\n        this.activate_(evt);\n    };\n    MDCRippleFoundation.prototype.deactivate = function () {\n        this.deactivate_();\n    };\n    MDCRippleFoundation.prototype.layout = function () {\n        var _this = this;\n        if (this.layoutFrame_) {\n            cancelAnimationFrame(this.layoutFrame_);\n        }\n        this.layoutFrame_ = requestAnimationFrame(function () {\n            _this.layoutInternal_();\n            _this.layoutFrame_ = 0;\n        });\n    };\n    MDCRippleFoundation.prototype.setUnbounded = function (unbounded) {\n        var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;\n        if (unbounded) {\n            this.adapter.addClass(UNBOUNDED);\n        }\n        else {\n            this.adapter.removeClass(UNBOUNDED);\n        }\n    };\n    MDCRippleFoundation.prototype.handleFocus = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.adapter.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED); });\n    };\n    MDCRippleFoundation.prototype.handleBlur = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.adapter.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED); });\n    };\n    /**\n     * We compute this property so that we are not querying information about the client\n     * until the point in time where the foundation requests it. This prevents scenarios where\n     * client-side feature-detection may happen too early, such as when components are rendered on the server\n     * and then initialized at mount time on the client.\n     */\n    MDCRippleFoundation.prototype.supportsPressRipple_ = function () {\n        return this.adapter.browserSupportsCssVars();\n    };\n    MDCRippleFoundation.prototype.defaultActivationState_ = function () {\n        return {\n            activationEvent: undefined,\n            hasDeactivationUXRun: false,\n            isActivated: false,\n            isProgrammatic: false,\n            wasActivatedByPointer: false,\n            wasElementMadeActive: false,\n        };\n    };\n    /**\n     * supportsPressRipple Passed from init to save a redundant function call\n     */\n    MDCRippleFoundation.prototype.registerRootHandlers_ = function (supportsPressRipple) {\n        var _this = this;\n        if (supportsPressRipple) {\n            ACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n                _this.adapter.registerInteractionHandler(evtType, _this.activateHandler_);\n            });\n            if (this.adapter.isUnbounded()) {\n                this.adapter.registerResizeHandler(this.resizeHandler_);\n            }\n        }\n        this.adapter.registerInteractionHandler('focus', this.focusHandler_);\n        this.adapter.registerInteractionHandler('blur', this.blurHandler_);\n    };\n    MDCRippleFoundation.prototype.registerDeactivationHandlers_ = function (evt) {\n        var _this = this;\n        if (evt.type === 'keydown') {\n            this.adapter.registerInteractionHandler('keyup', this.deactivateHandler_);\n        }\n        else {\n            POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n                _this.adapter.registerDocumentInteractionHandler(evtType, _this.deactivateHandler_);\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.deregisterRootHandlers_ = function () {\n        var _this = this;\n        ACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n            _this.adapter.deregisterInteractionHandler(evtType, _this.activateHandler_);\n        });\n        this.adapter.deregisterInteractionHandler('focus', this.focusHandler_);\n        this.adapter.deregisterInteractionHandler('blur', this.blurHandler_);\n        if (this.adapter.isUnbounded()) {\n            this.adapter.deregisterResizeHandler(this.resizeHandler_);\n        }\n    };\n    MDCRippleFoundation.prototype.deregisterDeactivationHandlers_ = function () {\n        var _this = this;\n        this.adapter.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n        POINTER_DEACTIVATION_EVENT_TYPES.forEach(function (evtType) {\n            _this.adapter.deregisterDocumentInteractionHandler(evtType, _this.deactivateHandler_);\n        });\n    };\n    MDCRippleFoundation.prototype.removeCssVars_ = function () {\n        var _this = this;\n        var rippleStrings = MDCRippleFoundation.strings;\n        var keys = Object.keys(rippleStrings);\n        keys.forEach(function (key) {\n            if (key.indexOf('VAR_') === 0) {\n                _this.adapter.updateCssVariable(rippleStrings[key], null);\n            }\n        });\n    };\n    MDCRippleFoundation.prototype.activate_ = function (evt) {\n        var _this = this;\n        if (this.adapter.isSurfaceDisabled()) {\n            return;\n        }\n        var activationState = this.activationState_;\n        if (activationState.isActivated) {\n            return;\n        }\n        // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n        var previousActivationEvent = this.previousActivationEvent_;\n        var isSameInteraction = previousActivationEvent && evt !== undefined && previousActivationEvent.type !== evt.type;\n        if (isSameInteraction) {\n            return;\n        }\n        activationState.isActivated = true;\n        activationState.isProgrammatic = evt === undefined;\n        activationState.activationEvent = evt;\n        activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : evt !== undefined && (evt.type === 'mousedown' || evt.type === 'touchstart' || evt.type === 'pointerdown');\n        var hasActivatedChild = evt !== undefined &&\n            activatedTargets.length > 0 &&\n            activatedTargets.some(function (target) { return _this.adapter.containsEventTarget(target); });\n        if (hasActivatedChild) {\n            // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n            this.resetActivationState_();\n            return;\n        }\n        if (evt !== undefined) {\n            activatedTargets.push(evt.target);\n            this.registerDeactivationHandlers_(evt);\n        }\n        activationState.wasElementMadeActive = this.checkElementMadeActive_(evt);\n        if (activationState.wasElementMadeActive) {\n            this.animateActivation_();\n        }\n        requestAnimationFrame(function () {\n            // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n            activatedTargets = [];\n            if (!activationState.wasElementMadeActive\n                && evt !== undefined\n                && (evt.key === ' ' || evt.keyCode === 32)) {\n                // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n                // active states inconsistently when they're called within event handling code:\n                // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n                // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n                // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n                // variable is set within a rAF callback for a submit button interaction (#2241).\n                activationState.wasElementMadeActive = _this.checkElementMadeActive_(evt);\n                if (activationState.wasElementMadeActive) {\n                    _this.animateActivation_();\n                }\n            }\n            if (!activationState.wasElementMadeActive) {\n                // Reset activation state immediately if element was not made active.\n                _this.activationState_ = _this.defaultActivationState_();\n            }\n        });\n    };\n    MDCRippleFoundation.prototype.checkElementMadeActive_ = function (evt) {\n        return (evt !== undefined && evt.type === 'keydown') ?\n            this.adapter.isSurfaceActive() :\n            true;\n    };\n    MDCRippleFoundation.prototype.animateActivation_ = function () {\n        var _this = this;\n        var _a = MDCRippleFoundation.strings, VAR_FG_TRANSLATE_START = _a.VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END = _a.VAR_FG_TRANSLATE_END;\n        var _b = MDCRippleFoundation.cssClasses, FG_DEACTIVATION = _b.FG_DEACTIVATION, FG_ACTIVATION = _b.FG_ACTIVATION;\n        var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\n        this.layoutInternal_();\n        var translateStart = '';\n        var translateEnd = '';\n        if (!this.adapter.isUnbounded()) {\n            var _c = this.getFgTranslationCoordinates_(), startPoint = _c.startPoint, endPoint = _c.endPoint;\n            translateStart = startPoint.x + \"px, \" + startPoint.y + \"px\";\n            translateEnd = endPoint.x + \"px, \" + endPoint.y + \"px\";\n        }\n        this.adapter.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n        this.adapter.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n        // Cancel any ongoing activation/deactivation animations\n        clearTimeout(this.activationTimer_);\n        clearTimeout(this.fgDeactivationRemovalTimer_);\n        this.rmBoundedActivationClasses_();\n        this.adapter.removeClass(FG_DEACTIVATION);\n        // Force layout in order to re-trigger the animation.\n        this.adapter.computeBoundingRect();\n        this.adapter.addClass(FG_ACTIVATION);\n        this.activationTimer_ = setTimeout(function () { return _this.activationTimerCallback_(); }, DEACTIVATION_TIMEOUT_MS);\n    };\n    MDCRippleFoundation.prototype.getFgTranslationCoordinates_ = function () {\n        var _a = this.activationState_, activationEvent = _a.activationEvent, wasActivatedByPointer = _a.wasActivatedByPointer;\n        var startPoint;\n        if (wasActivatedByPointer) {\n            startPoint = getNormalizedEventCoords(activationEvent, this.adapter.getWindowPageOffset(), this.adapter.computeBoundingRect());\n        }\n        else {\n            startPoint = {\n                x: this.frame_.width / 2,\n                y: this.frame_.height / 2,\n            };\n        }\n        // Center the element around the start point.\n        startPoint = {\n            x: startPoint.x - (this.initialSize_ / 2),\n            y: startPoint.y - (this.initialSize_ / 2),\n        };\n        var endPoint = {\n            x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n            y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n        };\n        return { startPoint: startPoint, endPoint: endPoint };\n    };\n    MDCRippleFoundation.prototype.runDeactivationUXLogicIfReady_ = function () {\n        var _this = this;\n        // This method is called both when a pointing device is released, and when the activation animation ends.\n        // The deactivation animation should only run after both of those occur.\n        var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\n        var _a = this.activationState_, hasDeactivationUXRun = _a.hasDeactivationUXRun, isActivated = _a.isActivated;\n        var activationHasEnded = hasDeactivationUXRun || !isActivated;\n        if (activationHasEnded && this.activationAnimationHasEnded_) {\n            this.rmBoundedActivationClasses_();\n            this.adapter.addClass(FG_DEACTIVATION);\n            this.fgDeactivationRemovalTimer_ = setTimeout(function () {\n                _this.adapter.removeClass(FG_DEACTIVATION);\n            }, numbers.FG_DEACTIVATION_MS);\n        }\n    };\n    MDCRippleFoundation.prototype.rmBoundedActivationClasses_ = function () {\n        var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;\n        this.adapter.removeClass(FG_ACTIVATION);\n        this.activationAnimationHasEnded_ = false;\n        this.adapter.computeBoundingRect();\n    };\n    MDCRippleFoundation.prototype.resetActivationState_ = function () {\n        var _this = this;\n        this.previousActivationEvent_ = this.activationState_.activationEvent;\n        this.activationState_ = this.defaultActivationState_();\n        // Touch devices may fire additional events for the same interaction within a short time.\n        // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n        setTimeout(function () { return _this.previousActivationEvent_ = undefined; }, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n    };\n    MDCRippleFoundation.prototype.deactivate_ = function () {\n        var _this = this;\n        var activationState = this.activationState_;\n        // This can happen in scenarios such as when you have a keyup event that blurs the element.\n        if (!activationState.isActivated) {\n            return;\n        }\n        var state = __assign({}, activationState);\n        if (activationState.isProgrammatic) {\n            requestAnimationFrame(function () { return _this.animateDeactivation_(state); });\n            this.resetActivationState_();\n        }\n        else {\n            this.deregisterDeactivationHandlers_();\n            requestAnimationFrame(function () {\n                _this.activationState_.hasDeactivationUXRun = true;\n                _this.animateDeactivation_(state);\n                _this.resetActivationState_();\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.animateDeactivation_ = function (_a) {\n        var wasActivatedByPointer = _a.wasActivatedByPointer, wasElementMadeActive = _a.wasElementMadeActive;\n        if (wasActivatedByPointer || wasElementMadeActive) {\n            this.runDeactivationUXLogicIfReady_();\n        }\n    };\n    MDCRippleFoundation.prototype.layoutInternal_ = function () {\n        var _this = this;\n        this.frame_ = this.adapter.computeBoundingRect();\n        var maxDim = Math.max(this.frame_.height, this.frame_.width);\n        // Surface diameter is treated differently for unbounded vs. bounded ripples.\n        // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n        // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n        // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n        // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n        // `overflow: hidden`.\n        var getBoundedRadius = function () {\n            var hypotenuse = Math.sqrt(Math.pow(_this.frame_.width, 2) + Math.pow(_this.frame_.height, 2));\n            return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n        };\n        this.maxRadius_ = this.adapter.isUnbounded() ? maxDim : getBoundedRadius();\n        // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n        var initialSize = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n        // Unbounded ripple size should always be even number to equally center align.\n        if (this.adapter.isUnbounded() && initialSize % 2 !== 0) {\n            this.initialSize_ = initialSize - 1;\n        }\n        else {\n            this.initialSize_ = initialSize;\n        }\n        this.fgScale_ = \"\" + this.maxRadius_ / this.initialSize_;\n        this.updateLayoutCssVars_();\n    };\n    MDCRippleFoundation.prototype.updateLayoutCssVars_ = function () {\n        var _a = MDCRippleFoundation.strings, VAR_FG_SIZE = _a.VAR_FG_SIZE, VAR_LEFT = _a.VAR_LEFT, VAR_TOP = _a.VAR_TOP, VAR_FG_SCALE = _a.VAR_FG_SCALE;\n        this.adapter.updateCssVariable(VAR_FG_SIZE, this.initialSize_ + \"px\");\n        this.adapter.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n        if (this.adapter.isUnbounded()) {\n            this.unboundedCoords_ = {\n                left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n                top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n            };\n            this.adapter.updateCssVariable(VAR_LEFT, this.unboundedCoords_.left + \"px\");\n            this.adapter.updateCssVariable(VAR_TOP, this.unboundedCoords_.top + \"px\");\n        }\n    };\n    return MDCRippleFoundation;\n}(MDCFoundation));\nexport { MDCRippleFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCRippleFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive, PropertyPart } from '../lit-html.js';\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst previousStylePropertyCache = new WeakMap();\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS properties. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nexport const styleMap = directive((styleInfo) => (part) => {\n    if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n        part.committer.name !== 'style' || part.committer.parts.length > 1) {\n        throw new Error('The `styleMap` directive must be used in the style attribute ' +\n            'and must be the only part in the attribute.');\n    }\n    const { committer } = part;\n    const { style } = committer.element;\n    let previousStyleProperties = previousStylePropertyCache.get(part);\n    if (previousStyleProperties === undefined) {\n        // Write static styles once\n        style.cssText = committer.strings.join(' ');\n        previousStylePropertyCache.set(part, previousStyleProperties = new Set());\n    }\n    // Remove old properties that no longer exist in styleInfo\n    // We use forEach() instead of for-of so that re don't require down-level\n    // iteration.\n    previousStyleProperties.forEach((name) => {\n        if (!(name in styleInfo)) {\n            previousStyleProperties.delete(name);\n            if (name.indexOf('-') === -1) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                style[name] = null;\n            }\n            else {\n                style.removeProperty(name);\n            }\n        }\n    });\n    // Add or update properties\n    for (const name in styleInfo) {\n        previousStyleProperties.add(name);\n        if (name.indexOf('-') === -1) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            style[name] = styleInfo[name];\n        }\n        else {\n            style.setProperty(name, styleInfo[name]);\n        }\n    }\n});\n//# sourceMappingURL=style-map.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { BaseElement } from '@material/mwc-base/base-element.js';\nimport MDCRippleFoundation from '@material/ripple/foundation.js';\nimport { html, internalProperty, property, query } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map.js';\nimport { styleMap } from 'lit-html/directives/style-map.js';\n/** @soyCompatible */\nexport class RippleBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this.primary = false;\n        this.accent = false;\n        this.unbounded = false;\n        this.disabled = false;\n        this.activated = false;\n        this.selected = false;\n        this.hovering = false;\n        this.bgFocused = false;\n        this.fgActivation = false;\n        this.fgDeactivation = false;\n        this.fgScale = '';\n        this.fgSize = '';\n        this.translateStart = '';\n        this.translateEnd = '';\n        this.leftPos = '';\n        this.topPos = '';\n        this.mdcFoundationClass = MDCRippleFoundation;\n    }\n    get isActive() {\n        return (this.parentElement || this).matches(':active');\n    }\n    createAdapter() {\n        return {\n            browserSupportsCssVars: () => true,\n            isUnbounded: () => this.unbounded,\n            isSurfaceActive: () => this.isActive,\n            isSurfaceDisabled: () => this.disabled,\n            addClass: (className) => {\n                switch (className) {\n                    case 'mdc-ripple-upgraded--background-focused':\n                        this.bgFocused = true;\n                        break;\n                    case 'mdc-ripple-upgraded--foreground-activation':\n                        this.fgActivation = true;\n                        break;\n                    case 'mdc-ripple-upgraded--foreground-deactivation':\n                        this.fgDeactivation = true;\n                        break;\n                    default:\n                        break;\n                }\n            },\n            removeClass: (className) => {\n                switch (className) {\n                    case 'mdc-ripple-upgraded--background-focused':\n                        this.bgFocused = false;\n                        break;\n                    case 'mdc-ripple-upgraded--foreground-activation':\n                        this.fgActivation = false;\n                        break;\n                    case 'mdc-ripple-upgraded--foreground-deactivation':\n                        this.fgDeactivation = false;\n                        break;\n                    default:\n                        break;\n                }\n            },\n            containsEventTarget: () => true,\n            registerInteractionHandler: () => undefined,\n            deregisterInteractionHandler: () => undefined,\n            registerDocumentInteractionHandler: () => undefined,\n            deregisterDocumentInteractionHandler: () => undefined,\n            registerResizeHandler: () => undefined,\n            deregisterResizeHandler: () => undefined,\n            updateCssVariable: (varName, value) => {\n                switch (varName) {\n                    case '--mdc-ripple-fg-scale':\n                        this.fgScale = value;\n                        break;\n                    case '--mdc-ripple-fg-size':\n                        this.fgSize = value;\n                        break;\n                    case '--mdc-ripple-fg-translate-end':\n                        this.translateEnd = value;\n                        break;\n                    case '--mdc-ripple-fg-translate-start':\n                        this.translateStart = value;\n                        break;\n                    case '--mdc-ripple-left':\n                        this.leftPos = value;\n                        break;\n                    case '--mdc-ripple-top':\n                        this.topPos = value;\n                        break;\n                    default:\n                        break;\n                }\n            },\n            computeBoundingRect: () => (this.parentElement || this).getBoundingClientRect(),\n            getWindowPageOffset: () => ({ x: window.pageXOffset, y: window.pageYOffset }),\n        };\n    }\n    startPress(ev) {\n        this.waitForFoundation(() => {\n            this.mdcFoundation.activate(ev);\n        });\n    }\n    endPress() {\n        this.waitForFoundation(() => {\n            this.mdcFoundation.deactivate();\n        });\n    }\n    startFocus() {\n        this.waitForFoundation(() => {\n            this.mdcFoundation.handleFocus();\n        });\n    }\n    endFocus() {\n        this.waitForFoundation(() => {\n            this.mdcFoundation.handleBlur();\n        });\n    }\n    startHover() {\n        this.hovering = true;\n    }\n    endHover() {\n        this.hovering = false;\n    }\n    /**\n     * Wait for the MDCFoundation to be created by `firstUpdated`\n     */\n    waitForFoundation(fn) {\n        if (this.mdcFoundation) {\n            fn();\n        }\n        else {\n            this.updateComplete.then(fn);\n        }\n    }\n    /** @soyCompatible */\n    render() {\n        /** @classMap */\n        const classes = {\n            'mdc-ripple-upgraded--unbounded': this.unbounded,\n            'mdc-ripple-upgraded--background-focused': this.bgFocused,\n            'mdc-ripple-upgraded--foreground-activation': this.fgActivation,\n            'mdc-ripple-upgraded--foreground-deactivation': this.fgDeactivation,\n            'hover': this.hovering,\n            'primary': this.primary,\n            'accent': this.accent,\n            'disabled': this.disabled,\n            'activated': this.activated,\n            'selected': this.selected,\n        };\n        return html `\n        <div class=\"mdc-ripple-surface mdc-ripple-upgraded ${classMap(classes)}\"\n          style=\"${styleMap({\n            '--mdc-ripple-fg-scale': this.fgScale,\n            '--mdc-ripple-fg-size': this.fgSize,\n            '--mdc-ripple-fg-translate-end': this.translateEnd,\n            '--mdc-ripple-fg-translate-start': this.translateStart,\n            '--mdc-ripple-left': this.leftPos,\n            '--mdc-ripple-top': this.topPos,\n        })}\"></div>`;\n    }\n}\n__decorate([\n    query('.mdc-ripple-surface')\n], RippleBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"primary\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"accent\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"unbounded\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"activated\", void 0);\n__decorate([\n    property({ type: Boolean })\n], RippleBase.prototype, \"selected\", void 0);\n__decorate([\n    internalProperty()\n], RippleBase.prototype, \"hovering\", void 0);\n__decorate([\n    internalProperty()\n], RippleBase.prototype, \"bgFocused\", void 0);\n__decorate([\n    internalProperty()\n], RippleBase.prototype, \"fgActivation\", void 0);\n__decorate([\n    internalProperty()\n], RippleBase.prototype, \"fgDeactivation\", void 0);\n__decorate([\n    internalProperty()\n], RippleBase.prototype, \"fgScale\", void 0);\n__decorate([\n    internalProperty()\n], RippleBase.prototype, \"fgSize\", void 0);\n__decorate([\n    internalProperty()\n], RippleBase.prototype, \"translateStart\", void 0);\n__decorate([\n    internalProperty()\n], RippleBase.prototype, \"translateEnd\", void 0);\n__decorate([\n    internalProperty()\n], RippleBase.prototype, \"leftPos\", void 0);\n__decorate([\n    internalProperty()\n], RippleBase.prototype, \"topPos\", void 0);\n//# sourceMappingURL=mwc-ripple-base.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `:host{display:block;position:absolute;top:0;bottom:0;left:0;right:0;width:100%;height:100%;pointer-events:none}@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}:host .primary{--mdc-ripple-color: var(--mdc-theme-primary, #6200ee)}:host .accent{--mdc-ripple-color: var( --mdc-theme-secondary, #018786 )}:host .mdc-ripple-surface{top:0;bottom:0;left:0;right:0;width:100%;height:100%;pointer-events:none;--mdc-ripple-fg-size: 0;--mdc-ripple-left: 0;--mdc-ripple-top: 0;--mdc-ripple-fg-scale: 1;--mdc-ripple-fg-translate-end: 0;--mdc-ripple-fg-translate-start: 0;-webkit-tap-highlight-color:rgba(0,0,0,0);will-change:transform,opacity;position:relative;outline:none;overflow:hidden;--mdc-ripple-fg-opacity: var( --mdc-ripple-press-opacity, 0.12 )}:host .mdc-ripple-surface::before,:host .mdc-ripple-surface::after{position:absolute;border-radius:50%;opacity:0;pointer-events:none;content:\"\"}:host .mdc-ripple-surface::before{transition:opacity 15ms linear,background-color 15ms linear;z-index:1}:host .mdc-ripple-surface.mdc-ripple-upgraded::before{transform:scale(var(--mdc-ripple-fg-scale, 1))}:host .mdc-ripple-surface.mdc-ripple-upgraded::after{top:0;left:0;transform:scale(0);transform-origin:center center}:host .mdc-ripple-surface.mdc-ripple-upgraded--unbounded::after{top:var(--mdc-ripple-top, 0);left:var(--mdc-ripple-left, 0)}:host .mdc-ripple-surface.mdc-ripple-upgraded--foreground-activation::after{animation:mdc-ripple-fg-radius-in 225ms forwards,mdc-ripple-fg-opacity-in 75ms forwards}:host .mdc-ripple-surface.mdc-ripple-upgraded--foreground-deactivation::after{animation:mdc-ripple-fg-opacity-out 150ms;transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}:host .mdc-ripple-surface::before,:host .mdc-ripple-surface::after{top:calc(50% - 100%);left:calc(50% - 100%);width:200%;height:200%}:host .mdc-ripple-surface.mdc-ripple-upgraded::after{width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}:host .mdc-ripple-surface.mdc-ripple-upgraded--unbounded{overflow:visible}:host .mdc-ripple-surface.mdc-ripple-upgraded--unbounded::before,:host .mdc-ripple-surface.mdc-ripple-upgraded--unbounded::after{top:calc(50% - 50%);left:calc(50% - 50%);width:100%;height:100%}:host .mdc-ripple-surface.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded::before,:host .mdc-ripple-surface.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded::after{top:var(--mdc-ripple-top, calc(50% - 50%));left:var(--mdc-ripple-left, calc(50% - 50%));width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}:host .mdc-ripple-surface.mdc-ripple-upgraded--unbounded.mdc-ripple-upgraded::after{width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}:host .mdc-ripple-surface.hover::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}:host .mdc-ripple-surface.mdc-ripple-upgraded--background-focused::before{opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}:host .mdc-ripple-surface::before,:host .mdc-ripple-surface::after{background-color:#000;background-color:var(--mdc-ripple-color, #000)}:host .mdc-ripple-surface.activated{--mdc-ripple-press-opacity: calc( var(--mdc-ripple-press-opacity, 0.12) + 0.12 )}:host .mdc-ripple-surface.activated::before{opacity:0.12;opacity:var(--mdc-ripple-activated-opacity, 0.12)}:host .mdc-ripple-surface.activated.hover::before{opacity:.16;opacity:calc( var(--mdc-ripple-hover-opacity, 0.04) + var(--mdc-ripple-activated-opacity, 0.12) )}:host .mdc-ripple-surface.activated.mdc-ripple-upgraded--background-focused::before{opacity:.24;opacity:calc( var(--mdc-ripple-focus-opacity, 0.12) + var(--mdc-ripple-activated-opacity, 0.12) )}:host .mdc-ripple-surface.selected{--mdc-ripple-press-opacity: calc( var(--mdc-ripple-press-opacity, 0.12) + 0.08 )}:host .mdc-ripple-surface.selected::before{opacity:0.08;opacity:var(--mdc-ripple-selected-opacity, 0.08)}:host .mdc-ripple-surface.selected.hover::before{opacity:.12;opacity:calc( var(--mdc-ripple-hover-opacity, 0.04) + var(--mdc-ripple-selected-opacity, 0.08) )}:host .mdc-ripple-surface.selected.mdc-ripple-upgraded--background-focused::before{opacity:.2;opacity:calc( var(--mdc-ripple-focus-opacity, 0.12) + var(--mdc-ripple-selected-opacity, 0.08) )}:host .mdc-ripple-surface.disabled{--mdc-ripple-color: transparent}:host .mdc-ripple-surface::before{z-index:1;z-index:var(--m-ripple-z-index, 1)}:host .mdc-ripple-surface::after{z-index:0;z-index:var(--m-ripple-z-index, 0)}`;\n//# sourceMappingURL=mwc-ripple-css.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { customElement } from 'lit-element';\nimport { RippleBase } from './mwc-ripple-base.js';\nimport { style } from './mwc-ripple-css.js';\n/** @soyCompatible */\nlet Ripple = class Ripple extends RippleBase {\n};\nRipple.styles = style;\nRipple = __decorate([\n    customElement('mwc-ripple')\n], Ripple);\nexport { Ripple };\n//# sourceMappingURL=mwc-ripple.js.map","/**\n@license\nCopyright 2020 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n/**\n * Class that encapsulates the events handlers for `mwc-ripple`\n *\n *\n * Example:\n * ```\n * class XFoo extends LitElement {\n *   async getRipple() {\n *     this.renderRipple = true;\n *     await this.updateComplete;\n *     return this.renderRoot.querySelector('mwc-ripple');\n *   }\n *   rippleHandlers = new RippleHandlers(() => this.getRipple());\n *\n *   render() {\n *     return html`\n *       <div @mousedown=${this.rippleHandlers.startPress}></div>\n *       ${this.renderRipple ? html`<mwc-ripple></mwc-ripple>` : ''}\n *     `;\n *   }\n * }\n * ```\n */\nexport class RippleHandlers {\n    constructor(\n    /** Function that returns a `mwc-ripple` */\n    rippleFn) {\n        this.startPress = (ev) => {\n            rippleFn().then((r) => {\n                r && r.startPress(ev);\n            });\n        };\n        this.endPress = () => {\n            rippleFn().then((r) => {\n                r && r.endPress();\n            });\n        };\n        this.startFocus = () => {\n            rippleFn().then((r) => {\n                r && r.startFocus();\n            });\n        };\n        this.endFocus = () => {\n            rippleFn().then((r) => {\n                r && r.endFocus();\n            });\n        };\n        this.startHover = () => {\n            rippleFn().then((r) => {\n                r && r.startHover();\n            });\n        };\n        this.endHover = () => {\n            rippleFn().then((r) => {\n                r && r.endHover();\n            });\n        };\n    }\n}\n//# sourceMappingURL=ripple-handlers.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport '@material/mwc-ripple/mwc-ripple';\nimport { RippleHandlers } from '@material/mwc-ripple/ripple-handlers';\nimport { eventOptions, html, internalProperty, LitElement, property, query, queryAsync } from 'lit-element';\n/** @soyCompatible */\nexport class IconButtonBase extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.disabled = false;\n        this.icon = '';\n        this.label = '';\n        this.shouldRenderRipple = false;\n        this.rippleHandlers = new RippleHandlers(() => {\n            this.shouldRenderRipple = true;\n            return this.ripple;\n        });\n    }\n    /** @soyCompatible */\n    renderRipple() {\n        return html `${this.shouldRenderRipple ? html `\n            <mwc-ripple\n                .disabled=\"${this.disabled}\"\n                unbounded>\n            </mwc-ripple>` :\n            ''}`;\n    }\n    focus() {\n        const buttonElement = this.buttonElement;\n        if (buttonElement) {\n            this.rippleHandlers.startFocus();\n            buttonElement.focus();\n        }\n    }\n    blur() {\n        const buttonElement = this.buttonElement;\n        if (buttonElement) {\n            this.rippleHandlers.endFocus();\n            buttonElement.blur();\n        }\n    }\n    /** @soyCompatible */\n    render() {\n        return html `<button\n        class=\"mdc-icon-button\"\n        aria-label=\"${this.label || this.icon}\"\n        ?disabled=\"${this.disabled}\"\n        @focus=\"${this.handleRippleFocus}\"\n        @blur=\"${this.handleRippleBlur}\"\n        @mousedown=\"${this.handleRippleMouseDown}\"\n        @mouseenter=\"${this.handleRippleMouseEnter}\"\n        @mouseleave=\"${this.handleRippleMouseLeave}\"\n        @touchstart=\"${this.handleRippleTouchStart}\"\n        @touchend=\"${this.handleRippleDeactivate}\"\n        @touchcancel=\"${this.handleRippleDeactivate}\">\n      ${this.renderRipple()}\n    <i class=\"material-icons\">${this.icon}</i>\n    <slot></slot>\n  </button>`;\n    }\n    handleRippleMouseDown(event) {\n        const onUp = () => {\n            window.removeEventListener('mouseup', onUp);\n            this.handleRippleDeactivate();\n        };\n        window.addEventListener('mouseup', onUp);\n        this.rippleHandlers.startPress(event);\n    }\n    handleRippleTouchStart(event) {\n        this.rippleHandlers.startPress(event);\n    }\n    handleRippleDeactivate() {\n        this.rippleHandlers.endPress();\n    }\n    handleRippleMouseEnter() {\n        this.rippleHandlers.startHover();\n    }\n    handleRippleMouseLeave() {\n        this.rippleHandlers.endHover();\n    }\n    handleRippleFocus() {\n        this.rippleHandlers.startFocus();\n    }\n    handleRippleBlur() {\n        this.rippleHandlers.endFocus();\n    }\n}\n__decorate([\n    property({ type: Boolean, reflect: true })\n], IconButtonBase.prototype, \"disabled\", void 0);\n__decorate([\n    property({ type: String })\n], IconButtonBase.prototype, \"icon\", void 0);\n__decorate([\n    property({ type: String })\n], IconButtonBase.prototype, \"label\", void 0);\n__decorate([\n    query('button')\n], IconButtonBase.prototype, \"buttonElement\", void 0);\n__decorate([\n    queryAsync('mwc-ripple')\n], IconButtonBase.prototype, \"ripple\", void 0);\n__decorate([\n    internalProperty()\n], IconButtonBase.prototype, \"shouldRenderRipple\", void 0);\n__decorate([\n    eventOptions({ passive: true })\n], IconButtonBase.prototype, \"handleRippleMouseDown\", null);\n__decorate([\n    eventOptions({ passive: true })\n], IconButtonBase.prototype, \"handleRippleTouchStart\", null);\n//# sourceMappingURL=mwc-icon-button-base.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `.material-icons{font-family:var(--mdc-icon-font, \"Material Icons\");font-weight:normal;font-style:normal;font-size:var(--mdc-icon-size, 24px);line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\"}.mdc-icon-button{display:inline-block;position:relative;box-sizing:border-box;border:none;outline:none;background-color:transparent;fill:currentColor;color:inherit;font-size:24px;text-decoration:none;cursor:pointer;user-select:none;width:48px;height:48px;padding:12px}.mdc-icon-button svg,.mdc-icon-button img{width:24px;height:24px}.mdc-icon-button:disabled{color:rgba(0,0,0,.38);color:var(--mdc-theme-text-disabled-on-light, rgba(0, 0, 0, 0.38))}.mdc-icon-button:disabled{cursor:default;pointer-events:none}.mdc-icon-button__icon{display:inline-block}.mdc-icon-button__icon.mdc-icon-button__icon--on{display:none}.mdc-icon-button--on .mdc-icon-button__icon{display:none}.mdc-icon-button--on .mdc-icon-button__icon.mdc-icon-button__icon--on{display:inline-block}:host{display:inline-block;outline:none;--mdc-ripple-color: currentcolor}:host([disabled]){pointer-events:none}:host,.mdc-icon-button{vertical-align:top}.mdc-icon-button{width:var(--mdc-icon-button-size, 48px);height:var(--mdc-icon-button-size, 48px);padding:calc((var(--mdc-icon-button-size, 48px) - var(--mdc-icon-size, 24px)) / 2)}.mdc-icon-button>i{position:absolute;top:0;padding-top:inherit}.mdc-icon-button i,.mdc-icon-button svg,.mdc-icon-button img,.mdc-icon-button ::slotted(*){display:block;width:var(--mdc-icon-size, 24px);height:var(--mdc-icon-size, 24px)}`;\n//# sourceMappingURL=mwc-icon-button-css.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { __decorate } from \"tslib\";\nimport { customElement } from 'lit-element';\nimport { IconButtonBase } from './mwc-icon-button-base.js';\nimport { style } from './mwc-icon-button-css.js';\n/** @soyCompatible */\nlet IconButton = class IconButton extends IconButtonBase {\n};\nIconButton.styles = style;\nIconButton = __decorate([\n    customElement('mwc-icon-button')\n], IconButton);\nexport { IconButton };\n//# sourceMappingURL=mwc-icon-button.js.map","/**\n * @license\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(() => {\n    var _a, _b, _c;\n    /* Symbols for private properties */\n    const _blockingElements = Symbol();\n    const _alreadyInertElements = Symbol();\n    const _topElParents = Symbol();\n    const _siblingsToRestore = Symbol();\n    const _parentMO = Symbol();\n    /* Symbols for private static methods */\n    const _topChanged = Symbol();\n    const _swapInertedSibling = Symbol();\n    const _inertSiblings = Symbol();\n    const _restoreInertedSiblings = Symbol();\n    const _getParents = Symbol();\n    const _getDistributedChildren = Symbol();\n    const _isInertable = Symbol();\n    const _handleMutations = Symbol();\n    class BlockingElementsImpl {\n        constructor() {\n            /**\n             * The blocking elements.\n             */\n            this[_a] = [];\n            /**\n             * Used to keep track of the parents of the top element, from the element\n             * itself up to body. When top changes, the old top might have been removed\n             * from the document, so we need to memoize the inerted parents' siblings\n             * in order to restore their inerteness when top changes.\n             */\n            this[_b] = [];\n            /**\n             * Elements that are already inert before the first blocking element is\n             * pushed.\n             */\n            this[_c] = new Set();\n        }\n        destructor() {\n            // Restore original inertness.\n            this[_restoreInertedSiblings](this[_topElParents]);\n            // Note we don't want to make these properties nullable on the class,\n            // since then we'd need non-null casts in many places. Calling a method on\n            // a BlockingElements instance after calling destructor will result in an\n            // exception.\n            const nullable = this;\n            nullable[_blockingElements] = null;\n            nullable[_topElParents] = null;\n            nullable[_alreadyInertElements] = null;\n        }\n        get top() {\n            const elems = this[_blockingElements];\n            return elems[elems.length - 1] || null;\n        }\n        push(element) {\n            if (!element || element === this.top) {\n                return;\n            }\n            // Remove it from the stack, we'll bring it to the top.\n            this.remove(element);\n            this[_topChanged](element);\n            this[_blockingElements].push(element);\n        }\n        remove(element) {\n            const i = this[_blockingElements].indexOf(element);\n            if (i === -1) {\n                return false;\n            }\n            this[_blockingElements].splice(i, 1);\n            // Top changed only if the removed element was the top element.\n            if (i === this[_blockingElements].length) {\n                this[_topChanged](this.top);\n            }\n            return true;\n        }\n        pop() {\n            const top = this.top;\n            top && this.remove(top);\n            return top;\n        }\n        has(element) {\n            return this[_blockingElements].indexOf(element) !== -1;\n        }\n        /**\n         * Sets `inert` to all document elements except the new top element, its\n         * parents, and its distributed content.\n         */\n        [(_a = _blockingElements, _b = _topElParents, _c = _alreadyInertElements, _topChanged)](newTop) {\n            const toKeepInert = this[_alreadyInertElements];\n            const oldParents = this[_topElParents];\n            // No new top, reset old top if any.\n            if (!newTop) {\n                this[_restoreInertedSiblings](oldParents);\n                toKeepInert.clear();\n                this[_topElParents] = [];\n                return;\n            }\n            const newParents = this[_getParents](newTop);\n            // New top is not contained in the main document!\n            if (newParents[newParents.length - 1].parentNode !== document.body) {\n                throw Error('Non-connected element cannot be a blocking element');\n            }\n            // Cast here because we know we'll call _inertSiblings on newParents\n            // below.\n            this[_topElParents] = newParents;\n            const toSkip = this[_getDistributedChildren](newTop);\n            // No previous top element.\n            if (!oldParents.length) {\n                this[_inertSiblings](newParents, toSkip, toKeepInert);\n                return;\n            }\n            let i = oldParents.length - 1;\n            let j = newParents.length - 1;\n            // Find common parent. Index 0 is the element itself (so stop before it).\n            while (i > 0 && j > 0 && oldParents[i] === newParents[j]) {\n                i--;\n                j--;\n            }\n            // If up the parents tree there are 2 elements that are siblings, swap\n            // the inerted sibling.\n            if (oldParents[i] !== newParents[j]) {\n                this[_swapInertedSibling](oldParents[i], newParents[j]);\n            }\n            // Restore old parents siblings inertness.\n            i > 0 && this[_restoreInertedSiblings](oldParents.slice(0, i));\n            // Make new parents siblings inert.\n            j > 0 && this[_inertSiblings](newParents.slice(0, j), toSkip, null);\n        }\n        /**\n         * Swaps inertness between two sibling elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_swapInertedSibling](oldInert, newInert) {\n            const siblingsToRestore = oldInert[_siblingsToRestore];\n            // oldInert is not contained in siblings to restore, so we have to check\n            // if it's inertable and if already inert.\n            if (this[_isInertable](oldInert) && !oldInert.inert) {\n                oldInert.inert = true;\n                siblingsToRestore.add(oldInert);\n            }\n            // If newInert was already between the siblings to restore, it means it is\n            // inertable and must be restored.\n            if (siblingsToRestore.has(newInert)) {\n                newInert.inert = false;\n                siblingsToRestore.delete(newInert);\n            }\n            newInert[_parentMO] = oldInert[_parentMO];\n            newInert[_siblingsToRestore] = siblingsToRestore;\n            oldInert[_parentMO] = undefined;\n            oldInert[_siblingsToRestore] = undefined;\n        }\n        /**\n         * Restores original inertness to the siblings of the elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_restoreInertedSiblings](elements) {\n            for (const element of elements) {\n                const mo = element[_parentMO];\n                mo.disconnect();\n                element[_parentMO] = undefined;\n                const siblings = element[_siblingsToRestore];\n                for (const sibling of siblings) {\n                    sibling.inert = false;\n                }\n                element[_siblingsToRestore] = undefined;\n            }\n        }\n        /**\n         * Inerts the siblings of the elements except the elements to skip. Stores\n         * the inerted siblings into the element's symbol `_siblingsToRestore`.\n         * Pass `toKeepInert` to collect the already inert elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_inertSiblings](elements, toSkip, toKeepInert) {\n            for (const element of elements) {\n                // Assume element is not a Document, so it must have a parentNode.\n                const parent = element.parentNode;\n                const children = parent.children;\n                const inertedSiblings = new Set();\n                for (let j = 0; j < children.length; j++) {\n                    const sibling = children[j];\n                    // Skip the input element, if not inertable or to be skipped.\n                    if (sibling === element || !this[_isInertable](sibling) ||\n                        (toSkip && toSkip.has(sibling))) {\n                        continue;\n                    }\n                    // Should be collected since already inerted.\n                    if (toKeepInert && sibling.inert) {\n                        toKeepInert.add(sibling);\n                    }\n                    else {\n                        sibling.inert = true;\n                        inertedSiblings.add(sibling);\n                    }\n                }\n                // Store the siblings that were inerted.\n                element[_siblingsToRestore] = inertedSiblings;\n                // Observe only immediate children mutations on the parent.\n                const mo = new MutationObserver(this[_handleMutations].bind(this));\n                element[_parentMO] = mo;\n                let parentToObserve = parent;\n                // If we're using the ShadyDOM polyfill, then our parent could be a\n                // shady root, which is an object that acts like a ShadowRoot, but isn't\n                // actually a node in the real DOM. Observe the real DOM parent instead.\n                const maybeShadyRoot = parentToObserve;\n                if (maybeShadyRoot.__shady && maybeShadyRoot.host) {\n                    parentToObserve = maybeShadyRoot.host;\n                }\n                mo.observe(parentToObserve, {\n                    childList: true,\n                });\n            }\n        }\n        /**\n         * Handles newly added/removed nodes by toggling their inertness.\n         * It also checks if the current top Blocking Element has been removed,\n         * notifying and removing it.\n         */\n        [_handleMutations](mutations) {\n            const parents = this[_topElParents];\n            const toKeepInert = this[_alreadyInertElements];\n            for (const mutation of mutations) {\n                // If the target is a shadowRoot, get its host as we skip shadowRoots when\n                // computing _topElParents.\n                const target = mutation.target.host || mutation.target;\n                const idx = target === document.body ?\n                    parents.length :\n                    parents.indexOf(target);\n                const inertedChild = parents[idx - 1];\n                const inertedSiblings = inertedChild[_siblingsToRestore];\n                // To restore.\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const sibling = mutation.removedNodes[i];\n                    if (sibling === inertedChild) {\n                        console.info('Detected removal of the top Blocking Element.');\n                        this.pop();\n                        return;\n                    }\n                    if (inertedSiblings.has(sibling)) {\n                        sibling.inert = false;\n                        inertedSiblings.delete(sibling);\n                    }\n                }\n                // To inert.\n                for (let i = 0; i < mutation.addedNodes.length; i++) {\n                    const sibling = mutation.addedNodes[i];\n                    if (!this[_isInertable](sibling)) {\n                        continue;\n                    }\n                    if (toKeepInert && sibling.inert) {\n                        toKeepInert.add(sibling);\n                    }\n                    else {\n                        sibling.inert = true;\n                        inertedSiblings.add(sibling);\n                    }\n                }\n            }\n        }\n        /**\n         * Returns if the element is inertable.\n         */\n        [_isInertable](element) {\n            return false === /^(style|template|script)$/.test(element.localName);\n        }\n        /**\n         * Returns the list of newParents of an element, starting from element\n         * (included) up to `document.body` (excluded).\n         */\n        [_getParents](element) {\n            const parents = [];\n            let current = element;\n            // Stop to body.\n            while (current && current !== document.body) {\n                // Skip shadow roots.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    parents.push(current);\n                }\n                // ShadowDom v1\n                if (current.assignedSlot) {\n                    // Collect slots from deepest slot to top.\n                    while (current = current.assignedSlot) {\n                        parents.push(current);\n                    }\n                    // Continue the search on the top slot.\n                    current = parents.pop();\n                    continue;\n                }\n                current = current.parentNode ||\n                    current.host;\n            }\n            return parents;\n        }\n        /**\n         * Returns the distributed children of the element's shadow root.\n         * Returns null if the element doesn't have a shadow root.\n         */\n        [_getDistributedChildren](element) {\n            const shadowRoot = element.shadowRoot;\n            if (!shadowRoot) {\n                return null;\n            }\n            const result = new Set();\n            let i;\n            let j;\n            let nodes;\n            const slots = shadowRoot.querySelectorAll('slot');\n            if (slots.length && slots[0].assignedNodes) {\n                for (i = 0; i < slots.length; i++) {\n                    nodes = slots[i].assignedNodes({\n                        flatten: true,\n                    });\n                    for (j = 0; j < nodes.length; j++) {\n                        if (nodes[j].nodeType === Node.ELEMENT_NODE) {\n                            result.add(nodes[j]);\n                        }\n                    }\n                }\n                // No need to search for <content>.\n            }\n            return result;\n        }\n    }\n    document.$blockingElements =\n        new BlockingElementsImpl();\n})();\n//# sourceMappingURL=blocking-elements.js.map","/**\n * This work is licensed under the W3C Software and Document License\n * (http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document).\n */\n\n(function() {\n  // Return early if we're not running inside of the browser.\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  // Convenience function for converting NodeLists.\n  /** @type {typeof Array.prototype.slice} */\n  const slice = Array.prototype.slice;\n\n  /**\n   * IE has a non-standard name for \"matches\".\n   * @type {typeof Element.prototype.matches}\n   */\n  const matches =\n      Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n  /** @type {string} */\n  const _focusableElementsString = ['a[href]',\n                                    'area[href]',\n                                    'input:not([disabled])',\n                                    'select:not([disabled])',\n                                    'textarea:not([disabled])',\n                                    'button:not([disabled])',\n                                    'details',\n                                    'summary',\n                                    'iframe',\n                                    'object',\n                                    'embed',\n                                    '[contenteditable]'].join(',');\n\n  /**\n   * `InertRoot` manages a single inert subtree, i.e. a DOM subtree whose root element has an `inert`\n   * attribute.\n   *\n   * Its main functions are:\n   *\n   * - to create and maintain a set of managed `InertNode`s, including when mutations occur in the\n   *   subtree. The `makeSubtreeUnfocusable()` method handles collecting `InertNode`s via registering\n   *   each focusable node in the subtree with the singleton `InertManager` which manages all known\n   *   focusable nodes within inert subtrees. `InertManager` ensures that a single `InertNode`\n   *   instance exists for each focusable node which has at least one inert root as an ancestor.\n   *\n   * - to notify all managed `InertNode`s when this subtree stops being inert (i.e. when the `inert`\n   *   attribute is removed from the root node). This is handled in the destructor, which calls the\n   *   `deregister` method on `InertManager` for each managed inert node.\n   */\n  class InertRoot {\n    /**\n     * @param {!Element} rootElement The Element at the root of the inert subtree.\n     * @param {!InertManager} inertManager The global singleton InertManager object.\n     */\n    constructor(rootElement, inertManager) {\n      /** @type {!InertManager} */\n      this._inertManager = inertManager;\n\n      /** @type {!Element} */\n      this._rootElement = rootElement;\n\n      /**\n       * @type {!Set<!InertNode>}\n       * All managed focusable nodes in this InertRoot's subtree.\n       */\n      this._managedNodes = new Set();\n\n      // Make the subtree hidden from assistive technology\n      if (this._rootElement.hasAttribute('aria-hidden')) {\n        /** @type {?string} */\n        this._savedAriaHidden = this._rootElement.getAttribute('aria-hidden');\n      } else {\n        this._savedAriaHidden = null;\n      }\n      this._rootElement.setAttribute('aria-hidden', 'true');\n\n      // Make all focusable elements in the subtree unfocusable and add them to _managedNodes\n      this._makeSubtreeUnfocusable(this._rootElement);\n\n      // Watch for:\n      // - any additions in the subtree: make them unfocusable too\n      // - any removals from the subtree: remove them from this inert root's managed nodes\n      // - attribute changes: if `tabindex` is added, or removed from an intrinsically focusable\n      //   element, make that node a managed node.\n      this._observer = new MutationObserver(this._onMutation.bind(this));\n      this._observer.observe(this._rootElement, {attributes: true, childList: true, subtree: true});\n    }\n\n    /**\n     * Call this whenever this object is about to become obsolete.  This unwinds all of the state\n     * stored in this object and updates the state of all of the managed nodes.\n     */\n    destructor() {\n      this._observer.disconnect();\n\n      if (this._rootElement) {\n        if (this._savedAriaHidden !== null) {\n          this._rootElement.setAttribute('aria-hidden', this._savedAriaHidden);\n        } else {\n          this._rootElement.removeAttribute('aria-hidden');\n        }\n      }\n\n      this._managedNodes.forEach(function(inertNode) {\n        this._unmanageNode(inertNode.node);\n      }, this);\n\n      // Note we cast the nulls to the ANY type here because:\n      // 1) We want the class properties to be declared as non-null, or else we\n      //    need even more casts throughout this code. All bets are off if an\n      //    instance has been destroyed and a method is called.\n      // 2) We don't want to cast \"this\", because we want type-aware optimizations\n      //    to know which properties we're setting.\n      this._observer = /** @type {?} */ (null);\n      this._rootElement = /** @type {?} */ (null);\n      this._managedNodes = /** @type {?} */ (null);\n      this._inertManager = /** @type {?} */ (null);\n    }\n\n    /**\n     * @return {!Set<!InertNode>} A copy of this InertRoot's managed nodes set.\n     */\n    get managedNodes() {\n      return new Set(this._managedNodes);\n    }\n\n    /** @return {boolean} */\n    get hasSavedAriaHidden() {\n      return this._savedAriaHidden !== null;\n    }\n\n    /** @param {?string} ariaHidden */\n    set savedAriaHidden(ariaHidden) {\n      this._savedAriaHidden = ariaHidden;\n    }\n\n    /** @return {?string} */\n    get savedAriaHidden() {\n      return this._savedAriaHidden;\n    }\n\n    /**\n     * @param {!Node} startNode\n     */\n    _makeSubtreeUnfocusable(startNode) {\n      composedTreeWalk(startNode, (node) => this._visitNode(node));\n\n      let activeElement = document.activeElement;\n\n      if (!document.body.contains(startNode)) {\n        // startNode may be in shadow DOM, so find its nearest shadowRoot to get the activeElement.\n        let node = startNode;\n        /** @type {!ShadowRoot|undefined} */\n        let root = undefined;\n        while (node) {\n          if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            root = /** @type {!ShadowRoot} */ (node);\n            break;\n          }\n          node = node.parentNode;\n        }\n        if (root) {\n          activeElement = root.activeElement;\n        }\n      }\n      if (startNode.contains(activeElement)) {\n        activeElement.blur();\n        // In IE11, if an element is already focused, and then set to tabindex=-1\n        // calling blur() will not actually move the focus.\n        // To work around this we call focus() on the body instead.\n        if (activeElement === document.activeElement) {\n          document.body.focus();\n        }\n      }\n    }\n\n    /**\n     * @param {!Node} node\n     */\n    _visitNode(node) {\n      if (node.nodeType !== Node.ELEMENT_NODE) {\n        return;\n      }\n      const element = /** @type {!Element} */ (node);\n\n      // If a descendant inert root becomes un-inert, its descendants will still be inert because of\n      // this inert root, so all of its managed nodes need to be adopted by this InertRoot.\n      if (element !== this._rootElement && element.hasAttribute('inert')) {\n        this._adoptInertRoot(element);\n      }\n\n      if (matches.call(element, _focusableElementsString) || element.hasAttribute('tabindex')) {\n        this._manageNode(element);\n      }\n    }\n\n    /**\n     * Register the given node with this InertRoot and with InertManager.\n     * @param {!Node} node\n     */\n    _manageNode(node) {\n      const inertNode = this._inertManager.register(node, this);\n      this._managedNodes.add(inertNode);\n    }\n\n    /**\n     * Unregister the given node with this InertRoot and with InertManager.\n     * @param {!Node} node\n     */\n    _unmanageNode(node) {\n      const inertNode = this._inertManager.deregister(node, this);\n      if (inertNode) {\n        this._managedNodes.delete(inertNode);\n      }\n    }\n\n    /**\n     * Unregister the entire subtree starting at `startNode`.\n     * @param {!Node} startNode\n     */\n    _unmanageSubtree(startNode) {\n      composedTreeWalk(startNode, (node) => this._unmanageNode(node));\n    }\n\n    /**\n     * If a descendant node is found with an `inert` attribute, adopt its managed nodes.\n     * @param {!Element} node\n     */\n    _adoptInertRoot(node) {\n      let inertSubroot = this._inertManager.getInertRoot(node);\n\n      // During initialisation this inert root may not have been registered yet,\n      // so register it now if need be.\n      if (!inertSubroot) {\n        this._inertManager.setInert(node, true);\n        inertSubroot = this._inertManager.getInertRoot(node);\n      }\n\n      inertSubroot.managedNodes.forEach(function(savedInertNode) {\n        this._manageNode(savedInertNode.node);\n      }, this);\n    }\n\n    /**\n     * Callback used when mutation observer detects subtree additions, removals, or attribute changes.\n     * @param {!Array<!MutationRecord>} records\n     * @param {!MutationObserver} self\n     */\n    _onMutation(records, self) {\n      records.forEach(function(record) {\n        const target = /** @type {!Element} */ (record.target);\n        if (record.type === 'childList') {\n          // Manage added nodes\n          slice.call(record.addedNodes).forEach(function(node) {\n            this._makeSubtreeUnfocusable(node);\n          }, this);\n\n          // Un-manage removed nodes\n          slice.call(record.removedNodes).forEach(function(node) {\n            this._unmanageSubtree(node);\n          }, this);\n        } else if (record.type === 'attributes') {\n          if (record.attributeName === 'tabindex') {\n            // Re-initialise inert node if tabindex changes\n            this._manageNode(target);\n          } else if (target !== this._rootElement &&\n                    record.attributeName === 'inert' &&\n                    target.hasAttribute('inert')) {\n            // If a new inert root is added, adopt its managed nodes and make sure it knows about the\n            // already managed nodes from this inert subroot.\n            this._adoptInertRoot(target);\n            const inertSubroot = this._inertManager.getInertRoot(target);\n            this._managedNodes.forEach(function(managedNode) {\n              if (target.contains(managedNode.node)) {\n                inertSubroot._manageNode(managedNode.node);\n              }\n            });\n          }\n        }\n      }, this);\n    }\n  }\n\n  /**\n   * `InertNode` initialises and manages a single inert node.\n   * A node is inert if it is a descendant of one or more inert root elements.\n   *\n   * On construction, `InertNode` saves the existing `tabindex` value for the node, if any, and\n   * either removes the `tabindex` attribute or sets it to `-1`, depending on whether the element\n   * is intrinsically focusable or not.\n   *\n   * `InertNode` maintains a set of `InertRoot`s which are descendants of this `InertNode`. When an\n   * `InertRoot` is destroyed, and calls `InertManager.deregister()`, the `InertManager` notifies the\n   * `InertNode` via `removeInertRoot()`, which in turn destroys the `InertNode` if no `InertRoot`s\n   * remain in the set. On destruction, `InertNode` reinstates the stored `tabindex` if one exists,\n   * or removes the `tabindex` attribute if the element is intrinsically focusable.\n   */\n  class InertNode {\n    /**\n     * @param {!Node} node A focusable element to be made inert.\n     * @param {!InertRoot} inertRoot The inert root element associated with this inert node.\n     */\n    constructor(node, inertRoot) {\n      /** @type {!Node} */\n      this._node = node;\n\n      /** @type {boolean} */\n      this._overrodeFocusMethod = false;\n\n      /**\n       * @type {!Set<!InertRoot>} The set of descendant inert roots.\n       *    If and only if this set becomes empty, this node is no longer inert.\n       */\n      this._inertRoots = new Set([inertRoot]);\n\n      /** @type {?number} */\n      this._savedTabIndex = null;\n\n      /** @type {boolean} */\n      this._destroyed = false;\n\n      // Save any prior tabindex info and make this node untabbable\n      this.ensureUntabbable();\n    }\n\n    /**\n     * Call this whenever this object is about to become obsolete.\n     * This makes the managed node focusable again and deletes all of the previously stored state.\n     */\n    destructor() {\n      this._throwIfDestroyed();\n\n      if (this._node && this._node.nodeType === Node.ELEMENT_NODE) {\n        const element = /** @type {!Element} */ (this._node);\n        if (this._savedTabIndex !== null) {\n          element.setAttribute('tabindex', this._savedTabIndex);\n        } else {\n          element.removeAttribute('tabindex');\n        }\n\n        // Use `delete` to restore native focus method.\n        if (this._overrodeFocusMethod) {\n          delete element.focus;\n        }\n      }\n\n      // See note in InertRoot.destructor for why we cast these nulls to ANY.\n      this._node = /** @type {?} */ (null);\n      this._inertRoots = /** @type {?} */ (null);\n      this._destroyed = true;\n    }\n\n    /**\n     * @type {boolean} Whether this object is obsolete because the managed node is no longer inert.\n     * If the object has been destroyed, any attempt to access it will cause an exception.\n     */\n    get destroyed() {\n      return /** @type {!InertNode} */ (this)._destroyed;\n    }\n\n    /**\n     * Throw if user tries to access destroyed InertNode.\n     */\n    _throwIfDestroyed() {\n      if (this.destroyed) {\n        throw new Error('Trying to access destroyed InertNode');\n      }\n    }\n\n    /** @return {boolean} */\n    get hasSavedTabIndex() {\n      return this._savedTabIndex !== null;\n    }\n\n    /** @return {!Node} */\n    get node() {\n      this._throwIfDestroyed();\n      return this._node;\n    }\n\n    /** @param {?number} tabIndex */\n    set savedTabIndex(tabIndex) {\n      this._throwIfDestroyed();\n      this._savedTabIndex = tabIndex;\n    }\n\n    /** @return {?number} */\n    get savedTabIndex() {\n      this._throwIfDestroyed();\n      return this._savedTabIndex;\n    }\n\n    /** Save the existing tabindex value and make the node untabbable and unfocusable */\n    ensureUntabbable() {\n      if (this.node.nodeType !== Node.ELEMENT_NODE) {\n        return;\n      }\n      const element = /** @type {!Element} */ (this.node);\n      if (matches.call(element, _focusableElementsString)) {\n        if (/** @type {!HTMLElement} */ (element).tabIndex === -1 &&\n            this.hasSavedTabIndex) {\n          return;\n        }\n\n        if (element.hasAttribute('tabindex')) {\n          this._savedTabIndex = /** @type {!HTMLElement} */ (element).tabIndex;\n        }\n        element.setAttribute('tabindex', '-1');\n        if (element.nodeType === Node.ELEMENT_NODE) {\n          element.focus = function() {};\n          this._overrodeFocusMethod = true;\n        }\n      } else if (element.hasAttribute('tabindex')) {\n        this._savedTabIndex = /** @type {!HTMLElement} */ (element).tabIndex;\n        element.removeAttribute('tabindex');\n      }\n    }\n\n    /**\n     * Add another inert root to this inert node's set of managing inert roots.\n     * @param {!InertRoot} inertRoot\n     */\n    addInertRoot(inertRoot) {\n      this._throwIfDestroyed();\n      this._inertRoots.add(inertRoot);\n    }\n\n    /**\n     * Remove the given inert root from this inert node's set of managing inert roots.\n     * If the set of managing inert roots becomes empty, this node is no longer inert,\n     * so the object should be destroyed.\n     * @param {!InertRoot} inertRoot\n     */\n    removeInertRoot(inertRoot) {\n      this._throwIfDestroyed();\n      this._inertRoots.delete(inertRoot);\n      if (this._inertRoots.size === 0) {\n        this.destructor();\n      }\n    }\n  }\n\n  /**\n   * InertManager is a per-document singleton object which manages all inert roots and nodes.\n   *\n   * When an element becomes an inert root by having an `inert` attribute set and/or its `inert`\n   * property set to `true`, the `setInert` method creates an `InertRoot` object for the element.\n   * The `InertRoot` in turn registers itself as managing all of the element's focusable descendant\n   * nodes via the `register()` method. The `InertManager` ensures that a single `InertNode` instance\n   * is created for each such node, via the `_managedNodes` map.\n   */\n  class InertManager {\n    /**\n     * @param {!Document} document\n     */\n    constructor(document) {\n      if (!document) {\n        throw new Error('Missing required argument; InertManager needs to wrap a document.');\n      }\n\n      /** @type {!Document} */\n      this._document = document;\n\n      /**\n       * All managed nodes known to this InertManager. In a map to allow looking up by Node.\n       * @type {!Map<!Node, !InertNode>}\n       */\n      this._managedNodes = new Map();\n\n      /**\n       * All inert roots known to this InertManager. In a map to allow looking up by Node.\n       * @type {!Map<!Node, !InertRoot>}\n       */\n      this._inertRoots = new Map();\n\n      /**\n       * Observer for mutations on `document.body`.\n       * @type {!MutationObserver}\n       */\n      this._observer = new MutationObserver(this._watchForInert.bind(this));\n\n      // Add inert style.\n      addInertStyle(document.head || document.body || document.documentElement);\n\n      // Wait for document to be loaded.\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', this._onDocumentLoaded.bind(this));\n      } else {\n        this._onDocumentLoaded();\n      }\n    }\n\n    /**\n     * Set whether the given element should be an inert root or not.\n     * @param {!Element} root\n     * @param {boolean} inert\n     */\n    setInert(root, inert) {\n      if (inert) {\n        if (this._inertRoots.has(root)) { // element is already inert\n          return;\n        }\n\n        const inertRoot = new InertRoot(root, this);\n        root.setAttribute('inert', '');\n        this._inertRoots.set(root, inertRoot);\n        // If not contained in the document, it must be in a shadowRoot.\n        // Ensure inert styles are added there.\n        if (!this._document.body.contains(root)) {\n          let parent = root.parentNode;\n          while (parent) {\n            if (parent.nodeType === 11) {\n              addInertStyle(parent);\n            }\n            parent = parent.parentNode;\n          }\n        }\n      } else {\n        if (!this._inertRoots.has(root)) { // element is already non-inert\n          return;\n        }\n\n        const inertRoot = this._inertRoots.get(root);\n        inertRoot.destructor();\n        this._inertRoots.delete(root);\n        root.removeAttribute('inert');\n      }\n    }\n\n    /**\n     * Get the InertRoot object corresponding to the given inert root element, if any.\n     * @param {!Node} element\n     * @return {!InertRoot|undefined}\n     */\n    getInertRoot(element) {\n      return this._inertRoots.get(element);\n    }\n\n    /**\n     * Register the given InertRoot as managing the given node.\n     * In the case where the node has a previously existing inert root, this inert root will\n     * be added to its set of inert roots.\n     * @param {!Node} node\n     * @param {!InertRoot} inertRoot\n     * @return {!InertNode} inertNode\n     */\n    register(node, inertRoot) {\n      let inertNode = this._managedNodes.get(node);\n      if (inertNode !== undefined) { // node was already in an inert subtree\n        inertNode.addInertRoot(inertRoot);\n      } else {\n        inertNode = new InertNode(node, inertRoot);\n      }\n\n      this._managedNodes.set(node, inertNode);\n\n      return inertNode;\n    }\n\n    /**\n     * De-register the given InertRoot as managing the given inert node.\n     * Removes the inert root from the InertNode's set of managing inert roots, and remove the inert\n     * node from the InertManager's set of managed nodes if it is destroyed.\n     * If the node is not currently managed, this is essentially a no-op.\n     * @param {!Node} node\n     * @param {!InertRoot} inertRoot\n     * @return {?InertNode} The potentially destroyed InertNode associated with this node, if any.\n     */\n    deregister(node, inertRoot) {\n      const inertNode = this._managedNodes.get(node);\n      if (!inertNode) {\n        return null;\n      }\n\n      inertNode.removeInertRoot(inertRoot);\n      if (inertNode.destroyed) {\n        this._managedNodes.delete(node);\n      }\n\n      return inertNode;\n    }\n\n    /**\n     * Callback used when document has finished loading.\n     */\n    _onDocumentLoaded() {\n      // Find all inert roots in document and make them actually inert.\n      const inertElements = slice.call(this._document.querySelectorAll('[inert]'));\n      inertElements.forEach(function(inertElement) {\n        this.setInert(inertElement, true);\n      }, this);\n\n      // Comment this out to use programmatic API only.\n      this._observer.observe(this._document.body || this._document.documentElement, {attributes: true, subtree: true, childList: true});\n    }\n\n    /**\n     * Callback used when mutation observer detects attribute changes.\n     * @param {!Array<!MutationRecord>} records\n     * @param {!MutationObserver} self\n     */\n    _watchForInert(records, self) {\n      const _this = this;\n      records.forEach(function(record) {\n        switch (record.type) {\n        case 'childList':\n          slice.call(record.addedNodes).forEach(function(node) {\n            if (node.nodeType !== Node.ELEMENT_NODE) {\n              return;\n            }\n            const inertElements = slice.call(node.querySelectorAll('[inert]'));\n            if (matches.call(node, '[inert]')) {\n              inertElements.unshift(node);\n            }\n            inertElements.forEach(function(inertElement) {\n              this.setInert(inertElement, true);\n            }, _this);\n          }, _this);\n          break;\n        case 'attributes':\n          if (record.attributeName !== 'inert') {\n            return;\n          }\n          const target = /** @type {!Element} */ (record.target);\n          const inert = target.hasAttribute('inert');\n          _this.setInert(target, inert);\n          break;\n        }\n      }, this);\n    }\n  }\n\n  /**\n   * Recursively walk the composed tree from |node|.\n   * @param {!Node} node\n   * @param {(function (!Element))=} callback Callback to be called for each element traversed,\n   *     before descending into child nodes.\n   * @param {?ShadowRoot=} shadowRootAncestor The nearest ShadowRoot ancestor, if any.\n   */\n  function composedTreeWalk(node, callback, shadowRootAncestor) {\n    if (node.nodeType == Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */ (node);\n      if (callback) {\n        callback(element);\n      }\n\n      // Descend into node:\n      // If it has a ShadowRoot, ignore all child elements - these will be picked\n      // up by the <content> or <shadow> elements. Descend straight into the\n      // ShadowRoot.\n      const shadowRoot = /** @type {!HTMLElement} */ (element).shadowRoot;\n      if (shadowRoot) {\n        composedTreeWalk(shadowRoot, callback, shadowRoot);\n        return;\n      }\n\n      // If it is a <content> element, descend into distributed elements - these\n      // are elements from outside the shadow root which are rendered inside the\n      // shadow DOM.\n      if (element.localName == 'content') {\n        const content = /** @type {!HTMLContentElement} */ (element);\n        // Verifies if ShadowDom v0 is supported.\n        const distributedNodes = content.getDistributedNodes ?\n          content.getDistributedNodes() : [];\n        for (let i = 0; i < distributedNodes.length; i++) {\n          composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n        }\n        return;\n      }\n\n      // If it is a <slot> element, descend into assigned nodes - these\n      // are elements from outside the shadow root which are rendered inside the\n      // shadow DOM.\n      if (element.localName == 'slot') {\n        const slot = /** @type {!HTMLSlotElement} */ (element);\n        // Verify if ShadowDom v1 is supported.\n        const distributedNodes = slot.assignedNodes ?\n          slot.assignedNodes({flatten: true}) : [];\n        for (let i = 0; i < distributedNodes.length; i++) {\n          composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n        }\n        return;\n      }\n    }\n\n    // If it is neither the parent of a ShadowRoot, a <content> element, a <slot>\n    // element, nor a <shadow> element recurse normally.\n    let child = node.firstChild;\n    while (child != null) {\n      composedTreeWalk(child, callback, shadowRootAncestor);\n      child = child.nextSibling;\n    }\n  }\n\n  /**\n   * Adds a style element to the node containing the inert specific styles\n   * @param {!Node} node\n   */\n  function addInertStyle(node) {\n    if (node.querySelector('style#inert-style, link#inert-style')) {\n      return;\n    }\n    const style = document.createElement('style');\n    style.setAttribute('id', 'inert-style');\n    style.textContent = '\\n'+\n                        '[inert] {\\n' +\n                        '  pointer-events: none;\\n' +\n                        '  cursor: default;\\n' +\n                        '}\\n' +\n                        '\\n' +\n                        '[inert], [inert] * {\\n' +\n                        '  -webkit-user-select: none;\\n' +\n                        '  -moz-user-select: none;\\n' +\n                        '  -ms-user-select: none;\\n' +\n                        '  user-select: none;\\n' +\n                        '}\\n';\n    node.appendChild(style);\n  }\n\n  /** @type {!InertManager} */\n  const inertManager = new InertManager(document);\n\n  if (!Element.prototype.hasOwnProperty('inert')) {\n    Object.defineProperty(Element.prototype, 'inert', {\n      enumerable: true,\n      /** @this {!Element} */\n      get: function() {\n        return this.hasAttribute('inert');\n      },\n      /** @this {!Element} */\n      set: function(inert) {\n        inertManager.setInert(this, inert);\n      },\n    });\n  }\n})();\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    ANIMATE: 'mdc-drawer--animate',\n    CLOSING: 'mdc-drawer--closing',\n    DISMISSIBLE: 'mdc-drawer--dismissible',\n    MODAL: 'mdc-drawer--modal',\n    OPEN: 'mdc-drawer--open',\n    OPENING: 'mdc-drawer--opening',\n    ROOT: 'mdc-drawer',\n};\nvar strings = {\n    APP_CONTENT_SELECTOR: '.mdc-drawer-app-content',\n    CLOSE_EVENT: 'MDCDrawer:closed',\n    OPEN_EVENT: 'MDCDrawer:opened',\n    SCRIM_SELECTOR: '.mdc-drawer-scrim',\n};\nexport { cssClasses, strings };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from '../constants';\nvar MDCDismissibleDrawerFoundation = /** @class */ (function (_super) {\n    __extends(MDCDismissibleDrawerFoundation, _super);\n    function MDCDismissibleDrawerFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCDismissibleDrawerFoundation.defaultAdapter), adapter)) || this;\n        _this.animationFrame_ = 0;\n        _this.animationTimer_ = 0;\n        return _this;\n    }\n    Object.defineProperty(MDCDismissibleDrawerFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDismissibleDrawerFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCDismissibleDrawerFoundation, \"defaultAdapter\", {\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                elementHasClass: function () { return false; },\n                notifyClose: function () { return undefined; },\n                notifyOpen: function () { return undefined; },\n                saveFocus: function () { return undefined; },\n                restoreFocus: function () { return undefined; },\n                focusActiveNavigationItem: function () { return undefined; },\n                trapFocus: function () { return undefined; },\n                releaseFocus: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCDismissibleDrawerFoundation.prototype.destroy = function () {\n        if (this.animationFrame_) {\n            cancelAnimationFrame(this.animationFrame_);\n        }\n        if (this.animationTimer_) {\n            clearTimeout(this.animationTimer_);\n        }\n    };\n    /**\n     * Opens the drawer from the closed state.\n     */\n    MDCDismissibleDrawerFoundation.prototype.open = function () {\n        var _this = this;\n        if (this.isOpen() || this.isOpening() || this.isClosing()) {\n            return;\n        }\n        this.adapter.addClass(cssClasses.OPEN);\n        this.adapter.addClass(cssClasses.ANIMATE);\n        // Wait a frame once display is no longer \"none\", to establish basis for animation\n        this.runNextAnimationFrame_(function () {\n            _this.adapter.addClass(cssClasses.OPENING);\n        });\n        this.adapter.saveFocus();\n    };\n    /**\n     * Closes the drawer from the open state.\n     */\n    MDCDismissibleDrawerFoundation.prototype.close = function () {\n        if (!this.isOpen() || this.isOpening() || this.isClosing()) {\n            return;\n        }\n        this.adapter.addClass(cssClasses.CLOSING);\n    };\n    /**\n     * Returns true if the drawer is in the open position.\n     * @return true if drawer is in open state.\n     */\n    MDCDismissibleDrawerFoundation.prototype.isOpen = function () {\n        return this.adapter.hasClass(cssClasses.OPEN);\n    };\n    /**\n     * Returns true if the drawer is animating open.\n     * @return true if drawer is animating open.\n     */\n    MDCDismissibleDrawerFoundation.prototype.isOpening = function () {\n        return this.adapter.hasClass(cssClasses.OPENING) ||\n            this.adapter.hasClass(cssClasses.ANIMATE);\n    };\n    /**\n     * Returns true if the drawer is animating closed.\n     * @return true if drawer is animating closed.\n     */\n    MDCDismissibleDrawerFoundation.prototype.isClosing = function () {\n        return this.adapter.hasClass(cssClasses.CLOSING);\n    };\n    /**\n     * Keydown handler to close drawer when key is escape.\n     */\n    MDCDismissibleDrawerFoundation.prototype.handleKeydown = function (evt) {\n        var keyCode = evt.keyCode, key = evt.key;\n        var isEscape = key === 'Escape' || keyCode === 27;\n        if (isEscape) {\n            this.close();\n        }\n    };\n    /**\n     * Handles the `transitionend` event when the drawer finishes opening/closing.\n     */\n    MDCDismissibleDrawerFoundation.prototype.handleTransitionEnd = function (evt) {\n        var OPENING = cssClasses.OPENING, CLOSING = cssClasses.CLOSING, OPEN = cssClasses.OPEN, ANIMATE = cssClasses.ANIMATE, ROOT = cssClasses.ROOT;\n        // In Edge, transitionend on ripple pseudo-elements yields a target without classList, so check for Element first.\n        var isRootElement = this.isElement_(evt.target) &&\n            this.adapter.elementHasClass(evt.target, ROOT);\n        if (!isRootElement) {\n            return;\n        }\n        if (this.isClosing()) {\n            this.adapter.removeClass(OPEN);\n            this.closed_();\n            this.adapter.restoreFocus();\n            this.adapter.notifyClose();\n        }\n        else {\n            this.adapter.focusActiveNavigationItem();\n            this.opened_();\n            this.adapter.notifyOpen();\n        }\n        this.adapter.removeClass(ANIMATE);\n        this.adapter.removeClass(OPENING);\n        this.adapter.removeClass(CLOSING);\n    };\n    /**\n     * Extension point for when drawer finishes open animation.\n     */\n    MDCDismissibleDrawerFoundation.prototype.opened_ = function () { }; // tslint:disable-line:no-empty\n    /**\n     * Extension point for when drawer finishes close animation.\n     */\n    MDCDismissibleDrawerFoundation.prototype.closed_ = function () { }; // tslint:disable-line:no-empty\n    /**\n     * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n     */\n    MDCDismissibleDrawerFoundation.prototype.runNextAnimationFrame_ = function (callback) {\n        var _this = this;\n        cancelAnimationFrame(this.animationFrame_);\n        this.animationFrame_ = requestAnimationFrame(function () {\n            _this.animationFrame_ = 0;\n            clearTimeout(_this.animationTimer_);\n            _this.animationTimer_ = setTimeout(callback, 0);\n        });\n    };\n    MDCDismissibleDrawerFoundation.prototype.isElement_ = function (element) {\n        // In Edge, transitionend on ripple pseudo-elements yields a target without classList.\n        return Boolean(element.classList);\n    };\n    return MDCDismissibleDrawerFoundation;\n}(MDCFoundation));\nexport { MDCDismissibleDrawerFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCDismissibleDrawerFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCDismissibleDrawerFoundation } from '../dismissible/foundation';\n/* istanbul ignore next: subclass is not a branch statement */\nvar MDCModalDrawerFoundation = /** @class */ (function (_super) {\n    __extends(MDCModalDrawerFoundation, _super);\n    function MDCModalDrawerFoundation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Handles click event on scrim.\n     */\n    MDCModalDrawerFoundation.prototype.handleScrimClick = function () {\n        this.close();\n    };\n    /**\n     * Called when drawer finishes open animation.\n     */\n    MDCModalDrawerFoundation.prototype.opened_ = function () {\n        this.adapter.trapFocus();\n    };\n    /**\n     * Called when drawer finishes close animation.\n     */\n    MDCModalDrawerFoundation.prototype.closed_ = function () {\n        this.adapter.releaseFocus();\n    };\n    return MDCModalDrawerFoundation;\n}(MDCDismissibleDrawerFoundation));\nexport { MDCModalDrawerFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCModalDrawerFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/ // tslint:disable:no-any\n/**\n * Specifies an observer callback that is run when the decorated property\n * changes. The observer receives the current and old value as arguments.\n */\nexport const observer = (observer) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(proto, propName) => {\n    // if we haven't wrapped `updated` in this class, do so\n    if (!proto.constructor\n        ._observers) {\n        proto.constructor._observers = new Map();\n        const userUpdated = proto.updated;\n        proto.updated = function (changedProperties) {\n            userUpdated.call(this, changedProperties);\n            changedProperties.forEach((v, k) => {\n                const observers = this.constructor\n                    ._observers;\n                const observer = observers.get(k);\n                if (observer !== undefined) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    observer.call(this, this[k], v);\n                }\n            });\n        };\n        // clone any existing observers (superclasses)\n    }\n    else if (!proto.constructor.hasOwnProperty('_observers')) {\n        const observers = proto.constructor._observers;\n        proto.constructor._observers = new Map();\n        observers.forEach(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (v, k) => proto.constructor._observers.set(k, v));\n    }\n    // set this method\n    proto.constructor._observers.set(propName, observer);\n};\n//# sourceMappingURL=observer.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { __decorate } from \"tslib\";\n// Note this blocking-elements import is not redundant with the one below,\n// because we need to ensure we import this module at runtime for its\n// side-effects. See\n// https://github.com/Microsoft/TypeScript/wiki/FAQ#why-are-imports-being-elided-in-my-emit.\nimport 'blocking-elements';\nimport 'wicg-inert';\nimport { strings } from '@material/drawer/constants.js';\nimport MDCDismissibleDrawerFoundation from '@material/drawer/dismissible/foundation.js';\nimport MDCModalDrawerFoundation from '@material/drawer/modal/foundation.js';\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { html, property, query } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map.js';\nconst blockingElements = document.$blockingElements;\nexport class DrawerBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this._previousFocus = null;\n        this.open = false;\n        this.hasHeader = false;\n        this.type = '';\n    }\n    get mdcFoundationClass() {\n        return this.type === 'modal' ? MDCModalDrawerFoundation :\n            MDCDismissibleDrawerFoundation;\n    }\n    createAdapter() {\n        return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), { elementHasClass: (element, className) => element.classList.contains(className), saveFocus: () => {\n                // Note, casting to avoid cumbersome runtime check.\n                this._previousFocus =\n                    this.getRootNode().activeElement;\n            }, restoreFocus: () => {\n                const previousFocus = this._previousFocus && this._previousFocus.focus;\n                if (previousFocus) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    this._previousFocus.focus();\n                }\n            }, notifyClose: () => {\n                this.open = false;\n                this.dispatchEvent(new Event(strings.CLOSE_EVENT, { bubbles: true, cancelable: true }));\n            }, notifyOpen: () => {\n                this.open = true;\n                this.dispatchEvent(new Event(strings.OPEN_EVENT, { bubbles: true, cancelable: true }));\n            }, focusActiveNavigationItem: () => { }, trapFocus: () => {\n                blockingElements.push(this);\n                this.appContent.inert = true;\n            }, releaseFocus: () => {\n                blockingElements.remove(this);\n                this.appContent.inert = false;\n            } });\n    }\n    _handleScrimClick() {\n        if (this.mdcFoundation instanceof MDCModalDrawerFoundation) {\n            this.mdcFoundation.handleScrimClick();\n        }\n    }\n    render() {\n        const dismissible = this.type === 'dismissible' || this.type === 'modal';\n        const modal = this.type === 'modal';\n        const header = this.hasHeader ? html `\n      <div class=\"mdc-drawer__header\">\n        <h3 class=\"mdc-drawer__title\"><slot name=\"title\"></slot></h3>\n        <h6 class=\"mdc-drawer__subtitle\"><slot name=\"subtitle\"></slot></h6>\n        <slot name=\"header\"></slot>\n      </div>\n      ` :\n            '';\n        const classes = {\n            'mdc-drawer--dismissible': dismissible,\n            'mdc-drawer--modal': modal,\n        };\n        return html `\n      <aside class=\"mdc-drawer ${classMap(classes)}\">\n        ${header}\n        <div class=\"mdc-drawer__content\"><slot></slot></div>\n      </aside>\n      ${modal ? html `<div class=\"mdc-drawer-scrim\"\n                          @click=\"${this._handleScrimClick}\"></div>` :\n            ''}\n      <div class=\"mdc-drawer-app-content\">\n        <slot name=\"appContent\"></slot>\n      </div>\n      `;\n    }\n    // note, we avoid calling `super.firstUpdated()` to control when\n    // `createFoundation()` is called.\n    firstUpdated() {\n        this.mdcRoot.addEventListener('keydown', (e) => this.mdcFoundation.handleKeydown(e));\n        this.mdcRoot.addEventListener('transitionend', (e) => this.mdcFoundation.handleTransitionEnd(e));\n    }\n    updated(changedProperties) {\n        if (changedProperties.has('type')) {\n            this.createFoundation();\n        }\n    }\n}\n__decorate([\n    query('.mdc-drawer')\n], DrawerBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('.mdc-drawer-app-content')\n], DrawerBase.prototype, \"appContent\", void 0);\n__decorate([\n    observer(function (value) {\n        if (this.type === '') {\n            return;\n        }\n        if (value) {\n            this.mdcFoundation.open();\n        }\n        else {\n            this.mdcFoundation.close();\n        }\n    }),\n    property({ type: Boolean, reflect: true })\n], DrawerBase.prototype, \"open\", void 0);\n__decorate([\n    property({ type: Boolean })\n], DrawerBase.prototype, \"hasHeader\", void 0);\n__decorate([\n    property({ reflect: true })\n], DrawerBase.prototype, \"type\", void 0);\n//# sourceMappingURL=mwc-drawer-base.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `.mdc-drawer{border-color:rgba(0,0,0,.12);background-color:#fff;border-top-left-radius:0;border-top-right-radius:0;border-top-right-radius:var(--mdc-shape-large, 0);border-bottom-right-radius:0;border-bottom-right-radius:var(--mdc-shape-large, 0);border-bottom-left-radius:0;z-index:6;width:256px;display:flex;flex-direction:column;flex-shrink:0;box-sizing:border-box;height:100%;border-right-width:1px;border-right-style:solid;overflow:hidden;transition-property:transform;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.mdc-drawer .mdc-drawer__title{color:rgba(0,0,0,.87)}.mdc-drawer .mdc-list-group__subheader{color:rgba(0,0,0,.6)}.mdc-drawer .mdc-drawer__subtitle{color:rgba(0,0,0,.6)}.mdc-drawer .mdc-list-item__graphic{color:rgba(0,0,0,.6)}.mdc-drawer .mdc-list-item{color:rgba(0,0,0,.87)}.mdc-drawer .mdc-list-item--activated .mdc-list-item__graphic{color:#6200ee}.mdc-drawer .mdc-list-item--activated{color:rgba(98,0,238,.87)}[dir=rtl] .mdc-drawer,.mdc-drawer[dir=rtl]{border-top-left-radius:0;border-top-left-radius:var(--mdc-shape-large, 0);border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:0;border-bottom-left-radius:var(--mdc-shape-large, 0)}.mdc-drawer .mdc-list-item{border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-drawer.mdc-drawer--open:not(.mdc-drawer--closing)+.mdc-drawer-app-content{margin-left:256px;margin-right:0}[dir=rtl] .mdc-drawer.mdc-drawer--open:not(.mdc-drawer--closing)+.mdc-drawer-app-content,.mdc-drawer.mdc-drawer--open:not(.mdc-drawer--closing)+.mdc-drawer-app-content[dir=rtl]{margin-left:0;margin-right:256px}[dir=rtl] .mdc-drawer,.mdc-drawer[dir=rtl]{border-right-width:0;border-left-width:1px;border-right-style:none;border-left-style:solid}.mdc-drawer .mdc-list-item{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.875rem;font-size:var(--mdc-typography-subtitle2-font-size, 0.875rem);line-height:1.375rem;line-height:var(--mdc-typography-subtitle2-line-height, 1.375rem);font-weight:500;font-weight:var(--mdc-typography-subtitle2-font-weight, 500);letter-spacing:0.0071428571em;letter-spacing:var(--mdc-typography-subtitle2-letter-spacing, 0.0071428571em);text-decoration:inherit;text-decoration:var(--mdc-typography-subtitle2-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-subtitle2-text-transform, inherit);height:calc(48px - 2 * 4px);margin:8px 8px;padding:0 8px}.mdc-drawer .mdc-list-item:nth-child(1){margin-top:2px}.mdc-drawer .mdc-list-item:nth-last-child(1){margin-bottom:0}.mdc-drawer .mdc-list-group__subheader{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.875rem;font-size:var(--mdc-typography-body2-font-size, 0.875rem);line-height:1.25rem;line-height:var(--mdc-typography-body2-line-height, 1.25rem);font-weight:400;font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:0.0178571429em;letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:inherit;text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-body2-text-transform, inherit);display:block;margin-top:0;line-height:normal;margin:0;padding:0 16px}.mdc-drawer .mdc-list-group__subheader::before{display:inline-block;width:0;height:24px;content:\"\";vertical-align:0}.mdc-drawer .mdc-list-divider{margin:3px 0 4px}.mdc-drawer .mdc-list-item__text,.mdc-drawer .mdc-list-item__graphic{pointer-events:none}.mdc-drawer--animate{transform:translateX(-100%)}[dir=rtl] .mdc-drawer--animate,.mdc-drawer--animate[dir=rtl]{transform:translateX(100%)}.mdc-drawer--opening{transform:translateX(0);transition-duration:250ms}[dir=rtl] .mdc-drawer--opening,.mdc-drawer--opening[dir=rtl]{transform:translateX(0)}.mdc-drawer--closing{transform:translateX(-100%);transition-duration:200ms}[dir=rtl] .mdc-drawer--closing,.mdc-drawer--closing[dir=rtl]{transform:translateX(100%)}.mdc-drawer__header{flex-shrink:0;box-sizing:border-box;min-height:64px;padding:0 16px 4px}.mdc-drawer__title{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:1.25rem;font-size:var(--mdc-typography-headline6-font-size, 1.25rem);line-height:2rem;line-height:var(--mdc-typography-headline6-line-height, 2rem);font-weight:500;font-weight:var(--mdc-typography-headline6-font-weight, 500);letter-spacing:0.0125em;letter-spacing:var(--mdc-typography-headline6-letter-spacing, 0.0125em);text-decoration:inherit;text-decoration:var(--mdc-typography-headline6-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-headline6-text-transform, inherit);display:block;margin-top:0;line-height:normal;margin-bottom:-20px}.mdc-drawer__title::before{display:inline-block;width:0;height:36px;content:\"\";vertical-align:0}.mdc-drawer__title::after{display:inline-block;width:0;height:20px;content:\"\";vertical-align:-20px}.mdc-drawer__subtitle{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.875rem;font-size:var(--mdc-typography-body2-font-size, 0.875rem);line-height:1.25rem;line-height:var(--mdc-typography-body2-line-height, 1.25rem);font-weight:400;font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:0.0178571429em;letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:inherit;text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-body2-text-transform, inherit);display:block;margin-top:0;line-height:normal;margin-bottom:0}.mdc-drawer__subtitle::before{display:inline-block;width:0;height:20px;content:\"\";vertical-align:0}.mdc-drawer__content{height:100%;overflow-y:auto;-webkit-overflow-scrolling:touch}.mdc-drawer--dismissible{left:0;right:initial;display:none;position:absolute}[dir=rtl] .mdc-drawer--dismissible,.mdc-drawer--dismissible[dir=rtl]{left:initial;right:0}.mdc-drawer--dismissible.mdc-drawer--open{display:flex}.mdc-drawer-app-content{margin-left:0;margin-right:0;position:relative}[dir=rtl] .mdc-drawer-app-content,.mdc-drawer-app-content[dir=rtl]{margin-left:0;margin-right:0}.mdc-drawer--modal{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0,0,0,.12);left:0;right:initial;display:none;position:fixed}.mdc-drawer--modal+.mdc-drawer-scrim{background-color:rgba(0,0,0,.32)}[dir=rtl] .mdc-drawer--modal,.mdc-drawer--modal[dir=rtl]{left:initial;right:0}.mdc-drawer--modal.mdc-drawer--open{display:flex}.mdc-drawer-scrim{display:none;position:fixed;top:0;left:0;width:100%;height:100%;z-index:5;transition-property:opacity;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1)}.mdc-drawer--open+.mdc-drawer-scrim{display:block}.mdc-drawer--animate+.mdc-drawer-scrim{opacity:0}.mdc-drawer--opening+.mdc-drawer-scrim{transition-duration:250ms;opacity:1}.mdc-drawer--closing+.mdc-drawer-scrim{transition-duration:200ms;opacity:0}.mdc-drawer-app-content{overflow:auto;flex:1}:host{display:flex;height:100%}.mdc-drawer{width:256px;width:var(--mdc-drawer-width, 256px)}.mdc-drawer.mdc-drawer--open:not(.mdc-drawer--closing)+.mdc-drawer-app-content{margin-left:256px;margin-left:var(--mdc-drawer-width, 256px);margin-right:0}[dir=rtl] .mdc-drawer.mdc-drawer--open:not(.mdc-drawer--closing)+.mdc-drawer-app-content,.mdc-drawer.mdc-drawer--open:not(.mdc-drawer--closing)+.mdc-drawer-app-content[dir=rtl]{margin-left:0;margin-right:256px;margin-right:var(--mdc-drawer-width, 256px)}`;\n//# sourceMappingURL=mwc-drawer-css.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { customElement } from 'lit-element';\nimport { DrawerBase } from './mwc-drawer-base.js';\nimport { style } from './mwc-drawer-css.js';\nlet Drawer = class Drawer extends DrawerBase {\n};\nDrawer.styles = style;\nDrawer = __decorate([\n    customElement('mwc-drawer')\n], Drawer);\nexport { Drawer };\n//# sourceMappingURL=mwc-drawer.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    ACTIVE: 'mdc-tab-indicator--active',\n    FADE: 'mdc-tab-indicator--fade',\n    NO_TRANSITION: 'mdc-tab-indicator--no-transition',\n};\nvar strings = {\n    CONTENT_SELECTOR: '.mdc-tab-indicator__content',\n};\nexport { cssClasses, strings, };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar MDCTabIndicatorFoundation = /** @class */ (function (_super) {\n    __extends(MDCTabIndicatorFoundation, _super);\n    function MDCTabIndicatorFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCTabIndicatorFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCTabIndicatorFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTabIndicatorFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTabIndicatorFoundation, \"defaultAdapter\", {\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                computeContentClientRect: function () { return ({ top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 }); },\n                setContentStyleProperty: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCTabIndicatorFoundation.prototype.computeContentClientRect = function () {\n        return this.adapter.computeContentClientRect();\n    };\n    return MDCTabIndicatorFoundation;\n}(MDCFoundation));\nexport { MDCTabIndicatorFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabIndicatorFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCTabIndicatorFoundation } from './foundation';\n/* istanbul ignore next: subclass is not a branch statement */\nvar MDCFadingTabIndicatorFoundation = /** @class */ (function (_super) {\n    __extends(MDCFadingTabIndicatorFoundation, _super);\n    function MDCFadingTabIndicatorFoundation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCFadingTabIndicatorFoundation.prototype.activate = function () {\n        this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    };\n    MDCFadingTabIndicatorFoundation.prototype.deactivate = function () {\n        this.adapter.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    };\n    return MDCFadingTabIndicatorFoundation;\n}(MDCTabIndicatorFoundation));\nexport { MDCFadingTabIndicatorFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCFadingTabIndicatorFoundation;\n//# sourceMappingURL=fading-foundation.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCTabIndicatorFoundation } from './foundation';\n/* istanbul ignore next: subclass is not a branch statement */\nvar MDCSlidingTabIndicatorFoundation = /** @class */ (function (_super) {\n    __extends(MDCSlidingTabIndicatorFoundation, _super);\n    function MDCSlidingTabIndicatorFoundation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCSlidingTabIndicatorFoundation.prototype.activate = function (previousIndicatorClientRect) {\n        // Early exit if no indicator is present to handle cases where an indicator\n        // may be activated without a prior indicator state\n        if (!previousIndicatorClientRect) {\n            this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n            return;\n        }\n        // This animation uses the FLIP approach. You can read more about it at the link below:\n        // https://aerotwist.com/blog/flip-your-animations/\n        // Calculate the dimensions based on the dimensions of the previous indicator\n        var currentClientRect = this.computeContentClientRect();\n        var widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n        var xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n        this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n        this.adapter.setContentStyleProperty('transform', \"translateX(\" + xPosition + \"px) scaleX(\" + widthDelta + \")\");\n        // Force repaint before updating classes and transform to ensure the transform properly takes effect\n        this.computeContentClientRect();\n        this.adapter.removeClass(MDCTabIndicatorFoundation.cssClasses.NO_TRANSITION);\n        this.adapter.addClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n        this.adapter.setContentStyleProperty('transform', '');\n    };\n    MDCSlidingTabIndicatorFoundation.prototype.deactivate = function () {\n        this.adapter.removeClass(MDCTabIndicatorFoundation.cssClasses.ACTIVE);\n    };\n    return MDCSlidingTabIndicatorFoundation;\n}(MDCTabIndicatorFoundation));\nexport { MDCSlidingTabIndicatorFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCSlidingTabIndicatorFoundation;\n//# sourceMappingURL=sliding-foundation.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element.js';\nimport MDCFadingTabIndicatorFoundation from '@material/tab-indicator/fading-foundation.js';\nimport MDCSlidingTabIndicatorFoundation from '@material/tab-indicator/sliding-foundation.js';\nimport { html, property, query } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map.js';\nexport class TabIndicatorBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this.icon = '';\n        this.fade = false;\n    }\n    get mdcFoundationClass() {\n        return this.fade ? MDCFadingTabIndicatorFoundation :\n            MDCSlidingTabIndicatorFoundation;\n    }\n    render() {\n        const contentClasses = {\n            'mdc-tab-indicator__content--icon': this.icon,\n            'material-icons': this.icon,\n            'mdc-tab-indicator__content--underline': !this.icon,\n        };\n        return html `\n      <span class=\"mdc-tab-indicator ${classMap({\n            'mdc-tab-indicator--fade': this.fade\n        })}\">\n        <span class=\"mdc-tab-indicator__content ${classMap(contentClasses)}\">${this.icon}</span>\n      </span>\n      `;\n    }\n    updated(changedProperties) {\n        if (changedProperties.has('fade')) {\n            this.createFoundation();\n        }\n    }\n    createAdapter() {\n        return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), { computeContentClientRect: () => this.contentElement.getBoundingClientRect(), setContentStyleProperty: (prop, value) => this.contentElement.style.setProperty(prop, value) });\n    }\n    computeContentClientRect() {\n        return this.mdcFoundation.computeContentClientRect();\n    }\n    activate(previousIndicatorClientRect) {\n        this.mdcFoundation.activate(previousIndicatorClientRect);\n    }\n    deactivate() {\n        this.mdcFoundation.deactivate();\n    }\n}\n__decorate([\n    query('.mdc-tab-indicator')\n], TabIndicatorBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('.mdc-tab-indicator__content')\n], TabIndicatorBase.prototype, \"contentElement\", void 0);\n__decorate([\n    property()\n], TabIndicatorBase.prototype, \"icon\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TabIndicatorBase.prototype, \"fade\", void 0);\n//# sourceMappingURL=mwc-tab-indicator-base.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `.material-icons{font-family:var(--mdc-icon-font, \"Material Icons\");font-weight:normal;font-style:normal;font-size:var(--mdc-icon-size, 24px);line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\"}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator .mdc-tab-indicator__content--underline{border-color:#6200ee;border-color:var(--mdc-theme-primary, #6200ee)}.mdc-tab-indicator .mdc-tab-indicator__content--icon{color:#018786;color:var(--mdc-theme-secondary, #018786)}.mdc-tab-indicator .mdc-tab-indicator__content--underline{border-top-width:2px}.mdc-tab-indicator .mdc-tab-indicator__content--icon{height:34px;font-size:34px}.mdc-tab-indicator__content{transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator__content--icon{align-self:center;margin:0 auto}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}.mdc-tab-indicator .mdc-tab-indicator__content{transition:250ms transform cubic-bezier(0.4, 0, 0.2, 1)}.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition:150ms opacity linear}.mdc-tab-indicator--active.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition-delay:100ms}`;\n//# sourceMappingURL=mwc-tab-indicator-css.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { customElement } from 'lit-element';\nimport { TabIndicatorBase } from './mwc-tab-indicator-base.js';\nimport { style } from './mwc-tab-indicator-css.js';\nlet TabIndicator = class TabIndicator extends TabIndicatorBase {\n};\nTabIndicator.styles = style;\nTabIndicator = __decorate([\n    customElement('mwc-tab-indicator')\n], TabIndicator);\nexport { TabIndicator };\n//# sourceMappingURL=mwc-tab-indicator.js.map","/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Determine whether the current browser supports passive event listeners, and\n * if so, use them.\n */\nexport function applyPassive(globalObj) {\n    if (globalObj === void 0) { globalObj = window; }\n    return supportsPassiveOption(globalObj) ?\n        { passive: true } :\n        false;\n}\nfunction supportsPassiveOption(globalObj) {\n    if (globalObj === void 0) { globalObj = window; }\n    // See\n    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n    var passiveSupported = false;\n    try {\n        var options = {\n            // This function will be called when the browser\n            // attempts to access the passive property.\n            get passive() {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        var handler = function () { };\n        globalObj.document.addEventListener('test', handler, options);\n        globalObj.document.removeEventListener('test', handler, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n    return passiveSupported;\n}\n//# sourceMappingURL=events.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}`;\n//# sourceMappingURL=mwc-ripple-global-css.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { applyPassive } from '@material/dom/events';\nimport { matches } from '@material/dom/ponyfill';\nimport MDCRippleFoundation from '@material/ripple/foundation.js';\nimport { supportsCssVariables } from '@material/ripple/util.js';\nimport { directive, noChange, NodePart, templateFactory } from 'lit-html';\nimport { style } from './mwc-ripple-global-css.js';\nconst supportsCssVariablesWin = supportsCssVariables(window);\n/**\n * force the ripple directive to share API names with `mwc-ripple` after Closure\n * Compiler.\n */\nclass RippleIntermediate {\n    constructor(foundation) {\n        this.foundation = foundation;\n    }\n    startPress() {\n        this.foundation.activate();\n    }\n    endPress() {\n        this.foundation.deactivate();\n    }\n    startFocus() {\n        this.foundation.handleFocus();\n    }\n    endFocus() {\n        this.foundation.handleBlur();\n    }\n    destroy() {\n        this.foundation.destroy();\n    }\n    setUnbounded(value) {\n        this.foundation.setUnbounded(value);\n    }\n}\n// NOTE: This is a workaround for\n// https://bugs.webkit.org/show_bug.cgi?id=173027. Since keyframes on\n// pseudo-elements (:after) are not supported in Shadow DOM, we put the keyframe\n// style into the <head> element.\nconst isSafari = navigator.userAgent.match(/Safari/);\nlet didApplyRippleStyle = false;\nconst applyRippleStyle = () => {\n    didApplyRippleStyle = true;\n    const styleElement = document.createElement('style');\n    const part = new NodePart({ templateFactory });\n    part.appendInto(styleElement);\n    part.setValue(style);\n    part.commit();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    document.head.appendChild(styleElement);\n};\n/**\n * Applied a ripple to the node specified by {surfaceNode}.\n * @param options {RippleNodeOptions}\n */\nexport const rippleNode = (options) => {\n    if (isSafari && !didApplyRippleStyle) {\n        applyRippleStyle();\n    }\n    // TODO(sorvell): This directive requires bringing css yourself. We probably\n    // need to do this because of ShadyCSS, but on Safari, the keyframes styling\n    // must be global. Perhaps this directive could fix that.\n    const surfaceNode = options.surfaceNode;\n    const interactionNode = options.interactionNode || surfaceNode;\n    // only style interaction node if not in the same root\n    if (interactionNode.getRootNode() !== surfaceNode.getRootNode()) {\n        if (interactionNode.style.position === '') {\n            interactionNode.style.position = 'relative';\n        }\n    }\n    const adapter = {\n        browserSupportsCssVars: () => supportsCssVariablesWin,\n        isUnbounded: () => options.unbounded === undefined ? true : options.unbounded,\n        isSurfaceActive: () => matches(interactionNode, ':active'),\n        isSurfaceDisabled: () => Boolean(interactionNode.hasAttribute('disabled')),\n        addClass: (className) => surfaceNode.classList.add(className),\n        removeClass: (className) => surfaceNode.classList.remove(className),\n        containsEventTarget: (target) => interactionNode.contains(target),\n        registerInteractionHandler: (type, handler) => interactionNode.addEventListener(type, handler, applyPassive()),\n        deregisterInteractionHandler: (type, handler) => interactionNode.removeEventListener(type, handler, applyPassive()),\n        registerDocumentInteractionHandler: (evtType, handler) => \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        document.documentElement.addEventListener(evtType, handler, applyPassive()),\n        deregisterDocumentInteractionHandler: (evtType, handler) => \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        document.documentElement.removeEventListener(evtType, handler, applyPassive()),\n        registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n        deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n        updateCssVariable: (varName, value) => surfaceNode.style.setProperty(varName, value),\n        computeBoundingRect: () => surfaceNode.getBoundingClientRect(),\n        getWindowPageOffset: () => ({ x: window.pageXOffset, y: window.pageYOffset }),\n    };\n    const rippleFoundation = new MDCRippleFoundation(adapter);\n    rippleFoundation.init();\n    return new RippleIntermediate(rippleFoundation);\n};\nconst rippleInteractionNodes = new WeakMap();\n/**\n * A directive that applies a Material ripple to a part node. The directive\n * should be applied to a PropertyPart.\n * @param options {RippleOptions}\n */\nexport const ripple = directive((options = {}) => (part) => {\n    const surfaceNode = part.committer.element;\n    const interactionNode = options.interactionNode || surfaceNode;\n    let rippleFoundation = part.value;\n    // if the interaction node changes, destroy and invalidate the foundation.\n    const existingInteractionNode = rippleInteractionNodes.get(rippleFoundation);\n    if (existingInteractionNode !== undefined &&\n        existingInteractionNode !== interactionNode) {\n        rippleFoundation.destroy();\n        rippleFoundation = noChange;\n    }\n    // make the ripple, if needed\n    if (rippleFoundation === noChange) {\n        rippleFoundation =\n            rippleNode(Object.assign({}, options, { surfaceNode }));\n        rippleInteractionNodes.set(rippleFoundation, interactionNode);\n        part.setValue(rippleFoundation);\n        // otherwise update settings as needed.\n    }\n    else {\n        if (options.unbounded !== undefined) {\n            rippleFoundation\n                .setUnbounded(options.unbounded);\n        }\n        if (options.disabled !== undefined) {\n            rippleFoundation\n                .setUnbounded(options.disabled);\n        }\n    }\n    if (options.active === true) {\n        rippleFoundation.startPress();\n    }\n    else if (options.active === false) {\n        rippleFoundation.endPress();\n    }\n});\n//# sourceMappingURL=ripple-directive.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    ACTIVE: 'mdc-tab--active',\n};\nvar strings = {\n    ARIA_SELECTED: 'aria-selected',\n    CONTENT_SELECTOR: '.mdc-tab__content',\n    INTERACTED_EVENT: 'MDCTab:interacted',\n    RIPPLE_SELECTOR: '.mdc-tab__ripple',\n    TABINDEX: 'tabIndex',\n    TAB_INDICATOR_SELECTOR: '.mdc-tab-indicator',\n};\nexport { cssClasses, strings, };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nvar MDCTabFoundation = /** @class */ (function (_super) {\n    __extends(MDCTabFoundation, _super);\n    function MDCTabFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCTabFoundation.defaultAdapter), adapter)) || this;\n        _this.focusOnActivate_ = true;\n        return _this;\n    }\n    Object.defineProperty(MDCTabFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTabFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTabFoundation, \"defaultAdapter\", {\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                hasClass: function () { return false; },\n                setAttr: function () { return undefined; },\n                activateIndicator: function () { return undefined; },\n                deactivateIndicator: function () { return undefined; },\n                notifyInteracted: function () { return undefined; },\n                getOffsetLeft: function () { return 0; },\n                getOffsetWidth: function () { return 0; },\n                getContentOffsetLeft: function () { return 0; },\n                getContentOffsetWidth: function () { return 0; },\n                focus: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCTabFoundation.prototype.handleClick = function () {\n        // It's up to the parent component to keep track of the active Tab and\n        // ensure we don't activate a Tab that's already active.\n        this.adapter.notifyInteracted();\n    };\n    MDCTabFoundation.prototype.isActive = function () {\n        return this.adapter.hasClass(cssClasses.ACTIVE);\n    };\n    /**\n     * Sets whether the tab should focus itself when activated\n     */\n    MDCTabFoundation.prototype.setFocusOnActivate = function (focusOnActivate) {\n        this.focusOnActivate_ = focusOnActivate;\n    };\n    /**\n     * Activates the Tab\n     */\n    MDCTabFoundation.prototype.activate = function (previousIndicatorClientRect) {\n        this.adapter.addClass(cssClasses.ACTIVE);\n        this.adapter.setAttr(strings.ARIA_SELECTED, 'true');\n        this.adapter.setAttr(strings.TABINDEX, '0');\n        this.adapter.activateIndicator(previousIndicatorClientRect);\n        if (this.focusOnActivate_) {\n            this.adapter.focus();\n        }\n    };\n    /**\n     * Deactivates the Tab\n     */\n    MDCTabFoundation.prototype.deactivate = function () {\n        // Early exit\n        if (!this.isActive()) {\n            return;\n        }\n        this.adapter.removeClass(cssClasses.ACTIVE);\n        this.adapter.setAttr(strings.ARIA_SELECTED, 'false');\n        this.adapter.setAttr(strings.TABINDEX, '-1');\n        this.adapter.deactivateIndicator();\n    };\n    /**\n     * Returns the dimensions of the Tab\n     */\n    MDCTabFoundation.prototype.computeDimensions = function () {\n        var rootWidth = this.adapter.getOffsetWidth();\n        var rootLeft = this.adapter.getOffsetLeft();\n        var contentWidth = this.adapter.getContentOffsetWidth();\n        var contentLeft = this.adapter.getContentOffsetLeft();\n        return {\n            contentLeft: rootLeft + contentLeft,\n            contentRight: rootLeft + contentLeft + contentWidth,\n            rootLeft: rootLeft,\n            rootRight: rootLeft + rootWidth,\n        };\n    };\n    return MDCTabFoundation;\n}(MDCFoundation));\nexport { MDCTabFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabFoundation;\n//# sourceMappingURL=foundation.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n// Make TypeScript not remove the import.\nimport '@material/mwc-tab-indicator';\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { ripple } from '@material/mwc-ripple/ripple-directive';\nimport MDCTabFoundation from '@material/tab/foundation';\nimport { html, property, query } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map.js';\n// used for generating unique id for each tab\nlet tabIdCounter = 0;\nexport class TabBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this.mdcFoundationClass = MDCTabFoundation;\n        this.label = '';\n        this.icon = '';\n        this.hasImageIcon = false;\n        this.isFadingIndicator = false;\n        this.minWidth = false;\n        this.isMinWidthIndicator = false;\n        this.indicatorIcon = '';\n        this.stacked = false;\n        this.focusOnActivate = true;\n        this._active = false;\n        this.initFocus = false;\n    }\n    get active() {\n        return this._active;\n    }\n    _handleClick() {\n        this.mdcFoundation.handleClick();\n    }\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open', delegatesFocus: true });\n    }\n    connectedCallback() {\n        this.dir = document.dir;\n        super.connectedCallback();\n    }\n    firstUpdated() {\n        super.firstUpdated();\n        // create an unique id\n        this.id = this.id || `mdc-tab-${++tabIdCounter}`;\n    }\n    render() {\n        const classes = {\n            'mdc-tab--min-width': this.minWidth,\n            'mdc-tab--stacked': this.stacked,\n        };\n        let iconTemplate = html ``;\n        if (this.hasImageIcon || this.icon) {\n            // NOTE: MUST be on same line as spaces will cause vert alignment issues\n            // in IE\n            iconTemplate = html `\n        <span class=\"mdc-tab__icon material-icons\"><slot name=\"icon\">${this.icon}</slot></span>`;\n        }\n        let labelTemplate = html ``;\n        if (this.label) {\n            labelTemplate = html `\n        <span class=\"mdc-tab__text-label\">${this.label}</span>`;\n        }\n        const rippleDirective = ripple({\n            interactionNode: this,\n            unbounded: false,\n        });\n        return html `\n      <button\n        @click=\"${this._handleClick}\"\n        class=\"mdc-tab ${classMap(classes)}\"\n        role=\"tab\"\n        aria-selected=\"false\"\n        tabindex=\"-1\">\n        <span class=\"mdc-tab__content\">\n          ${iconTemplate}\n          ${labelTemplate}\n          ${this.isMinWidthIndicator ? this.renderIndicator() : ''}\n        </span>\n        ${this.isMinWidthIndicator ? '' : this.renderIndicator()}\n        <span class=\"mdc-tab__ripple\" .ripple=\"${rippleDirective}\"></span>\n      </button>`;\n    }\n    renderIndicator() {\n        return html `<mwc-tab-indicator\n        .icon=\"${this.indicatorIcon}\"\n        .fade=\"${this.isFadingIndicator}\"></mwc-tab-indicator>`;\n    }\n    createAdapter() {\n        return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), { setAttr: (attr, value) => this.mdcRoot.setAttribute(attr, value), activateIndicator: (previousIndicatorClientRect) => this._tabIndicator\n                .activate(previousIndicatorClientRect), deactivateIndicator: () => this._tabIndicator.deactivate(), notifyInteracted: () => this.dispatchEvent(new CustomEvent(MDCTabFoundation.strings.INTERACTED_EVENT, {\n                detail: { tabId: this.id },\n                bubbles: true,\n                composed: true,\n                cancelable: true,\n            })), getOffsetLeft: () => this.offsetLeft, getOffsetWidth: () => this.mdcRoot.offsetWidth, getContentOffsetLeft: () => this._contentElement.offsetLeft, getContentOffsetWidth: () => this._contentElement.offsetWidth, focus: () => {\n                if (this.initFocus) {\n                    this.initFocus = false;\n                }\n                else {\n                    this.mdcRoot.focus();\n                }\n            } });\n    }\n    activate(clientRect) {\n        // happens only on initialization. We don't want to focus to prevent scroll\n        if (!clientRect) {\n            this.initFocus = true;\n        }\n        this.mdcFoundation.activate(clientRect);\n        this.setActive(this.mdcFoundation.isActive());\n    }\n    deactivate() {\n        this.mdcFoundation.deactivate();\n        this.setActive(this.mdcFoundation.isActive());\n    }\n    setActive(newValue) {\n        const oldValue = this.active;\n        if (oldValue !== newValue) {\n            this._active = newValue;\n            this.requestUpdate('active', oldValue);\n        }\n    }\n    computeDimensions() {\n        return this.mdcFoundation.computeDimensions();\n    }\n    computeIndicatorClientRect() {\n        return this.tabIndicator.computeContentClientRect();\n    }\n    // NOTE: needed only for ShadyDOM where delegatesFocus is not implemented\n    focus() {\n        this.mdcRoot.focus();\n    }\n}\n__decorate([\n    query('.mdc-tab')\n], TabBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('mwc-tab-indicator')\n], TabBase.prototype, \"tabIndicator\", void 0);\n__decorate([\n    property()\n], TabBase.prototype, \"label\", void 0);\n__decorate([\n    property()\n], TabBase.prototype, \"icon\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TabBase.prototype, \"hasImageIcon\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TabBase.prototype, \"isFadingIndicator\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TabBase.prototype, \"minWidth\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TabBase.prototype, \"isMinWidthIndicator\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true, attribute: 'active' })\n], TabBase.prototype, \"active\", null);\n__decorate([\n    property()\n], TabBase.prototype, \"indicatorIcon\", void 0);\n__decorate([\n    property({ type: Boolean })\n], TabBase.prototype, \"stacked\", void 0);\n__decorate([\n    observer(async function (value) {\n        await this.updateComplete;\n        this.mdcFoundation.setFocusOnActivate(value);\n    }),\n    property({ type: Boolean })\n], TabBase.prototype, \"focusOnActivate\", void 0);\n__decorate([\n    query('mwc-tab-indicator')\n], TabBase.prototype, \"_tabIndicator\", void 0);\n__decorate([\n    query('.mdc-tab__content')\n], TabBase.prototype, \"_contentElement\", void 0);\n//# sourceMappingURL=mwc-tab-base.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `.material-icons{font-family:var(--mdc-icon-font, \"Material Icons\");font-weight:normal;font-style:normal;font-size:var(--mdc-icon-size, 24px);line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\"}.mdc-tab{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.875rem;font-size:var(--mdc-typography-button-font-size, 0.875rem);line-height:2.25rem;line-height:var(--mdc-typography-button-line-height, 2.25rem);font-weight:500;font-weight:var(--mdc-typography-button-font-weight, 500);letter-spacing:0.0892857143em;letter-spacing:var(--mdc-typography-button-letter-spacing, 0.0892857143em);text-decoration:none;text-decoration:var(--mdc-typography-button-text-decoration, none);text-transform:uppercase;text-transform:var(--mdc-typography-button-text-transform, uppercase);padding-right:24px;padding-left:24px;position:relative;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;margin:0;padding-top:0;padding-bottom:0;border:none;outline:none;background:none;text-align:center;white-space:nowrap;cursor:pointer;-webkit-appearance:none;z-index:1}.mdc-tab .mdc-tab__text-label{color:rgba(0,0,0,.6)}.mdc-tab .mdc-tab__icon{color:rgba(0,0,0,.54);fill:currentColor}.mdc-tab::-moz-focus-inner{padding:0;border:0}.mdc-tab--min-width{flex:0 1 auto}.mdc-tab__content{position:relative;display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab__icon{transition:150ms color linear;width:24px;height:24px;font-size:24px;z-index:2}.mdc-tab--stacked .mdc-tab__content{flex-direction:column;align-items:center;justify-content:center}.mdc-tab--stacked .mdc-tab__text-label{padding-top:6px;padding-bottom:4px}.mdc-tab--active .mdc-tab__text-label{color:#6200ee;color:var(--mdc-theme-primary, #6200ee)}.mdc-tab--active .mdc-tab__icon{color:#6200ee;color:var(--mdc-theme-primary, #6200ee);fill:currentColor}.mdc-tab--active .mdc-tab__text-label,.mdc-tab--active .mdc-tab__icon{transition-delay:100ms}.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label{padding-left:8px;padding-right:0}[dir=rtl] .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label,.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label[dir=rtl]{padding-left:0;padding-right:8px}@keyframes mdc-ripple-fg-radius-in{from{animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transform:translate(var(--mdc-ripple-fg-translate-start, 0)) scale(1)}to{transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}}@keyframes mdc-ripple-fg-opacity-in{from{animation-timing-function:linear;opacity:0}to{opacity:var(--mdc-ripple-fg-opacity, 0)}}@keyframes mdc-ripple-fg-opacity-out{from{animation-timing-function:linear;opacity:var(--mdc-ripple-fg-opacity, 0)}to{opacity:0}}.mdc-tab__ripple{--mdc-ripple-fg-size: 0;--mdc-ripple-left: 0;--mdc-ripple-top: 0;--mdc-ripple-fg-scale: 1;--mdc-ripple-fg-translate-end: 0;--mdc-ripple-fg-translate-start: 0;-webkit-tap-highlight-color:rgba(0,0,0,0);will-change:transform,opacity;position:absolute;top:0;left:0;width:100%;height:100%;overflow:hidden}.mdc-tab__ripple::before,.mdc-tab__ripple::after{position:absolute;border-radius:50%;opacity:0;pointer-events:none;content:\"\"}.mdc-tab__ripple::before{transition:opacity 15ms linear,background-color 15ms linear;z-index:1}.mdc-tab__ripple.mdc-ripple-upgraded::before{transform:scale(var(--mdc-ripple-fg-scale, 1))}.mdc-tab__ripple.mdc-ripple-upgraded::after{top:0;left:0;transform:scale(0);transform-origin:center center}.mdc-tab__ripple.mdc-ripple-upgraded--unbounded::after{top:var(--mdc-ripple-top, 0);left:var(--mdc-ripple-left, 0)}.mdc-tab__ripple.mdc-ripple-upgraded--foreground-activation::after{animation:mdc-ripple-fg-radius-in 225ms forwards,mdc-ripple-fg-opacity-in 75ms forwards}.mdc-tab__ripple.mdc-ripple-upgraded--foreground-deactivation::after{animation:mdc-ripple-fg-opacity-out 150ms;transform:translate(var(--mdc-ripple-fg-translate-end, 0)) scale(var(--mdc-ripple-fg-scale, 1))}.mdc-tab__ripple::before,.mdc-tab__ripple::after{top:calc(50% - 100%);left:calc(50% - 100%);width:200%;height:200%}.mdc-tab__ripple.mdc-ripple-upgraded::after{width:var(--mdc-ripple-fg-size, 100%);height:var(--mdc-ripple-fg-size, 100%)}.mdc-tab__ripple::before,.mdc-tab__ripple::after{background-color:#6200ee;background-color:var(--mdc-theme-primary, #6200ee)}.mdc-tab__ripple:hover::before{opacity:.04}.mdc-tab__ripple.mdc-ripple-upgraded--background-focused::before,.mdc-tab__ripple:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:.12}.mdc-tab__ripple:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-tab__ripple:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:.12}.mdc-tab__ripple.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.12}:host{outline:none;flex:1 0 auto;display:flex;justify-content:center}.mdc-tab{height:var(--mdc-tab-height, 48px);margin-left:0;margin-right:0;padding-right:var(--mdc-tab-horizontal-padding, 24px);padding-left:var(--mdc-tab-horizontal-padding, 24px)}.mdc-tab--stacked{height:var(--mdc-tab-stacked-height, 72px)}.mdc-tab::-moz-focus-inner{border:0}.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label{padding-left:8px;padding-right:0}[dir=rtl] .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label,.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label[dir=rtl]{padding-left:0;padding-right:8px}.mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mdc-tab-text-label-color-default, rgba(0, 0, 0, 0.6))}.mdc-tab:not(.mdc-tab--active) .mdc-tab__icon{color:var(--mdc-tab-color-default, rgba(0, 0, 0, 0.54))}`;\n//# sourceMappingURL=mwc-tab-css.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { customElement } from 'lit-element';\nimport { TabBase } from './mwc-tab-base.js';\nimport { style } from './mwc-tab-css';\nlet Tab = class Tab extends TabBase {\n};\nTab.styles = style;\nTab = __decorate([\n    customElement('mwc-tab')\n], Tab);\nexport { Tab };\n//# sourceMappingURL=mwc-tab.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    ANIMATING: 'mdc-tab-scroller--animating',\n    SCROLL_AREA_SCROLL: 'mdc-tab-scroller__scroll-area--scroll',\n    SCROLL_TEST: 'mdc-tab-scroller__test',\n};\nvar strings = {\n    AREA_SELECTOR: '.mdc-tab-scroller__scroll-area',\n    CONTENT_SELECTOR: '.mdc-tab-scroller__scroll-content',\n};\nexport { cssClasses, strings, };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar MDCTabScrollerRTL = /** @class */ (function () {\n    function MDCTabScrollerRTL(adapter) {\n        this.adapter = adapter;\n    }\n    return MDCTabScrollerRTL;\n}());\nexport { MDCTabScrollerRTL };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabScrollerRTL;\n//# sourceMappingURL=rtl-scroller.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCTabScrollerRTL } from './rtl-scroller';\nvar MDCTabScrollerRTLDefault = /** @class */ (function (_super) {\n    __extends(MDCTabScrollerRTLDefault, _super);\n    function MDCTabScrollerRTLDefault() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTabScrollerRTLDefault.prototype.getScrollPositionRTL = function () {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        var right = this.calculateScrollEdges_().right;\n        // Scroll values on most browsers are ints instead of floats so we round\n        return Math.round(right - currentScrollLeft);\n    };\n    MDCTabScrollerRTLDefault.prototype.scrollToRTL = function (scrollX) {\n        var edges = this.calculateScrollEdges_();\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        var clampedScrollLeft = this.clampScrollValue_(edges.right - scrollX);\n        return {\n            finalScrollPosition: clampedScrollLeft,\n            scrollDelta: clampedScrollLeft - currentScrollLeft,\n        };\n    };\n    MDCTabScrollerRTLDefault.prototype.incrementScrollRTL = function (scrollX) {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n        return {\n            finalScrollPosition: clampedScrollLeft,\n            scrollDelta: clampedScrollLeft - currentScrollLeft,\n        };\n    };\n    MDCTabScrollerRTLDefault.prototype.getAnimatingScrollPosition = function (scrollX) {\n        return scrollX;\n    };\n    MDCTabScrollerRTLDefault.prototype.calculateScrollEdges_ = function () {\n        var contentWidth = this.adapter.getScrollContentOffsetWidth();\n        var rootWidth = this.adapter.getScrollAreaOffsetWidth();\n        return {\n            left: 0,\n            right: contentWidth - rootWidth,\n        };\n    };\n    MDCTabScrollerRTLDefault.prototype.clampScrollValue_ = function (scrollX) {\n        var edges = this.calculateScrollEdges_();\n        return Math.min(Math.max(edges.left, scrollX), edges.right);\n    };\n    return MDCTabScrollerRTLDefault;\n}(MDCTabScrollerRTL));\nexport { MDCTabScrollerRTLDefault };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabScrollerRTLDefault;\n//# sourceMappingURL=rtl-default-scroller.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCTabScrollerRTL } from './rtl-scroller';\nvar MDCTabScrollerRTLNegative = /** @class */ (function (_super) {\n    __extends(MDCTabScrollerRTLNegative, _super);\n    function MDCTabScrollerRTLNegative() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTabScrollerRTLNegative.prototype.getScrollPositionRTL = function (translateX) {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        return Math.round(translateX - currentScrollLeft);\n    };\n    MDCTabScrollerRTLNegative.prototype.scrollToRTL = function (scrollX) {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        var clampedScrollLeft = this.clampScrollValue_(-scrollX);\n        return {\n            finalScrollPosition: clampedScrollLeft,\n            scrollDelta: clampedScrollLeft - currentScrollLeft,\n        };\n    };\n    MDCTabScrollerRTLNegative.prototype.incrementScrollRTL = function (scrollX) {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft - scrollX);\n        return {\n            finalScrollPosition: clampedScrollLeft,\n            scrollDelta: clampedScrollLeft - currentScrollLeft,\n        };\n    };\n    MDCTabScrollerRTLNegative.prototype.getAnimatingScrollPosition = function (scrollX, translateX) {\n        return scrollX - translateX;\n    };\n    MDCTabScrollerRTLNegative.prototype.calculateScrollEdges_ = function () {\n        var contentWidth = this.adapter.getScrollContentOffsetWidth();\n        var rootWidth = this.adapter.getScrollAreaOffsetWidth();\n        return {\n            left: rootWidth - contentWidth,\n            right: 0,\n        };\n    };\n    MDCTabScrollerRTLNegative.prototype.clampScrollValue_ = function (scrollX) {\n        var edges = this.calculateScrollEdges_();\n        return Math.max(Math.min(edges.right, scrollX), edges.left);\n    };\n    return MDCTabScrollerRTLNegative;\n}(MDCTabScrollerRTL));\nexport { MDCTabScrollerRTLNegative };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabScrollerRTLNegative;\n//# sourceMappingURL=rtl-negative-scroller.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCTabScrollerRTL } from './rtl-scroller';\nvar MDCTabScrollerRTLReverse = /** @class */ (function (_super) {\n    __extends(MDCTabScrollerRTLReverse, _super);\n    function MDCTabScrollerRTLReverse() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCTabScrollerRTLReverse.prototype.getScrollPositionRTL = function (translateX) {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        // Scroll values on most browsers are ints instead of floats so we round\n        return Math.round(currentScrollLeft - translateX);\n    };\n    MDCTabScrollerRTLReverse.prototype.scrollToRTL = function (scrollX) {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        var clampedScrollLeft = this.clampScrollValue_(scrollX);\n        return {\n            finalScrollPosition: clampedScrollLeft,\n            scrollDelta: currentScrollLeft - clampedScrollLeft,\n        };\n    };\n    MDCTabScrollerRTLReverse.prototype.incrementScrollRTL = function (scrollX) {\n        var currentScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        var clampedScrollLeft = this.clampScrollValue_(currentScrollLeft + scrollX);\n        return {\n            finalScrollPosition: clampedScrollLeft,\n            scrollDelta: currentScrollLeft - clampedScrollLeft,\n        };\n    };\n    MDCTabScrollerRTLReverse.prototype.getAnimatingScrollPosition = function (scrollX, translateX) {\n        return scrollX + translateX;\n    };\n    MDCTabScrollerRTLReverse.prototype.calculateScrollEdges_ = function () {\n        var contentWidth = this.adapter.getScrollContentOffsetWidth();\n        var rootWidth = this.adapter.getScrollAreaOffsetWidth();\n        return {\n            left: contentWidth - rootWidth,\n            right: 0,\n        };\n    };\n    MDCTabScrollerRTLReverse.prototype.clampScrollValue_ = function (scrollX) {\n        var edges = this.calculateScrollEdges_();\n        return Math.min(Math.max(edges.right, scrollX), edges.left);\n    };\n    return MDCTabScrollerRTLReverse;\n}(MDCTabScrollerRTL));\nexport { MDCTabScrollerRTLReverse };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabScrollerRTLReverse;\n//# sourceMappingURL=rtl-reverse-scroller.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends, __read } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, strings } from './constants';\nimport { MDCTabScrollerRTLDefault } from './rtl-default-scroller';\nimport { MDCTabScrollerRTLNegative } from './rtl-negative-scroller';\nimport { MDCTabScrollerRTLReverse } from './rtl-reverse-scroller';\nvar MDCTabScrollerFoundation = /** @class */ (function (_super) {\n    __extends(MDCTabScrollerFoundation, _super);\n    function MDCTabScrollerFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCTabScrollerFoundation.defaultAdapter), adapter)) || this;\n        /**\n         * Controls whether we should handle the transitionend and interaction events during the animation.\n         */\n        _this.isAnimating_ = false;\n        return _this;\n    }\n    Object.defineProperty(MDCTabScrollerFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTabScrollerFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTabScrollerFoundation, \"defaultAdapter\", {\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                eventTargetMatchesSelector: function () { return false; },\n                addClass: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                addScrollAreaClass: function () { return undefined; },\n                setScrollAreaStyleProperty: function () { return undefined; },\n                setScrollContentStyleProperty: function () { return undefined; },\n                getScrollContentStyleValue: function () { return ''; },\n                setScrollAreaScrollLeft: function () { return undefined; },\n                getScrollAreaScrollLeft: function () { return 0; },\n                getScrollContentOffsetWidth: function () { return 0; },\n                getScrollAreaOffsetWidth: function () { return 0; },\n                computeScrollAreaClientRect: function () { return ({ top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 }); },\n                computeScrollContentClientRect: function () { return ({ top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 }); },\n                computeHorizontalScrollbarHeight: function () { return 0; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCTabScrollerFoundation.prototype.init = function () {\n        // Compute horizontal scrollbar height on scroller with overflow initially hidden, then update overflow to scroll\n        // and immediately adjust bottom margin to avoid the scrollbar initially appearing before JS runs.\n        var horizontalScrollbarHeight = this.adapter.computeHorizontalScrollbarHeight();\n        this.adapter.setScrollAreaStyleProperty('margin-bottom', -horizontalScrollbarHeight + 'px');\n        this.adapter.addScrollAreaClass(MDCTabScrollerFoundation.cssClasses.SCROLL_AREA_SCROLL);\n    };\n    /**\n     * Computes the current visual scroll position\n     */\n    MDCTabScrollerFoundation.prototype.getScrollPosition = function () {\n        if (this.isRTL_()) {\n            return this.computeCurrentScrollPositionRTL_();\n        }\n        var currentTranslateX = this.calculateCurrentTranslateX_();\n        var scrollLeft = this.adapter.getScrollAreaScrollLeft();\n        return scrollLeft - currentTranslateX;\n    };\n    /**\n     * Handles interaction events that occur during transition\n     */\n    MDCTabScrollerFoundation.prototype.handleInteraction = function () {\n        // Early exit if we aren't animating\n        if (!this.isAnimating_) {\n            return;\n        }\n        // Prevent other event listeners from handling this event\n        this.stopScrollAnimation_();\n    };\n    /**\n     * Handles the transitionend event\n     */\n    MDCTabScrollerFoundation.prototype.handleTransitionEnd = function (evt) {\n        // Early exit if we aren't animating or the event was triggered by a different element.\n        var evtTarget = evt.target;\n        if (!this.isAnimating_ ||\n            !this.adapter.eventTargetMatchesSelector(evtTarget, MDCTabScrollerFoundation.strings.CONTENT_SELECTOR)) {\n            return;\n        }\n        this.isAnimating_ = false;\n        this.adapter.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n    };\n    /**\n     * Increment the scroll value by the scrollXIncrement using animation.\n     * @param scrollXIncrement The value by which to increment the scroll position\n     */\n    MDCTabScrollerFoundation.prototype.incrementScroll = function (scrollXIncrement) {\n        // Early exit for non-operational increment values\n        if (scrollXIncrement === 0) {\n            return;\n        }\n        this.animate_(this.getIncrementScrollOperation_(scrollXIncrement));\n    };\n    /**\n     * Increment the scroll value by the scrollXIncrement without animation.\n     * @param scrollXIncrement The value by which to increment the scroll position\n     */\n    MDCTabScrollerFoundation.prototype.incrementScrollImmediate = function (scrollXIncrement) {\n        // Early exit for non-operational increment values\n        if (scrollXIncrement === 0) {\n            return;\n        }\n        var operation = this.getIncrementScrollOperation_(scrollXIncrement);\n        if (operation.scrollDelta === 0) {\n            return;\n        }\n        this.stopScrollAnimation_();\n        this.adapter.setScrollAreaScrollLeft(operation.finalScrollPosition);\n    };\n    /**\n     * Scrolls to the given scrollX value\n     */\n    MDCTabScrollerFoundation.prototype.scrollTo = function (scrollX) {\n        if (this.isRTL_()) {\n            return this.scrollToRTL_(scrollX);\n        }\n        this.scrollTo_(scrollX);\n    };\n    /**\n     * @return Browser-specific {@link MDCTabScrollerRTL} instance.\n     */\n    MDCTabScrollerFoundation.prototype.getRTLScroller = function () {\n        if (!this.rtlScrollerInstance_) {\n            this.rtlScrollerInstance_ = this.rtlScrollerFactory_();\n        }\n        return this.rtlScrollerInstance_;\n    };\n    /**\n     * @return translateX value from a CSS matrix transform function string.\n     */\n    MDCTabScrollerFoundation.prototype.calculateCurrentTranslateX_ = function () {\n        var transformValue = this.adapter.getScrollContentStyleValue('transform');\n        // Early exit if no transform is present\n        if (transformValue === 'none') {\n            return 0;\n        }\n        // The transform value comes back as a matrix transformation in the form\n        // of `matrix(a, b, c, d, tx, ty)`. We only care about tx (translateX) so\n        // we're going to grab all the parenthesized values, strip out tx, and\n        // parse it.\n        var match = /\\((.+?)\\)/.exec(transformValue);\n        if (!match) {\n            return 0;\n        }\n        var matrixParams = match[1];\n        // tslint:disable-next-line:ban-ts-ignore \"Unused vars\" should be a linter warning, not a compiler error.\n        // @ts-ignore These unused variables should retain their semantic names for clarity.\n        var _a = __read(matrixParams.split(','), 6), a = _a[0], b = _a[1], c = _a[2], d = _a[3], tx = _a[4], ty = _a[5];\n        return parseFloat(tx); // tslint:disable-line:ban\n    };\n    /**\n     * Calculates a safe scroll value that is > 0 and < the max scroll value\n     * @param scrollX The distance to scroll\n     */\n    MDCTabScrollerFoundation.prototype.clampScrollValue_ = function (scrollX) {\n        var edges = this.calculateScrollEdges_();\n        return Math.min(Math.max(edges.left, scrollX), edges.right);\n    };\n    MDCTabScrollerFoundation.prototype.computeCurrentScrollPositionRTL_ = function () {\n        var translateX = this.calculateCurrentTranslateX_();\n        return this.getRTLScroller().getScrollPositionRTL(translateX);\n    };\n    MDCTabScrollerFoundation.prototype.calculateScrollEdges_ = function () {\n        var contentWidth = this.adapter.getScrollContentOffsetWidth();\n        var rootWidth = this.adapter.getScrollAreaOffsetWidth();\n        return {\n            left: 0,\n            right: contentWidth - rootWidth,\n        };\n    };\n    /**\n     * Internal scroll method\n     * @param scrollX The new scroll position\n     */\n    MDCTabScrollerFoundation.prototype.scrollTo_ = function (scrollX) {\n        var currentScrollX = this.getScrollPosition();\n        var safeScrollX = this.clampScrollValue_(scrollX);\n        var scrollDelta = safeScrollX - currentScrollX;\n        this.animate_({\n            finalScrollPosition: safeScrollX,\n            scrollDelta: scrollDelta,\n        });\n    };\n    /**\n     * Internal RTL scroll method\n     * @param scrollX The new scroll position\n     */\n    MDCTabScrollerFoundation.prototype.scrollToRTL_ = function (scrollX) {\n        var animation = this.getRTLScroller().scrollToRTL(scrollX);\n        this.animate_(animation);\n    };\n    /**\n     * Internal method to compute the increment scroll operation values.\n     * @param scrollX The desired scroll position increment\n     * @return MDCTabScrollerAnimation with the sanitized values for performing the scroll operation.\n     */\n    MDCTabScrollerFoundation.prototype.getIncrementScrollOperation_ = function (scrollX) {\n        if (this.isRTL_()) {\n            return this.getRTLScroller().incrementScrollRTL(scrollX);\n        }\n        var currentScrollX = this.getScrollPosition();\n        var targetScrollX = scrollX + currentScrollX;\n        var safeScrollX = this.clampScrollValue_(targetScrollX);\n        var scrollDelta = safeScrollX - currentScrollX;\n        return {\n            finalScrollPosition: safeScrollX,\n            scrollDelta: scrollDelta,\n        };\n    };\n    /**\n     * Animates the tab scrolling\n     * @param animation The animation to apply\n     */\n    MDCTabScrollerFoundation.prototype.animate_ = function (animation) {\n        var _this = this;\n        // Early exit if translateX is 0, which means there's no animation to perform\n        if (animation.scrollDelta === 0) {\n            return;\n        }\n        this.stopScrollAnimation_();\n        // This animation uses the FLIP approach.\n        // Read more here: https://aerotwist.com/blog/flip-your-animations/\n        this.adapter.setScrollAreaScrollLeft(animation.finalScrollPosition);\n        this.adapter.setScrollContentStyleProperty('transform', \"translateX(\" + animation.scrollDelta + \"px)\");\n        // Force repaint\n        this.adapter.computeScrollAreaClientRect();\n        requestAnimationFrame(function () {\n            _this.adapter.addClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n            _this.adapter.setScrollContentStyleProperty('transform', 'none');\n        });\n        this.isAnimating_ = true;\n    };\n    /**\n     * Stops scroll animation\n     */\n    MDCTabScrollerFoundation.prototype.stopScrollAnimation_ = function () {\n        this.isAnimating_ = false;\n        var currentScrollPosition = this.getAnimatingScrollPosition_();\n        this.adapter.removeClass(MDCTabScrollerFoundation.cssClasses.ANIMATING);\n        this.adapter.setScrollContentStyleProperty('transform', 'translateX(0px)');\n        this.adapter.setScrollAreaScrollLeft(currentScrollPosition);\n    };\n    /**\n     * Gets the current scroll position during animation\n     */\n    MDCTabScrollerFoundation.prototype.getAnimatingScrollPosition_ = function () {\n        var currentTranslateX = this.calculateCurrentTranslateX_();\n        var scrollLeft = this.adapter.getScrollAreaScrollLeft();\n        if (this.isRTL_()) {\n            return this.getRTLScroller().getAnimatingScrollPosition(scrollLeft, currentTranslateX);\n        }\n        return scrollLeft - currentTranslateX;\n    };\n    /**\n     * Determines the RTL Scroller to use\n     */\n    MDCTabScrollerFoundation.prototype.rtlScrollerFactory_ = function () {\n        // Browsers have three different implementations of scrollLeft in RTL mode,\n        // dependent on the browser. The behavior is based off the max LTR\n        // scrollLeft value and 0.\n        //\n        // * Default scrolling in RTL *\n        //    - Left-most value: 0\n        //    - Right-most value: Max LTR scrollLeft value\n        //\n        // * Negative scrolling in RTL *\n        //    - Left-most value: Negated max LTR scrollLeft value\n        //    - Right-most value: 0\n        //\n        // * Reverse scrolling in RTL *\n        //    - Left-most value: Max LTR scrollLeft value\n        //    - Right-most value: 0\n        //\n        // We use those principles below to determine which RTL scrollLeft\n        // behavior is implemented in the current browser.\n        var initialScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        this.adapter.setScrollAreaScrollLeft(initialScrollLeft - 1);\n        var newScrollLeft = this.adapter.getScrollAreaScrollLeft();\n        // If the newScrollLeft value is negative,then we know that the browser has\n        // implemented negative RTL scrolling, since all other implementations have\n        // only positive values.\n        if (newScrollLeft < 0) {\n            // Undo the scrollLeft test check\n            this.adapter.setScrollAreaScrollLeft(initialScrollLeft);\n            return new MDCTabScrollerRTLNegative(this.adapter);\n        }\n        var rootClientRect = this.adapter.computeScrollAreaClientRect();\n        var contentClientRect = this.adapter.computeScrollContentClientRect();\n        var rightEdgeDelta = Math.round(contentClientRect.right - rootClientRect.right);\n        // Undo the scrollLeft test check\n        this.adapter.setScrollAreaScrollLeft(initialScrollLeft);\n        // By calculating the clientRect of the root element and the clientRect of\n        // the content element, we can determine how much the scroll value changed\n        // when we performed the scrollLeft subtraction above.\n        if (rightEdgeDelta === newScrollLeft) {\n            return new MDCTabScrollerRTLReverse(this.adapter);\n        }\n        return new MDCTabScrollerRTLDefault(this.adapter);\n    };\n    MDCTabScrollerFoundation.prototype.isRTL_ = function () {\n        return this.adapter.getScrollContentStyleValue('direction') === 'rtl';\n    };\n    return MDCTabScrollerFoundation;\n}(MDCFoundation));\nexport { MDCTabScrollerFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabScrollerFoundation;\n//# sourceMappingURL=foundation.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { matches } from '@material/dom/ponyfill';\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element';\nimport MDCTabScrollerFoundation from '@material/tab-scroller/foundation.js';\nimport { eventOptions, html, query } from 'lit-element';\nexport class TabScrollerBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this.mdcFoundationClass = MDCTabScrollerFoundation;\n        this._scrollbarHeight = -1;\n    }\n    _handleInteraction() {\n        this.mdcFoundation.handleInteraction();\n    }\n    _handleTransitionEnd(e) {\n        this.mdcFoundation.handleTransitionEnd(e);\n    }\n    render() {\n        return html `\n      <div class=\"mdc-tab-scroller\">\n        <div class=\"mdc-tab-scroller__scroll-area\"\n            @wheel=\"${this._handleInteraction}\"\n            @touchstart=\"${this._handleInteraction}\"\n            @pointerdown=\"${this._handleInteraction}\"\n            @mousedown=\"${this._handleInteraction}\"\n            @keydown=\"${this._handleInteraction}\"\n            @transitionend=\"${this._handleTransitionEnd}\">\n          <div class=\"mdc-tab-scroller__scroll-content\"><slot></slot></div>\n        </div>\n      </div>\n      `;\n    }\n    createAdapter() {\n        return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), { eventTargetMatchesSelector: (evtTarget, selector) => matches(evtTarget, selector), addScrollAreaClass: (className) => this.scrollAreaElement.classList.add(className), setScrollAreaStyleProperty: (prop, value) => this.scrollAreaElement.style.setProperty(prop, value), setScrollContentStyleProperty: (prop, value) => this.scrollContentElement.style.setProperty(prop, value), getScrollContentStyleValue: (propName) => window.getComputedStyle(this.scrollContentElement)\n                .getPropertyValue(propName), setScrollAreaScrollLeft: (scrollX) => this.scrollAreaElement.scrollLeft = scrollX, getScrollAreaScrollLeft: () => this.scrollAreaElement.scrollLeft, getScrollContentOffsetWidth: () => this.scrollContentElement.offsetWidth, getScrollAreaOffsetWidth: () => this.scrollAreaElement.offsetWidth, computeScrollAreaClientRect: () => this.scrollAreaElement.getBoundingClientRect(), computeScrollContentClientRect: () => this.scrollContentElement.getBoundingClientRect(), computeHorizontalScrollbarHeight: () => {\n                if (this._scrollbarHeight === -1) {\n                    this.scrollAreaElement.style.overflowX = 'scroll';\n                    this._scrollbarHeight = this.scrollAreaElement.offsetHeight -\n                        this.scrollAreaElement.clientHeight;\n                    this.scrollAreaElement.style.overflowX = '';\n                }\n                return this._scrollbarHeight;\n            } });\n    }\n    /**\n     * Returns the current visual scroll position\n     * @return {number}\n     */\n    getScrollPosition() {\n        return this.mdcFoundation.getScrollPosition();\n    }\n    /**\n     * Returns the width of the scroll content\n     * @return {number}\n     */\n    getScrollContentWidth() {\n        return this.scrollContentElement.offsetWidth;\n    }\n    /**\n     * Increments the scroll value by the given amount\n     * @param {number} scrollXIncrement The pixel value by which to increment the\n     *     scroll value\n     */\n    incrementScrollPosition(scrollXIncrement) {\n        this.mdcFoundation.incrementScroll(scrollXIncrement);\n    }\n    /**\n     * Scrolls to the given pixel position\n     * @param {number} scrollX The pixel value to scroll to\n     */\n    scrollToPosition(scrollX) {\n        this.mdcFoundation.scrollTo(scrollX);\n    }\n}\n__decorate([\n    query('.mdc-tab-scroller')\n], TabScrollerBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('.mdc-tab-scroller__scroll-area')\n], TabScrollerBase.prototype, \"scrollAreaElement\", void 0);\n__decorate([\n    query('.mdc-tab-scroller__scroll-content')\n], TabScrollerBase.prototype, \"scrollContentElement\", void 0);\n__decorate([\n    eventOptions({ passive: true })\n], TabScrollerBase.prototype, \"_handleInteraction\", null);\n//# sourceMappingURL=mwc-tab-scroller-base.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `.mdc-tab-scroller{overflow-y:hidden}.mdc-tab-scroller.mdc-tab-scroller--animating .mdc-tab-scroller__scroll-content{transition:250ms transform cubic-bezier(0.4, 0, 0.2, 1)}.mdc-tab-scroller__test{position:absolute;top:-9999px;width:100px;height:100px;overflow-x:scroll}.mdc-tab-scroller__scroll-area{-webkit-overflow-scrolling:touch;display:flex;overflow-x:hidden}.mdc-tab-scroller__scroll-area::-webkit-scrollbar,.mdc-tab-scroller__test::-webkit-scrollbar{display:none}.mdc-tab-scroller__scroll-area--scroll{overflow-x:scroll}.mdc-tab-scroller__scroll-content{position:relative;display:flex;flex:1 0 auto;transform:none;will-change:transform}.mdc-tab-scroller--align-start .mdc-tab-scroller__scroll-content{justify-content:flex-start}.mdc-tab-scroller--align-end .mdc-tab-scroller__scroll-content{justify-content:flex-end}.mdc-tab-scroller--align-center .mdc-tab-scroller__scroll-content{justify-content:center}.mdc-tab-scroller--animating .mdc-tab-scroller__scroll-area{-webkit-overflow-scrolling:auto}:host{display:flex}.mdc-tab-scroller{flex:1}`;\n//# sourceMappingURL=mwc-tab-scroller-css.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { customElement } from 'lit-element';\nimport { TabScrollerBase } from './mwc-tab-scroller-base.js';\nimport { style } from './mwc-tab-scroller-css.js';\nlet TabScroller = class TabScroller extends TabScrollerBase {\n};\nTabScroller.styles = style;\nTabScroller = __decorate([\n    customElement('mwc-tab-scroller')\n], TabScroller);\nexport { TabScroller };\n//# sourceMappingURL=mwc-tab-scroller.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar strings = {\n    ARROW_LEFT_KEY: 'ArrowLeft',\n    ARROW_RIGHT_KEY: 'ArrowRight',\n    END_KEY: 'End',\n    ENTER_KEY: 'Enter',\n    HOME_KEY: 'Home',\n    SPACE_KEY: 'Space',\n    TAB_ACTIVATED_EVENT: 'MDCTabBar:activated',\n    TAB_SCROLLER_SELECTOR: '.mdc-tab-scroller',\n    TAB_SELECTOR: '.mdc-tab',\n};\nvar numbers = {\n    ARROW_LEFT_KEYCODE: 37,\n    ARROW_RIGHT_KEYCODE: 39,\n    END_KEYCODE: 35,\n    ENTER_KEYCODE: 13,\n    EXTRA_SCROLL_AMOUNT: 20,\n    HOME_KEYCODE: 36,\n    SPACE_KEYCODE: 32,\n};\nexport { numbers, strings };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { numbers, strings } from './constants';\nvar ACCEPTABLE_KEYS = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\nACCEPTABLE_KEYS.add(strings.ARROW_LEFT_KEY);\nACCEPTABLE_KEYS.add(strings.ARROW_RIGHT_KEY);\nACCEPTABLE_KEYS.add(strings.END_KEY);\nACCEPTABLE_KEYS.add(strings.HOME_KEY);\nACCEPTABLE_KEYS.add(strings.ENTER_KEY);\nACCEPTABLE_KEYS.add(strings.SPACE_KEY);\nvar KEYCODE_MAP = new Map();\n// IE11 has no support for new Map with iterable so we need to initialize this by hand\nKEYCODE_MAP.set(numbers.ARROW_LEFT_KEYCODE, strings.ARROW_LEFT_KEY);\nKEYCODE_MAP.set(numbers.ARROW_RIGHT_KEYCODE, strings.ARROW_RIGHT_KEY);\nKEYCODE_MAP.set(numbers.END_KEYCODE, strings.END_KEY);\nKEYCODE_MAP.set(numbers.HOME_KEYCODE, strings.HOME_KEY);\nKEYCODE_MAP.set(numbers.ENTER_KEYCODE, strings.ENTER_KEY);\nKEYCODE_MAP.set(numbers.SPACE_KEYCODE, strings.SPACE_KEY);\nvar MDCTabBarFoundation = /** @class */ (function (_super) {\n    __extends(MDCTabBarFoundation, _super);\n    function MDCTabBarFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCTabBarFoundation.defaultAdapter), adapter)) || this;\n        _this.useAutomaticActivation_ = false;\n        return _this;\n    }\n    Object.defineProperty(MDCTabBarFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTabBarFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCTabBarFoundation, \"defaultAdapter\", {\n        get: function () {\n            // tslint:disable:object-literal-sort-keys Methods should be in the same order as the adapter interface.\n            return {\n                scrollTo: function () { return undefined; },\n                incrementScroll: function () { return undefined; },\n                getScrollPosition: function () { return 0; },\n                getScrollContentWidth: function () { return 0; },\n                getOffsetWidth: function () { return 0; },\n                isRTL: function () { return false; },\n                setActiveTab: function () { return undefined; },\n                activateTabAtIndex: function () { return undefined; },\n                deactivateTabAtIndex: function () { return undefined; },\n                focusTabAtIndex: function () { return undefined; },\n                getTabIndicatorClientRectAtIndex: function () { return ({ top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 }); },\n                getTabDimensionsAtIndex: function () { return ({ rootLeft: 0, rootRight: 0, contentLeft: 0, contentRight: 0 }); },\n                getPreviousActiveTabIndex: function () { return -1; },\n                getFocusedTabIndex: function () { return -1; },\n                getIndexOfTabById: function () { return -1; },\n                getTabListLength: function () { return 0; },\n                notifyTabActivated: function () { return undefined; },\n            };\n            // tslint:enable:object-literal-sort-keys\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Switches between automatic and manual activation modes.\n     * See https://www.w3.org/TR/wai-aria-practices/#tabpanel for examples.\n     */\n    MDCTabBarFoundation.prototype.setUseAutomaticActivation = function (useAutomaticActivation) {\n        this.useAutomaticActivation_ = useAutomaticActivation;\n    };\n    MDCTabBarFoundation.prototype.activateTab = function (index) {\n        var previousActiveIndex = this.adapter.getPreviousActiveTabIndex();\n        if (!this.indexIsInRange_(index) || index === previousActiveIndex) {\n            return;\n        }\n        var previousClientRect;\n        if (previousActiveIndex !== -1) {\n            this.adapter.deactivateTabAtIndex(previousActiveIndex);\n            previousClientRect =\n                this.adapter.getTabIndicatorClientRectAtIndex(previousActiveIndex);\n        }\n        this.adapter.activateTabAtIndex(index, previousClientRect);\n        this.scrollIntoView(index);\n        this.adapter.notifyTabActivated(index);\n    };\n    MDCTabBarFoundation.prototype.handleKeyDown = function (evt) {\n        // Get the key from the event\n        var key = this.getKeyFromEvent_(evt);\n        // Early exit if the event key isn't one of the keyboard navigation keys\n        if (key === undefined) {\n            return;\n        }\n        // Prevent default behavior for movement keys, but not for activation keys, since :active is used to apply ripple\n        if (!this.isActivationKey_(key)) {\n            evt.preventDefault();\n        }\n        if (this.useAutomaticActivation_) {\n            if (this.isActivationKey_(key)) {\n                return;\n            }\n            var index = this.determineTargetFromKey_(this.adapter.getPreviousActiveTabIndex(), key);\n            this.adapter.setActiveTab(index);\n            this.scrollIntoView(index);\n        }\n        else {\n            var focusedTabIndex = this.adapter.getFocusedTabIndex();\n            if (this.isActivationKey_(key)) {\n                this.adapter.setActiveTab(focusedTabIndex);\n            }\n            else {\n                var index = this.determineTargetFromKey_(focusedTabIndex, key);\n                this.adapter.focusTabAtIndex(index);\n                this.scrollIntoView(index);\n            }\n        }\n    };\n    /**\n     * Handles the MDCTab:interacted event\n     */\n    MDCTabBarFoundation.prototype.handleTabInteraction = function (evt) {\n        this.adapter.setActiveTab(this.adapter.getIndexOfTabById(evt.detail.tabId));\n    };\n    /**\n     * Scrolls the tab at the given index into view\n     * @param index The tab index to make visible\n     */\n    MDCTabBarFoundation.prototype.scrollIntoView = function (index) {\n        // Early exit if the index is out of range\n        if (!this.indexIsInRange_(index)) {\n            return;\n        }\n        // Always scroll to 0 if scrolling to the 0th index\n        if (index === 0) {\n            return this.adapter.scrollTo(0);\n        }\n        // Always scroll to the max value if scrolling to the Nth index\n        // MDCTabScroller.scrollTo() will never scroll past the max possible value\n        if (index === this.adapter.getTabListLength() - 1) {\n            return this.adapter.scrollTo(this.adapter.getScrollContentWidth());\n        }\n        if (this.isRTL_()) {\n            return this.scrollIntoViewRTL_(index);\n        }\n        this.scrollIntoView_(index);\n    };\n    /**\n     * Private method for determining the index of the destination tab based on what key was pressed\n     * @param origin The original index from which to determine the destination\n     * @param key The name of the key\n     */\n    MDCTabBarFoundation.prototype.determineTargetFromKey_ = function (origin, key) {\n        var isRTL = this.isRTL_();\n        var maxIndex = this.adapter.getTabListLength() - 1;\n        var shouldGoToEnd = key === strings.END_KEY;\n        var shouldDecrement = key === strings.ARROW_LEFT_KEY && !isRTL || key === strings.ARROW_RIGHT_KEY && isRTL;\n        var shouldIncrement = key === strings.ARROW_RIGHT_KEY && !isRTL || key === strings.ARROW_LEFT_KEY && isRTL;\n        var index = origin;\n        if (shouldGoToEnd) {\n            index = maxIndex;\n        }\n        else if (shouldDecrement) {\n            index -= 1;\n        }\n        else if (shouldIncrement) {\n            index += 1;\n        }\n        else {\n            index = 0;\n        }\n        if (index < 0) {\n            index = maxIndex;\n        }\n        else if (index > maxIndex) {\n            index = 0;\n        }\n        return index;\n    };\n    /**\n     * Calculates the scroll increment that will make the tab at the given index visible\n     * @param index The index of the tab\n     * @param nextIndex The index of the next tab\n     * @param scrollPosition The current scroll position\n     * @param barWidth The width of the Tab Bar\n     */\n    MDCTabBarFoundation.prototype.calculateScrollIncrement_ = function (index, nextIndex, scrollPosition, barWidth) {\n        var nextTabDimensions = this.adapter.getTabDimensionsAtIndex(nextIndex);\n        var relativeContentLeft = nextTabDimensions.contentLeft - scrollPosition - barWidth;\n        var relativeContentRight = nextTabDimensions.contentRight - scrollPosition;\n        var leftIncrement = relativeContentRight - numbers.EXTRA_SCROLL_AMOUNT;\n        var rightIncrement = relativeContentLeft + numbers.EXTRA_SCROLL_AMOUNT;\n        if (nextIndex < index) {\n            return Math.min(leftIncrement, 0);\n        }\n        return Math.max(rightIncrement, 0);\n    };\n    /**\n     * Calculates the scroll increment that will make the tab at the given index visible in RTL\n     * @param index The index of the tab\n     * @param nextIndex The index of the next tab\n     * @param scrollPosition The current scroll position\n     * @param barWidth The width of the Tab Bar\n     * @param scrollContentWidth The width of the scroll content\n     */\n    MDCTabBarFoundation.prototype.calculateScrollIncrementRTL_ = function (index, nextIndex, scrollPosition, barWidth, scrollContentWidth) {\n        var nextTabDimensions = this.adapter.getTabDimensionsAtIndex(nextIndex);\n        var relativeContentLeft = scrollContentWidth - nextTabDimensions.contentLeft - scrollPosition;\n        var relativeContentRight = scrollContentWidth - nextTabDimensions.contentRight - scrollPosition - barWidth;\n        var leftIncrement = relativeContentRight + numbers.EXTRA_SCROLL_AMOUNT;\n        var rightIncrement = relativeContentLeft - numbers.EXTRA_SCROLL_AMOUNT;\n        if (nextIndex > index) {\n            return Math.max(leftIncrement, 0);\n        }\n        return Math.min(rightIncrement, 0);\n    };\n    /**\n     * Determines the index of the adjacent tab closest to either edge of the Tab Bar\n     * @param index The index of the tab\n     * @param tabDimensions The dimensions of the tab\n     * @param scrollPosition The current scroll position\n     * @param barWidth The width of the tab bar\n     */\n    MDCTabBarFoundation.prototype.findAdjacentTabIndexClosestToEdge_ = function (index, tabDimensions, scrollPosition, barWidth) {\n        /**\n         * Tabs are laid out in the Tab Scroller like this:\n         *\n         *    Scroll Position\n         *    +---+\n         *    |   |   Bar Width\n         *    |   +-----------------------------------+\n         *    |   |                                   |\n         *    |   V                                   V\n         *    |   +-----------------------------------+\n         *    V   |             Tab Scroller          |\n         *    +------------+--------------+-------------------+\n         *    |    Tab     |      Tab     |        Tab        |\n         *    +------------+--------------+-------------------+\n         *        |                                   |\n         *        +-----------------------------------+\n         *\n         * To determine the next adjacent index, we look at the Tab root left and\n         * Tab root right, both relative to the scroll position. If the Tab root\n         * left is less than 0, then we know it's out of view to the left. If the\n         * Tab root right minus the bar width is greater than 0, we know the Tab is\n         * out of view to the right. From there, we either increment or decrement\n         * the index.\n         */\n        var relativeRootLeft = tabDimensions.rootLeft - scrollPosition;\n        var relativeRootRight = tabDimensions.rootRight - scrollPosition - barWidth;\n        var relativeRootDelta = relativeRootLeft + relativeRootRight;\n        var leftEdgeIsCloser = relativeRootLeft < 0 || relativeRootDelta < 0;\n        var rightEdgeIsCloser = relativeRootRight > 0 || relativeRootDelta > 0;\n        if (leftEdgeIsCloser) {\n            return index - 1;\n        }\n        if (rightEdgeIsCloser) {\n            return index + 1;\n        }\n        return -1;\n    };\n    /**\n     * Determines the index of the adjacent tab closest to either edge of the Tab Bar in RTL\n     * @param index The index of the tab\n     * @param tabDimensions The dimensions of the tab\n     * @param scrollPosition The current scroll position\n     * @param barWidth The width of the tab bar\n     * @param scrollContentWidth The width of the scroller content\n     */\n    MDCTabBarFoundation.prototype.findAdjacentTabIndexClosestToEdgeRTL_ = function (index, tabDimensions, scrollPosition, barWidth, scrollContentWidth) {\n        var rootLeft = scrollContentWidth - tabDimensions.rootLeft - barWidth - scrollPosition;\n        var rootRight = scrollContentWidth - tabDimensions.rootRight - scrollPosition;\n        var rootDelta = rootLeft + rootRight;\n        var leftEdgeIsCloser = rootLeft > 0 || rootDelta > 0;\n        var rightEdgeIsCloser = rootRight < 0 || rootDelta < 0;\n        if (leftEdgeIsCloser) {\n            return index + 1;\n        }\n        if (rightEdgeIsCloser) {\n            return index - 1;\n        }\n        return -1;\n    };\n    /**\n     * Returns the key associated with a keydown event\n     * @param evt The keydown event\n     */\n    MDCTabBarFoundation.prototype.getKeyFromEvent_ = function (evt) {\n        if (ACCEPTABLE_KEYS.has(evt.key)) {\n            return evt.key;\n        }\n        return KEYCODE_MAP.get(evt.keyCode);\n    };\n    MDCTabBarFoundation.prototype.isActivationKey_ = function (key) {\n        return key === strings.SPACE_KEY || key === strings.ENTER_KEY;\n    };\n    /**\n     * Returns whether a given index is inclusively between the ends\n     * @param index The index to test\n     */\n    MDCTabBarFoundation.prototype.indexIsInRange_ = function (index) {\n        return index >= 0 && index < this.adapter.getTabListLength();\n    };\n    /**\n     * Returns the view's RTL property\n     */\n    MDCTabBarFoundation.prototype.isRTL_ = function () {\n        return this.adapter.isRTL();\n    };\n    /**\n     * Scrolls the tab at the given index into view for left-to-right user agents.\n     * @param index The index of the tab to scroll into view\n     */\n    MDCTabBarFoundation.prototype.scrollIntoView_ = function (index) {\n        var scrollPosition = this.adapter.getScrollPosition();\n        var barWidth = this.adapter.getOffsetWidth();\n        var tabDimensions = this.adapter.getTabDimensionsAtIndex(index);\n        var nextIndex = this.findAdjacentTabIndexClosestToEdge_(index, tabDimensions, scrollPosition, barWidth);\n        if (!this.indexIsInRange_(nextIndex)) {\n            return;\n        }\n        var scrollIncrement = this.calculateScrollIncrement_(index, nextIndex, scrollPosition, barWidth);\n        this.adapter.incrementScroll(scrollIncrement);\n    };\n    /**\n     * Scrolls the tab at the given index into view in RTL\n     * @param index The tab index to make visible\n     */\n    MDCTabBarFoundation.prototype.scrollIntoViewRTL_ = function (index) {\n        var scrollPosition = this.adapter.getScrollPosition();\n        var barWidth = this.adapter.getOffsetWidth();\n        var tabDimensions = this.adapter.getTabDimensionsAtIndex(index);\n        var scrollWidth = this.adapter.getScrollContentWidth();\n        var nextIndex = this.findAdjacentTabIndexClosestToEdgeRTL_(index, tabDimensions, scrollPosition, barWidth, scrollWidth);\n        if (!this.indexIsInRange_(nextIndex)) {\n            return;\n        }\n        var scrollIncrement = this.calculateScrollIncrementRTL_(index, nextIndex, scrollPosition, barWidth, scrollWidth);\n        this.adapter.incrementScroll(scrollIncrement);\n    };\n    return MDCTabBarFoundation;\n}(MDCFoundation));\nexport { MDCTabBarFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCTabBarFoundation;\n//# sourceMappingURL=foundation.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n// Make TypeScript not remove the imports.\nimport '@material/mwc-tab';\nimport '@material/mwc-tab-scroller';\nimport { BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport { Tab } from '@material/mwc-tab';\nimport MDCTabBarFoundation from '@material/tab-bar/foundation';\nimport { html, property, query } from 'lit-element';\nexport class TabBarBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this.mdcFoundationClass = MDCTabBarFoundation;\n        this.activeIndex = 0;\n        this._previousActiveIndex = -1;\n    }\n    _handleTabInteraction(e) {\n        this.mdcFoundation.handleTabInteraction(e);\n    }\n    _handleKeydown(e) {\n        this.mdcFoundation.handleKeyDown(e);\n    }\n    // TODO(sorvell): can scroller be optional for perf?\n    render() {\n        return html `\n      <div class=\"mdc-tab-bar\" role=\"tablist\"\n          @MDCTab:interacted=\"${this._handleTabInteraction}\"\n          @keydown=\"${this._handleKeydown}\">\n        <mwc-tab-scroller><slot></slot></mwc-tab-scroller>\n      </div>\n      `;\n    }\n    // TODO(sorvell): probably want to memoize this and use a `slotChange` event\n    _getTabs() {\n        return this.tabsSlot\n            .assignedNodes({ flatten: true })\n            .filter((e) => e instanceof Tab);\n    }\n    _getTab(index) {\n        return this._getTabs()[index];\n    }\n    createAdapter() {\n        return {\n            scrollTo: (scrollX) => this.scrollerElement.scrollToPosition(scrollX),\n            incrementScroll: (scrollXIncrement) => this.scrollerElement.incrementScrollPosition(scrollXIncrement),\n            getScrollPosition: () => this.scrollerElement.getScrollPosition(),\n            getScrollContentWidth: () => this.scrollerElement.getScrollContentWidth(),\n            getOffsetWidth: () => this.mdcRoot.offsetWidth,\n            isRTL: () => window.getComputedStyle(this.mdcRoot)\n                .getPropertyValue('direction') === 'rtl',\n            setActiveTab: (index) => this.mdcFoundation.activateTab(index),\n            activateTabAtIndex: (index, clientRect) => {\n                const tab = this._getTab(index);\n                if (tab !== undefined) {\n                    tab.activate(clientRect);\n                }\n                this._previousActiveIndex = index;\n            },\n            deactivateTabAtIndex: (index) => {\n                const tab = this._getTab(index);\n                if (tab !== undefined) {\n                    tab.deactivate();\n                }\n            },\n            focusTabAtIndex: (index) => {\n                const tab = this._getTab(index);\n                if (tab !== undefined) {\n                    tab.focus();\n                }\n            },\n            // TODO(sorvell): tab may not be able to synchronously answer\n            // `computeIndicatorClientRect` if an update is pending or it has not yet\n            // updated. If this is necessary, LitElement may need a `forceUpdate`\n            // method.\n            getTabIndicatorClientRectAtIndex: (index) => {\n                const tab = this._getTab(index);\n                return tab !== undefined ? tab.computeIndicatorClientRect() :\n                    new DOMRect();\n            },\n            getTabDimensionsAtIndex: (index) => {\n                const tab = this._getTab(index);\n                return tab !== undefined ?\n                    tab.computeDimensions() :\n                    { rootLeft: 0, rootRight: 0, contentLeft: 0, contentRight: 0 };\n            },\n            getPreviousActiveTabIndex: () => {\n                return this._previousActiveIndex;\n            },\n            getFocusedTabIndex: () => {\n                const tabElements = this._getTabs();\n                const activeElement = this.getRootNode().activeElement;\n                return tabElements.indexOf(activeElement);\n            },\n            getIndexOfTabById: (id) => {\n                const tabElements = this._getTabs();\n                for (let i = 0; i < tabElements.length; i++) {\n                    if (tabElements[i].id === id) {\n                        return i;\n                    }\n                }\n                return -1;\n            },\n            getTabListLength: () => this._getTabs().length,\n            notifyTabActivated: (index) => {\n                // Synchronize the tabs `activeIndex` to the foundation.\n                // This is needed when a tab is changed via a click, for example.\n                this.activeIndex = index;\n                this.dispatchEvent(new CustomEvent(MDCTabBarFoundation.strings.TAB_ACTIVATED_EVENT, { detail: { index }, bubbles: true, cancelable: true }));\n            },\n        };\n    }\n    firstUpdated() {\n        // NOTE: Delay creating foundation until scroller is fully updated.\n        // This is necessary because the foundation/adapter synchronously addresses\n        // the scroller element.\n    }\n    _getUpdateComplete() {\n        return super._getUpdateComplete()\n            .then(() => this.scrollerElement.updateComplete)\n            .then(() => {\n            if (this.mdcFoundation === undefined) {\n                this.createFoundation();\n            }\n        });\n    }\n    scrollIndexIntoView(index) {\n        this.mdcFoundation.scrollIntoView(index);\n    }\n}\n__decorate([\n    query('.mdc-tab-bar')\n], TabBarBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('mwc-tab-scroller')\n], TabBarBase.prototype, \"scrollerElement\", void 0);\n__decorate([\n    query('slot')\n], TabBarBase.prototype, \"tabsSlot\", void 0);\n__decorate([\n    observer(async function () {\n        await this.updateComplete;\n        // only provoke the foundation if we are out of sync with it, i.e.\n        // ignore an foundation generated set.\n        // use `activeIndex` directly to avoid staleness if it was set before the\n        // first render.\n        if (this.activeIndex !== this._previousActiveIndex) {\n            this.mdcFoundation.activateTab(this.activeIndex);\n        }\n    }),\n    property({ type: Number })\n], TabBarBase.prototype, \"activeIndex\", void 0);\n//# sourceMappingURL=mwc-tab-bar-base.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `.mdc-tab-bar{width:100%}.mdc-tab{height:48px}.mdc-tab--stacked{height:72px}:host{display:block}.mdc-tab-bar{flex:1}mwc-tab{--mdc-tab-height: 48px;--mdc-tab-stacked-height: 72px}`;\n//# sourceMappingURL=mwc-tab-bar-css.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { customElement } from 'lit-element';\nimport { TabBarBase } from './mwc-tab-bar-base.js';\nimport { style } from './mwc-tab-bar-css';\nlet TabBar = class TabBar extends TabBarBase {\n};\nTabBar.styles = style;\nTabBar = __decorate([\n    customElement('mwc-tab-bar')\n], TabBar);\nexport { TabBar };\n//# sourceMappingURL=mwc-tab-bar.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `:host{font-family:var(--mdc-icon-font, \"Material Icons\");font-weight:normal;font-style:normal;font-size:var(--mdc-icon-size, 24px);line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility;-moz-osx-font-smoothing:grayscale;font-feature-settings:\"liga\"}`;\n//# sourceMappingURL=mwc-icon-host-css.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { customElement, html, LitElement } from 'lit-element';\nimport { style } from './mwc-icon-host-css.js';\n/** @soyCompatible */\nlet Icon = class Icon extends LitElement {\n    /** @soyCompatible */\n    render() {\n        return html `<slot></slot>`;\n    }\n};\nIcon.styles = style;\nIcon = __decorate([\n    customElement('mwc-icon')\n], Icon);\nexport { Icon };\n//# sourceMappingURL=mwc-icon.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n    CLOSING: 'mdc-snackbar--closing',\n    OPEN: 'mdc-snackbar--open',\n    OPENING: 'mdc-snackbar--opening',\n};\nvar strings = {\n    ACTION_SELECTOR: '.mdc-snackbar__action',\n    ARIA_LIVE_LABEL_TEXT_ATTR: 'data-mdc-snackbar-label-text',\n    CLOSED_EVENT: 'MDCSnackbar:closed',\n    CLOSING_EVENT: 'MDCSnackbar:closing',\n    DISMISS_SELECTOR: '.mdc-snackbar__dismiss',\n    LABEL_SELECTOR: '.mdc-snackbar__label',\n    OPENED_EVENT: 'MDCSnackbar:opened',\n    OPENING_EVENT: 'MDCSnackbar:opening',\n    REASON_ACTION: 'action',\n    REASON_DISMISS: 'dismiss',\n    SURFACE_SELECTOR: '.mdc-snackbar__surface',\n};\nvar numbers = {\n    DEFAULT_AUTO_DISMISS_TIMEOUT_MS: 5000,\n    INDETERMINATE: -1,\n    MAX_AUTO_DISMISS_TIMEOUT_MS: 10000,\n    MIN_AUTO_DISMISS_TIMEOUT_MS: 4000,\n    // These variables need to be kept in sync with the values in _variables.scss.\n    SNACKBAR_ANIMATION_CLOSE_TIME_MS: 75,\n    SNACKBAR_ANIMATION_OPEN_TIME_MS: 150,\n    /**\n     * Number of milliseconds to wait between temporarily clearing the label text\n     * in the DOM and subsequently restoring it. This is necessary to force IE 11\n     * to pick up the `aria-live` content change and announce it to the user.\n     */\n    ARIA_LIVE_DELAY_MS: 1000,\n};\nexport { cssClasses, strings, numbers };\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2018 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nvar OPENING = cssClasses.OPENING, OPEN = cssClasses.OPEN, CLOSING = cssClasses.CLOSING;\nvar REASON_ACTION = strings.REASON_ACTION, REASON_DISMISS = strings.REASON_DISMISS;\nvar MDCSnackbarFoundation = /** @class */ (function (_super) {\n    __extends(MDCSnackbarFoundation, _super);\n    function MDCSnackbarFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCSnackbarFoundation.defaultAdapter), adapter)) || this;\n        _this.isOpen_ = false;\n        _this.animationFrame_ = 0;\n        _this.animationTimer_ = 0;\n        _this.autoDismissTimer_ = 0;\n        _this.autoDismissTimeoutMs_ = numbers.DEFAULT_AUTO_DISMISS_TIMEOUT_MS;\n        _this.closeOnEscape_ = true;\n        return _this;\n    }\n    Object.defineProperty(MDCSnackbarFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSnackbarFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSnackbarFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MDCSnackbarFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                announce: function () { return undefined; },\n                notifyClosed: function () { return undefined; },\n                notifyClosing: function () { return undefined; },\n                notifyOpened: function () { return undefined; },\n                notifyOpening: function () { return undefined; },\n                removeClass: function () { return undefined; },\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MDCSnackbarFoundation.prototype.destroy = function () {\n        this.clearAutoDismissTimer_();\n        cancelAnimationFrame(this.animationFrame_);\n        this.animationFrame_ = 0;\n        clearTimeout(this.animationTimer_);\n        this.animationTimer_ = 0;\n        this.adapter.removeClass(OPENING);\n        this.adapter.removeClass(OPEN);\n        this.adapter.removeClass(CLOSING);\n    };\n    MDCSnackbarFoundation.prototype.open = function () {\n        var _this = this;\n        this.clearAutoDismissTimer_();\n        this.isOpen_ = true;\n        this.adapter.notifyOpening();\n        this.adapter.removeClass(CLOSING);\n        this.adapter.addClass(OPENING);\n        this.adapter.announce();\n        // Wait a frame once display is no longer \"none\", to establish basis for animation\n        this.runNextAnimationFrame_(function () {\n            _this.adapter.addClass(OPEN);\n            _this.animationTimer_ = setTimeout(function () {\n                var timeoutMs = _this.getTimeoutMs();\n                _this.handleAnimationTimerEnd_();\n                _this.adapter.notifyOpened();\n                if (timeoutMs !== numbers.INDETERMINATE) {\n                    _this.autoDismissTimer_ = setTimeout(function () {\n                        _this.close(REASON_DISMISS);\n                    }, timeoutMs);\n                }\n            }, numbers.SNACKBAR_ANIMATION_OPEN_TIME_MS);\n        });\n    };\n    /**\n     * @param reason Why the snackbar was closed. Value will be passed to CLOSING_EVENT and CLOSED_EVENT via the\n     *     `event.detail.reason` property. Standard values are REASON_ACTION and REASON_DISMISS, but custom\n     *     client-specific values may also be used if desired.\n     */\n    MDCSnackbarFoundation.prototype.close = function (reason) {\n        var _this = this;\n        if (reason === void 0) { reason = ''; }\n        if (!this.isOpen_) {\n            // Avoid redundant close calls (and events), e.g. repeated interactions as the snackbar is animating closed\n            return;\n        }\n        cancelAnimationFrame(this.animationFrame_);\n        this.animationFrame_ = 0;\n        this.clearAutoDismissTimer_();\n        this.isOpen_ = false;\n        this.adapter.notifyClosing(reason);\n        this.adapter.addClass(cssClasses.CLOSING);\n        this.adapter.removeClass(cssClasses.OPEN);\n        this.adapter.removeClass(cssClasses.OPENING);\n        clearTimeout(this.animationTimer_);\n        this.animationTimer_ = setTimeout(function () {\n            _this.handleAnimationTimerEnd_();\n            _this.adapter.notifyClosed(reason);\n        }, numbers.SNACKBAR_ANIMATION_CLOSE_TIME_MS);\n    };\n    MDCSnackbarFoundation.prototype.isOpen = function () {\n        return this.isOpen_;\n    };\n    MDCSnackbarFoundation.prototype.getTimeoutMs = function () {\n        return this.autoDismissTimeoutMs_;\n    };\n    MDCSnackbarFoundation.prototype.setTimeoutMs = function (timeoutMs) {\n        // Use shorter variable names to make the code more readable\n        var minValue = numbers.MIN_AUTO_DISMISS_TIMEOUT_MS;\n        var maxValue = numbers.MAX_AUTO_DISMISS_TIMEOUT_MS;\n        var indeterminateValue = numbers.INDETERMINATE;\n        if (timeoutMs === numbers.INDETERMINATE || (timeoutMs <= maxValue && timeoutMs >= minValue)) {\n            this.autoDismissTimeoutMs_ = timeoutMs;\n        }\n        else {\n            throw new Error(\"\\n        timeoutMs must be an integer in the range \" + minValue + \"\\u2013\" + maxValue + \"\\n        (or \" + indeterminateValue + \" to disable), but got '\" + timeoutMs + \"'\");\n        }\n    };\n    MDCSnackbarFoundation.prototype.getCloseOnEscape = function () {\n        return this.closeOnEscape_;\n    };\n    MDCSnackbarFoundation.prototype.setCloseOnEscape = function (closeOnEscape) {\n        this.closeOnEscape_ = closeOnEscape;\n    };\n    MDCSnackbarFoundation.prototype.handleKeyDown = function (evt) {\n        var isEscapeKey = evt.key === 'Escape' || evt.keyCode === 27;\n        if (isEscapeKey && this.getCloseOnEscape()) {\n            this.close(REASON_DISMISS);\n        }\n    };\n    MDCSnackbarFoundation.prototype.handleActionButtonClick = function (_evt) {\n        this.close(REASON_ACTION);\n    };\n    MDCSnackbarFoundation.prototype.handleActionIconClick = function (_evt) {\n        this.close(REASON_DISMISS);\n    };\n    MDCSnackbarFoundation.prototype.clearAutoDismissTimer_ = function () {\n        clearTimeout(this.autoDismissTimer_);\n        this.autoDismissTimer_ = 0;\n    };\n    MDCSnackbarFoundation.prototype.handleAnimationTimerEnd_ = function () {\n        this.animationTimer_ = 0;\n        this.adapter.removeClass(cssClasses.OPENING);\n        this.adapter.removeClass(cssClasses.CLOSING);\n    };\n    /**\n     * Runs the given logic on the next animation frame, using setTimeout to factor in Firefox reflow behavior.\n     */\n    MDCSnackbarFoundation.prototype.runNextAnimationFrame_ = function (callback) {\n        var _this = this;\n        cancelAnimationFrame(this.animationFrame_);\n        this.animationFrame_ = requestAnimationFrame(function () {\n            _this.animationFrame_ = 0;\n            clearTimeout(_this.animationTimer_);\n            _this.animationTimer_ = setTimeout(callback, 0);\n        });\n    };\n    return MDCSnackbarFoundation;\n}(MDCFoundation));\nexport { MDCSnackbarFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCSnackbarFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n@license\nCopyright 2019 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport MDCSnackbarFoundation from '@material/snackbar/foundation.js';\nimport { directive } from 'lit-html';\nconst { ARIA_LIVE_LABEL_TEXT_ATTR } = MDCSnackbarFoundation.strings;\nconst { ARIA_LIVE_DELAY_MS } = MDCSnackbarFoundation.numbers;\n/**\n * Maps an accessibleLabel container part to its label element and the timeoutID\n * of the task that restores its text content from ::before back to textContent.\n */\nconst stateMap = new WeakMap();\n/**\n * A lit directive implementation of @material/mdc-snackbar/util.ts#announce,\n * which does some tricks to ensure that snackbar labels will be handled\n * correctly by screen readers.\n *\n * The existing MDC announce util function is difficult to use directly here,\n * because Lit can crash when DOM that it is managing changes outside of its\n * purvue. In this case, we would render our labelText as the text content of\n * the label div, but the MDC announce function then clears that text content,\n * and resets it after a timeout (see below for why). We do the same thing here,\n * but in a way that fits into Lit's lifecycle.\n *\n * TODO(aomarks) Investigate whether this can be simplified; but to do that we\n * first need testing infrastructure to verify that it remains compatible with\n * screen readers. For example, can we just create an entirely new label node\n * every time we open or labelText changes? If not, and the async text/::before\n * swap is strictly required, can we at elast make this directive more generic\n * (e.g. so that we don't hard-code the name of the label class).\n */\nexport const accessibleSnackbarLabel = directive((labelText, isOpen) => (part) => {\n    if (!isOpen) {\n        // We never need to do anything if we're closed, even if the label also\n        // changed in this batch of changes. We'll fully reset the label text\n        // whenever we next open.\n        return;\n    }\n    let maybeState = stateMap.get(part);\n    if (maybeState === undefined) {\n        // Create the label element once, the first time we open.\n        const labelEl = document.createElement('div');\n        labelEl.setAttribute('class', 'mdc-snackbar__label');\n        labelEl.setAttribute('role', 'status');\n        labelEl.setAttribute('aria-live', 'polite');\n        labelEl.textContent = labelText;\n        // endNode can't be a Document, so it must have a parent.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        part.endNode.parentNode.insertBefore(labelEl, part.endNode);\n        maybeState = {\n            labelEl,\n            timerId: null,\n        };\n        stateMap.set(part, maybeState);\n        // No need to do anything more for ARIA the first time we open. We just\n        // created the element with the current label, so screen readers will\n        // detect it fine.\n        return;\n    }\n    const state = maybeState;\n    const labelEl = state.labelEl;\n    // Temporarily disable `aria-live` to prevent JAWS+Firefox from announcing\n    // the message twice.\n    labelEl.setAttribute('aria-live', 'off');\n    // Temporarily clear `textContent` to force a DOM mutation event that will\n    // be detected by screen readers. `aria-live` elements are only announced\n    // when the element's `textContent` *changes*, so snackbars sent to the\n    // browser in the initial HTML response won't be read unless we clear the\n    // element's `textContent` first. Similarly, displaying the same snackbar\n    // message twice in a row doesn't trigger a DOM mutation event, so screen\n    // readers won't announce the second message unless we first clear\n    // `textContent`.\n    //\n    // We have to clear the label text two different ways to make it work in\n    // all browsers and screen readers:\n    //\n    //   1. `textContent = ''` is required for IE11 + JAWS\n    //   2. `innerHTML = '&nbsp;'` is required for Chrome + JAWS and NVDA\n    //\n    // All other browser/screen reader combinations support both methods.\n    //\n    // The wrapper `<span>` visually hides the space character so that it\n    // doesn't cause jank when added/removed. N.B.: Setting `position:\n    // absolute`, `opacity: 0`, or `height: 0` prevents Chrome from detecting\n    // the DOM change.\n    //\n    // This technique has been tested in:\n    //\n    //   * JAWS 2019:\n    //       - Chrome 70\n    //       - Firefox 60 (ESR)\n    //       - IE 11\n    //   * NVDA 2018:\n    //       - Chrome 70\n    //       - Firefox 60 (ESR)\n    //       - IE 11\n    //   * ChromeVox 53\n    labelEl.textContent = '';\n    labelEl.innerHTML =\n        '<span style=\"display: inline-block; width: 0; height: 1px;\">' +\n            '&nbsp;</span>';\n    // Prevent visual jank by temporarily displaying the label text in the\n    // ::before pseudo-element. CSS generated content is normally announced by\n    // screen readers (except in IE 11; see\n    // https://tink.uk/accessibility-support-for-css-generated-content/);\n    // however, `aria-live` is turned off, so this DOM update will be ignored\n    // by screen readers.\n    labelEl.setAttribute(ARIA_LIVE_LABEL_TEXT_ATTR, labelText);\n    if (state.timerId !== null) {\n        // We hadn't yet swapped the textContent back in since the last time we\n        // opened or changed the label. Cancel that task so we don't clobber the\n        // new label.\n        clearTimeout(state.timerId);\n    }\n    state.timerId = window.setTimeout(() => {\n        state.timerId = null;\n        // Allow screen readers to announce changes to the DOM again.\n        labelEl.setAttribute('aria-live', 'polite');\n        // Remove the message from the ::before pseudo-element.\n        labelEl.removeAttribute(ARIA_LIVE_LABEL_TEXT_ATTR);\n        // Restore the original label text, which will be announced by\n        // screen readers.\n        labelEl.textContent = labelText;\n    }, ARIA_LIVE_DELAY_MS);\n});\n//# sourceMappingURL=accessible-snackbar-label-directive.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { addHasRemoveClass, BaseElement } from '@material/mwc-base/base-element.js';\nimport { observer } from '@material/mwc-base/observer.js';\nimport MDCSnackbarFoundation from '@material/snackbar/foundation.js';\nimport { html, property, query } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map.js';\nimport { accessibleSnackbarLabel } from './accessible-snackbar-label-directive.js';\nconst { OPENING_EVENT, OPENED_EVENT, CLOSING_EVENT, CLOSED_EVENT, } = MDCSnackbarFoundation.strings;\nexport class SnackbarBase extends BaseElement {\n    constructor() {\n        super(...arguments);\n        this.mdcFoundationClass = MDCSnackbarFoundation;\n        this.open = false;\n        this.timeoutMs = 5000;\n        this.closeOnEscape = false;\n        this.labelText = '';\n        this.stacked = false;\n        this.leading = false;\n        this.reason = '';\n    }\n    render() {\n        const classes = {\n            'mdc-snackbar--stacked': this.stacked,\n            'mdc-snackbar--leading': this.leading,\n        };\n        return html `\n      <div class=\"mdc-snackbar ${classMap(classes)}\" @keydown=\"${this._handleKeydown}\">\n        <div class=\"mdc-snackbar__surface\">\n          ${accessibleSnackbarLabel(this.labelText, this.open)}\n          <div class=\"mdc-snackbar__actions\">\n            <slot name=\"action\" @click=\"${this._handleActionClick}\"></slot>\n            <slot name=\"dismiss\" @click=\"${this._handleDismissClick}\"></slot>\n          </div>\n        </div>\n      </div>`;\n    }\n    createAdapter() {\n        return Object.assign(Object.assign({}, addHasRemoveClass(this.mdcRoot)), { announce: () => {\n                /* We handle announce ourselves with the accessible directive. */\n            }, notifyClosed: (reason) => {\n                this.dispatchEvent(new CustomEvent(CLOSED_EVENT, { bubbles: true, cancelable: true, detail: { reason: reason } }));\n            }, notifyClosing: (reason) => {\n                this.open = false;\n                this.dispatchEvent(new CustomEvent(CLOSING_EVENT, { bubbles: true, cancelable: true, detail: { reason: reason } }));\n            }, notifyOpened: () => {\n                this.dispatchEvent(new CustomEvent(OPENED_EVENT, { bubbles: true, cancelable: true }));\n            }, notifyOpening: () => {\n                this.open = true;\n                this.dispatchEvent(new CustomEvent(OPENING_EVENT, { bubbles: true, cancelable: true }));\n            } });\n    }\n    /** @export */\n    show() {\n        this.open = true;\n    }\n    /** @export */\n    close(reason = '') {\n        this.reason = reason;\n        this.open = false;\n    }\n    firstUpdated() {\n        super.firstUpdated();\n        if (this.open) {\n            this.mdcFoundation.open();\n        }\n    }\n    _handleKeydown(e) {\n        this.mdcFoundation.handleKeyDown(e);\n    }\n    _handleActionClick(e) {\n        this.mdcFoundation.handleActionButtonClick(e);\n    }\n    _handleDismissClick(e) {\n        this.mdcFoundation.handleActionIconClick(e);\n    }\n}\n__decorate([\n    query('.mdc-snackbar')\n], SnackbarBase.prototype, \"mdcRoot\", void 0);\n__decorate([\n    query('.mdc-snackbar__label')\n], SnackbarBase.prototype, \"labelElement\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true }),\n    observer(function (value) {\n        if (this.mdcFoundation) {\n            if (value) {\n                this.mdcFoundation.open();\n            }\n            else {\n                this.mdcFoundation.close(this.reason);\n                this.reason = '';\n            }\n        }\n    })\n], SnackbarBase.prototype, \"open\", void 0);\n__decorate([\n    observer(function (value) {\n        this.mdcFoundation.setTimeoutMs(value);\n    }),\n    property({ type: Number })\n], SnackbarBase.prototype, \"timeoutMs\", void 0);\n__decorate([\n    observer(function (value) {\n        this.mdcFoundation.setCloseOnEscape(value);\n    }),\n    property({ type: Boolean })\n], SnackbarBase.prototype, \"closeOnEscape\", void 0);\n__decorate([\n    property({ type: String })\n], SnackbarBase.prototype, \"labelText\", void 0);\n__decorate([\n    property({ type: Boolean })\n], SnackbarBase.prototype, \"stacked\", void 0);\n__decorate([\n    property({ type: Boolean })\n], SnackbarBase.prototype, \"leading\", void 0);\n//# sourceMappingURL=mwc-snackbar-base.js.map","/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { css } from 'lit-element';\nexport const style = css `.mdc-snackbar{z-index:8;margin:8px;display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar__surface{background-color:#333}.mdc-snackbar__label{color:rgba(255,255,255,.87)}.mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mdc-snackbar__surface{min-width:100%}}.mdc-snackbar__surface{max-width:672px}.mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0,0,0,.12)}.mdc-snackbar__surface{border-radius:4px;border-radius:var(--mdc-shape-small, 4px)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--leading{justify-content:flex-start}.mdc-snackbar--stacked .mdc-snackbar__label{padding-left:16px;padding-right:8px;padding-bottom:12px}[dir=rtl] .mdc-snackbar--stacked .mdc-snackbar__label,.mdc-snackbar--stacked .mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar--stacked .mdc-snackbar__surface{flex-direction:column;align-items:flex-start}.mdc-snackbar--stacked .mdc-snackbar__actions{align-self:flex-end;margin-bottom:8px}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto;transition:opacity 150ms 0ms cubic-bezier(0, 0, 0.2, 1),transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1);transition:opacity 75ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-snackbar__label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:0.875rem;font-size:var(--mdc-typography-body2-font-size, 0.875rem);line-height:1.25rem;line-height:var(--mdc-typography-body2-line-height, 1.25rem);font-weight:400;font-weight:var(--mdc-typography-body2-font-weight, 400);letter-spacing:0.0178571429em;letter-spacing:var(--mdc-typography-body2-letter-spacing, 0.0178571429em);text-decoration:inherit;text-decoration:var(--mdc-typography-body2-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-body2-text-transform, inherit);padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box}.mdc-snackbar__action:not(:disabled){color:#bb86fc}.mdc-snackbar__action::before,.mdc-snackbar__action::after{background-color:#bb86fc}.mdc-snackbar__action:hover::before{opacity:.08}.mdc-snackbar__action.mdc-ripple-upgraded--background-focused::before,.mdc-snackbar__action:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:.24}.mdc-snackbar__action:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-snackbar__action:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:.24}.mdc-snackbar__action.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.24}.mdc-snackbar__dismiss{color:rgba(255,255,255,.87)}.mdc-snackbar__dismiss::before,.mdc-snackbar__dismiss::after{background-color:rgba(255,255,255,.87)}.mdc-snackbar__dismiss:hover::before{opacity:.08}.mdc-snackbar__dismiss.mdc-ripple-upgraded--background-focused::before,.mdc-snackbar__dismiss:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:.24}.mdc-snackbar__dismiss:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-snackbar__dismiss:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:.24}.mdc-snackbar__dismiss.mdc-ripple-upgraded{--mdc-ripple-fg-opacity: 0.24}.mdc-snackbar__dismiss.mdc-snackbar__dismiss{width:36px;height:36px;padding:9px;font-size:18px}.mdc-snackbar__dismiss.mdc-snackbar__dismiss svg,.mdc-snackbar__dismiss.mdc-snackbar__dismiss img{width:18px;height:18px}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}slot[name=action]::slotted(mwc-button){--mdc-theme-primary: var(--mdc-snackbar-action-color, #bb86fc)}slot[name=dismiss]::slotted(mwc-icon-button){--mdc-icon-size: 18px;--mdc-icon-button-size: 36px;color:rgba(255, 255, 255, 0.87);margin-left:8px;margin-right:0}[dir=rtl] slot[name=dismiss]::slotted(mwc-icon-button),slot[name=dismiss]::slotted(mwc-icon-button)[dir=rtl]{margin-left:0;margin-right:8px}`;\n//# sourceMappingURL=mwc-snackbar-css.js.map","import { __decorate } from \"tslib\";\n/**\n@license\nCopyright 2018 Google Inc. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport { customElement } from 'lit-element';\nimport { SnackbarBase } from './mwc-snackbar-base.js';\nimport { style } from './mwc-snackbar-css.js';\nlet Snackbar = class Snackbar extends SnackbarBase {\n};\nSnackbar.styles = style;\nSnackbar = __decorate([\n    customElement('mwc-snackbar')\n], Snackbar);\nexport { Snackbar };\n//# sourceMappingURL=mwc-snackbar.js.map","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export var COMMON_MIME_TYPES = new Map([\n    ['avi', 'video/avi'],\n    ['gif', 'image/gif'],\n    ['ico', 'image/x-icon'],\n    ['jpeg', 'image/jpeg'],\n    ['jpg', 'image/jpeg'],\n    ['mkv', 'video/x-matroska'],\n    ['mov', 'video/quicktime'],\n    ['mp4', 'video/mp4'],\n    ['pdf', 'application/pdf'],\n    ['png', 'image/png'],\n    ['zip', 'application/zip'],\n    ['doc', 'application/msword'],\n    ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document']\n]);\nexport function toFileWithPath(file, path) {\n    var f = withMimeType(file);\n    if (typeof f.path !== 'string') { // on electron, path is already set to the absolute path\n        var webkitRelativePath = file.webkitRelativePath;\n        Object.defineProperty(f, 'path', {\n            value: typeof path === 'string'\n                ? path\n                // If <input webkitdirectory> is set,\n                // the File will have a {webkitRelativePath} property\n                // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory\n                : typeof webkitRelativePath === 'string' && webkitRelativePath.length > 0\n                    ? webkitRelativePath\n                    : file.name,\n            writable: false,\n            configurable: false,\n            enumerable: true\n        });\n    }\n    return f;\n}\nfunction withMimeType(file) {\n    var name = file.name;\n    var hasExtension = name && name.lastIndexOf('.') !== -1;\n    if (hasExtension && !file.type) {\n        var ext = name.split('.')\n            .pop().toLowerCase();\n        var type = COMMON_MIME_TYPES.get(ext);\n        if (type) {\n            Object.defineProperty(file, 'type', {\n                value: type,\n                writable: false,\n                configurable: false,\n                enumerable: true\n            });\n        }\n    }\n    return file;\n}\n//# sourceMappingURL=file.js.map","import { __awaiter, __generator, __read, __spread } from \"tslib\";\nimport { toFileWithPath } from './file';\nvar FILES_TO_IGNORE = [\n    // Thumbnail cache files for macOS and Windows\n    '.DS_Store',\n    'Thumbs.db' // Windows\n];\n/**\n * Convert a DragEvent's DataTrasfer object to a list of File objects\n * NOTE: If some of the items are folders,\n * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.\n * @param evt\n */\nexport function fromEvent(evt) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, isDragEvt(evt) && evt.dataTransfer\n                    ? getDataTransferFiles(evt.dataTransfer, evt.type)\n                    : getInputFiles(evt)];\n        });\n    });\n}\nfunction isDragEvt(value) {\n    return !!value.dataTransfer;\n}\nfunction getInputFiles(evt) {\n    var files = isInput(evt.target)\n        ? evt.target.files\n            ? fromList(evt.target.files)\n            : []\n        : [];\n    return files.map(function (file) { return toFileWithPath(file); });\n}\nfunction isInput(value) {\n    return value !== null;\n}\nfunction getDataTransferFiles(dt, type) {\n    return __awaiter(this, void 0, void 0, function () {\n        var items, files;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!dt.items) return [3 /*break*/, 2];\n                    items = fromList(dt.items)\n                        .filter(function (item) { return item.kind === 'file'; });\n                    // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,\n                    // only 'dragstart' and 'drop' has access to the data (source node)\n                    if (type !== 'drop') {\n                        return [2 /*return*/, items];\n                    }\n                    return [4 /*yield*/, Promise.all(items.map(toFilePromises))];\n                case 1:\n                    files = _a.sent();\n                    return [2 /*return*/, noIgnoredFiles(flatten(files))];\n                case 2: return [2 /*return*/, noIgnoredFiles(fromList(dt.files)\n                        .map(function (file) { return toFileWithPath(file); }))];\n            }\n        });\n    });\n}\nfunction noIgnoredFiles(files) {\n    return files.filter(function (file) { return FILES_TO_IGNORE.indexOf(file.name) === -1; });\n}\n// IE11 does not support Array.from()\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility\n// https://developer.mozilla.org/en-US/docs/Web/API/FileList\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList\nfunction fromList(items) {\n    var files = [];\n    // tslint:disable: prefer-for-of\n    for (var i = 0; i < items.length; i++) {\n        var file = items[i];\n        files.push(file);\n    }\n    return files;\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem\nfunction toFilePromises(item) {\n    if (typeof item.webkitGetAsEntry !== 'function') {\n        return fromDataTransferItem(item);\n    }\n    var entry = item.webkitGetAsEntry();\n    // Safari supports dropping an image node from a different window and can be retrieved using\n    // the DataTransferItem.getAsFile() API\n    // NOTE: FileSystemEntry.file() throws if trying to get the file\n    if (entry && entry.isDirectory) {\n        return fromDirEntry(entry);\n    }\n    return fromDataTransferItem(item);\n}\nfunction flatten(items) {\n    return items.reduce(function (acc, files) { return __spread(acc, (Array.isArray(files) ? flatten(files) : [files])); }, []);\n}\nfunction fromDataTransferItem(item) {\n    var file = item.getAsFile();\n    if (!file) {\n        return Promise.reject(item + \" is not a File\");\n    }\n    var fwp = toFileWithPath(file);\n    return Promise.resolve(fwp);\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry\nfunction fromEntry(entry) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];\n        });\n    });\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry\nfunction fromDirEntry(entry) {\n    var reader = entry.createReader();\n    return new Promise(function (resolve, reject) {\n        var entries = [];\n        function readEntries() {\n            var _this = this;\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries\n            reader.readEntries(function (batch) { return __awaiter(_this, void 0, void 0, function () {\n                var files, err_1, items;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!!batch.length) return [3 /*break*/, 5];\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, Promise.all(entries)];\n                        case 2:\n                            files = _a.sent();\n                            resolve(files);\n                            return [3 /*break*/, 4];\n                        case 3:\n                            err_1 = _a.sent();\n                            reject(err_1);\n                            return [3 /*break*/, 4];\n                        case 4: return [3 /*break*/, 6];\n                        case 5:\n                            items = Promise.all(batch.map(fromEntry));\n                            entries.push(items);\n                            // Continue reading\n                            readEntries();\n                            _a.label = 6;\n                        case 6: return [2 /*return*/];\n                    }\n                });\n            }); }, function (err) {\n                reject(err);\n            });\n        }\n        readEntries();\n    });\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry\nfunction fromFileEntry(entry) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    entry.file(function (file) {\n                        var fwp = toFileWithPath(file, entry.fullPath);\n                        resolve(fwp);\n                    }, function (err) {\n                        reject(err);\n                    });\n                })];\n        });\n    });\n}\n//# sourceMappingURL=file-selector.js.map","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = (file.type || '').toLowerCase();\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim().toLowerCase();\n\n      if (validType.charAt(0) === '.') {\n        return fileName.toLowerCase().endsWith(validType);\n      } else if (validType.endsWith('/*')) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n\n      return mimeType === validType;\n    });\n  }\n\n  return true;\n};","import accepts from \"attr-accept\";\r\n\r\n// Error codes\r\nexport const FILE_INVALID_TYPE = \"file-invalid-type\";\r\nexport const FILE_TOO_LARGE = \"file-too-large\";\r\nexport const FILE_TOO_SMALL = \"file-too-small\";\r\nexport const TOO_MANY_FILES = \"too-many-files\";\r\n\r\n// File Errors\r\nexport const getInvalidTypeRejectionErr = (accept) => {\r\n  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;\r\n  const messageSuffix = Array.isArray(accept)\r\n    ? `one of ${accept.join(\", \")}`\r\n    : accept;\r\n  return {\r\n    code: FILE_INVALID_TYPE,\r\n    message: `File type must be ${messageSuffix}`,\r\n  };\r\n};\r\n\r\nexport const getTooLargeRejectionErr = (maxSize) => {\r\n  return {\r\n    code: FILE_TOO_LARGE,\r\n    message: `File is larger than ${maxSize} bytes`,\r\n  };\r\n};\r\n\r\nexport const getTooSmallRejectionErr = (minSize) => {\r\n  return {\r\n    code: FILE_TOO_SMALL,\r\n    message: `File is smaller than ${minSize} bytes`,\r\n  };\r\n};\r\n\r\nexport const TOO_MANY_FILES_REJECTION = {\r\n  code: TOO_MANY_FILES,\r\n  message: \"Too many files\",\r\n};\r\n\r\n// Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\r\n// that MIME type will always be accepted\r\nexport function fileAccepted(file, accept) {\r\n  const isAcceptable =\r\n    file.type === \"application/x-moz-file\" || accepts(file, accept);\r\n  return [\r\n    isAcceptable,\r\n    isAcceptable ? null : getInvalidTypeRejectionErr(accept),\r\n  ];\r\n}\r\n\r\nexport function fileMatchSize(file, minSize, maxSize) {\r\n  if (isDefined(file.size)) {\r\n    if (isDefined(minSize) && isDefined(maxSize)) {\r\n      if (file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];\r\n      if (file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];\r\n    } else if (isDefined(minSize) && file.size < minSize)\r\n      return [false, getTooSmallRejectionErr(minSize)];\r\n    else if (isDefined(maxSize) && file.size > maxSize)\r\n      return [false, getTooLargeRejectionErr(maxSize)];\r\n  }\r\n  return [true, null];\r\n}\r\n\r\nfunction isDefined(value) {\r\n  return value !== undefined && value !== null;\r\n}\r\n\r\nexport function allFilesAccepted({\r\n  files,\r\n  accept,\r\n  minSize,\r\n  maxSize,\r\n  multiple,\r\n}) {\r\n  if (!multiple && files.length > 1) {\r\n    return false;\r\n  }\r\n\r\n  return files.every((file) => {\r\n    const [accepted] = fileAccepted(file, accept);\r\n    const [sizeMatch] = fileMatchSize(file, minSize, maxSize);\r\n    return accepted && sizeMatch;\r\n  });\r\n}\r\n\r\n// React's synthetic events has event.isPropagationStopped,\r\n// but to remain compatibility with other libs (Preact) fall back\r\n// to check event.cancelBubble\r\nexport function isPropagationStopped(event) {\r\n  if (typeof event.isPropagationStopped === \"function\") {\r\n    return event.isPropagationStopped();\r\n  } else if (typeof event.cancelBubble !== \"undefined\") {\r\n    return event.cancelBubble;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isEvtWithFiles(event) {\r\n  if (!event.dataTransfer) {\r\n    return !!event.target && !!event.target.files;\r\n  }\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\r\n  return Array.prototype.some.call(\r\n    event.dataTransfer.types,\r\n    (type) => type === \"Files\" || type === \"application/x-moz-file\"\r\n  );\r\n}\r\n\r\nexport function isKindFile(item) {\r\n  return typeof item === \"object\" && item !== null && item.kind === \"file\";\r\n}\r\n\r\n// allow the entire document to be a drag target\r\nexport function onDocumentDragOver(event) {\r\n  event.preventDefault();\r\n}\r\n\r\nfunction isIe(userAgent) {\r\n  return (\r\n    userAgent.indexOf(\"MSIE\") !== -1 || userAgent.indexOf(\"Trident/\") !== -1\r\n  );\r\n}\r\n\r\nfunction isEdge(userAgent) {\r\n  return userAgent.indexOf(\"Edge/\") !== -1;\r\n}\r\n\r\nexport function isIeOrEdge(userAgent = window.navigator.userAgent) {\r\n  return isIe(userAgent) || isEdge(userAgent);\r\n}\r\n\r\n/**\r\n * This is intended to be used to compose event handlers\r\n * They are executed in order until one of them calls `event.isPropagationStopped()`.\r\n * Note that the check is done on the first invoke too,\r\n * meaning that if propagation was stopped before invoking the fns,\r\n * no handlers will be executed.\r\n *\r\n * @param {Function} fns the event hanlder functions\r\n * @return {Function} the event handler to add to an element\r\n */\r\nexport function composeEventHandlers(...fns) {\r\n  return (event, ...args) =>\r\n    fns.some((fn) => {\r\n      if (!isPropagationStopped(event) && fn) {\r\n        fn(event, ...args);\r\n      }\r\n      return isPropagationStopped(event);\r\n    });\r\n}\r\n","<script>\r\n  import { fromEvent } from \"file-selector\";\r\n  import {\r\n    allFilesAccepted,\r\n    composeEventHandlers,\r\n    fileAccepted,\r\n    fileMatchSize,\r\n    isEvtWithFiles,\r\n    isIeOrEdge,\r\n    isPropagationStopped,\r\n    onDocumentDragOver,\r\n    TOO_MANY_FILES_REJECTION\r\n  } from \"./../utils/index\";\r\n  import { onMount, onDestroy, createEventDispatcher } from \"svelte\";\r\n\r\n  //props\r\n  /**\r\n   * Set accepted file types.\r\n   * See https://github.com/okonet/attr-accept for more information.\r\n   */\r\n  export let accept; // string or string[]\r\n  export let disabled = false;\r\n  export let getFilesFromEvent = fromEvent;\r\n  export let maxSize = Infinity;\r\n  export let minSize = 0;\r\n  export let multiple = true;\r\n  export let preventDropOnDocument = true;\r\n  export let noClick = false;\r\n  export let noKeyboard = false;\r\n  export let noDrag = false;\r\n  export let noDragEventsBubbling = false;\r\n  export let containerClasses = \"\";\r\n  export let containerStyles = \"\";\r\n  export let disableDefaultStyles = false;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  //state\r\n\r\n  let state = {\r\n    isFocused: false,\r\n    isFileDialogActive: false,\r\n    isDragActive: false,\r\n    isDragAccept: false,\r\n    isDragReject: false,\r\n    draggedFiles: [],\r\n    acceptedFiles: [],\r\n    fileRejections: []\r\n  };\r\n\r\n  let rootRef;\r\n  let inputRef;\r\n\r\n  function resetState() {\r\n    state.isFileDialogActive = false;\r\n    state.isDragActive = false;\r\n    state.draggedFiles = [];\r\n    state.acceptedFiles = [];\r\n    state.fileRejections = [];\r\n  }\r\n\r\n  // Fn for opening the file dialog programmatically\r\n  function openFileDialog() {\r\n    if (inputRef) {\r\n      inputRef.value = null; // TODO check if null needs to be set\r\n      state.isFileDialogActive = true;\r\n      inputRef.click();\r\n    }\r\n  }\r\n\r\n  // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone\r\n  function onKeyDownCb(event) {\r\n    // Ignore keyboard events bubbling up the DOM tree\r\n    if (!rootRef || !rootRef.isEqualNode(event.target)) {\r\n      return;\r\n    }\r\n\r\n    if (event.keyCode === 32 || event.keyCode === 13) {\r\n      event.preventDefault();\r\n      openFileDialog();\r\n    }\r\n  }\r\n\r\n  // Update focus state for the dropzone\r\n  function onFocusCb() {\r\n    state.isFocused = true;\r\n  }\r\n  function onBlurCb() {\r\n    state.isFocused = false;\r\n  }\r\n\r\n  // Cb to open the file dialog when click occurs on the dropzone\r\n  function onClickCb() {\r\n    if (noClick) {\r\n      return;\r\n    }\r\n\r\n    // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()\r\n    // to ensure React can handle state changes\r\n    // See: https://github.com/react-dropzone/react-dropzone/issues/450\r\n    if (isIeOrEdge()) {\r\n      setTimeout(openFileDialog, 0);\r\n    } else {\r\n      openFileDialog();\r\n    }\r\n  }\r\n\r\n  function onDragEnterCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    dragTargetsRef = [...dragTargetsRef, event.target];\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      Promise.resolve(getFilesFromEvent(event)).then(draggedFiles => {\r\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\r\n          return;\r\n        }\r\n\r\n        state.draggedFiles = draggedFiles;\r\n        state.isDragActive = true;\r\n\r\n        dispatch(\"dragenter\", {\r\n          dragEvent: event\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  function onDragOverCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    if (event.dataTransfer) {\r\n      try {\r\n        event.dataTransfer.dropEffect = \"copy\";\r\n      } catch {} /* eslint-disable-line no-empty */\r\n    }\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      dispatch(\"dragover\", {\r\n        dragEvent: event\r\n      });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function onDragLeaveCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    // Only deactivate once the dropzone and all children have been left\r\n    const targets = dragTargetsRef.filter(\r\n      target => rootRef && rootRef.contains(target)\r\n    );\r\n    // Make sure to remove a target present multiple times only once\r\n    // (Firefox may fire dragenter/dragleave multiple times on the same element)\r\n    const targetIdx = targets.indexOf(event.target);\r\n    if (targetIdx !== -1) {\r\n      targets.splice(targetIdx, 1);\r\n    }\r\n    dragTargetsRef = targets;\r\n    if (targets.length > 0) {\r\n      return;\r\n    }\r\n\r\n    state.isDragActive = false;\r\n    state.draggedFiles = [];\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      dispatch(\"dragleave\", {\r\n        dragEvent: event\r\n      });\r\n    }\r\n  }\r\n\r\n  function onDropCb(event) {\r\n    event.preventDefault();\r\n    stopPropagation(event);\r\n\r\n    dragTargetsRef = [];\r\n\r\n    if (isEvtWithFiles(event)) {\r\n      Promise.resolve(getFilesFromEvent(event)).then(files => {\r\n        if (isPropagationStopped(event) && !noDragEventsBubbling) {\r\n          return;\r\n        }\r\n\r\n        const acceptedFiles = [];\r\n        const fileRejections = [];\r\n\r\n        files.forEach(file => {\r\n          const [accepted, acceptError] = fileAccepted(file, accept);\r\n          const [sizeMatch, sizeError] = fileMatchSize(file, minSize, maxSize);\r\n          if (accepted && sizeMatch) {\r\n            acceptedFiles.push(file);\r\n          } else {\r\n            const errors = [acceptError, sizeError].filter(e => e);\r\n            fileRejections.push({ file, errors });\r\n          }\r\n        });\r\n\r\n        if (!multiple && acceptedFiles.length > 1) {\r\n          // Reject everything and empty accepted files\r\n          acceptedFiles.forEach(file => {\r\n            fileRejections.push({ file, errors: [TOO_MANY_FILES_REJECTION] });\r\n          });\r\n          acceptedFiles.splice(0);\r\n        }\r\n\r\n        state.acceptedFiles = acceptedFiles;\r\n        state.fileRejections = fileRejections;\r\n\r\n        dispatch(\"drop\", {\r\n          acceptedFiles,\r\n          fileRejections,\r\n          event\r\n        });\r\n\r\n        if (fileRejections.length > 0) {\r\n          dispatch(\"droprejected\", {\r\n            fileRejections,\r\n            event\r\n          });\r\n        }\r\n\r\n        if (acceptedFiles.length > 0) {\r\n          dispatch(\"dropaccepted\", {\r\n            acceptedFiles,\r\n            event\r\n          });\r\n        }\r\n      });\r\n    }\r\n    resetState();\r\n  }\r\n\r\n  function composeHandler(fn) {\r\n    return disabled ? null : fn;\r\n  }\r\n\r\n  function composeKeyboardHandler(fn) {\r\n    return noKeyboard ? null : composeHandler(fn);\r\n  }\r\n\r\n  function composeDragHandler(fn) {\r\n    return noDrag ? null : composeHandler(fn);\r\n  }\r\n\r\n  function stopPropagation(event) {\r\n    if (noDragEventsBubbling) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  let dragTargetsRef = [];\r\n  function onDocumentDrop(event) {\r\n    if (rootRef && rootRef.contains(event.target)) {\r\n      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    dragTargetsRef = [];\r\n  }\r\n\r\n  // Update file dialog active state when the window is focused on\r\n  function onWindowFocus() {\r\n    // Execute the timeout only if the file dialog is opened in the browser\r\n    if (state.isFileDialogActive) {\r\n      setTimeout(() => {\r\n        if (inputRef) {\r\n          const { files } = inputRef;\r\n\r\n          if (!files.length) {\r\n            state.isFileDialogActive = false;\r\n            dispatch(\"filedialogcancel\");\r\n          }\r\n        }\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    window.addEventListener(\"focus\", onWindowFocus, false);\r\n    if (preventDropOnDocument) {\r\n      document.addEventListener(\"dragover\", onDocumentDragOver, false);\r\n      document.addEventListener(\"drop\", onDocumentDrop, false);\r\n    }\r\n  });\r\n\r\n  onDestroy(() => {\r\n    window.removeEventListener(\"focus\", onWindowFocus, false);\r\n    if (preventDropOnDocument) {\r\n      document.removeEventListener(\"dragover\", onDocumentDragOver);\r\n      document.removeEventListener(\"drop\", onDocumentDrop);\r\n    }\r\n  });\r\n\r\n  function onInputElementClick(event) {\r\n    event.stopPropagation();\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .dropzone {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    border-width: 2px;\r\n    border-radius: 2px;\r\n    border-color: #eeeeee;\r\n    border-style: dashed;\r\n    background-color: #fafafa;\r\n    color: #bdbdbd;\r\n    outline: none;\r\n    transition: border 0.24s ease-in-out;\r\n  }\r\n  .dropzone:focus {\r\n    border-color: #2196f3;\r\n  }\r\n</style>\r\n\r\n<div\r\n  bind:this={rootRef}\r\n  tabindex=\"0\"\r\n  class=\"{disableDefaultStyles ? '' : 'dropzone'}\r\n  {containerClasses}\"\r\n  style={containerStyles}\r\n  on:keydown={composeKeyboardHandler(onKeyDownCb)}\r\n  on:focus={composeKeyboardHandler(onFocusCb)}\r\n  on:blur={composeKeyboardHandler(onBlurCb)}\r\n  on:click={composeHandler(onClickCb)}\r\n  on:dragenter={composeDragHandler(onDragEnterCb)}\r\n  on:dragover={composeDragHandler(onDragOverCb)}\r\n  on:dragleave={composeDragHandler(onDragLeaveCb)}\r\n  on:drop={composeDragHandler(onDropCb)}>\r\n  <input\r\n    {accept}\r\n    {multiple}\r\n    type=\"file\"\r\n    autocomplete=\"off\"\r\n    tabindex=\"-1\"\r\n    on:change={onDropCb}\r\n    on:click={onInputElementClick}\r\n    bind:this={inputRef}\r\n    style=\"display: none;\" />\r\n  <slot>\r\n    <p>Drag 'n' drop some files here, or click to select files</p>\r\n  </slot>\r\n</div>\r\n","<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\n\n<svg\n   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n   xmlns:cc=\"http://creativecommons.org/ns#\"\n   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   width=\"1618px\"\n   height=\"336px\"\n   viewBox=\"0 0 1618 336\"\n   version=\"1.1\"\n   id=\"SVGRoot\"\n   inkscape:version=\"0.92.1 r15371\"\n   sodipodi:docname=\"logo.svg\">\n  <sodipodi:namedview\n     id=\"base\"\n     pagecolor=\"#ffffff\"\n     bordercolor=\"#666666\"\n     borderopacity=\"1.0\"\n     inkscape:pageopacity=\"0.0\"\n     inkscape:pageshadow=\"2\"\n     inkscape:zoom=\"0.7\"\n     inkscape:cx=\"1088.014\"\n     inkscape:cy=\"-64.020234\"\n     inkscape:document-units=\"px\"\n     inkscape:current-layer=\"layer1\"\n     showgrid=\"false\"\n     inkscape:window-width=\"1920\"\n     inkscape:window-height=\"969\"\n     inkscape:window-x=\"0\"\n     inkscape:window-y=\"42\"\n     inkscape:window-maximized=\"1\" />\n  <defs\n     id=\"defs10\" />\n  <metadata\n     id=\"metadata13\">\n    <rdf:RDF>\n      <cc:Work\n         rdf:about=\"\">\n        <dc:format>image/svg+xml</dc:format>\n        <dc:type\n           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n        <dc:title></dc:title>\n      </cc:Work>\n    </rdf:RDF>\n  </metadata>\n  <g\n     id=\"layer1\"\n     inkscape:groupmode=\"layer\"\n     inkscape:label=\"Layer 1\">\n    <g\n       id=\"g70\"\n       transform=\"matrix(1.0303631,0,0,1.0303631,60.239941,-440.21732)\">\n      <path\n         style=\"fill:#d0d0d0;fill-opacity:1\"\n         d=\"m 1259.9974,718.79875 c -21.3415,-4.25505 -38.1156,-12.19142 -54.1473,-25.61881 -6.3346,-5.30554 -8.7072,-6.74714 -8.7072,-5.29053 0,0.29274 1.3766,4.10201 3.0592,8.46504 3.8661,10.02504 3.7558,15.32474 -0.3828,18.40273 -2.7892,2.07439 -3.5024,2.09997 -58.5442,2.09997 -52.0673,0 -55.9016,-0.11856 -58.4802,-1.80827 -1.5177,-0.99454 -3.0424,-2.56954 -3.3882,-3.5 -0.3458,-0.93045 -1.5101,-2.90067 -2.5874,-4.37827 -2.2019,-3.02017 -1.8499,-9.06856 0.6748,-11.59321 1.4949,-1.49493 15.7072,-6.49517 16.424,-5.77838 0.2299,0.22994 -2.5557,1.33657 -6.1903,2.45918 -9.1604,2.82937 -10.4119,3.65988 -11.1082,7.37151 -0.9579,5.10582 0.8377,8.44648 5.2281,9.72698 2.6276,0.76634 20.5134,1.0136 58.134,0.80368 l 54.3388,-0.30322 1.9112,-2.36078 c 1.0512,-1.29844 1.9112,-3.24746 1.9112,-4.33116 0,-1.59599 -3.1675,-10.12814 -11.6271,-31.31943 -0.2221,-0.55626 3.7657,3.05489 8.8617,8.02476 15.8316,15.43982 33.3012,25.44973 53.2654,30.52054 10.5583,2.68176 32.3712,3.78311 42.5574,2.14876 3.5434,-0.56853 13.1926,-2.16565 21.4426,-3.54916 8.25,-1.3835 18.4949,-2.82059 22.7665,-3.19353 5.4104,-0.47237 8.5198,-1.27068 10.25,-2.63161 l 2.4835,-1.95355 v -49.27243 c 0,-48.82161 -0.019,-49.28986 -2.105,-51.17742 -2.0109,-1.81984 -4.3393,-1.90499 -52.0883,-1.90499 h -49.9834 l -1.9117,2.36078 c -1.0514,1.29844 -1.9116,1.93068 -1.9116,1.40499 0,-0.52569 0.9469,-1.81304 2.1042,-2.86078 1.9989,-1.80959 4.5261,-1.9189 50.4659,-2.18266 41.5515,-0.23857 48.8766,-0.0625 52.0179,1.25 2.0109,0.84022 4.0513,1.52767 4.5341,1.52767 0.4907,0 0.8779,-19.63615 0.8779,-44.52144 v -44.52144 l -2.5271,-1.15143 c -1.8052,-0.82249 -2.8348,-0.84376 -3.6041,-0.0745 -0.9584,0.95833 -7.4033,26.31093 -15.4482,60.76878 -3.1498,13.49152 -5.7295,17.5 -11.2619,17.5 -4.6737,0 -5.9573,-0.85765 -9.6823,-6.46954 -3.4276,-5.16388 -3.4738,-5.37653 -3.2933,-15.13397 l 0.1832,-9.89649 0.5668,10.83399 c 0.4801,9.17568 0.864,11.05074 2.508,12.25 3.1977,2.33262 8.1913,2.13997 10.7031,-0.4129 0.9043,-0.9191 2.8522,-6.84609 4.3286,-13.17109 4.0617,-17.4008 13.3524,-55.9402 14.645,-60.75 0.6282,-2.3375 1.5516,-4.25 2.052,-4.25 0.5004,0 2.6854,0.90579 4.8554,2.01286 7.8187,3.98878 7.2956,-4.04198 6.4637,99.23861 -0.4086,50.73669 -0.41,95.5618 0,99.61135 1.2358,12.29835 -6.4213,11.13718 73.4416,11.13718 h 68.9274 l 2.0726,-2.63486 c 2.0127,-2.5626 2.0695,-3.69695 2.0695,-41.36514 0,-37.66819 -0.057,-38.80254 -2.0726,-41.36514 -4.0788,-5.18532 -11.84,-2.72791 -13.7865,4.36514 -0.9165,3.33963 -0.9647,3.37047 -1.0507,0.67308 -0.1338,-4.19247 4.7177,-8.67308 9.3909,-8.67308 2.9781,0 4.4276,0.80411 8.0223,4.45041 2.6877,2.72636 4.6216,5.72863 4.9919,7.75 0.3325,1.81477 0.4696,20.05233 0.3046,40.5279 l -0.2999,37.22831 -2.7724,2.77169 -2.7723,2.77169 -68.2277,0.24638 c -71.851,0.25946 -71.6091,0.27314 -74.1294,-4.1918 -2.7089,-4.79887 -3.8978,-5.45625 -8.1039,-4.48081 -2.1968,0.50948 -9.3943,1.58894 -15.9943,2.3988 -6.6,0.80985 -18.525,2.6089 -26.5,3.99789 -16.3281,2.84384 -32.9219,3.20888 -44.1455,0.97114 z m -262.50012,-1.14719 c -3.0945,-0.58578 -6.3418,-4.48345 -9.3584,-11.23285 -1.1763,-2.63191 -0.5214,-4.62469 13.00032,-39.56156 3.4059,-8.8 7.906,-20.5 10.0002,-26 2.0941,-5.5 7.0457,-18.325 11.0035,-28.5 3.9578,-10.175 8.9094,-23 11.0035,-28.5 2.0942,-5.5 6.5501,-17.0875 9.9021,-25.75 14.1152,-36.47834 18.0944,-47.08907 18.0944,-48.2494 0,-1.37675 -8.7891,-5.54891 -18.8114,-8.92969 -5.5511,-1.87252 -7.1642,-2.96275 -9.8472,-6.65514 -1.7647,-2.42867 -3.2209,-5.31577 -3.2359,-6.41577 -0.019,-1.4371 0.3506,-1.1322 1.3153,1.08331 1.1656,2.6771 2.5707,3.5122 10.6653,6.33883 8.2008,2.86371 17.831,7.24295 21.6999,9.86787 0.9934,0.67403 -0.4599,5.40333 -6.3894,20.79124 -4.2214,10.95531 -9.5839,24.86875 -11.9165,30.91875 -25.4531,66.01585 -48.54692,125.98786 -51.79272,134.5 -4.3997,11.53841 -4.882,15.23399 -2.3222,17.7938 1.5445,1.54451 4.7567,1.66859 35.41672,1.36813 23.1026,-0.2264 34.5023,-0.70031 36.209,-1.50529 3.7326,-1.76052 5.4026,-5.93435 4.0338,-10.08172 -1.1581,-3.50907 -1.9385,-3.97721 -11.8395,-7.10155 -2.9231,-0.92243 -5.141,-1.85094 -4.9285,-2.06336 0.2124,-0.21242 3.5765,0.65877 7.4757,1.93598 12.0538,3.9482 18.0874,12.49107 14.1043,19.96975 -1.7989,3.37739 -3.9096,4.52711 -9.3367,5.08551 -6.446,0.66325 -61.3235,1.42736 -64.14562,0.89316 z m -231.71185,-4.30824 c -3.41938,-1.0419 -6.64255,-3.77916 -6.64255,-5.64116 0,-0.73975 -0.39541,-1.34501 -0.87868,-1.34501 -1.39007,0 -3.33043,-5.57274 -2.83949,-8.15506 0.35644,-1.87486 0.47311,-1.71564 0.58199,0.79428 0.0749,1.72656 0.99613,4.20156 2.04717,5.5 l 1.91099,2.36078 48.93408,0.28575 c 47.22636,0.27578 49.018,0.21781 51.33901,-1.66109 l 2.40493,-1.94685 0.5,-62.83891 0.5,-62.8389 22.75927,-45 c 15.17546,-30.00518 22.75618,-46.03132 22.75,-48.09501 -0.0192,-6.41676 0.051,-6.40499 -38.18302,-6.40499 -32.8666,0 -34.60002,0.0925 -36.26843,1.93611 -2.28287,2.52254 -2.42996,8.44271 -0.26908,10.83045 0.92536,1.02252 4.27646,2.67111 7.44687,3.66355 6.62849,2.0749 16.89492,6.66443 19.63692,8.77852 1.78866,1.37906 1.54605,2.08714 -5.41669,15.80932 -7.15205,14.09526 -7.31902,14.32205 -8.87253,12.05164 -1.54591,-2.25929 -6.78548,-11.7467 -20.47228,-37.06959 -3.71587,-6.875 -7.63934,-13.4 -8.71881,-14.5 -1.8992,-1.93531 -3.32807,-2.00208 -44.17745,-2.06428 -41.86552,-0.0637 -42.26441,-0.0837 -48.21477,-2.41395 -8.90153,-3.48595 -22.50755,-3.92738 -33.08453,-1.07341 -20.51399,5.53527 -36.33365,20.29326 -43.97392,41.02279 -0.73079,1.98279 -1.3315,2.7222 -1.37109,1.6877 -0.132,-3.44928 9.20363,-19.84091 14.65146,-25.72521 9.44032,-10.19667 22.94349,-17.12066 38.90037,-19.94684 7.83798,-1.38822 15.76776,-0.43374 26.28426,3.16373 4.91598,1.68165 9.13773,1.84947 46.52749,1.84947 45.54928,0 42.38524,-0.4414 49.0622,6.84443 1.80465,1.96921 8.36677,12.94379 14.5825,24.38796 6.21573,11.44418 11.69663,20.67582 12.17977,20.51477 0.48314,-0.16104 3.21013,-4.6927 6.05997,-10.07035 6.11785,-11.54438 6.47264,-10.79791 -7.50924,-15.79935 -9.35734,-3.34721 -12.74398,-6.11203 -15.47772,-12.63588 -1.68102,-4.01162 -0.93763,-7.32355 2.33365,-10.39675 l 2.49596,-2.34483 h 33.98221 33.98221 l 4.93722,5.17565 c 3.51801,3.6879 4.93958,5.98752 4.9454,8 0.005,1.70706 -9.09371,20.87732 -23,48.45949 l -23.00817,45.63514 -0.006,59.36486 c -0.003,36.49318 -0.39086,60.75188 -1.00561,62.96495 -0.55002,1.98005 -1.9444,4.45505 -3.09863,5.5 -1.99314,1.80444 -4.46778,1.90888 -49.24439,2.07833 -25.93018,0.0981 -48.43164,-0.21338 -50.00324,-0.69225 z M 2.142883,711.78548 c -4.621393,-1.77021 -6.352246,-3.30054 -9.033568,-7.987 L -9.857117,698.6137 V 596.07989 493.54608 l -9.25,-4.53656 c -5.0875,-2.49511 -12.021102,-5.42463 -15.408004,-6.51005 -3.386902,-1.08541 -7.050621,-2.4512 -8.141598,-3.03507 -2.101218,-1.12454 -7.72306,-9.91792 -6.879865,-10.76112 0.27327,-0.27327 0.780073,0.39549 1.126228,1.48613 0.693491,2.185 0.495629,2.08458 12.553239,6.37057 9.909383,3.52238 14.525152,5.75615 21.75,10.52576 l 5.25,3.46588 v 104.347 104.347 l 2.418554,2.80577 2.418555,2.80576 51.831441,-0.30696 c 28.5073,-0.16883 53.110677,-0.55125 54.674187,-0.84982 2.05701,-0.39282 3.24388,-1.50295 4.29409,-4.01645 1.53409,-3.67161 1.12083,-6.53831 -1.41665,-9.82677 -0.8488,-1.1 0.55443,0.11131 3.11828,2.69179 3.6782,3.70207 4.65843,5.38965 4.6468,8 -0.0222,4.97857 -2.08534,8.15839 -6.16379,9.49988 -3.80018,1.24996 -101.851101,2.87445 -104.821467,1.73666 z m 402.807397,-2.48925 c -1.48093,-0.58712 -3.84343,-3.03122 -5.25,-5.43135 -3.08919,-5.27131 -3.31607,-6.74194 -0.48482,-3.14259 l 2.07258,2.63486 44.67742,-0.086 c 24.57258,-0.0473 54.64427,-0.38624 66.82597,-0.7532 25.49057,-0.76787 26.35145,-1.05081 26.35145,-8.6608 0,-5.3387 -1.65271,-6.84082 -10.54458,-9.58378 -7.03161,-2.16911 -17.36871,-6.84892 -20.85178,-9.44002 -1.85903,-1.38295 -1.85685,-1.51473 0.11063,-6.69346 l 2.00699,-5.28274 34.68244,-0.26301 34.68244,-0.263 1.93497,4.263 c 1.06423,2.34466 1.94485,4.78691 1.95693,5.42724 0.0121,0.64032 -2.11554,2.46885 -4.72804,4.06339 -5.08822,3.10559 -18.22492,8.63079 -18.90459,7.95112 -0.2258,-0.22579 2.20669,-1.38931 5.40552,-2.58559 9.18202,-3.43385 16.24907,-7.83236 16.24907,-10.11338 0,-1.93235 -0.77716,-1.97977 -32.4433,-1.97977 -32.39236,0 -32.44574,0.003 -34,2.22251 -2.87112,4.09911 -2.00604,5.40479 5.6933,8.59298 3.9875,1.65118 9.10188,3.49419 11.36528,4.09559 5.87923,1.56215 13.38472,9.6876 13.38472,14.49032 0,4.5848 -3.38726,8.43599 -8.5,9.66421 -5.86782,1.4096 -128.29208,2.2216 -131.6926,0.87347 z m 855.69262,0.45144 c -1.65,-0.24562 -6.825,-1.39817 -11.5,-2.56123 -72.0462,-17.92378 -108.4822,-104.11643 -73.6938,-174.32929 12.8555,-25.94604 38.1097,-48.46947 64.1938,-57.25232 25.3588,-8.53863 48.4001,-8.30455 73,0.74164 l 6,2.20639 79.1687,-0.17654 c 56.572,-0.12615 79.7628,0.14139 81.25,0.93733 2.0534,1.09896 2.0813,1.63272 2.0813,39.87868 0,40.8835 -0.031,41.16482 -4.5776,41.16482 -3.1571,0 -4.1906,-1.75814 -5.9221,-10.07457 -2.0776,-9.9786 -5.964,-21.86947 -10.026,-30.67543 l -3.3442,-7.25 h -19.065 -19.0651 v 29 29 h 22.0657 c 13.2982,0 22.8343,0.41132 24,1.03518 1.7835,0.95447 1.9343,2.23264 1.9343,16.39301 0,13.08184 -0.2344,15.44779 -1.5818,15.96482 -0.87,0.33385 -11.67,0.60699 -24,0.60699 h -22.4182 v 36 36 h 25.3608 25.3609 l 3.529,-7.75 c 4.1667,-9.15037 8.0665,-21.19405 9.7951,-30.25 0.6824,-3.575 1.6421,-7.2875 2.1326,-8.25 1.2435,-2.43973 6.448,-2.31657 7.7864,0.18426 1.6018,2.99288 1.4012,76.18545 -0.2148,78.38456 -1.159,1.57716 -6.2395,1.68214 -69.75,1.44112 l -68.5,-0.25994 -0.2547,-101.71595 -0.2548,-101.71596 -5.7452,-3.88951 c -3.1599,-2.13923 -7.1513,-4.61187 -8.8696,-5.49475 l -3.1244,-1.60523 -1.7136,7.2107 c -0.9424,3.96588 -3.4913,14.6357 -5.6641,23.7107 -2.1729,9.075 -5.337,22.35 -7.0314,29.5 -5.2387,22.10557 -5.184,21.9578 -8.2512,22.32226 -4.6829,0.55646 -5.5891,-1.17139 -5.6089,-10.6947 -0.067,-32.30078 -12.6265,-59.04512 -31.5341,-67.14985 -10.4038,-4.45958 -18.1119,-1.39416 -27.9354,11.1095 -24.0955,30.66984 -31.769,84.89326 -17.9266,126.67549 7.6778,23.17476 21.3952,41.75453 33.5062,45.38308 3.1809,0.953 5.1988,0.90382 10.1872,-0.24828 l 6.2206,-1.43668 0.2656,-26.98621 0.2657,-26.9862 -4.7657,-3.1112 c -7.2775,-4.7511 -16.0337,-8.92183 -23.6882,-11.28318 -3.8074,-1.17455 -7.5199,-2.63131 -8.25,-3.23724 -2.0316,-1.68609 -1.6493,-6.61417 0.6069,-7.82161 1.2554,-0.67189 18.6018,-1.03518 49.4285,-1.03518 41.8433,0 47.6813,0.18697 49.0658,1.57143 1.3847,1.38474 1.5714,7.25077 1.5714,49.37755 0,37.03871 -0.2815,48.03398 -1.25,48.81775 -0.6875,0.5564 -5.075,1.32377 -9.75,1.70528 -8.3198,0.67894 -15.8953,1.83313 -33,5.02778 -8.3123,1.5525 -34.5451,2.77717 -40.5,1.89073 z m 133,-9.89052 c 0,-1.70603 -4.102,-1.68448 -5.5241,0.029 -1.2069,1.4542 -0.9868,1.59103 2.0875,1.29825 1.8901,-0.18 3.4366,-0.77727 3.4366,-1.32727 z m -61,-7.5 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 128.5,-2.5 c 1.0196,-1.22851 0.9512,-1.5 -0.3776,-1.5 -0.8923,0 -1.6224,0.675 -1.6224,1.5 0,0.825 0.1699,1.5 0.3776,1.5 0.2076,0 0.9377,-0.675 1.6224,-1.5 z m -168.8358,-4.7358 c -1.1965,-1.19655 -6.7223,-0.56845 -6.4732,0.7358 0.105,0.55 1.23,1.26604 2.5,1.5912 2.6537,0.67947 5.3819,-0.91832 3.9732,-2.327 z m 145.8358,-0.7642 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 38,-6.62244 c 0,-1.3288 -0.2715,-1.39713 -1.5,-0.37756 -0.825,0.68469 -1.5,1.41479 -1.5,1.62244 0,0.20766 0.675,0.37756 1.5,0.37756 0.825,0 1.5,-0.7301 1.5,-1.62244 z m 5.4349,-3.35281 c 2.4335,-0.92522 3.4426,-3.3644 1.8094,-4.37376 -0.4156,-0.25688 -1.9906,-0.23098 -3.5,0.0576 -2.6032,0.49763 -3.7196,2.98278 -2.0776,4.62478 0.8406,0.84064 0.7194,0.85057 3.7682,-0.30858 z m 1.0459,-10.87733 c -0.5759,-0.57584 -4.415,4.08223 -4.4116,5.35258 0,0.55 1.0916,-0.33241 2.4225,-1.96092 1.3309,-1.62851 2.226,-3.15475 1.9891,-3.39166 z m -152.4808,-0.14742 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 154.2235,-4.21084 c -0.1521,-0.90109 0.1854,-1.92384 0.75,-2.27277 1.9141,-1.18296 1.1292,-2.64172 -0.8511,-1.58188 -2.4867,1.33084 -3.5473,6.30349 -1.243,5.82764 0.8913,-0.18406 1.4962,-1.07191 1.3441,-1.97299 z m 2.7765,-10.34818 c 0,-0.85746 -0.4573,-1.27636 -1.0163,-0.9309 -0.559,0.34546 -0.7574,1.04702 -0.441,1.55902 0.8572,1.38704 1.4573,1.12841 1.4573,-0.62812 z m -87,-4.05901 c 0,-0.825 -0.45,-1.22189 -1,-0.88197 -0.55,0.33992 -1,1.29303 -1,2.11803 0,0.825 0.45,1.22189 1,0.88197 0.55,-0.33992 1,-1.29303 1,-2.11803 z m 7.4252,0.49693 c -0.6481,-1.04858 -2.4252,-0.20682 -2.4252,1.14873 0,0.50028 0.6724,0.65157 1.4943,0.3362 0.8218,-0.31537 1.2407,-0.98359 0.9309,-1.48493 z m -2.4252,-1.8789 c 0,-0.55 -0.9,-1 -2,-1 -1.1,0 -2,0.45 -2,1 0,0.55 0.9,1 2,1 1.1,0 2,-0.45 2,-1 z m -7,-1.55902 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m 11.342,0.23436 c 0.3619,0.3619 0.658,-0.61175 0.658,-2.16366 0,-2.75831 -0.045,-2.78102 -2,-1.01168 -2.2913,2.07355 -2.9126,5.50225 -0.658,3.63112 0.7381,-0.61257 1.6381,-0.81767 2,-0.45578 z m -6.842,-20.67534 c -0.3399,-0.55 -1.293,-1 -2.118,-1 -0.825,0 -1.2219,0.45 -0.882,1 0.3399,0.55 1.293,1 2.118,1 0.825,0 1.2219,-0.45 0.882,-1 z m 54.5,-36 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -24.4894,-3 c 0.7408,0 2.9773,-1.53753 4.9698,-3.41674 3.0125,-2.84114 3.3193,-3.47573 1.8212,-3.76689 -3.6941,-0.71798 -8.4458,0.36551 -7.8952,1.8003 0.3035,0.79079 -0.098,1.38333 -0.9378,1.38333 -0.8077,0 -1.4686,0.4132 -1.4686,0.91821 0,0.50502 -0.3031,1.70814 -0.6736,2.67361 -0.5284,1.37695 -0.2952,1.61018 1.0818,1.08179 0.9654,-0.37049 2.3615,-0.67361 3.1024,-0.67361 z M 1251.5611,478.75016 c 2.4642,-0.9456 1.8616,-2.61231 -0.6682,-1.848 -3.0162,0.91126 -4.6082,2.45499 -2.5318,2.45499 0.89,0 2.33,-0.27315 3.2,-0.60699 z m 10.8318,-4.05529 c -0.6875,-0.27741 -1.8125,-0.27741 -2.5,0 -0.6875,0.27741 -0.125,0.50438 1.25,0.50438 1.375,0 1.9375,-0.22697 1.25,-0.50438 z M 558.37929,708.23485 c -3.36165,-0.97023 -10.17699,-8.90898 -10.19688,-11.8777 -0.006,-0.825 0.55469,-0.38387 1.24492,0.98029 2.52682,4.99397 2.46929,4.98921 60.53129,5.00497 54.25943,0.0147 57.26317,-0.15639 59.41895,-3.38496 1.56821,-2.34862 0.59464,-7.08114 -3.73469,-18.1542 -2.475,-6.33028 -4.5,-11.81164 -4.5,-12.1808 0,-0.36916 1.6875,0.94881 3.75,2.92881 10.6638,10.23726 27.57729,16.80589 43.27333,16.80589 9.14805,0 22.73495,-3.26321 31.85889,-7.65164 9.7676,-4.69803 21.22296,-15.93953 26.34011,-25.84836 10.60229,-20.53025 10.79276,-47.55027 0.47178,-66.92617 -5.95361,-11.17689 -17.33023,-21.29292 -32.69411,-29.07141 -6.56346,-3.32298 -18.60813,-11.34144 -23.53784,-15.66979 -9.14482,-8.02926 -11.28439,-18.54391 -5.97967,-29.38637 5.73669,-11.72537 16.09747,-14.37415 24.41535,-6.24188 5.88747,5.75609 13.8333,24.27522 17.20939,40.10945 1.22322,5.73702 4.27313,9.68617 7.48058,9.68617 2.27062,0 6.26896,-2.20023 7.06078,-3.88545 0.41724,-0.888 1.00449,-8.25192 1.30501,-16.36426 l 0.5464,-14.74971 9.95397,18.24971 c 5.47469,10.03734 12.56219,23.30808 15.75,29.49053 l 5.79603,11.24082 v 46.60797 46.60797 l -2.93863,2.74509 c -1.61625,1.50981 -6.00375,4.34875 -9.75,6.30877 -6.73147,3.52187 -19.27143,8.12183 -20.04154,7.35172 -0.21867,-0.21867 2.66866,-1.3933 6.41629,-2.61028 8.1491,-2.64629 18.76057,-8.18237 22.56388,-11.77175 l 2.75,-2.59531 V 627.91383 581.8447 l -6.25,-12.02556 c -11.30599,-21.75374 -17.23869,-32.45127 -18,-32.45667 -0.4125,-0.003 -0.75251,3.48218 -0.75558,7.74468 -0.01,13.64985 -2.56825,18.25 -10.14998,18.25 -3.18798,0 -4.23293,-0.63751 -7.41987,-4.52674 -2.98415,-3.64177 -4.24641,-6.62507 -6.45657,-15.25987 -3.57669,-13.97364 -8.57777,-25.75649 -12.66809,-29.84681 -6.43749,-6.43749 -13.6853,-5.16281 -19.75581,3.47448 -2.46088,3.5014 -3.05264,5.46711 -3.37771,11.22004 -0.23647,4.18498 0.10209,8.17286 0.84643,9.96985 1.6161,3.90162 8.30894,9.38412 19.48718,15.96308 21.01501,12.36842 24.34912,14.70426 32.01476,22.42921 9.57478,9.64886 14.54389,18.45526 17.54592,31.0954 7.76063,32.67643 -6.61707,66.5575 -33.76476,79.5667 -22.94505,10.99528 -49.07364,9.59217 -69.5055,-3.73247 -3.76835,-2.45753 -4.50508,-1.08735 -2.38351,4.4329 3.62701,9.43738 4.01406,12.10823 2.28126,15.74196 -1.18586,2.48677 -2.58016,3.6261 -5.39372,4.40742 -4.82144,1.33889 -106.40206,1.28634 -111.05804,-0.0575 z m -203.30297,-1.85514 c -0.8616,-0.50414 -8.9616,-8.89895 -18,-18.65514 -9.03839,-9.75619 -23.40844,-25.2203 -31.93344,-34.3647 -8.525,-9.1444 -22.025,-23.67985 -30,-32.301 -7.975,-8.62115 -15.0625,-15.68087 -15.75,-15.68827 -0.96312,-0.0104 -1.25,5.11643 -1.25,22.33851 v 22.35196 l 6.75,3.04688 c 3.7125,1.67578 8.40136,3.56537 10.4197,4.19909 5.30533,1.66577 11.8303,9.05258 11.8303,13.39291 0,4.43264 -3.1586,8.32936 -7.79549,9.61718 -4.84946,1.34686 -42.61106,1.33252 -47.47429,-0.018 -2.73865,-0.76054 -4.78008,-2.40016 -7.46345,-5.99442 l -3.69368,-4.94756 h -28.7516 c -23.50647,0 -29.5959,-0.28665 -33.37973,-1.57129 -4.12661,-1.40102 -5.03088,-1.41015 -8.34461,-0.0843 -2.80364,1.1218 -9.24425,1.56572 -26.22202,1.80739 -20.26483,0.28845 -22.77729,0.14229 -25.234967,-1.46805 -1.50119,-0.98361 -3.13159,-2.84614 -3.62311,-4.13895 -0.49153,-1.29281 -1.37144,-2.64583 -1.95537,-3.00672 -0.58392,-0.36084 -1.06168,-1.12941 -1.06168,-1.70788 0,-0.57847 0.86147,0.0106 1.91438,1.30902 l 1.91439,2.36078 23.835607,-0.35869 c 29.21699,-0.43967 30.29429,-0.79352 29.3532,-9.64131 -0.32775,-3.0814 -1.73601,-4.24786 -7.34454,-6.08347 -2.84517,-0.9312 -7.3198,-2.76814 -9.94363,-4.08209 -4.20826,-2.1074 -4.64614,-2.62152 -3.71481,-4.36172 1.00147,-1.87126 2.17997,-1.97272 22.91359,-1.97272 19.3529,0 21.93009,0.1883 22.48836,1.64313 0.34679,0.90372 0.50743,1.76595 0.35699,1.91607 -0.94769,0.94563 -10.9456,5.44796 -14.27997,6.43066 -5.69916,1.67964 -7.50434,3.30164 -8.15809,7.33026 -0.47122,2.90377 -0.11501,3.99125 2.00014,6.10641 l 2.57347,2.57347 h 32.45756 32.45755 l 0.66075,3.91094 c 1.27409,7.54124 1.46369,7.58906 30.09226,7.58906 24.89454,0 25.40873,-0.0415 27.59386,-2.22663 2.44766,-2.44765 2.91237,-8.26298 0.85811,-10.73821 -0.64191,-0.77346 -4.17358,-2.37354 -7.84815,-3.55575 -9.50054,-3.05657 -18.20097,-7.90165 -19.2785,-10.73579 -1.01671,-2.67413 -1.06094,-46.47246 -0.0506,-50.06231 0.57932,-2.0583 3.68452,0.97075 27.65032,26.97229 14.84875,16.11004 30.82272,33.36086 35.49772,38.33515 4.675,4.97428 14.52031,15.64829 21.87846,23.72001 7.35816,8.07172 14.03247,14.92682 14.83179,15.23355 2.98052,1.14373 6.0058,0.48884 8.11544,-1.75676 l 2.17434,-2.31445 v -66.62519 -66.62518 l 3.65066,-0.31036 c 4.8642,-0.41354 6.89256,-3.38162 8.82754,-12.91727 2.7645,-13.62351 9.1455,-30.15099 12.07481,-31.27507 2.63244,-1.01016 6.96026,-0.70476 8.24699,0.58197 0.91898,0.91898 1.14277,21.93666 0.95563,89.75 l -0.24438,88.55 -0.26118,-86.25 -0.26118,-86.25 h -2.05951 c -2.89913,0 -8.24607,11.94288 -11.50955,25.70763 -3.21711,13.56915 -4.56081,16.31618 -9.19592,18.8 l -3.72391,1.99553 -0.5,65.16842 -0.5,65.16841 -2.42431,2.58001 c -2.53947,2.70255 -7.93583,3.47869 -11.14225,1.60256 z m -196.43344,-60.61148 6,-2.30687 -14,-0.0284 -14,-0.0284 5.84272,2.40231 c 3.21349,1.32128 6.11498,2.67459 6.44776,3.00737 0.33278,0.33278 1.30356,0.30259 2.15729,-0.0671 0.85372,-0.36967 4.25223,-1.71021 7.55223,-2.979 z m 833.4946,58.83892 c 0,-1.5125 1.3091,-6.125 2.9155,-10.25 1.6065,-4.125 5.69032,-14.7 9.07502,-23.5 8.1598,-21.21472 12.446,-32.32299 21.0293,-54.5 8.6373,-22.31644 15.5503,-40.2392 21.9856,-57 9.9072,-25.80344 15.2745,-39.72147 18.0848,-46.89635 2.7218,-6.94855 2.7918,-7.47672 1.1562,-8.72368 -3.8627,-2.94494 -17.1795,-9.29781 -24.1252,-11.50916 -8.2879,-2.63862 -11.0362,-5.28249 -9.1517,-8.80375 1.0866,-2.0303 1.7427,-2.06706 36.8959,-2.06706 h 35.7897 l 4.8359,12.25 c 2.6598,6.7375 5.8475,14.5 7.0838,17.25 1.2363,2.75 8.6237,20.975 16.4164,40.5 12.6118,31.59941 15.6507,39.06474 20.5573,50.5 0.7079,1.65 7.21,17.85 14.4491,36 7.2391,18.15 14.3098,35.7 15.7128,39 1.403,3.3 3.1273,7.35 3.8318,9 3.969,9.29571 6.4632,16.0385 6.4632,17.47241 0,3.99623 -0.4445,4.02759 -57.0892,4.02759 -52.1925,0 -54.7961,-0.0865 -57.0299,-1.89533 -1.991,-1.61221 -2.1942,-2.30629 -1.3608,-4.64642 1.1351,-3.18691 1.6328,-3.47991 10.9799,-6.46406 7.4599,-2.38166 18.5907,-7.75732 22.1688,-10.70657 l 2.1688,-1.78762 -2.8057,-7 -2.8056,-7 -36.985,-0.26204 -36.9849,-0.26205 -3.1355,7.69851 c -2.413,5.92449 -2.8458,7.89262 -1.8782,8.54087 8.1039,5.4294 24.7573,12.78471 28.9463,12.78471 1.801,0 4.811,3.58026 4.811,5.72251 0,0.70262 -0.9,2.17749 -2,3.27749 -1.9216,1.92157 -3.3333,2 -36,2 h -34.00002 l -0.01,-2.75 z m 106.00542,-5.85699 c 0,-0.21615 -0.675,-0.39301 -1.5,-0.39301 -0.825,0 -1.5,0.43588 -1.5,0.96862 0,0.53273 0.675,0.70959 1.5,0.39301 0.825,-0.31659 1.5,-0.75246 1.5,-0.96862 z m -86,-1.36163 c 0,-0.53273 -0.675,-0.70959 -1.5,-0.39301 -0.825,0.31659 -1.5,0.75246 -1.5,0.96862 0,0.21615 0.675,0.39301 1.5,0.39301 0.825,0 1.5,-0.43588 1.5,-0.96862 z m 88.971,-0.99232 c 2.4446,-1.54599 0.7125,-1.97861 -1.9725,-0.49267 -1.4485,0.80164 -1.8681,1.3912 -0.9985,1.40286 0.825,0.0111 2.162,-0.39852 2.971,-0.91019 z m 8.9447,-3.28906 c 0.4681,-1.2375 0.7214,-2.39472 0.5628,-2.57161 -0.4396,-0.49019 -4.4785,3.15676 -4.4785,4.04385 0,1.77941 3.1308,0.60225 3.9157,-1.47224 z m 15.0843,-5.75 c 0,-0.55 -0.6484,-1 -1.441,-1 -0.7925,0 -1.7191,0.45 -2.059,1 -0.3399,0.55 0.3085,1 1.441,1 1.1324,0 2.059,-0.45 2.059,-1 z m -30.0799,-55.25 c -1.1279,-2.8875 -3.636,-8.9608 -5.5735,-13.49622 -1.9375,-4.53542 -6.7938,-16.40902 -10.7917,-26.38578 -3.998,-9.97676 -7.5812,-17.63449 -7.9627,-17.01718 -0.3815,0.61732 -1.9781,4.61592 -3.548,8.88579 -1.5699,4.26986 -5.6385,14.96339 -9.0415,23.76339 -3.4029,8.8 -6.9994,18.25 -7.9922,21 -0.9928,2.75 -2.1245,5.7875 -2.5148,6.75 -0.6647,1.63903 0.8815,1.75 24.3827,1.75 h 25.0924 z m -41.2117,1.55267 c -2.1192,-0.55043 -2.1473,-0.43395 3.9408,-16.30267 13.2702,-34.58864 13.379,-34.8244 14.656,-31.75 0.2856,0.6875 4.7724,11.66852 9.9707,24.40227 l 9.4514,23.15226 -2.9886,0.59774 c -3.423,0.6846 -32.3274,0.60242 -35.0303,-0.0996 z m 34.9744,-1.91854 c 0.7232,-1.8845 -12.6927,-35.88413 -14.1595,-35.88413 -0.8917,0 -12.9986,29.99128 -14.2297,35.25 l -0.5268,2.25 h 14.148 c 12.1044,0 14.2375,-0.2334 14.768,-1.61587 z m -53.1417,-17.45066 c 1.1726,-1.89735 -0.5376,-2.36554 -2.2792,-0.62395 -1.5589,1.55895 -1.5617,1.69048 -0.035,1.69048 0.9104,0 1.9519,-0.47994 2.3144,-1.06653 z m -1.5411,-3.93347 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m 54,-19 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -40.5,-9 c 0.3399,-0.55 0.168,-1 -0.382,-1 -0.55,0 -1.2781,0.45 -1.618,1 -0.3399,0.55 -0.168,1 0.382,1 0.55,0 1.2781,-0.45 1.618,-1 z m 26,-74 c 0.3399,-0.55 0.168,-1 -0.382,-1 -0.55,0 -1.2781,0.45 -1.618,1 -0.3399,0.55 -0.168,1 0.382,1 0.55,0 1.2781,-0.45 1.618,-1 z M 769.15317,703.41573 c -8.14614,-0.47949 -9.53909,-0.81755 -9.83855,-2.38767 -0.84106,-4.40986 0.61894,-6.24049 6.04791,-7.58325 6.67624,-1.65125 21.9617,-8.84738 27.53035,-12.96082 l 4.25,-3.13938 v -48.96094 -48.96094 l -18.75,-34.90155 -18.75,-34.90154 -0.5,20.83556 c -0.42976,17.90875 -0.74064,21.07585 -2.21306,22.54611 -1.39484,1.39278 -2.16886,1.50285 -4.16678,0.59254 -1.944,-0.88574 -2.69201,-2.32479 -3.60082,-6.92734 -2.77142,-14.03553 -10.70339,-33.21513 -16.66819,-40.30388 -3.92607,-4.66588 -10.44729,-7.36811 -15.8324,-6.56056 -8.6275,1.29377 -17.00982,12.22386 -18.19716,23.72809 -1.15061,11.14841 7.74864,22.66777 25.55356,33.07699 4.46867,2.6125 11.8168,6.8875 16.32918,9.5 20.74844,12.01256 30.95561,29.91225 30.93567,54.25 -0.0188,22.93201 -9.21184,42.1834 -25.38998,53.16976 -24.89289,16.90443 -56.96363,15.46178 -77.37379,-3.48055 -6.2155,-5.7685 -6.27966,-5.79859 -8.81864,-4.13499 -1.40668,0.92169 -2.55759,1.85328 -2.55759,2.0702 0,0.21692 2.4696,6.5482 5.488,14.06951 5.13603,12.79807 5.38263,13.79155 3.84501,15.49059 -1.54928,1.71193 -4.77108,1.81548 -56.488,1.81548 -53.51168,0 -54.89363,-0.0486 -56.84501,-2 -4.21797,-4.21797 -1.95046,-7.04205 8.40908,-10.47316 9.42894,-3.12289 18.98872,-7.63459 22.99613,-10.85293 l 2.90522,-2.33317 -2.8132,-7.17037 -2.8132,-7.17037 h -37.1993 -37.19931 l -2.21973,6.25 c -1.22085,3.4375 -2.45069,6.99214 -2.73298,7.89919 -0.6857,2.20332 8.55376,7.60362 20.29372,11.86132 4.88046,1.76999 9.88607,3.60706 11.12357,4.08238 3.07285,1.18029 3.21303,7.32134 0.20389,8.93179 -3.23138,1.72938 -130.37372,2.70171 -132.40896,1.01261 -1.37261,-1.13917 -1.54493,-11.47411 -1.54493,-92.65973 v -91.37756 h -7.83114 -7.83113 l -2.80148,6.25 c -4.12775,9.20889 -7.35338,19.13424 -9.16855,28.2119 -1.87178,9.36079 -2.59962,10.5381 -6.5149,10.5381 -2.1953,0 -3.13987,-0.62486 -3.87755,-2.5651 -0.56366,-1.48252 -0.97525,-16.79309 -0.97525,-36.27749 0,-28.89389 0.2225,-34.03006 1.5567,-35.9349 l 1.55671,-2.22251 h 66.38659 66.38659 l 1.55671,2.22251 c 1.3342,1.90484 1.5567,7.04101 1.5567,35.9349 0,19.4844 -0.41159,34.79497 -0.97525,36.27749 -0.7467,1.96398 -1.67584,2.5651 -3.96482,2.5651 -3.55144,0 -4.39512,-1.32437 -6.05186,-9.5 -1.72327,-8.50396 -6.57456,-23.03564 -9.84834,-29.5 l -2.78539,-5.5 -7.68717,-0.29206 -7.68717,-0.29207 v 79.49403 79.49402 l 4.36075,3.00028 4.36076,3.00027 2.57362,-6.70223 c 1.41549,-3.68623 5.34705,-13.90224 8.73679,-22.70224 3.38974,-8.8 8.84458,-22.975 12.12185,-31.5 3.27728,-8.525 7.70207,-20 9.83287,-25.5 2.1308,-5.5 6.60549,-17.0875 9.94377,-25.75 13.45131,-34.90484 18.4335,-47.78432 22.85689,-59.08738 l 4.63248,-11.83737 -2.45989,-1.86221 c -4.12498,-3.12273 -14.72786,-8.11279 -23.25963,-10.94676 -8.80076,-2.92332 -10.34526,-4.31025 -9.32534,-8.37395 l 0.66943,-2.66723 36.15595,0.26245 36.15595,0.26245 14.13191,35 c 26.11148,64.66937 49.33386,121.95268 51.89058,128 l 2.53672,6 0.0423,-17.62756 c 0.0461,-19.23121 0.35891,-20.31694 5.67401,-19.6947 2.12491,0.24877 2.91036,1.00643 3.44409,3.32226 0.38027,1.65 1.46662,6.375 2.4141,10.5 4.32422,18.82614 12.3065,32.80384 21.09161,36.93332 19.03227,8.94622 43.90903,-12.91235 32.54654,-28.59781 -3.57918,-4.94092 -7.99563,-8.38371 -20.27932,-15.80849 -22.19057,-13.41292 -34.0389,-27.78464 -40.41885,-49.02702 -2.36178,-7.86367 -2.71738,-10.83076 -2.81649,-23.5 -0.0994,-12.7106 0.17448,-15.36385 2.21951,-21.5 3.47257,-10.41952 7.70222,-17.19124 15.69034,-25.1204 16.86372,-16.7393 42.9893,-22.25222 61.55687,-12.98949 2.81345,1.40353 8.64289,1.60989 45.47845,1.60989 h 42.25134 l 2.45102,4.25 c 1.34806,2.3375 4.38175,7.85 6.74153,12.25 11.29769,21.06543 22.31538,41.08692 23.04615,41.87977 0.72125,0.78252 18.95134,-34.06856 18.95134,-36.22992 0,-1.47303 -12.0154,-7.401 -21.5,-10.60734 l -9,-3.04251 v -4 -4 h 34.5 34.5 l 0.29915,2.57099 c 0.20499,1.7618 -6.95531,16.89909 -22.75,48.09479 l -23.04915,45.52381 v 61.9552 c 0,46.85405 -0.29249,62.2477 -1.2,63.15521 -0.8995,0.8995 -11.10414,1.15207 -40.75,1.00858 -21.7525,-0.10527 -43.82037,-0.44277 -49.03971,-0.75 z m 11.26218,-9.12467 c -0.35246,-1.34778 -0.88065,-1.72573 -1.51925,-1.08713 -1.0351,1.0351 -0.22084,3.15322 1.21218,3.15322 0.46605,0 0.60423,-0.92974 0.30707,-2.06609 z m 36.99656,-0.58985 c -0.67703,-0.27392 -2.02703,-0.29059 -3,-0.0371 -0.97297,0.25354 -0.41903,0.47766 1.23097,0.49804 1.65,0.0204 2.44606,-0.18706 1.76903,-0.46099 z m 3.73097,-0.34406 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -3,-3 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -235,-3.5 c 0.71755,-0.86459 0.81474,-1.5 0.22943,-1.5 -0.5585,0 -1.27447,0.675 -1.59106,1.5 -0.31658,0.825 -0.41982,1.5 -0.22943,1.5 0.19039,0 0.90637,-0.675 1.59106,-1.5 z m 61,-4.38337 c 0,-0.48585 -0.9,-1.11872 -2,-1.40638 -2.16676,-0.56662 -2.7972,0.8014 -0.75,1.62747 1.97018,0.79498 2.75,0.73229 2.75,-0.22109 z m 160,-0.11663 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -359,-2 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 204.57859,-1.45709 c 0.33917,-1.3514 0.38327,-3.0389 0.098,-3.75 -0.28527,-0.7111 -0.55421,-0.14541 -0.59763,1.25709 -0.0434,1.4025 -0.61895,3.09 -1.27895,3.75 -0.91182,0.91182 -0.9164,1.2 -0.019,1.2 0.64952,0 1.45846,-1.10569 1.79764,-2.45709 z m -208.57859,-1.7878 c 0,-0.55783 -0.66326,-0.44954 -1.5,0.24489 -0.825,0.68469 -1.5,1.69489 -1.5,2.24489 0,0.55783 0.66326,0.44954 1.5,-0.24489 0.825,-0.68469 1.5,-1.69489 1.5,-2.24489 z m -23,-1.75511 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m 5.8,-0.2 c 1.44583,-1.44583 1.55957,-2.8 0.23518,-2.8 -0.53065,0 -1.44648,0.9 -2.03518,2 -1.1788,2.20261 -0.0876,2.68759 1.8,0.8 z m 56.86228,-2.05 c -0.27741,-0.6875 -0.50439,-0.125 -0.50439,1.25 0,1.375 0.22698,1.9375 0.50439,1.25 0.27741,-0.6875 0.27741,-1.8125 0,-2.5 z m -66.77559,-0.91131 c 2.89987,-1.811 2.64806,-2.83869 -0.69556,-2.83869 -3.32909,0 -6.77732,2.24251 -5.82288,3.78683 0.79869,1.2923 3.57833,0.88799 6.51844,-0.94814 z m 224.11331,-1.83869 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -229.37123,-2.70456 c -0.82426,-0.82426 -3.62877,0.49605 -3.62877,1.70836 0,0.73956 0.63946,0.72434 2.08565,-0.0496 1.1471,-0.61391 1.84151,-1.36033 1.54312,-1.65872 z m 19.37123,1.70456 c 0,-0.55 1.2375,-1.00689 2.75,-1.01531 1.95557,-0.0109 2.35188,-0.26748 1.37188,-0.8882 -2.53598,-1.60626 -0.0851,-3.35489 3.94471,-2.81438 4.3972,0.58978 5.22038,0.12261 3.95386,-2.24389 -0.59584,-1.11334 -0.4418,-2.59968 0.44698,-4.31279 1.35335,-2.6086 1.3486,-2.61331 -2.30564,-2.2863 -3.10478,0.27783 -3.67683,0.70302 -3.76065,2.79522 -0.14179,3.5389 -1.17349,4.76565 -4.00791,4.76565 -2.33032,0 -7.39323,4.20881 -7.39323,6.14602 0,0.46969 1.125,0.85398 2.5,0.85398 1.375,0 2.5,-0.45 2.5,-1 z m -9,-3 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 268.75,0.36971 c 1.2375,-0.33163 2.25,-0.93809 2.25,-1.34767 0,-0.98902 -4.87787,-0.0287 -5.57379,1.09736 -0.63347,1.02498 0.19916,1.08768 3.32379,0.25031 z m -6.78518,-2.30397 c 1.35969,-2.54061 1.30662,-3.06574 -0.30983,-3.06574 -1.70891,0 -4.87994,3.44172 -3.99051,4.33115 1.25935,1.25934 3.26498,0.66917 4.30034,-1.26541 z m 13.03518,-0.0657 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m -288.71051,-3.001 c -0.71955,-2.75155 -1.28949,-2.50403 -1.28949,0.56002 0,1.40746 0.40775,2.30701 0.90612,1.999 0.49837,-0.30801 0.67088,-1.45956 0.38337,-2.55902 z m 302.88177,0.34601 c 1.00581,-0.91024 1.82874,-2.48524 1.82874,-3.5 0,-2.74888 -2.90335,-2.22943 -4.02475,0.72009 -1.78312,4.68996 -1.00417,5.67603 2.19601,2.77991 z m 19.82874,-0.34501 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -315,-1 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 318,-1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -318.5,-2 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m 309.5,-9.15917 c 0,-0.74785 -0.88802,-1.91431 -1.97337,-2.59213 -1.83302,-1.14474 -1.93081,-1.01961 -1.375,1.75946 0.48024,2.40117 0.25643,2.99184 -1.13362,2.99184 -1.15446,0 -1.53341,-0.51749 -1.13645,-1.55194 0.34149,-0.88992 0.17385,-1.29132 -0.39301,-0.94098 -0.5437,0.33602 -0.98855,1.60927 -0.98855,2.82943 0,1.22016 -0.65911,3.15949 -1.46469,4.30962 -0.80559,1.15013 -1.18155,2.3743 -0.83547,2.72038 0.84842,0.84842 9.30016,-7.80826 9.30016,-9.52568 z m -99,7.21819 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m -205.5,-1.05902 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m 208.5,0 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -218.45787,-1.06817 c 0.3631,-0.5875 1.28965,-0.82662 2.05902,-0.53139 0.76937,0.29524 1.39885,0.14906 1.39885,-0.32484 0,-0.47389 -0.7076,-1.13315 -1.57244,-1.46503 -1.7729,-0.68032 -5.42756,0.9523 -5.42756,2.42461 0,1.3073 2.71934,1.22795 3.54213,-0.10335 z m 37.26474,-1.45829 c -0.30789,-0.30789 -0.86705,0.24711 -1.24258,1.23333 -0.54268,1.4252 -0.42782,1.54006 0.5598,0.5598 0.68342,-0.67834 0.99067,-1.48524 0.68278,-1.79313 z m 269.19313,0.52646 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -90,-2.10699 c 0,-0.49115 -0.675,-0.89301 -1.5,-0.89301 -0.825,0 -1.5,0.66088 -1.5,1.46862 0,0.89459 0.58629,1.24363 1.5,0.89301 0.825,-0.31659 1.5,-0.97746 1.5,-1.46862 z m -194.13466,-1.44404 c 0.31608,-1.6311 0.14754,-1.70455 -1.25,-0.54469 -1.91126,1.5862 -2.14923,3.44015 -0.36534,2.84619 0.6875,-0.22891 1.4144,-1.26459 1.61534,-2.3015 z m -7.8943,0.59009 c 0.80907,-0.51167 1.22622,-1.17513 0.927,-1.47435 -0.29922,-0.29923 -1.41119,0.11199 -2.47104,0.91382 -2.10837,1.59508 -0.82724,2.06017 1.54404,0.56053 z m -3.47104,-2.03906 c 0.99549,-1.1 1.35998,-2 0.80998,-2 -0.55,0 -1.81449,0.9 -2.80998,2 -0.99549,1.1 -1.35998,2 -0.80998,2 0.55,0 1.81449,-0.9 2.80998,-2 z m 72.5,0.55902 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -84,-3.16601 c 0,-0.21615 -0.675,-0.39301 -1.5,-0.39301 -0.825,0 -1.5,0.43588 -1.5,0.96862 0,0.53273 0.675,0.70959 1.5,0.39301 0.825,-0.31659 1.5,-0.75246 1.5,-0.96862 z m 438,0.60699 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -264.85,-4.5 c 0,-0.5225 -0.48375,-1.11125 -1.075,-1.30833 -0.59125,-0.19709 -1.075,0.39166 -1.075,1.30833 0,0.91667 0.48375,1.50542 1.075,1.30833 0.59125,-0.19708 1.075,-0.78583 1.075,-1.30833 z m -152.65,-0.5 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m 67,-0.93036 c 0,-2.28768 -2.19895,-2.32884 -2.79428,-0.0523 -0.41344,1.58097 -0.13631,2.01965 1.12267,1.77719 0.91939,-0.17706 1.67161,-0.95326 1.67161,-1.72489 z m 320.5,-1.06964 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -406,-1 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 106,0.55902 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 9,-0.39235 c 0,-1.30208 -1.18877,-2.16804 -2.15579,-1.57039 -1.03422,0.63919 -0.14245,2.40372 1.21481,2.40372 0.51754,0 0.94098,-0.375 0.94098,-0.83333 z m 9.5,-0.16667 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m 274.70751,-0.6358 c 1.60589,-0.18698 3.89128,-1.02042 5.07865,-1.85208 1.18737,-0.83167 2.90362,-1.51212 3.8139,-1.51212 1.84371,0 4.51869,-2.71459 3.59006,-3.64321 -0.32719,-0.32719 -1.32345,0.13369 -2.21393,1.02416 -0.89048,0.89048 -2.68535,1.61905 -3.9886,1.61905 -1.30326,0 -2.61614,0.39899 -2.91753,0.88664 -0.30138,0.48765 -2.08449,1.17489 -3.96246,1.5272 -1.87798,0.35231 -3.67779,1.32669 -3.99959,2.1653 -0.37376,0.974 -0.17608,1.27195 0.54729,0.82488 0.62282,-0.38493 2.44631,-0.85285 4.05221,-1.03982 z m -229.07106,-2.20401 c 0.98818,-2.67132 -1.32764,-4.07633 -3.6044,-2.18679 -1.15393,0.95768 -1.20296,1.58069 -0.24509,3.11449 1.46414,2.34446 2.75403,2.03361 3.84949,-0.9277 z m -146.13645,-2.16019 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 306.68555,-2.17431 c 1.27295,-1.19588 2.30756,-2.65838 2.29914,-3.25 -0.01,-0.69925 -0.27242,-0.72574 -0.75,-0.0757 -0.40408,0.55 -1.60791,1.48215 -2.67517,2.07144 -1.99707,1.10269 -3.32487,3.42856 -1.9573,3.42856 0.42288,0 1.81038,-0.97844 3.08333,-2.17431 z m -170.68555,-1.2707 c 0,-0.24476 -4.7571,-12.05726 -10.57134,-26.25 -5.81424,-14.19275 -11.53217,-28.24714 -12.70652,-31.23199 l -2.13517,-5.427 -1.42615,3.427 c -1.4658,3.52227 -8.46802,21.7431 -15.15172,39.427 -2.07874,5.5 -4.72462,12.3625 -5.87972,15.25 l -2.1002,5.25 h 24.98541 c 13.74198,0 24.98541,-0.20026 24.98541,-0.44501 z m -43.12135,-3.34336 c -1.39654,-0.61296 -0.45778,-3.76218 6.77017,-22.71163 4.61534,-12.1 8.96959,-23.29965 9.67611,-24.88811 l 1.28458,-2.8881 3.16443,7.3881 c 8.59166,20.05928 17.23366,42.21412 16.68246,42.76758 -0.87926,0.88285 -35.62335,1.18996 -37.57775,0.33216 z m 35.71028,-1.58278 c 0.4364,-1.13725 -10.86616,-30.69223 -13.62536,-35.62885 -0.98186,-1.75669 -3.22494,2.95524 -10.23492,21.5 -2.49483,6.6 -4.85253,12.7875 -5.23934,13.75 -0.65064,1.619 0.39252,1.75 13.93509,1.75 11.478,0 14.75197,-0.29603 15.16453,-1.37115 z m 36.91107,4.37115 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -98.5,-4 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 259.34208,-2.44907 c 0.37166,-0.96852 0.0755,-1.26467 -0.89301,-0.89301 -0.79699,0.30583 -1.44907,0.95791 -1.44907,1.44907 0,1.43762 1.73512,1.02567 2.34208,-0.55606 z m 68.65792,0.44907 c 1.29269,-0.8354 1.26629,-0.97149 -0.19098,-0.98469 -0.93004,-0.008 -1.9691,0.43469 -2.30902,0.98469 -0.78218,1.2656 0.54163,1.2656 2.5,0 z m -326,-7 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 235,-7.65499 c 0,-0.73975 -0.45,-1.34501 -1,-1.34501 -0.55,0 -1,0.81 -1,1.8 0,0.99 -0.5625,2.44056 -1.25,3.22347 -0.6875,0.7829 -0.2375,0.57816 1,-0.45499 1.2375,-1.03315 2.25,-2.48371 2.25,-3.22347 z m -325,2.65499 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -5.5,-1 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m 205.95,-3.18993 c 0.53979,-0.46028 0.10799,-0.79634 -1,-0.77827 -1.95779,0.0319 -5.45,2.15097 -5.45,3.307 0,0.68694 4.95878,-1.25716 6.45,-2.52873 z m 132.33333,-2.01694 c 2.20501,-0.21729 -0.13704,-1.64168 -3.24779,-1.97525 -2.25135,-0.24141 -3.05706,0.1357 -3.34943,1.56771 -0.32886,1.61072 0.0304,1.78707 2.46445,1.20979 1.56719,-0.37168 3.42694,-0.7327 4.13277,-0.80225 z m -39.78333,-0.79313 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -271.22917,-3.1875 c -0.2177,-0.65313 -0.93051,-1.36573 -1.58401,-1.58356 -0.73075,-0.24358 -0.95424,0.21359 -0.58051,1.1875 0.69752,1.81771 2.76448,2.19592 2.16452,0.39606 z m 266.22917,0.1875 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 9.18333,-1.21667 c -0.71756,-0.71756 -1.18333,-0.7766 -1.18333,-0.15 0,1.33478 1.18261,2.51739 1.85,1.85 0.28417,-0.28416 -0.0158,-1.04916 -0.66667,-1.7 z m -303.18333,-2.84235 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 328,1.11804 c 0,-1.67643 -1.77354,-2.09154 -2.36383,-0.55328 -0.3483,0.90766 0.003,1.49426 0.89521,1.49426 0.80774,0 1.46862,-0.42344 1.46862,-0.94098 z m 11.96365,-0.51522 c 0.66469,-0.8009 0.91748,-1.92712 0.56175,-2.5027 -0.88945,-1.43916 -4.5254,0.56472 -4.5254,2.49408 0,1.88554 2.40161,1.89076 3.96365,0.009 z m -30.96365,-6.5438 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -34.11465,-1.39306 2.38535,-1.32218 -2.77999,-0.69774 c -2.95883,-0.74262 -5.15902,0.52261 -4.04456,2.32585 0.84936,1.3743 1.48722,1.33034 4.4392,-0.30593 z m 163.0654,-0.43997 c -0.79791,-0.25677 -1.78136,-0.96188 -2.18544,-1.56691 -0.46008,-0.6889 -0.74041,-0.47711 -0.75,0.56661 -0.0165,1.79241 1.88614,2.90852 3.43544,2.0153 0.52291,-0.30148 0.29791,-0.75823 -0.5,-1.015 z M 741.40397,587.957 c 1.4945,-1.13423 1.54838,-1.51309 0.35595,-2.50272 -1.09069,-0.90519 -1.76454,-0.80677 -3.01109,0.43978 -3.12622,3.12622 -0.96175,4.80791 2.65514,2.06294 z M 516.4435,585.31558 c 0.44504,-1.70185 0.28771,-1.86166 -0.87929,-0.89314 -0.78173,0.64878 -1.42133,1.82606 -1.42133,2.61617 0,2.01158 1.64646,0.77848 2.30062,-1.72303 z m 315.19938,2.04157 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z M 696.4433,580.31636 c 0.41349,-1.58122 0.21543,-1.6738 -1.40966,-0.65891 -1.03992,0.64944 -1.89076,1.74755 -1.89076,2.44025 0,0.6927 -0.62686,1.25945 -1.39301,1.25945 -1.51943,0 -2.84169,2.43196 -1.85742,3.41624 0.84408,0.84408 5.96033,-4.1989 6.55085,-6.45703 z m 151.69958,4.48177 c 0,-1.65007 -1.58044,-1.92885 -2.5,-0.44098 -0.81551,1.31952 0.38021,3.19207 1.5691,2.45729 0.51199,-0.31643 0.9309,-1.22377 0.9309,-2.01631 z m -439.25,-2.9819 c 2.97382,-1.72966 4.25467,-3.45908 2.56188,-3.45908 -1.65948,0 -7.29742,4.64045 -7.28973,6 0.005,0.94897 0.27837,1.10498 0.74316,0.42469 0.40408,-0.59142 2.19719,-1.92595 3.98469,-2.96561 z m 319.75,1.54092 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m -12.5,-2.46862 c 0,-0.89459 -0.58629,-1.24363 -1.5,-0.89301 -0.825,0.31659 -1.5,0.97746 -1.5,1.46862 0,0.49115 0.675,0.89301 1.5,0.89301 0.825,0 1.5,-0.66088 1.5,-1.46862 z m 132,0.0911 c 0,-0.75765 0.68587,-1.94678 1.52417,-2.6425 2.35108,-1.95122 1.14595,-2.16095 -2.36184,-0.41103 -3.53548,1.76368 -4.23516,4.43105 -1.16233,4.43105 1.1,0 2,-0.6199 2,-1.37756 z m -112.22689,-5.44176 c 0.30532,-0.91596 -0.36789,-1.09383 -2.42524,-0.64077 -4.72524,1.04056 -5.49906,1.40644 -4.92816,2.33018 0.7678,1.24232 6.84127,-0.15304 7.3534,-1.68941 z m 75.22689,-0.18072 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -288.2942,-5.67661 c 1.02914,-0.82055 1.19419,-1.67968 0.5454,-2.83901 -1.48407,-2.65188 -4.1504,0.59379 -3.45784,4.20917 0.31931,1.66691 0.72013,2.19739 0.98715,1.30645 0.24726,-0.825 1.11363,-2.02947 1.92529,-2.67661 z M 407.9662,568.02428 c 0.18707,-0.96457 -0.31483,-1.66713 -1.19098,-1.66713 -1.85773,0 -2.97896,1.63015 -2.09972,3.05279 0.90454,1.46356 2.90118,0.62281 3.2907,-1.38566 z m 408.90585,1.7287 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m -119.72917,-3.45485 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 20,-2.01422 c 0,-1.62803 -2.49724,-0.99482 -4.27776,1.08467 -2.4061,2.81013 -2.16925,3.05828 1.27776,1.33868 1.65,-0.82312 3,-1.91363 3,-2.42335 z m 14.42516,1.95214 c -0.64806,-1.04858 -2.42516,-0.20682 -2.42516,1.14873 0,0.50028 0.67242,0.65157 1.49426,0.3362 0.82184,-0.31537 1.24074,-0.98359 0.9309,-1.48493 z m 91.07484,-0.8789 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m -111.37244,-1.75 c 1.24387,-1.58606 1.2085,-1.62143 -0.37756,-0.37756 -0.9625,0.75485 -1.75,1.54235 -1.75,1.75 0,0.82304 0.82119,0.29331 2.12756,-1.37244 z m 107.87244,1.35699 c 0,-0.94863 -2.99338,-1.42672 -3.52699,-0.56332 -0.32508,0.52598 0.33551,0.95633 1.46797,0.95633 1.13246,0 2.05902,-0.17686 2.05902,-0.39301 z m -114.5,-1.60699 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,-0.99 -1.05902,-2.2 0,-1.417 -0.34425,-1.85575 -0.96725,-1.23275 -1.08111,1.08111 -0.26019,5.43275 1.02486,5.43275 0.4534,0 1.10247,-0.45 1.44239,-1 z m 151.5,-0.90638 c 0,-0.49851 -0.9,-0.67103 -2,-0.38337 -1.1,0.28766 -2,0.69553 -2,0.90638 0,0.21085 0.9,0.38337 2,0.38337 1.1,0 2,-0.40787 2,-0.90638 z m 0.0909,-3.10227 c 3.23557,-0.89879 5.9091,-4.03954 5.9091,-6.94176 0,-1.36019 -9.15981,2.48458 -10.15471,4.26238 -0.494,0.88273 -1.56128,1.35051 -2.37174,1.03951 -0.81045,-0.311 -1.47355,-0.10481 -1.47355,0.4582 0,2.10466 3.12513,2.56108 8.09088,1.18167 z m -146.5909,-0.99135 c 0.33992,-0.55 -0.057,-1 -0.88197,-1 -0.825,0 -1.77811,0.45 -2.11803,1 -0.33992,0.55 0.057,1 0.88197,1 0.825,0 1.77811,-0.45 2.11803,-1 z m -304.04271,-2.9309 c 0.31644,-0.512 0.11799,-1.21356 -0.44098,-1.55902 -0.55897,-0.34546 -1.01631,0.0734 -1.01631,0.9309 0,1.75653 0.60006,2.01516 1.45729,0.62812 z m 189.54271,-2.18713 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m 87,-2.88197 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 122.1997,-1.25937 c -0.65658,-0.79114 -0.73894,-1.86813 -0.20848,-2.72642 1.29187,-2.09029 0.17195,-3.1719 -2.05191,-1.98173 -2.65016,1.41832 -2.46993,4.83123 0.31069,5.88318 2.70816,1.02455 3.41944,0.59589 1.9497,-1.17503 z m 23.6128,0.32187 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.72187,0.24062 -1.50937,1.02812 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.72187,-0.24063 1.50937,-1.02813 1.75,-1.75 z m -0.8125,-4.5625 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m -158.5,-4.5 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 189.32332,-0.66713 c -0.48646,-2.50832 -2.54468,-2.72204 -3.7908,-0.39364 -0.98271,1.83622 -0.81865,2.06077 1.50562,2.06077 1.89753,0 2.52038,-0.4544 2.28518,-1.66713 z m -54.32332,-0.33287 c 0.33992,-0.55 -0.057,-1 -0.88197,-1 -0.825,0 -1.77811,0.45 -2.11803,1 -0.33992,0.55 0.057,1 0.88197,1 0.825,0 1.77811,-0.45 2.11803,-1 z m -14.6875,-1.9375 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.72187,0.24062 -1.50937,1.02813 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.72187,-0.24062 1.50937,-1.02813 1.75,-1.75 z m 39.63173,1.02774 c 0.86297,-1.39631 -0.48801,-4.09024 -2.05122,-4.09024 -0.76615,0 -1.39301,0.825 -1.39301,1.83333 0,2.8474 2.19169,4.28356 3.44423,2.25691 z m -16.71506,-0.69441 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19292 1.3125,-0.52522 z m -59.72917,-3.39583 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 48,-0.5 c 0,-0.825 -0.40186,-1.5 -0.89301,-1.5 -0.49116,0 -1.15203,0.675 -1.46862,1.5 -0.35062,0.91371 -0.002,1.5 0.89301,1.5 0.80774,0 1.46862,-0.675 1.46862,-1.5 z m 66,0.66667 c 0,-1.40725 -1.12573,-2.05565 -2.59202,-1.49298 -0.76807,0.29473 -1.14752,0.93873 -0.84322,1.43109 0.69797,1.12934 3.43524,1.17865 3.43524,0.0619 z m -85.22251,-1.72337 c 2.27892,-1.59622 3.03971,-4.4433 1.18733,-4.4433 -2.14099,0 -5.83044,3.18661 -5.29749,4.57547 0.69528,1.81186 1.36543,1.79031 4.11016,-0.13217 z m 37.89694,0.15066 c -0.29675,-0.77333 0.33708,-2.19939 1.40853,-3.16903 1.92626,-1.74325 1.92271,-1.78999 -0.31744,-4.17452 -1.24604,-1.32635 -2.1826,-2.71278 -2.08126,-3.08097 0.10134,-0.36819 -0.79866,-1.21599 -2,-1.884 -1.6316,-0.90726 -1.77246,-1.22354 -0.5567,-1.25 0.89515,-0.0195 2.18775,0.63956 2.87244,1.46456 0.68469,0.825 1.89511,1.5 2.68983,1.5 0.98987,0 1.24503,0.62989 0.81017,2 -0.45047,1.41932 -0.1797,2 0.93261,2 1.84288,0 1.92372,0.46567 0.53221,3.06574 -1.34552,2.51412 -0.57032,2.4418 3.12698,-0.29173 2.5861,-1.91199 3.15539,-2.01779 4.03564,-0.75 0.89821,1.29364 0.97485,1.29068 0.62036,-0.024 -0.22245,-0.825 -1.29869,-1.63292 -2.39165,-1.79538 -2.08299,-0.30962 -4.35615,-5.0546 -4.35615,-9.09302 0,-1.79315 -0.40452,-2.118 -2.00493,-1.61005 -1.3306,0.42232 -2.20667,0.11058 -2.60478,-0.92687 -0.32992,-0.85976 -1.0639,-1.27641 -1.63106,-0.92589 -0.56715,0.35053 -1.9694,0.68544 -3.11609,0.74426 -1.1467,0.0588 -2.58796,1.11634 -3.2028,2.35005 -0.61485,1.23372 -1.81222,3.03372 -2.66084,4 -2.11252,2.40545 -2.91003,5.47625 -1.8576,7.15261 1.25022,1.99138 4.21619,0.62772 3.37913,-1.55362 -0.48698,-1.26907 0.43076,-0.94579 3.4249,1.20644 2.24958,1.61703 3.87997,3.28012 3.62309,3.69575 -0.50462,0.81649 0.42217,2.75571 1.31699,2.75571 0.30138,0 0.30517,-0.63272 0.008,-1.40604 z m -13.68974,-1.84396 c -0.0124,-1.81944 -0.20082,-1.96296 -0.98469,-0.75 -1.25292,1.93876 -1.25292,3 0,3 0.55,0 0.99311,-1.0125 0.98469,-2.25 z m -362.48469,0.25 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m 370,0 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -443.13837,-2.5 c 0.3471,-0.90455 0.005,-1.5 -0.86163,-1.5 -0.8667,0 -1.20873,0.59545 -0.86163,1.5 0.31659,0.825 0.70432,1.5 0.86163,1.5 0.15731,0 0.54504,-0.675 0.86163,-1.5 z m 497.17355,-7.11501 c 2.90252,-1.9018 3.19382,-3.38499 0.66482,-3.38499 -2.10574,0 -4.2,1.84494 -4.2,3.7 0,1.6886 0.55242,1.63937 3.53518,-0.31501 z m -497.80601,-6.98916 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31923 -0.56078,0.55619 0.60417,0.60417 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 411.27083,-1.45485 c 0,-1.13246 -0.45,-1.7809 -1,-1.44098 -0.55,0.33992 -1,1.26648 -1,2.05902 0,0.79254 0.45,1.44098 1,1.44098 0.55,0 1,-0.92656 1,-2.05902 z m 30,-0.94098 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -150,-1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z M 782.97673,508.481 c 1.08722,-0.68919 1.05907,-0.95096 -0.15224,-1.41579 -1.5456,-0.5931 -2.68161,0.0248 -2.68161,1.45861 0,1.05809 1.1239,1.04111 2.83385,-0.0428 z m 92.16615,-0.12385 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -461.81667,-2.21667 c -0.71756,-0.71756 -1.18333,-0.7766 -1.18333,-0.15 0,1.33478 1.18261,2.51739 1.85,1.85 0.28417,-0.28416 -0.0158,-1.04916 -0.66667,-1.7 z m -39.18333,-2.91176 c 0,-1.21413 -4.82651,-3.37839 -5.66476,-2.54014 -1.05383,1.05383 2.71349,4.5871 4.25872,3.99414 0.77332,-0.29675 1.40604,-0.95105 1.40604,-1.454 z m 502.5,1.12843 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m -128.5252,-1 c 0.44617,0 1.03189,-0.57506 1.30161,-1.27792 0.32719,-0.85266 -0.38594,-1.23974 -2.14302,-1.1632 -1.68689,0.0735 -2.7597,0.76495 -2.98481,1.92383 -0.26115,1.34436 0.081,1.64318 1.33178,1.1632 0.92577,-0.35525 2.04827,-0.64591 2.49444,-0.64591 z m -313.4748,-1 c -0.33992,-0.55 -1.04148,-1 -1.55902,-1 -0.51754,0 -0.94098,0.45 -0.94098,1 0,0.55 0.70156,1 1.55902,1 0.85746,0 1.2809,-0.45 0.94098,-1 z m 447.5,-0.5 c 0,-0.825 -0.66088,-1.5 -1.46862,-1.5 -0.89459,0 -1.24363,0.58629 -0.89301,1.5 0.31659,0.825 0.97746,1.5 1.46862,1.5 0.49115,0 0.89301,-0.675 0.89301,-1.5 z m -508.5,-10.5 c 0.33992,-0.55 -0.057,-1 -0.88197,-1 -0.825,0 -1.77811,0.45 -2.11803,1 -0.33992,0.55 0.057,1 0.88197,1 0.825,0 1.77811,-0.45 2.11803,-1 z m 3.5,0 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 303,-1.55902 c 0,-0.79254 -0.45,-1.44098 -1,-1.44098 -0.55,0 -1,0.92656 -1,2.05902 0,1.13246 0.45,1.7809 1,1.44098 0.55,-0.33992 1,-1.26648 1,-2.05902 z m 187.82045,-0.0278 c 1.76622,-1.23711 2.57879,-1.32676 3.68726,-0.40681 1.12109,0.93042 2.06375,0.72288 4.45704,-0.9813 1.66939,-1.1887 3.03525,-2.32133 3.03525,-2.51695 0,-0.19561 -2.8125,-0.27747 -6.25,-0.1819 -4.88651,0.13585 -6.61162,0.60899 -7.9076,2.16876 -2.79001,3.35791 -0.85597,4.60366 2.97805,1.91821 z m -452.82045,-0.4132 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 301,0.55902 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -295,-1 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 367.4283,-0.30902 c -0.49777,-0.4125 -1.24088,-1.2 -1.65135,-1.75 -0.42591,-0.57068 -0.7529,-0.24868 -0.76164,0.75 -0.009,0.97279 0.72489,1.75 1.65136,1.75 0.91666,0 1.2594,-0.3375 0.76163,-0.75 z m 72.5717,-1.25 2.5,-1.95553 -2.62756,-0.0222 c -2.67559,-0.0226 -5.3914,2.12548 -4.1971,3.31978 0.98558,0.98557 1.58801,0.79863 4.32466,-1.34201 z m 24.5,1 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z M -4.821933,699.42289 c -0.694361,-1.29742 -1.039415,-36.27905 -1.048034,-106.25 l -0.01285,-104.31574 -6.504986,-4.3208 c -7.866726,-5.22531 -16.537644,-9.2363 -26.113635,-12.07963 -5.965081,-1.77117 -7.248289,-2.53556 -7.774202,-4.63096 -0.346435,-1.38031 -0.153158,-3.40042 0.429505,-4.48913 1.017278,-1.9008 2.180856,-1.97952 29.274202,-1.98045 15.518149,-5.4e-4 53.422716,-0.29799 84.232386,-0.66101 52.317947,-0.61644 56.131977,-0.54562 57.749997,1.0724 1.53017,1.53018 1.73243,4.11747 1.73243,22.16101 v 20.42857 h 22.97695 22.97694 l 1.57644,2.40594 c 0.86703,1.32327 8.34762,19.21076 16.62353,39.75 8.2759,20.53923 19.25476,47.69406 24.39746,60.34406 l 9.35037,23 0.29915,-66 0.29916,-66 h 9.94736 9.94737 l 16.05263,18.56637 c 8.82895,10.2115 26.17764,30.20172 38.55264,44.42269 12.375,14.22098 25.7625,29.63862 29.75,34.26142 l 7.25,8.40509 v -41.90826 -41.90827 l -4.25,-3.04905 c -5.1515,-3.6958 -12.67725,-7.37203 -18.75,-9.15912 -6.89274,-2.0284 -7.5,-2.53362 -7.5,-6.23986 v -3.39101 l 25.5,-0.26786 c 23.08669,-0.24252 25.6183,-0.10613 26.75,1.44112 0.97981,1.33959 1.25,22.82441 1.25,99.39542 0,87.2755 -0.16623,97.82439 -1.55975,98.98091 -1.08387,0.89953 -2.26629,1.01316 -3.87559,0.37244 -1.27371,-0.50712 -10.9904,-10.37203 -21.59264,-21.92203 -10.60224,-11.55 -24.08053,-26.175 -29.95175,-32.5 -5.87123,-6.325 -13.79016,-14.90863 -17.59762,-19.07474 -3.80746,-4.16611 -13.44765,-14.67207 -21.42265,-23.34659 l -14.5,-15.77185 -0.26437,31.83145 -0.26436,31.83145 2.26436,1.73609 c 4.02424,3.08538 13.10052,7.55786 19.71193,9.71337 8.42922,2.74817 10.01134,5.12192 6.05244,9.08082 -1.88439,1.88439 -3.33333,2 -25.06574,2 -13.98746,0 -23.82703,-0.40743 -25,-1.03518 -1.51361,-0.81007 -1.93426,-2.11489 -1.93426,-6 v -4.96482 h -34.52475 -34.52475 l -0.97539,-2.56547 c -1.07559,-2.82901 0.22131,-6.4384 2.31007,-6.42915 2.00019,0.009 16.03634,-5.93072 18.53412,-7.84294 2.28791,-1.75155 2.29659,-1.83234 0.64142,-5.96901 l -1.67788,-4.19343 h -24.14794 -24.14794 l -1.24348,3.98425 c -0.68391,2.19134 -1.24348,4.43486 -1.24348,4.98561 0,1.16635 9.688,6.18101 15.5,8.02304 2.2,0.69726 4.5625,1.7142 5.25,2.25987 1.61227,1.27965 1.61227,5.21352 0,6.4989 -1.63399,1.3027 -45.931667,2.28579 -48.108337,1.06767 -2.22147,-1.2432 -2.11284,-2.14882 1.29776,-10.81934 1.62259,-4.125 5.700637,-14.7 9.062317,-23.5 3.36169,-8.8 8.31091,-21.625 10.99826,-28.5 2.68735,-6.875 7.64395,-19.7 11.01466,-28.5 3.37071,-8.8 8.63251,-22.42197 11.6929,-30.27104 5.28938,-13.56585 5.47997,-14.36426 3.85708,-16.15753 -1.67977,-1.85613 -9.42302,-5.58813 -14.81464,-7.14019 l -2.75,-0.79163 v 14.7302 c 0,15.88717 -0.37305,17.13019 -5.14098,17.13019 -3.48339,0 -3.68425,-0.36916 -5.88268,-10.81199 -2.53756,-12.05369 -6.59281,-24.45521 -10.60711,-32.43801 l -3.39437,-6.75 H 82.130313 62.142883 v 30.45031 30.45032 l 24.53774,0.29968 c 20.496367,0.25033 24.693697,0.54674 25.484677,1.79969 0.52083,0.825 0.94695,7.8 0.94695,15.5 0,7.7 -0.42612,14.675 -0.94695,15.5 -0.79098,1.25295 -4.98831,1.54936 -25.484677,1.79969 l -24.53774,0.29968 0.0152,40.20032 0.0152,40.20031 5.2348,3.8778 c 6.72287,4.98012 19.31105,11.12366 28.23481,13.77972 9.145007,2.72192 11.903817,6.29581 7.928567,10.27105 -1.38896,1.38896 -7.713247,1.57143 -54.464807,1.57143 -51.270691,0 -52.925151,-0.0593 -53.928576,-1.93426 z m 57.821576,-10.95605 c 0.94581,-0.5993 1.02153,-1.06688 0.25,-1.54371 -1.26842,-0.78393 -3.10676,0.0995 -3.10676,1.49304 0,1.16275 1.07167,1.18176 2.85676,0.0507 z M 336.64288,663.35715 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 0,-17 c 0.33992,-0.55 -0.057,-1 -0.88197,-1 -0.825,0 -1.77811,0.45 -2.11803,1 -0.33992,0.55 0.057,1 0.88197,1 0.825,0 1.77811,-0.45 2.11803,-1 z m -7.5,-1.62244 c 0,-1.3288 -0.27149,-1.39713 -1.5,-0.37756 -0.825,0.68469 -1.5,1.41479 -1.5,1.62244 0,0.20766 0.675,0.37756 1.5,0.37756 0.825,0 1.5,-0.7301 1.5,-1.62244 z m -220.27083,-0.98173 c -0.3323,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 224.27083,-0.39583 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 11.67122,-2.0651 c 1.54078,-0.5858 3.59508,-1.91699 4.5651,-2.95818 2.07436,-2.22657 2.51029,-9.49142 0.51368,-8.5607 -0.6875,0.32048 -2.05012,0.86377 -3.02804,1.2073 -1.13505,0.39873 -1.57786,1.25534 -1.22448,2.36875 0.4411,1.38976 -0.21442,1.86696 -3.22618,2.34856 -3.7012,0.59184 -8.10765,4.20876 -6.706,5.50443 0.38968,0.36022 0.9094,0.0924 1.15494,-0.59506 0.62375,-1.74651 2.27976,-1.56491 2.27976,0.25 0,1.76765 1.80231,1.90586 5.67122,0.4349 z m -10.67122,-0.9349 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 0.55887,-19.55178 c 1.8655,-1.49132 1.84373,-1.5259 -0.55887,-0.8876 -3.08534,0.81968 -5.00499,2.43938 -2.89113,2.43938 0.82988,0 2.38238,-0.6983 3.45,-1.55178 z m 10.44113,-5.99306 c 0,-0.73197 -0.83413,-1.26803 -1.85361,-1.19123 -1.23498,0.093 -1.70271,0.71669 -1.40147,1.86865 0.51315,1.96229 3.25508,1.39166 3.25508,-0.67742 z m -170,-1.69571 c 0,-1.01782 -2.17106,-0.93717 -3.87812,0.14406 -0.75796,0.48009 -1.0746,1.36398 -0.70363,1.96421 0.71675,1.15973 4.58175,-0.61873 4.58175,-2.10827 z m 170.5,-1.75945 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m -180.5,-2.88372 c 0,-0.84448 -7.03127,-18.43843 -9.0384,-22.61628 -0.52846,-1.1 -2.02303,-4.64644 -3.32126,-7.88097 -1.29823,-3.23453 -2.66642,-5.38585 -3.04043,-4.78069 -0.73009,1.18131 -12.46512,31.4989 -13.31972,34.41166 -0.47246,1.61027 0.65364,1.75 14.10318,1.75 8.03915,0 14.61663,-0.39768 14.61663,-0.88372 z m -22.38708,-8.86628 c 1.42766,-3.7125 3.56129,-9.3371 4.74141,-12.49911 1.18012,-3.16201 2.40707,-5.74951 2.72656,-5.75 0.63367,-9.7e-4 9.91911,22.51678 9.91911,24.05444 0,0.52986 -4.38724,0.94467 -9.99141,0.94467 h -9.9914 z m 14.99749,4.32287 c 0.76519,-1.99405 -3.41963,-11.16924 -4.56124,-10.00052 -0.49838,0.51021 -1.83175,3.29015 -2.96306,6.17765 l -2.05693,5.25 h 4.5168 c 2.98994,0 4.70191,-0.48243 5.06443,-1.42713 z m 193.38959,0.42713 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m -121.31689,-9.1875 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 46.31689,-6.8125 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -177.999997,-8 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 246.103797,-14.2962 c -1.28349,-1.28349 -2.58505,-0.2915 -1.63484,1.24598 0.36808,0.59556 1.12735,0.79971 1.68727,0.45366 0.683,-0.42212 0.66575,-0.98146 -0.0524,-1.69964 z M 2.594152,563.97903 c 0.06665,-1.52245 -0.232625,-2.98675 -0.665047,-3.254 -0.432422,-0.26725 -0.786222,0.40384 -0.786222,1.49132 0,1.08747 -0.296707,2.75043 -0.65935,3.69546 -0.44903,1.17016 -0.236894,1.57742 0.665048,1.27677 0.728418,-0.2428 1.378925,-1.6871 1.445571,-3.20955 z m 63.048731,-0.62188 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 98.499997,-24.44098 c 0,-0.79254 -0.45,-1.7191 -1,-2.05902 -0.55,-0.33992 -1,0.30852 -1,1.44098 0,1.13246 0.45,2.05902 1,2.05902 0.55,0 1,-0.64844 1,-1.44098 z M 1.642883,531.35715 c -0.339919,-0.55 -1.041476,-1 -1.559017,-1 -0.517541,0 -0.940983,0.45 -0.940983,1 0,0.55 0.701558,1 1.559017,1 0.857459,0 1.280902,-0.45 0.940983,-1 z m 0.229167,-5.60417 c -0.332292,-0.33229 -1.194792,-0.36781 -1.916667,-0.0789 -0.797733,0.31922 -0.560776,0.55618 0.604167,0.60416 1.054166,0.0434 1.644791,-0.19292 1.3125,-0.52522 z m 335.27083,-21.89583 c 0,-0.825 -0.42344,-1.5 -0.94098,-1.5 -1.26098,0 -2.1641,1.56159 -1.36517,2.36052 1.12619,1.12618 2.30615,0.68589 2.30615,-0.86052 z m 6.59765,-1.23568 c -0.59277,-0.59277 -3.59765,0.95337 -3.59765,1.85114 0,0.49582 0.87953,0.35221 1.95452,-0.31913 1.07499,-0.67134 1.8144,-1.36075 1.64313,-1.53201 z m -230.59765,-7.26432 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -67.999997,-12 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m 1.5,-8 c 0.33992,-0.55 -0.28197,-1 -1.38197,-1 -1.1,0 -2.27811,0.45 -2.61803,1 -0.33992,0.55 0.28197,1 1.38197,1 1.1,0 2.27811,-0.45 2.61803,-1 z M 3.867121,473.68584 c 0.248071,-0.74511 -0.358555,-0.97557 -1.667133,-0.63337 -1.131408,0.29587 -2.057105,0.96845 -2.057105,1.49464 0,1.32759 3.245366,0.57706 3.724238,-0.86127 z m 15.275762,-1.32869 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 56,0 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -25.55279,-2.08541 c -0.32197,-0.52097 -1.01165,-0.68378 -1.53262,-0.3618 -0.52097,0.32197 -0.68378,1.01165 -0.3618,1.53262 0.32197,0.52097 1.01165,0.68378 1.53262,0.3618 0.52097,-0.32197 0.68378,-1.01165 0.3618,-1.53262 z m -35.94721,-1.91459 c 0.339919,-0.55 -0.281966,-1 -1.381966,-1 -1.1,0 -2.278115,0.45 -2.618034,1 -0.339919,0.55 0.281966,1 1.381966,1 1.1,0 2.278115,-0.45 2.618034,-1 z m 7,0 c 0.339919,-0.55 -0.05697,-1 -0.881966,-1 -0.825,0 -1.778115,0.45 -2.118034,1 -0.339919,0.55 0.05697,1 0.881966,1 0.825,0 1.778115,-0.45 2.118034,-1 z m 14.0691,-0.1118 c 0.85775,-1.38788 -1.34437,-2.85264 -4.3191,-2.87289 -1.58844,-0.0108 -2.25,0.57274 -2.25,1.98469 0,1.54664 0.66667,2 2.94098,2 1.61754,0 3.2502,-0.50031 3.62812,-1.1118 z m 40.4309,0.67082 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z M 1.307019,465.54833 c -2.690083,-0.40628 -3.650166,0.21339 -2.703583,1.74499 0.46046,0.74504 1.324628,0.69608 2.850135,-0.16149 l 2.189312,-1.23072 z m 42.835864,0.80882 c 1.21296,-0.78387 1.06944,-0.97231 -0.75,-0.98469 -1.2375,-0.008 -2.25,0.43469 -2.25,0.98469 0,1.25292 1.06124,1.25292 3,0 z m -76.270833,-0.60417 c -0.332292,-0.33229 -1.194792,-0.36782 -1.916667,-0.0789 -0.797733,0.31923 -0.560776,0.55619 0.604167,0.60417 1.054166,0.0434 1.644791,-0.19293 1.3125,-0.52522 z m 39,0 c -0.332292,-0.33229 -1.194792,-0.36782 -1.916667,-0.0789 -0.797733,0.31923 -0.560776,0.55619 0.604167,0.60417 1.054166,0.0434 1.644791,-0.19293 1.3125,-0.52522 z m 749.87953,228.18149 c 0.30027,-0.78248 1.27341,-1.70184 2.16255,-2.04304 1.32812,-0.50964 1.28666,-0.25575 -0.2323,1.42269 -2.17821,2.40688 -2.67736,2.5673 -1.93025,0.62035 z m -208.54531,-2.73843 c -0.0856,-2.24358 5.56301,-6.85973 8.26334,-6.75294 1.80191,0.0713 1.69244,0.23029 -0.64066,0.93062 -3.49257,1.04837 -5.66255,2.80404 -6.73455,5.44871 -0.63685,1.57115 -0.83919,1.65627 -0.88813,0.37361 z m 492.93663,-4.90098 c -8.0847,-4.44786 -8.1567,-4.57954 -5.8461,-10.68791 l 1.9859,-5.25 h 34.7968 34.7967 l 2.1354,5.13826 c 2.0233,4.8686 2.0434,5.20764 0.3833,6.45997 -2.5212,1.90199 -12.875,7.40508 -13.892,7.38365 -0.473,-0.01 1.5875,-1.3671 4.5788,-3.01587 6.3984,-3.52668 9.0612,-5.76624 9.0612,-7.621 0,-1.09941 -6.0035,-1.34501 -32.8776,-1.34501 -35.2066,0 -34.783,-0.0608 -35.3542,5.07133 -0.2069,1.85916 0.4931,2.79265 3.0609,4.08198 3.707,1.86131 4.9684,2.85586 3.5876,2.82857 -0.5042,-0.01 -3.3917,-1.37975 -6.4167,-3.04397 z M 93.506733,685.49812 c -8.85156,-3.08131 -19.5749,-8.63223 -24.96781,-12.92455 l -3.41294,-2.71642 0.25845,-37.5 0.25845,-37.5 23.14756,-0.5 c 29.574017,-0.63882 27.352437,0.91314 27.352437,-19.10793 0,-15.55761 -0.71566,-18.95589 -4.36408,-20.72248 -1.17476,-0.56883 -1.53789,-1.06469 -0.80697,-1.10191 0.73092,-0.0372 3.27971,1.88309 5.66399,4.26736 3.54496,3.54497 4.45618,5.23082 4.9997,9.25 0.36557,2.70323 0.7587,5.30325 0.87364,5.77784 0.11493,0.47458 1.54204,-2.88071 3.17135,-7.45621 1.6293,-4.5755 3.11237,-8.67629 3.2957,-9.11288 0.18334,-0.43658 -0.85875,-0.79379 -2.31574,-0.79379 -1.45699,0 -3.50251,-0.45675 -4.54561,-1.01499 -2.94288,-1.57499 -7.76336,-9.22788 -8.87632,-14.09187 -4.23763,-18.51987 -6.38866,-25.69148 -9.52482,-31.75615 l -1.64892,-3.18866 -15.210957,0.27583 -15.21096,0.27584 -0.26838,23.22834 -0.26837,23.22835 19.26837,0.29456 19.268377,0.29456 -22.249997,0.22709 -22.25,0.2271 v -26.89301 c 0,-23.60042 0.19366,-26.96733 1.58179,-27.5 2.01037,-0.77145 29.19814,-0.77286 32.07279,-0.002 3.614267,0.96962 10.471177,18.24685 14.353647,36.16663 1.1546,5.32914 2.81983,10.48556 3.70051,11.4587 2.24609,2.4819 8.71076,2.34984 11.29126,-0.23066 1.79487,-1.79487 2,-3.33333 2,-15 0,-9.74505 0.31298,-12.9945 1.25,-12.97804 2.2931,0.0403 9.77312,3.8747 10.31541,5.2879 0.29421,0.76669 -3.10647,10.79813 -7.55707,22.29207 -15.88633,41.02739 -17.91187,46.273 -29.58513,76.61759 -6.499627,16.89574 -11.954947,30.58207 -12.122937,30.41408 -0.43629,-0.43629 2.43617,-8.36101 11.103737,-30.6336 4.17372,-10.725 7.59025,-19.84701 7.59229,-20.27114 0.002,-0.42413 -8.8838,-0.64913 -19.746297,-0.5 l -19.75,0.27118 -0.26251,35.63773 -0.26251,35.63772 4.76251,3.00747 c 5.59401,3.53255 16.98239,8.56301 23.01251,10.16505 2.337497,0.62102 4.249997,1.33677 4.249997,1.59057 0,0.82146 -1.3636,0.48219 -9.636147,-2.39757 z m 45.754117,-158.423 c -1.79394,-1.79394 -3.11771,0.41763 -3.04733,5.09105 l 0.0706,4.69098 1.9602,-4.41916 c 1.22885,-2.77037 1.60811,-4.77126 1.0165,-5.36287 z M 1258.9397,677.10715 c -13.3296,-9.51013 -24.8509,-31.92324 -29.9429,-58.25 -1.8142,-9.37999 -1.8131,-42.62873 0,-52 5.5368,-28.59004 17.6005,-52.57388 31.5137,-62.65259 4.9645,-3.59624 9.5523,-3.68745 16.3016,-0.3241 10.1084,5.03723 18.2182,15.96399 23.3254,31.42769 1.5529,4.70195 3.0625,11.474 3.3546,15.049 0.5214,6.38042 0.5046,6.34868 -0.9092,-1.72521 -1.5794,-9.01975 -5.1922,-19.46704 -8.9488,-25.87713 -4.6491,-7.93308 -14.2866,-14.3315 -21.6531,-14.3757 -10.2938,-0.0618 -26.0354,22.36868 -33.3062,47.45869 -7.9511,27.43783 -7.3383,62.90205 1.5211,88.02148 5.7232,16.22699 14.875,30.34169 22.0938,34.07465 3.5554,1.83859 12.2373,1.86817 13.7489,0.0468 0.7986,-0.96227 1.0611,-7.95735 0.8724,-23.25 l -0.2681,-21.87358 -6.4439,-3.40703 c -3.5441,-1.87386 -10.4787,-4.79886 -15.4101,-6.5 -7.6836,-2.65047 -9.2855,-3.60149 -11.197,-6.64747 l -2.2307,-3.55449 9.2913,3.23718 c 9.8637,3.43664 17.4777,7.01151 23.6906,11.12298 l 3.7998,2.5146 v 24.75048 24.75049 l -2.25,0.60297 c -1.2375,0.33164 -4.5333,0.60913 -7.324,0.61664 -4.1361,0.0111 -5.9159,-0.58707 -9.6292,-3.23635 z m -793.18109,-3.88824 c -1.45281,-2.07417 -1.61573,-9.87716 -1.61573,-77.38427 0,-57.06027 0.28798,-75.36547 1.2,-76.27749 1.44444,-1.44444 6.23721,-1.57156 8.7405,-0.23184 2.84293,1.52149 10.48531,22.46753 12.50808,34.28184 1.14782,6.70408 -0.20214,3.95616 -1.96507,-4 -0.94449,-4.2625 -3.05722,-11.4625 -4.69496,-16 -2.80972,-7.78461 -3.14337,-8.25 -5.91451,-8.25 -1.61524,0 -3.15166,0.5625 -3.41425,1.25 -0.26258,0.6875 -0.36096,32.61599 -0.21861,70.95219 l 0.25882,69.70219 5.16049,-13.70219 c 5.15404,-13.68504 7.22876,-19.07804 21.81374,-56.70219 4.26414,-11 9.91597,-25.625 12.55961,-32.5 2.64365,-6.875 6.89685,-17.9 9.45155,-24.5 13.69944,-35.39205 14.81627,-38.69453 13.39437,-39.60719 -3.07233,-1.972 -17.5777,-7.14131 -20.37976,-7.26277 l -3,-0.13004 -0.5,35.17865 c -0.48009,33.77807 -0.58369,35.29098 -2.60215,38 -2.5087,3.36699 -6.1535,4.85048 -9.71875,3.95566 -2.45316,-0.61571 -9.6791,-8.76279 -9.6791,-10.91297 0,-0.54508 0.93266,0.19463 2.07258,1.6438 2.535,3.22273 7.57296,3.55209 11.06664,0.72349 l 2.36078,-1.91137 v -37.67666 -37.67666 l -2.27922,-1.84592 c -1.84313,-1.49274 -2.00796,-2.00207 -0.86147,-2.66198 0.77976,-0.44882 1.64071,-1.71604 1.91322,-2.81604 0.34491,-1.39226 0.53072,-1.0705 0.61147,1.05887 0.17481,4.60958 1.87458,6.04921 10.52508,8.91429 8.13057,2.69287 18.64627,7.48324 21.96951,10.0081 1.09729,0.83368 1.66931,2.17412 1.37538,3.22301 -0.27676,0.98765 -6.59099,17.54573 -14.03161,36.79573 -7.44063,19.25 -22.37178,57.95 -33.18033,86 -10.80856,28.05 -20.02512,51.37542 -20.48125,51.83427 -0.45613,0.45885 -1.5564,-0.20378 -2.44505,-1.47251 z m 956.62059,-32.61176 0.2637,-32.75 22.3324,-0.5 c 20.5598,-0.46031 22.4439,-0.65269 23.7373,-2.42373 2.1548,-2.95064 2.6336,-7.24772 2.267,-20.34355 -0.2843,-10.15764 -0.641,-12.39491 -2.2926,-14.38087 -1.0758,-1.29352 0.2742,-0.20865 3,2.41081 l 4.9559,4.76266 0.3469,12.27075 c 0.2031,7.18501 -0.1241,14.01947 -0.7893,16.49002 -1.9366,7.19185 -3.4089,7.6396 -27.0101,8.21391 l -20.5475,0.5 -0.2654,28.77165 -0.2653,28.77164 19.1585,-0.27164 19.1586,-0.27165 1.8861,-2.52779 c 1.0374,-1.39028 3.6497,-7.46528 5.8052,-13.5 2.1554,-6.03471 3.9422,-10.48853 3.9707,-9.89736 0.079,1.64905 -4.4842,14.64058 -7.5144,21.39296 l -2.7071,6.03219 h -22.8771 -22.8771 z m -740.77769,12.87034 c -9.15354,-4.15788 -16.70723,-18.43626 -21.08188,-39.85006 -0.87307,-4.27365 -2.308,-8.67028 -3.18873,-9.77028 -0.88073,-1.1 0.30519,-0.17986 2.63538,2.04476 3.98925,3.80851 4.41438,4.77228 7.27847,16.5 3.62994,14.86369 8.90977,26.38133 13.32885,29.0761 2.18287,1.33113 4.98603,1.87274 9.70627,1.8754 5.83144,0.003 7.22456,-0.39072 11.47818,-3.24626 5.22552,-3.508 9.342,-9.63021 9.36838,-13.93305 0.0194,-3.16361 -4.26501,-6.888 -16.48355,-14.32898 -20.30356,-12.36467 -31.76951,-24.27248 -41.09843,-42.68221 -3.08387,-6.08572 -6.42366,-15.39744 -6.35279,-17.71231 0.0268,-0.8764 1.31014,2.09311 2.85179,6.5989 5.93696,17.352 18.26105,32.52162 35.09943,43.20358 23.0033,14.59287 27,18.18562 27,24.2711 0,6.46353 -5.70496,13.85508 -13.49272,17.48166 -6.0097,2.79858 -11.58629,2.95285 -17.04865,0.47165 z m 259.94317,-3.53965 c -13.1995,-3.01546 -24.96675,-11.27675 -32.73949,-22.98505 -2.95592,-4.4526 -6.07789,-9.46559 -6.93769,-11.13998 -4.45402,-8.67378 -6.02532,-25.00492 -3.36327,-34.95566 2.82546,-10.56156 10.13221,-21.95194 17.75695,-27.68107 12.0617,-9.06297 22.3815,-12.38677 36.0096,-11.59798 13.0268,0.75399 21.2036,4.37593 34.3007,15.19353 5.6264,4.64717 13.4,15.98636 16.71252,24.37826 2.9073,7.36535 3.22,23.74932 0.6147,32.20726 -2.253,7.31411 -8.26282,17.26414 -13.50832,22.36488 -5.4209,5.27133 -15.2753,11.26211 -21.7278,13.20902 -7.2623,2.19126 -19.8822,2.65979 -27.1179,1.00679 z m 18.799,-6.69031 c 13.3496,-2.79531 27.4413,-13.73453 33.9954,-26.39038 4.5209,-8.72977 6.18492,-17.01684 5.6113,-27.94549 -0.3949,-7.52428 -0.9364,-9.47639 -4.7899,-17.26887 -9.1256,-18.4534 -26.1232,-29.2619 -46.0176,-29.2619 -9.4035,0 -16.1614,1.77595 -24.49761,6.4378 -19.02151,10.63743 -28.61674,30.14577 -25.6708,52.19204 2.07888,15.55762 12.09265,29.75817 26.34963,37.36651 10.59888,5.65614 23.01808,7.38332 35.01958,4.87029 z m -21.9687,-2.95086 c -11.78286,-2.32278 -26.07967,-14.04433 -32.2484,-26.43952 -3.46055,-6.95349 -3.4837,-7.0897 -3.4837,-20.5 0,-13.4103 0.0231,-13.54651 3.4837,-20.5 6.98231,-14.02996 20.83781,-24.41056 35.6571,-26.71447 14.4136,-2.24083 27.467,1.61353 39.862,11.77025 4.0932,3.35411 5.737,5.62811 11.44,15.8257 5.3201,9.51292 5.0407,30.17939 -0.5438,40.22936 -6.6026,11.88201 -11.1025,16.40795 -22.5663,22.69681 -7.7347,4.2431 -20.8523,5.75072 -31.6006,3.63187 z m -4.8139,-13.54651 c 0.87,-0.33384 1.5818,-1.00884 1.5818,-1.5 0,-1.43081 -2.6414,-1.02998 -4,0.60699 -1.3198,1.59021 -0.3408,1.95173 2.4182,0.89301 z m 32.9624,-2.26345 c 5.6859,-3.21655 6.286,-3.67787 9.4021,-7.22811 3.1394,-3.57677 7.7974,-12.91191 6.4318,-12.88998 -0.393,0.006 -1.5784,1.8146 -2.6343,4.01843 -3.2513,6.78576 -8.2264,11.65236 -15.8629,15.51677 -5.4061,2.73572 -6.339,3.47161 -3.7173,2.93236 1.925,-0.39595 4.7963,-1.45321 6.3806,-2.34947 z m -50.46393,-16.77024 c 0.95708,-0.82536 -0.60084,-1.14733 -3.16667,-0.65444 -1.5125,0.29055 -2.75,0.93439 -2.75,1.43075 0,0.79573 4.82837,0.16221 5.91667,-0.77631 z m -4.91667,-26.90987 2.5,-1.47969 -2.92288,0.26512 c -1.60759,0.14582 -3.10759,0.82762 -3.33333,1.51512 -0.53443,1.62756 0.66005,1.53198 3.75621,-0.30055 z m 26.5539,-2.53658 c 1.0305,-1.66742 -1.2873,-3.57951 -2.6668,-2.2 -1.1539,1.15392 -0.4317,3.28713 1.1129,3.28713 0.4851,0 1.1843,-0.48921 1.5539,-1.08713 z m -21.86174,-8.84367 c 0.27879,-1.06613 1.08723,-1.70735 1.80523,-1.43183 1.52702,0.58598 2.89212,-1.19811 2.00948,-2.62625 -0.85807,-1.38839 -5.17463,1.61039 -5.8088,4.03545 -0.28096,1.07439 -0.0608,1.95343 0.48917,1.95343 0.55,0 1.22721,-0.86886 1.50492,-1.9308 z m 10.35579,-7.62698 c 0.71106,-0.85677 2.79115,-2.18381 4.62245,-2.94897 1.8313,-0.76516 3.3296,-1.86416 3.3296,-2.44222 0,-1.27426 0.582,-1.35942 -5.82,0.85166 -5.92454,2.04616 -7.73376,3.39228 -6.73385,5.01018 0.96325,1.55857 3.09898,1.34014 4.6018,-0.47065 z m 552.15147,81.05778 c 0,-1.1 0.3602,-3.125 0.8006,-4.5 0.634,-1.97958 0.8006,-2.08367 0.8006,-0.5 0,1.1 -0.3602,3.125 -0.8006,4.5 -0.634,1.97958 -0.8006,2.08367 -0.8006,0.5 z m -835.35096,-18.5 c -1.09807,-2.52801 -30.6903,-75.36938 -46.31316,-114 -8.11866,-20.075 -15.62287,-37.4 -16.67603,-38.5 -1.84553,-1.92763 -3.21977,-2 -37.9754,-2 h -36.06058 l -1.91164,2.36078 c -1.05141,1.29843 -1.91165,1.93068 -1.91165,1.40499 0,-0.52569 0.94669,-1.81304 2.10376,-2.86078 1.97196,-1.78564 4.32033,-1.92293 37.48284,-2.19141 l 35.37907,-0.28641 4.59394,4.23454 c 6.24008,5.7519 2.47487,-2.56395 33.6585,74.33829 9.36698,23.1 19.32341,47.625 22.1254,54.5 l 5.09452,12.5 0.75967,-4.5 c 0.782,-4.63226 3.62862,-8.03332 6.66308,-7.96086 0.90157,0.0215 0.17672,0.67481 -1.61078,1.45173 -1.7875,0.77692 -3.30514,1.54681 -3.37254,1.71086 -0.0674,0.16405 -0.40489,5.02327 -0.75,10.79827 -0.3451,5.775 -0.92065,9.825 -1.279,9 z M 215.75206,598.74174 c -2.68995,-6.53652 -10.23035,-25.08129 -16.75646,-41.21059 -19.941,-49.28432 -20.93354,-51.60113 -23.10145,-53.924 -3.89134,-4.1695 -0.71788,-2.29248 3.53603,2.09147 3.49864,3.60558 5.50611,7.54647 11.84341,23.25 4.19688,10.39969 12.29688,30.38353 18,44.40853 l 10.36929,25.5 0.5,-50.22808 0.5,-50.22808 2.77236,-2.77192 c 2.50931,-2.5089 3.56369,-2.80484 11.11217,-3.11888 6.18193,-0.25718 9.1288,0.061 11.38914,1.22992 3.66278,1.89409 4.71185,3.05811 54.22633,60.16788 14.00699,16.15559 19.11045,21.98958 28.19187,32.22734 1.59936,1.803 3.33547,3.01394 3.85802,2.69098 0.56803,-0.35106 0.95011,-13.4206 0.95011,-32.4996 v -31.9124 l -8.25,-3.93969 c -4.5375,-2.16683 -9.65599,-4.22803 -11.37442,-4.58045 -3.25097,-0.66672 -5.79358,-2.93857 -8.99323,-8.03557 l -1.88235,-2.99855 2.88486,2.24855 c 1.58667,1.2367 3.61167,2.26072 4.5,2.2756 2.65502,0.0445 14.43738,5.41056 19.44506,8.85593 l 4.67008,3.2131 v 32.82696 c 0,18.05483 -0.2821,34.23747 -0.62689,35.96143 l -0.6269,3.13447 -2.194,-2.25947 c -2.38073,-2.45177 -35.46684,-40.41604 -55.56678,-63.75947 -13.51057,-15.69074 -17.94326,-20.70289 -25.17496,-28.46592 l -4.68952,-5.03408 h -9.53357 c -8.58686,0 -9.75966,0.22611 -11.81047,2.27701 l -2.27691,2.27701 -0.5,56.10759 -0.5,56.10758 z m 1023.46974,8.03208 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m -82.7234,-8.63221 c -1.1794,-2.90645 -10.09,-24.85946 -19.8013,-48.78446 -9.7113,-23.925 -19.9925,-49.3059 -22.8472,-56.402 -4.6555,-11.57249 -5.5228,-13.0409 -8.4165,-14.25 -2.4861,-1.03876 -10.7467,-1.34462 -36.0084,-1.33326 -35.0418,0.0158 -36.5726,0.21222 -38.9977,5.00497 -0.8493,1.67871 -1.2597,1.94345 -1.2697,0.81918 -0.01,-0.9136 1.3698,-2.8261 3.062,-4.25 l 3.0768,-2.58889 h 33.9729 c 27.2792,0 34.505,0.27762 36.6733,1.40905 7.3915,3.85693 8.7065,6.73365 48.4965,106.09095 l 3.2038,8 0.5595,-10.22616 c 0.3077,-5.62439 0.7664,-10.43304 1.0192,-10.6859 0.4233,-0.42326 0.1137,24.97103 -0.3681,30.19652 -0.1557,1.68938 -0.7692,0.90791 -2.3551,-3 z m -503.54302,3.53243 c 0.72187,-0.28887 1.58438,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 823.51022,-32.55263 c -4.6974,-2.72757 -10.5034,-14.82335 -10.2069,-21.26426 0.051,-1.1 0.9016,1.34906 1.891,5.44235 1.9359,8.00957 3.6159,10.05765 8.2501,10.05765 4.3596,0 6.5489,-1.63954 7.6938,-5.76177 1.4032,-5.05258 1.3889,-71.47501 -0.016,-76.53585 -0.7195,-2.59095 -1.8505,-4.10024 -3.5596,-4.75 -1.5102,-0.57403 -33.9197,-0.95238 -81.5804,-0.95238 h -79.0751 l -7.6886,-2.55024 c -4.2287,-1.40264 -11.7031,-3.39597 -16.6098,-4.42964 -4.9066,-1.03367 -7.5712,-1.90695 -5.9212,-1.94064 3.3887,-0.0692 20.4313,4.08931 25,6.10012 2.3733,1.04458 20.0683,1.42485 84.7091,1.8204 l 81.7092,0.5 4.007,4.29752 c 2.2038,2.36363 4.4697,5.96363 5.0352,8 1.2808,4.61149 1.3559,69.13261 0.087,74.60344 -0.4977,2.14552 -1.7513,4.74743 -2.7859,5.782 -2.3942,2.39419 -8.1147,3.22113 -10.9388,1.5813 z m -316.0907,-2.76426 c 0,-1.925 0.2058,-2.7125 0.4573,-1.75 0.2516,0.9625 0.2516,2.5375 0,3.5 -0.2515,0.9625 -0.4573,0.175 -0.4573,-1.75 z m 261.768,-25 v -26 h 16.4489 16.4489 l 2.9784,6.25 c 3.2408,6.80086 8.1628,20.80277 8.0592,22.92632 -0.036,0.72802 -1.5318,-2.95132 -3.3249,-8.17632 -5.2959,-15.43135 -3.3718,-14.09994 -19.9102,-13.77715 l -14.2003,0.27715 -0.2694,21.72685 -0.2695,21.72684 17.7695,0.29776 17.7694,0.29775 -20.75,0.2254 -20.75,0.2254 z m -776.35936,15.78966 c -0.33734,-1.25931 -0.56689,-3.86466 -0.5101,-5.78966 0.0836,-2.8344 0.2738,-2.47253 1.00012,1.90289 0.9188,5.53495 0.60923,7.99035 -0.49002,3.88677 z m 516.42516,0.63549 c -0.07,-2.21144 4.0832,-15.13006 5.8289,-18.13013 1.6026,-2.75422 1.3058,-1.32532 -0.9664,4.65305 -1.1389,2.99644 -2.684,7.72144 -3.4337,10.5 -0.7496,2.77856 -1.3926,4.11825 -1.4288,2.97708 z M 644.61555,535.85715 c 0.16931,-6.6 0.81758,-13.125 1.44059,-14.5 1.09142,-2.40881 1.10895,-2.39058 0.48045,0.5 -0.35877,1.65 -1.00703,8.175 -1.44059,14.5 l -0.7883,11.5 z m 524.54405,1.21676 c -0.033,-1.52679 5.3015,-11.32689 10.4594,-19.21676 9.8818,-15.1157 24.0213,-28.44922 40.1788,-37.88861 7.2636,-4.24343 20.981,-9.89942 22.6554,-9.3413 0.6458,0.21526 -1.4628,1.22082 -4.6858,2.23456 -14.1318,4.44501 -29.4521,14.23748 -42.1672,26.95262 -9.2816,9.28159 -15.4903,17.67672 -21.8929,29.60287 -2.492,4.64192 -4.5385,8.0874 -4.5477,7.65662 z m -866.90172,-35.411 c -0.0741,-2.05768 0.74309,-4.19256 2.29664,-6 l 2.41164,-2.80576 24.77601,-0.5 24.77601,-0.5 0.89385,-3.5 c 0.88556,-3.46754 4.26277,-8 5.96093,-8 0.4848,0 -0.31292,1.02735 -1.77269,2.283 -1.90147,1.63557 -2.79693,3.54977 -3.15764,6.75 l -0.5035,4.467 h -25.36241 c -28.40478,0 -28.05947,-0.0842 -29.46522,7.18209 -0.72488,3.74688 -0.74076,3.75848 -0.85362,0.62367 z m -170.78552,-1.08097 c -0.80999,-0.51525 -1.27199,-6.80648 -1.5,-20.42607 l -0.32948,-19.6815 2.25152,2.11713 c 3.39177,3.18932 4.23678,7.86828 4.2429,23.49358 l 0.006,14.22794 18.75,0.29551 18.75,0.2955 -20.5,0.21125 c -11.275,0.11618 -21.02673,-0.12382 -21.67052,-0.53334 z m 266.42052,-20.97432 c 18.2875,-0.15259 48.2125,-0.15259 66.5,0 18.2875,0.15258 3.325,0.27742 -33.25,0.27742 -36.575,0 -51.5375,-0.12484 -33.25,-0.27742 z m 847.75002,-10.25047 c 1.1,-0.47269 2.9,-0.85943 4,-0.85943 h 2 l -2,0.85943 c -1.1,0.47269 -2.9,0.85943 -4,0.85943 h -2 z m 8.5,-2 c 1.375,-0.44035 4.075,-0.79375 6,-0.78532 l 3.5,0.0153 -4,0.82737 c -2.2,0.45505 -4.9,0.80845 -6,0.78532 -1.6175,-0.034 -1.5219,-0.19516 0.5,-0.84269 z m 15.25,-1.73899 c 3.1625,-0.19845 8.3375,-0.19845 11.5,0 3.1625,0.19845 0.575,0.36082 -5.75,0.36082 -6.325,0 -8.9125,-0.16237 -5.75,-0.36082 z\"\n         id=\"path86\"\n         inkscape:connector-curvature=\"0\" />\n      <path\n         style=\"fill:#b9b9b9;fill-opacity:1\"\n         d=\"m 1252.6429,716.38199 c -19.1173,-4.91644 -33.2062,-12.23373 -47.9567,-24.90698 -5.5766,-4.79128 -8.5433,-6.26898 -8.5433,-4.2554 0,0.47436 1.3575,4.15439 3.0166,8.17785 4.4344,10.7535 4.7405,13.968 1.6701,17.53737 l -2.5139,2.92232 h -57.1679 -57.168 l -3.8886,-4.5 c -2.1387,-2.475 -3.902,-4.88735 -3.9185,-5.36078 -0.016,-0.47344 0.8302,0.20156 1.8814,1.5 l 1.9112,2.36078 56.4235,0.27395 c 55.9812,0.27179 56.4444,0.25751 59.0888,-1.82258 1.7259,-1.35761 2.6653,-3.06012 2.6653,-4.8305 0,-1.50368 -2.6778,-9.37801 -5.9507,-17.49851 l -5.9507,-14.76455 9.3567,8.94506 c 22.8256,21.82138 45.9599,31.90322 75.5447,32.9221 13.2924,0.45779 16.2489,0.20549 35.5,-3.02948 11.55,-1.94087 24.6,-3.83271 29,-4.2041 6.0844,-0.51356 8.5388,-1.17387 10.25,-2.75763 l 2.25,-2.08239 v -49.2531 -49.25311 l -2.6349,-2.07258 c -1.4491,-1.13992 -2.1507,-2.07258 -1.559,-2.07258 0.5917,0 1.354,0.45 1.6939,1 0.3399,0.55 1.4666,1 2.5038,1 1.8209,0 1.8963,1.87253 2.191,54.39595 0.2909,51.8537 0.3942,54.49428 2.2102,56.5 1.9014,2.10015 2.0333,2.10405 71.1774,2.10405 h 69.2724 l 2.1051,-2.6761 c 2.0713,-2.63324 2.1005,-3.3135 1.8225,-42.47819 l -0.2824,-39.80209 2.5,2.49996 2.5,2.49996 0.2842,39.18861 c 0.302,41.64311 0.1151,43.58143 -4.3988,45.63813 -1.7652,0.80427 -22.0864,1.12972 -70.5409,1.12972 h -68.0614 l -4.1415,-4.48123 -4.1416,-4.48123 -15,1.95503 c -14.7585,1.92357 -17.5502,2.36309 -34.5,5.43172 -5.2423,0.94908 -14.0572,1.51789 -23,1.48415 -12.5448,-0.0473 -15.9833,-0.43616 -25.5,-2.8836 z m -260.14162,-3.73404 c -2.3971,-2.61096 -4.3299,-5.43202 -4.295,-6.269 0.037,-0.88979 0.4412,-0.58133 0.9731,0.74274 0.5004,1.2455 1.9344,2.65196 3.1867,3.12547 3.1134,1.17725 66.59332,0.22636 69.94102,-1.04767 3.1488,-1.19831 5.3205,-5.77496 4.4279,-9.33124 -0.615,-2.45046 -0.5728,-2.47498 1.3809,-0.80219 5.5081,4.71617 4.2622,14.14521 -2.1262,16.09197 -1.8408,0.56093 -18.148,1.29376 -36.2384,1.6285 l -32.89162,0.60864 z m -227.8584,-0.23623 c -1.1,-0.45026 -3.54672,-2.78424 -5.43715,-5.18661 -2.01421,-2.55968 -2.48853,-3.53998 -1.14574,-2.36796 2.21523,1.9335 3.93061,2.00921 51.59328,2.27707 l 49.30186,0.27707 2.09388,-2.66193 c 2.07344,-2.63595 2.09387,-3.2601 2.09387,-63.95869 V 579.4939 l 23,-45.61513 c 23.08781,-45.78928 24.67426,-49.69064 21.75,-53.48687 -0.6875,-0.8925 0.42407,0.19707 2.47016,2.42126 2.67144,2.90399 3.72857,4.95989 3.75,7.29301 0.021,2.28243 -6.73832,16.71125 -22.72016,48.5 l -22.75,45.25098 -0.5,62.33717 -0.5,62.33717 -2.80576,2.41283 -2.80577,2.41283 -47.69423,-0.0634 c -26.23183,-0.0349 -48.59424,-0.43177 -49.69424,-0.88203 z M -0.523125,710.1602 c -1.191304,-0.71668 -3.137901,-2.54238 -4.325771,-4.05711 l -2.159765,-2.75406 2.825772,1.08519 c 4.480546,1.72068 106.114679,0.1591 109.029039,-1.6752 2.71639,-1.7097 3.9272,-7.31407 2.27855,-10.54657 -0.7931,-1.55505 -0.16855,-1.16612 1.83818,1.1447 1.67168,1.925 3.30367,4.50871 3.62665,5.74158 0.85719,3.27207 -1.91937,9.10745 -4.86663,10.22799 -1.40614,0.53462 -25.366727,1.21714 -54.298357,1.5467 -41.596375,0.47382 -52.207707,0.33353 -53.947668,-0.71322 z M 1261.6429,709.73812 c -32.3204,-4.85418 -59.6975,-22.06171 -77.657,-48.81038 -14.0228,-20.88535 -20.437,-40.51873 -21.5535,-65.97358 -1.5136,-34.50656 9.9984,-65.97311 33.0587,-90.3614 30.6326,-32.39668 75.5021,-43.41453 115.9629,-28.47508 l 7.1889,2.65438 79.0417,-0.35413 c 59.4744,-0.26645 79.5884,-0.0615 81.25,0.82773 l 2.2083,1.18186 v 38.76481 c 0,40.8835 -0.031,41.16482 -4.5776,41.16482 -3.1721,0 -4.1327,-1.68157 -5.9296,-10.38102 -2.1472,-10.39523 -6.6726,-24.05116 -10.4501,-31.5343 l -3.0715,-6.08468 h -18.9856 -18.9856 v 29 29 h 21.4349 c 11.7892,0 22.5892,0.43886 24,0.97525 l 2.5651,0.97525 v 15.41776 c 0,13.13649 -0.234,15.50757 -1.5818,16.02475 -0.87,0.33385 -11.67,0.60699 -24,0.60699 h -22.4182 v 36 36 h 25.3423 25.3423 l 3.5328,-7.75 c 5.2459,-11.5082 7.5538,-18.60943 10.2963,-31.68107 0.7998,-3.81208 2.0239,-7.29269 2.7203,-7.73468 2.2634,-1.4367 5.6713,-0.87975 6.7308,1.10001 0.6603,1.23371 1.0352,15.38241 1.0352,39.06574 0,23.68333 -0.3749,37.83203 -1.0352,39.06574 -1.0077,1.88297 -2.822,1.93426 -68.4182,1.93426 -37.0607,0 -68.0948,-0.27314 -68.9648,-0.60699 -1.428,-0.54797 -1.5818,-10.46204 -1.5818,-101.96274 V 506.43167 l -5.75,-3.89273 c -3.1625,-2.141 -7.1488,-4.61139 -8.8585,-5.48975 l -3.1085,-1.59703 -2.6043,10.70249 c -1.4323,5.88638 -4.1685,17.2275 -6.0803,25.2025 -8.8989,37.12107 -10.8168,44.55823 -11.7942,45.73594 -1.3277,1.59975 -5.0326,1.63569 -6.6042,0.0641 -0.7559,-0.75587 -1.2015,-4.54951 -1.204,-10.25 -0.014,-30.57771 -11.9705,-57.18586 -29.4454,-65.52584 -12.8056,-6.11156 -21.1072,-2.87689 -32.0184,12.47584 -12.2206,17.19518 -19.1779,37.34089 -22.102,64 -3.4443,31.40067 3.7445,64.44749 19.017,87.42051 8.8216,13.26963 18.6205,19.85878 27.7346,18.64976 2.6931,-0.35725 6.0039,-1.07057 7.3574,-1.58516 l 2.4608,-0.93561 v -26.93511 -26.93511 l -6.4848,-4.09554 c -7.4744,-4.72051 -14.4932,-7.93167 -23.0152,-10.52967 -3.3,-1.00603 -6.5625,-2.27236 -7.25,-2.81406 -1.7481,-1.37735 -1.5584,-5.28876 0.349,-7.19614 1.4291,-1.42914 6.7439,-1.5695 50.0369,-1.32143 41.7621,0.23931 48.5686,0.48429 49.3857,1.77756 1.5379,2.43399 1.2765,96.5158 -0.2716,97.75865 -0.6875,0.55194 -5.3,1.32275 -10.25,1.7129 -4.95,0.39014 -16.425,2.06295 -25.5,3.71734 -15.8544,2.89029 -38.2658,4.42877 -46.5,3.19208 z m 101.2826,-9.93169 c -1.1983,-1.1983 -4.7826,1.65947 -4.7826,3.81318 0,2.13131 0.075,2.11732 2.697,-0.50488 1.4833,-1.48334 2.4218,-2.97207 2.0856,-3.3083 z m -79.2826,0.55072 c 1.7723,-0.76156 1.6868,-0.86743 -0.75,-0.92971 -1.5125,-0.0387 -2.75,0.37971 -2.75,0.92971 0,1.17371 0.7686,1.17371 3.5,0 z m 85.5818,0 c 1.055,0 1.9182,-0.675 1.9182,-1.5 0,-1.81449 -4.0747,-2.02526 -5.8,-0.3 -1.7088,1.70883 -1.4845,3.12315 0.3818,2.40699 0.87,-0.33385 2.445,-0.60699 3.5,-0.60699 z m 25.4593,-0.0665 c 0.8385,-1.35672 0.6072,-1.52319 -3.0911,-2.22484 -2.3372,-0.4434 -3.3325,-0.12638 -4.2585,1.35636 -1.1183,1.7907 -0.9139,1.93501 2.741,1.93501 2.1722,0 4.2461,-0.47994 4.6086,-1.06653 z m 54.4589,0.0665 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m 22.5411,-0.0665 c 0.3626,-0.58659 0.4535,-1.27219 0.2022,-1.52354 -0.6975,-0.69748 -3.7433,0.68337 -3.7433,1.69706 0,1.25179 2.7433,1.11736 3.5411,-0.17352 z m -181.3744,-0.71959 c 0.1833,-0.43237 1.7958,-1.81301 3.5833,-3.0681 3.0303,-2.12771 4.5013,-6.14578 2.25,-6.14578 -0.55,0 -1,0.59379 -1,1.31953 0,0.72575 -1.4625,1.96325 -3.25,2.75 -2.0742,0.91295 -3.1502,2.03526 -2.9741,3.10217 0.1519,0.92089 -0.5218,1.87933 -1.5,2.134 -1.4178,0.36907 -1.339,0.48569 0.3908,0.5783 1.1916,0.0638 2.3166,-0.23775 2.5,-0.67012 z m 175.8333,-1.77293 c 0,-0.85746 -0.4573,-1.27636 -1.0163,-0.9309 -0.559,0.34546 -0.7574,1.04702 -0.441,1.55902 0.8572,1.38704 1.4573,1.12841 1.4573,-0.62812 z m -164,-0.72174 c 0,-0.70442 1.35,-1.79033 3,-2.41314 2.0896,-0.78873 3,-1.80456 3,-3.3474 v -2.21502 l -3.1561,2.43387 c -3.1936,2.46285 -5.6293,6.82245 -3.8117,6.82245 0.5323,0 0.9678,-0.57634 0.9678,-1.28076 z m 76.5,0.28076 c 0.3399,-0.55 -0.083,-1 -0.941,-1 -0.8574,0 -1.559,0.45 -1.559,1 0,0.55 0.4234,1 0.941,1 0.5175,0 1.2191,-0.45 1.559,-1 z m -123,-1 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 167.5,-2 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m -88.5732,-4.15364 c 2.2063,-4.42267 1.9936,-4.62333 -1.4268,-1.34636 -3.2906,3.15262 -3.7617,4.5 -1.5732,4.5 0.7847,0 2.1347,-1.41914 3,-3.15364 z m 127.2281,-0.38949 c 0.3257,-0.84872 0.3225,-1.81284 -0.01,-2.1425 -0.7122,-0.71223 -3.6477,1.54756 -3.6477,2.80807 0,1.50909 3.0323,0.9569 3.6549,-0.66557 z m 20.8451,0.54313 c 0.3399,-0.55 -0.083,-1 -0.941,-1 -0.8574,0 -1.559,0.45 -1.559,1 0,0.55 0.4234,1 0.941,1 0.5175,0 1.2191,-0.45 1.559,-1 z m -241.9967,-3.00538 c 0.7902,-1.2786 -0.1313,-1.26405 -2.569,0.0406 -1.0639,0.56935 -1.9343,1.48519 -1.9343,2.03519 0,1.14848 3.5108,-0.46976 4.5033,-2.07575 z m 32.9967,0.79857 c 0.6987,-0.74426 0.2466,-0.87772 -1.5,-0.44289 -1.375,0.34232 -3.0625,0.62854 -3.75,0.63605 -0.6875,0.008 -1.25,0.51243 -1.25,1.12206 0,1.31405 4.9772,0.30695 6.5,-1.31522 z m 5.2823,0.36131 c 0.2866,-0.86063 -0.1942,-1.221 -1.3343,-1 -0.9802,0.19002 -1.9839,0.95098 -2.2303,1.691 -0.2866,0.86063 0.1942,1.221 1.3343,1 0.9802,-0.19002 1.9839,-0.95098 2.2303,-1.691 z m 110.0302,-1.092 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.7219,0.24063 -1.5094,1.02812 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.7219,-0.24063 1.5094,-1.02813 1.75,-1.75 z m 61.1875,0.57617 c 0,-0.91286 -0.8236,-1.20389 -2.5,-0.88342 -1.375,0.26285 -2.5,0.87544 -2.5,1.36133 0,0.48588 1.125,0.88342 2.5,0.88342 1.4424,0 2.5,-0.57591 2.5,-1.36133 z m -199.5,-0.63867 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 42.1222,-0.45785 c 0.3146,-0.81991 -0.1467,-2.20946 -1.0251,-3.08788 -2.1066,-2.10661 -2.0914,-2.14731 1.4958,-4.00233 1.7011,-0.87968 2.852,-1.84039 2.5575,-2.13491 -0.8996,-0.8996 -6.6504,2.08531 -6.6504,3.45183 0,0.70435 -1.0125,1.66786 -2.25,2.14113 -1.2375,0.47327 -3.0204,1.71621 -3.9621,2.76209 -1.6601,1.84393 -1.5457,1.90857 3.7751,2.13121 4.0943,0.17133 5.6324,-0.1488 6.0592,-1.26114 z m 5.8778,0.45785 c 0.3399,-0.55 0.168,-1 -0.382,-1 -0.55,0 -1.2781,0.45 -1.618,1 -0.3399,0.55 -0.168,1 0.382,1 0.55,0 1.2781,-0.45 1.618,-1 z m 140.5,-3 c 0,-0.55 -0.6484,-1 -1.441,-1 -0.7925,0 -1.7191,0.45 -2.059,1 -0.3399,0.55 0.3085,1 1.441,1 1.1324,0 2.059,-0.45 2.059,-1 z m -75.243,-3.57633 c -0.9842,-0.98418 -2.757,0.52669 -2.757,2.34963 0,1.52648 0.1315,1.52374 1.6905,-0.0352 0.9297,-0.92977 1.4097,-1.97126 1.0665,-2.31443 z m 113.4537,1.82633 c 0.8364,-0.9625 1.8072,-2.95751 2.1573,-4.43335 0.3502,-1.47584 1.487,-2.95325 2.5264,-3.28312 2.3737,-0.75339 3.3279,-4.10415 1.5815,-5.55356 -1.09,-0.9046 -1.0887,-1.5589 0.01,-3.78676 1.9719,-4.00737 3.318,-10.89648 2.4148,-12.358 -0.436,-0.70533 -0.4338,-1.5193 0,-1.80882 0.4385,-0.28951 1.0519,-2.47605 1.3631,-4.85898 0.3112,-2.38292 0.3189,-4.08566 0.017,-3.78387 -0.3018,0.3018 -2.2342,5.62646 -4.2942,11.83259 -6.7544,20.34866 -10.3721,26.78387 -15.057,26.78387 -1.6125,0 -2.9319,0.50008 -2.9319,1.11129 0,0.72362 1.1938,0.88734 3.422,0.46932 1.9847,-0.37234 3.6896,-0.20907 4.059,0.38871 0.9608,1.55461 3.0268,1.24041 4.7297,-0.71932 z m 4.7893,0.75 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -33,-1 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m -235,-5.05902 c 0,-0.51754 -0.9551,-0.94098 -2.1224,-0.94098 -1.7663,0 -1.9151,0.24988 -0.8867,1.48899 1.249,1.50499 3.0091,1.18445 3.0091,-0.54801 z m 174.9937,-2.19098 c 0.01,-1.12089 -0.8013,-0.92215 -3.5289,0.86501 -3.5073,2.29808 -3.0631,3.6324 0.5289,1.58848 1.6465,-0.93692 2.9965,-2.04099 3,-2.45349 z m -67.1369,1.35969 c 0.9458,-0.5993 1.0215,-1.06688 0.25,-1.54371 -1.2685,-0.78393 -3.1068,0.0995 -3.1068,1.49304 0,1.16275 1.0717,1.18176 2.8568,0.0507 z m -95.3568,-5.10969 c 0.3399,-0.55 0.3102,-1.49804 -0.066,-2.10676 -0.6721,-1.08751 -2.3824,0.57899 -2.4187,2.35676 -0.022,1.09614 1.7638,0.91642 2.4847,-0.25 z m 103.6017,-5.98114 c 4.244,-3.9575 4.7135,-5.73061 1.2237,-4.6212 -2.6169,0.83187 -7.3254,5.42306 -7.3254,7.14281 0,2.3581 1.5601,1.71337 6.1017,-2.52161 z m 72.9801,2.98114 c 0.505,0 0.9182,-0.64468 0.9182,-1.43261 0,-0.78794 0.9,-1.71826 2,-2.06739 1.1,-0.34913 2,-1.05445 2,-1.56739 0,-1.37712 -1.6567,-1.1331 -3.2717,0.4819 -0.7779,0.77799 -2.9313,1.34049 -4.7852,1.25 -2.4277,-0.11849 -3.4667,0.30146 -3.714,1.50117 -0.352,1.70795 2.1567,2.91547 4.6027,2.21546 0.7325,-0.20963 1.745,-0.38114 2.25,-0.38114 z m -99.5818,-1 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 58.5,-4.60699 c 0,-1.59262 -0.8959,-1.745 -2.8781,-0.4895 -0.758,0.48009 -1.0811,1.35354 -0.718,1.94101 0.8755,1.4165 3.5961,0.31835 3.5961,-1.45151 z m -55.5,-0.39301 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -3.5,-1 c 0,-0.55 -0.9266,-1 -2.059,-1 -1.1325,0 -1.7809,0.45 -1.441,1 0.3399,0.55 1.2665,1 2.059,1 0.7926,0 1.441,-0.45 1.441,-1 z m 57,-2.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 33.7507,-2.16687 c 1.4771,-1.47713 1.4577,-1.57876 -0.2386,-1.25 -1.0155,0.19682 -2.0337,0.92035 -2.2626,1.60785 -0.5756,1.72883 0.5798,1.56352 2.5012,-0.35785 z m -197.7507,-1.39215 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 164,-3.55902 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m -29,-1.67041 c 0,-0.58531 -0.6354,-0.48812 -1.5,0.22943 -0.825,0.68469 -1.5,1.40067 -1.5,1.59106 0,0.19039 0.675,0.0872 1.5,-0.22943 0.825,-0.31659 1.5,-1.03256 1.5,-1.59106 z m 69.7308,-1.42511 c 1.7187,-1.8545 2.6824,-2.2949 3.1976,-1.46124 0.5351,0.86567 1.4698,0.91489 3.4046,0.17929 2.4018,-0.91317 2.667,-1.51453 2.667,-6.04723 0,-5.51106 0.5045,-5.3801 -6.5738,-1.70661 -1.6906,0.87738 -4.0476,1.34058 -5.2379,1.02933 -1.5101,-0.39491 -2.3731,-0.021 -2.8561,1.23758 -0.3855,1.00476 -0.2165,1.96199 0.3817,2.1614 0.5906,0.19685 0.8441,1.23634 0.5633,2.30997 -0.3009,1.15065 -0.01,1.95205 0.7132,1.95205 0.6768,0 0.9664,0.67031 0.648,1.5 -0.8681,2.26205 0.3461,1.80875 3.0924,-1.15454 z m -112.3218,-2.49278 c -1.0611,-1.71687 -2.159,-0.78291 -2.159,1.83661 0,2.49578 0.097,2.55714 1.343,0.85268 0.7386,-1.01014 1.1058,-2.22032 0.816,-2.68929 z m 72.091,-1.85268 c 0.3399,-0.55 -0.083,-1 -0.941,-1 -0.8574,0 -1.559,0.45 -1.559,1 0,0.55 0.4234,1 0.941,1 0.5175,0 1.2191,-0.45 1.559,-1 z m 22.5,-4.44098 c 0,-1.05548 -1.9191,-1.49891 -2.4899,-0.57533 -0.3455,0.55897 0.073,1.01631 0.9309,1.01631 0.8574,0 1.559,-0.19844 1.559,-0.44098 z m -94.9348,-4.89385 c -0.8299,-0.82986 -1.004,-0.47639 -0.6681,1.35622 0.6487,3.5393 0.7781,3.69925 1.3127,1.62239 0.2628,-1.02092 -0.027,-2.3613 -0.6446,-2.97861 z m -85.5652,2.33483 c 0.3399,-0.55 -0.057,-1 -0.882,-1 -0.825,0 -1.7781,0.45 -2.118,1 -0.3399,0.55 0.057,1 0.882,1 0.825,0 1.7781,-0.45 2.118,-1 z m 186.5,-1.58333 c 0,-1.76593 -2.1528,-1.45839 -2.7708,0.39583 -0.2177,0.65312 0.3166,1.1875 1.1875,1.1875 0.8708,0 1.5833,-0.7125 1.5833,-1.58333 z m -183.1931,-1.94313 c -0.3079,-0.30789 -0.8671,0.24711 -1.2426,1.23333 -0.5427,1.4252 -0.4278,1.54006 0.5598,0.5598 0.6834,-0.67834 0.9907,-1.48524 0.6828,-1.79313 z m 154.6931,-1.47354 c 1.7568,-1.94121 1.7466,-2 -0.345,-2 -1.4883,0 -2.155,0.61872 -2.155,2 0,1.1 0.1553,2 0.345,2 0.1898,0 1.1595,-0.9 2.155,-2 z m -70.9093,-1.74264 c -0.6935,-0.69349 -2.5907,0.71555 -2.5907,1.9241 0,0.6631 0.5738,0.58723 1.5242,-0.20152 0.8383,-0.69572 1.3182,-1.47088 1.0665,-1.72258 z m 101.7644,-0.84012 c 0.8352,-0.32052 1.282,-1.19934 0.9928,-1.95294 -0.4188,-1.09143 -0.9145,-1.12738 -2.4368,-0.17669 -3.1995,1.99808 -2.17,3.51643 1.444,2.12963 z m 17.6449,-0.41724 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -48,-4 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 37.6357,-1.49384 c 1.5754,-0.82161 3.7643,-1.5035 4.8643,-1.51531 3.0135,-0.0324 4.4277,-1.30116 4.2392,-3.80354 -0.1098,-1.45741 -0.7107,-2.13075 -1.7044,-1.9098 -0.8441,0.1877 -1.4223,0.87704 -1.2848,1.53188 0.1375,0.65484 -0.425,1.19061 -1.25,1.19061 -0.825,0 -1.4467,-0.3375 -1.3816,-0.75 0.422,-2.67239 -0.4671,-2.81409 -2.8522,-0.45455 -1.5035,1.4875 -2.5968,3.13736 -2.4294,3.66634 0.1674,0.52899 -0.4884,1.54149 -1.4573,2.25 -2.4103,1.7624 -0.2566,1.62639 3.2562,-0.20563 z m -183.0946,-0.57269 c 1.0261,-1.66021 0.1051,-1.89043 -1.3305,-0.33261 -0.7092,0.76953 -0.8483,1.39914 -0.309,1.39914 0.5392,0 1.277,-0.47994 1.6395,-1.06653 z m 83.9565,-11.9296 c 0.3386,-0.54787 2.0527,-0.88537 3.809,-0.75 2.5584,0.19719 3.135,-0.10187 2.8996,-1.50387 -0.1743,-1.03786 0.3344,-1.75 1.25,-1.75 0.8491,0 1.5438,0.45 1.5438,1 0,0.55 0.4079,1 0.9064,1 0.4985,0 0.6689,-0.90808 0.3787,-2.01796 -0.6057,-2.316 -3.9824,-2.30804 -6.7827,0.016 -1.5027,1.24708 -1.8763,1.21114 -2.9709,-0.28578 -1.539,-2.10479 -2.5315,-2.19547 -2.5315,-0.2313 0,0.81452 -1.196,1.78113 -2.6578,2.14802 -2.5056,0.62887 -2.552,0.74448 -0.8089,2.01905 2.188,1.59989 4.1103,1.73769 4.9643,0.35585 z m 15.8085,-0.64335 c 1.0649,-1.06481 -0.2697,-2.31172 -1.8324,-1.71206 -0.8042,0.30861 -1.2132,0.96396 -0.9089,1.45632 0.6482,1.04882 1.8373,1.15975 2.7413,0.25574 z m 5.1036,-1.50665 c -0.2485,-0.40202 0.2905,-1.14633 1.1977,-1.65403 1.1229,-0.62842 1.2898,-1.14535 0.5228,-1.61939 -1.2668,-0.78294 -4.5086,1.28921 -4.859,3.1058 -0.1258,0.65244 0.6306,1.12152 1.6808,1.04241 1.0502,-0.0791 1.7062,-0.47276 1.4577,-0.87479 z m 7.5551,-0.78813 c 1.3825,-2.58328 1.3094,-3.06574 -0.4648,-3.06574 -0.825,0 -1.5,0.4132 -1.5,0.91821 0,0.50502 -0.2731,1.63002 -0.607,2.5 -0.8681,2.26238 1.3339,1.96058 2.5718,-0.35247 z m 5.0352,1.49328 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 57.3233,-2.62931 c 1.1972,-0.0386 3.0767,-0.49407 4.1767,-1.01203 1.3704,-0.64529 0.033,-0.76493 -4.25,-0.38005 -4.5489,0.40881 -6.25,0.23063 -6.25,-0.65464 0,-0.66898 -0.2356,-0.98073 -0.5235,-0.69278 -0.9243,0.92429 0.6893,3.80979 2.1305,3.80979 0.7661,0 1.4452,0.5625 1.509,1.25 0.064,0.6875 0.3218,0.4625 0.5733,-0.5 0.2516,-0.9625 1.4369,-1.78163 2.634,-1.82029 z m 19.3598,0.88279 c -0.3192,-0.79773 -0.5562,-0.56078 -0.6042,0.60417 -0.043,1.05416 0.193,1.64479 0.5253,1.3125 0.3323,-0.3323 0.3678,-1.1948 0.079,-1.91667 z m -145.1303,0.27291 c -0.3109,-0.50302 0.675,-1.3675 2.191,-1.92105 2.7179,-0.99247 2.7041,-1.00756 -0.9938,-1.08541 -2.0625,-0.0434 -3.75,0.37105 -3.75,0.92105 0,0.55 -0.7875,0.99311 -1.75,0.98469 -1.4955,-0.0131 -1.5319,-0.15626 -0.25,-0.98469 1.2421,-0.80271 1.1561,-0.96937 -0.5,-0.96937 -1.1,0 -2.6354,0.40221 -3.412,0.8938 -1.0216,0.64671 -0.1922,1.16579 3,1.8776 5.9406,1.32465 6.1139,1.33363 5.4648,0.28338 z m -13.0528,-2.08541 c -0.3399,-0.55 -1.154,-0.99311 -1.809,-0.98469 -0.7156,0.009 -0.5923,0.40223 0.309,0.98469 1.9211,1.24153 2.2673,1.24153 1.5,0 z m 138.0248,-7.04008 c 0.4216,-0.68219 -0.3323,-0.80584 -2.191,-0.35933 -3.8314,0.92042 -4.1941,1.39941 -1.0595,1.39941 1.4342,0 2.8969,-0.46804 3.2505,-1.04008 z m 64.8368,-5.45992 c 0.3166,-0.825 1.2648,-1.5 2.107,-1.5 1.1921,0 1.5314,-1.23551 1.5314,-5.57673 v -5.57672 l -2.625,3.11963 c -1.4437,1.7158 -2.625,4.23354 -2.625,5.59497 0,1.36143 -0.3937,2.71868 -0.875,3.0161 -1.3652,0.84376 -1.0276,2.42275 0.518,2.42275 0.7662,0 1.652,-0.675 1.9686,-1.5 z m -68.8616,-6.5 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 49.5,-5.04557 c 0.825,-0.43027 2.7798,-2.1273 4.344,-3.77116 2.8285,-2.97261 2.832,-2.99263 0.6512,-3.68479 -1.206,-0.38277 -4.2858,-0.34946 -6.844,0.074 -2.5581,0.42348 -5.0361,0.67712 -5.5065,0.56364 -1.2989,-0.31335 -3.6447,1.93049 -3.6447,3.48629 0,0.75766 0.7275,1.37756 1.6166,1.37756 1.1321,0 1.4576,0.60824 1.086,2.02918 -0.4827,1.84594 -0.1998,1.96951 3.1334,1.36838 2.0152,-0.36345 4.339,-1.01285 5.164,-1.44313 z m 11.4182,-3.56142 c 0.87,-0.33384 1.5818,-1.23766 1.5818,-2.00847 0,-1.15116 -0.3572,-1.17839 -2,-0.15247 -3.0339,1.89473 -2.7473,3.37567 0.4182,2.16094 z m 8.5818,-2.39301 c 1.213,-0.78387 1.0694,-0.9723 -0.75,-0.98469 -1.2375,-0.008 -2.25,0.43469 -2.25,0.98469 0,1.25292 1.0612,1.25292 3,0 z m -287.3169,-3.1875 c -0.3192,-0.79773 -0.5562,-0.56078 -0.6042,0.60417 -0.043,1.05416 0.193,1.64479 0.5253,1.3125 0.3323,-0.3323 0.3678,-1.1948 0.079,-1.91667 z m 10.8568,-30.21798 c 1.7978,-1.31464 1.7456,-1.37174 -0.8089,-0.88343 -1.5021,0.28714 -2.731,0.9196 -2.731,1.40549 0,1.2828 1.3423,1.08483 3.5399,-0.52206 z m 1.9073,-4.67993 c -0.322,-0.52097 -1.0116,-0.68378 -1.5326,-0.3618 -0.521,0.32197 -0.6838,1.01165 -0.3618,1.53262 0.322,0.52097 1.0116,0.68378 1.5326,0.3618 0.521,-0.32197 0.6838,-1.01165 0.3618,-1.53262 z m 29.282,1.48124 c -0.3323,-0.33229 -1.1948,-0.36781 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60416 1.0541,0.0434 1.6448,-0.19292 1.3125,-0.52522 z m 153.7281,-2.32673 c 1.0019,-1.62117 -1.1753,-2.11382 -2.4664,-0.55809 -1.0048,1.21067 -0.9436,1.48899 0.3276,1.48899 0.8599,0 1.8224,-0.41891 2.1388,-0.9309 z m 37.0427,-2.0691 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -40.5,-6.05902 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m -174,-3.02391 c 0,-1.10691 1.125,-3.05518 2.5,-4.32949 2.4185,-2.24137 3.3053,-4.58758 1.734,-4.58758 -0.819,0 -6.8532,8.84398 -7.9058,11.58708 -0.5406,1.40873 -0.3218,1.47984 1.5202,0.49407 1.1834,-0.63333 2.1516,-2.05717 2.1516,-3.16408 z m 12.9239,-14.75248 c -1.484,-0.5316 0.01,-2.16459 1.9801,-2.16459 2.0085,0 5.447,-3.31564 4.4611,-4.30161 -0.3517,-0.35161 -1.8846,0.2474 -3.4066,1.33115 -1.522,1.08375 -3.1905,1.97046 -3.7079,1.97046 -0.5173,0 -1.7551,0.9 -2.7506,2 -1.6277,1.79859 -1.6433,2 -0.155,2 0.9103,0 1.655,0.76101 1.655,1.69113 0,1.47163 0.1856,1.43918 1.4301,-0.25 0.7866,-1.06762 1.0088,-2.09207 0.4938,-2.27654 z m 207.8469,-4.97709 c 0.2177,-0.65313 -0.3166,-1.1875 -1.1875,-1.1875 -0.8708,0 -1.5833,0.7125 -1.5833,1.58333 0,1.76593 2.1528,1.45839 2.7708,-0.39583 z m 45.7292,-5.1875 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 6.5,-0.58333 c 0,-0.87084 -0.5344,-1.40521 -1.1875,-1.1875 -1.8542,0.61807 -2.1618,2.77083 -0.3958,2.77083 0.8708,0 1.5833,-0.7125 1.5833,-1.58333 z m -244.5833,-2.44445 c 1.6041,-1.63472 3.4041,-2.98223 4,-2.99446 0.5958,-0.0122 2.2083,-0.89425 3.5833,-1.96005 2.4132,-1.87056 2.4219,-1.91781 0.25,-1.36114 -3.3382,0.85562 -2.7604,-1.34128 0.8429,-3.20463 1.7011,-0.87968 2.8584,-1.83393 2.5718,-2.12056 -0.6811,-0.68115 -14.6647,8.36609 -14.6647,9.48793 0,0.47281 -1.2375,1.4505 -2.75,2.17264 l -2.75,1.31298 2.5,0.74786 c 1.375,0.41131 2.725,0.78021 3,0.81975 0.275,0.0396 1.8125,-1.2656 3.4167,-2.90032 z m 111.5833,-9.97222 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -94,-1.60699 c 0,-1.05352 0.544,-1.39824 1.5795,-1.00089 3.0107,1.15532 6.4205,-0.43821 6.4205,-3.00053 0,-2.89701 -1.9802,-3.18313 -2.7103,-0.39159 -0.2973,1.13704 -1.364,2 -2.4721,2 -2.701,0 -5.9966,1.90139 -5.2866,3.05017 0.9335,1.5105 2.469,1.10181 2.469,-0.65716 z m 107.3623,-0.0886 c 0.3826,-0.38259 1.3927,-0.79793 2.2447,-0.92298 7.9597,-1.16823 4.484,-3.25295 -5.303,-3.1807 -7.4805,0.0552 -8.4133,0.24621 -6.8359,1.39959 1.0046,0.7346 2.2102,1.09849 2.6792,0.80865 0.469,-0.28984 0.8527,-0.0834 0.8527,0.45871 0,1.50733 5.1326,2.66638 6.3623,1.43673 z m 14.4722,-1.68374 c 0.2944,-1.5285 0.039,-1.62347 -1.7659,-0.65738 -1.1604,0.62107 -2.5722,0.84353 -3.1372,0.49436 -1.4141,-0.87396 -4.1939,0.30868 -3.4718,1.47706 0.3226,0.52184 2.2614,0.84165 4.3087,0.71069 2.6617,-0.17029 3.8202,-0.74713 4.0662,-2.02473 z m 76.4155,1.71707 c -0.6875,-0.27741 -1.8125,-0.27741 -2.5,0 -0.6875,0.27741 -0.125,0.50439 1.25,0.50439 1.375,0 1.9375,-0.22698 1.25,-0.50439 z m 11.75,-1.18491 c 0,-0.46595 1.0125,-1.33549 2.25,-1.93232 2.1222,-1.02352 2.0655,-1.08897 -1,-1.15281 -2.6059,-0.0543 -3.25,0.32869 -3.25,1.93232 0,1.1 0.45,2 1,2 0.55,0 1,-0.38123 1,-0.84719 z m -132,-2.15281 c 0,-0.55 -1.2375,-0.99311 -2.75,-0.98469 -2.1429,0.0119 -2.4189,0.2293 -1.25,0.98469 1.9565,1.26441 4,1.26441 4,0 z m -56.6154,-5.07173 c 3.6971,-1.78626 3.9917,-1.79596 5.1801,-0.17061 1.1634,1.591 1.4552,1.5129 3.8,-1.01716 l 2.5398,-2.7405 -2.7022,0.0154 c -1.4863,0.008 -6.2468,0.90844 -10.5789,2 -4.3322,1.09156 -7.9965,1.98465 -8.143,1.98465 -0.1466,0 -0.5451,0.72611 -0.8856,1.61358 -0.5284,1.37705 -0.07,1.5106 3.1253,0.91111 2.0595,-0.38636 5.5085,-1.55475 7.6645,-2.59642 z m 49.6154,0.0717 c 0,-0.55 -0.7016,-1 -1.559,-1 -0.8575,0 -1.2809,0.45 -0.941,1 0.3399,0.55 1.0415,1 1.559,1 0.5176,0 0.941,-0.45 0.941,-1 z m -31,-3 c 0,-0.55 -1.0125,-0.99311 -2.25,-0.98469 -1.8194,0.0124 -1.963,0.20082 -0.75,0.98469 1.9388,1.25292 3,1.25292 3,0 z M 404.87929,708.66521 c -0.96998,-0.25297 -2.38604,-1.66327 -3.14682,-3.134 l -1.38322,-2.67406 41.14682,0.26069 c 22.63074,0.14338 52.94683,-0.0816 67.36908,-0.5 24.88312,-0.72184 26.33094,-0.86935 28.35,-2.88847 3.16697,-3.16704 2.90633,-9.13371 -0.52803,-12.08783 -1.46067,-1.25641 -2.23486,-2.28439 -1.72041,-2.28439 1.32351,0 8.22788,8.03948 9.29178,10.8194 1.20942,3.16013 0.20669,6.52884 -2.77889,9.33577 -2.40281,2.25904 -3.2687,2.3684 -23.66539,2.98912 -24.13286,0.73443 -110.26787,0.85933 -112.93492,0.16377 z m 153.26359,-1.0175 c -2.04982,-0.7537 -4.98984,-3.40306 -6.12017,-5.51509 -0.82863,-1.54833 -0.64019,-1.63486 1.65773,-0.76119 3.88029,1.47528 109.95686,1.32105 112.77818,-0.16398 5.03938,-2.65253 4.88971,-6.43818 -0.81574,-20.63231 -2.475,-6.15736 -4.5,-11.51665 -4.5,-11.90954 0,-0.39289 1.6875,0.88757 3.75,2.84546 11.3809,10.80369 27.03048,16.86128 43.48162,16.83074 30.99415,-0.0575 56.39034,-19.59005 63.91941,-49.16113 2.93646,-11.53319 2.93407,-26.53648 -0.006,-37.1227 -3.12735,-11.26087 -7.24858,-18.70175 -14.90572,-26.91227 -5.4868,-5.88332 -5.95915,-6.6202 -2.54142,-3.96467 5.7786,4.48989 13.34708,14.28121 17.62348,22.79945 11.085,22.08041 8.94662,52.366 -5.1646,73.1457 -14.10097,20.7646 -44.63469,31.74239 -70.29833,25.27438 -9.2656,-2.33521 -13.88563,-4.21062 -19.93379,-8.09171 -7.69973,-4.9409 -8.42297,-3.98371 -4.42473,5.85602 3.80006,9.352 3.34593,14.18635 -1.57152,16.72927 -2.38689,1.2343 -11.31767,1.45067 -57.12882,1.38406 -29.86473,-0.0434 -54.97458,-0.32714 -55.79958,-0.63049 z m -201.52973,-1.24024 c -1.11635,-0.4526 -9.66635,-9.06141 -19,-19.13068 -9.33365,-10.06928 -23.94527,-25.77322 -32.47027,-34.89765 -8.525,-9.12442 -22.025,-23.66353 -30,-32.30914 -8.25682,-8.95112 -15.14585,-15.60435 -16,-15.45237 -1.28094,0.22793 -1.5,3.55024 -1.5,22.74926 v 22.48235 l 5,2.73059 c 2.75,1.50183 4.64754,2.74111 4.21676,2.75396 -1.08747,0.0324 -9.78623,-4.59146 -12.21676,-6.49392 -1.86838,-1.46244 -2.02113,-2.96125 -2.32101,-22.77409 -0.17656,-11.66475 -0.0251,-23.6236 0.33652,-26.57524 l 0.65754,-5.3666 3.16348,3.38421 c 1.73991,1.86131 11.66882,12.60129 22.06426,23.8666 10.39543,11.26532 23.69028,25.6574 29.54412,31.9824 5.85383,6.325 12.87348,13.95902 15.59921,16.9645 6.52935,7.19945 18.79911,20.32585 24.56302,26.27794 5.35158,5.5263 9.13863,6.25375 12.71855,2.44311 l 2.17431,-2.31445 v -66.51888 -66.51889 h 3.00814 c 4.15318,0 7.70074,-3.61642 8.52686,-8.69238 1.59111,-9.77638 4.62575,-19.83363 8.72363,-28.91142 3.30223,-7.31522 5.61209,-8.85888 10.6318,-7.10513 2.04392,0.71409 2.67072,1.66646 2.89167,4.39365 0.18984,2.34314 -0.0146,3.03812 -0.62515,2.12494 -3.3346,-4.98765 -9.72852,6.49039 -14.62954,26.26221 -3.33174,13.44097 -4.59671,15.7428 -10.33064,18.79829 l -3.19677,1.70349 v 63.99946 c 0,44.77406 -0.33352,64.73146 -1.11027,66.43624 -1.74803,3.8365 -6.1969,5.41958 -10.41946,3.70764 z m 636.19643,0.28301 c -1.3838,-1.38375 -0.5558,-5.13649 3.2727,-14.83333 2.1715,-5.5 6.69912,-17.2 10.06132,-26 3.3623,-8.8 8.2924,-21.625 10.9559,-28.5 2.6635,-6.875 7.1379,-18.4625 9.9431,-25.75 2.8052,-7.2875 7.3954,-19.2125 10.2006,-26.5 2.8052,-7.2875 7.2774,-18.875 9.9383,-25.75 2.6608,-6.875 8.0356,-20.825 11.9439,-31 3.9083,-10.175 7.5504,-19.56497 8.0934,-20.86659 0.7814,-1.87262 0.6156,-2.64985 -0.7942,-3.72368 -3.8864,-2.96022 -17.1617,-9.35593 -23.7817,-11.4574 -8.7182,-2.76755 -9.6759,-3.52608 -9.3011,-7.36715 l 0.3011,-3.08518 35.6172,-0.26249 c 27.7499,-0.20451 35.8332,0.0164 36.595,1 0.5379,0.69437 4.0111,8.91249 7.7184,18.26249 3.7073,9.35 7.3695,18.35 8.1382,20 1.2935,2.77669 13.3392,32.58895 53.1326,131.5 8.519,21.175 16.3575,40.41251 17.4189,42.75003 3.1429,6.92196 3.4227,9.88902 1.052,11.15776 -1.4032,0.75098 -18.932,1.09221 -56.1066,1.09221 -52.7324,0 -54.115,-0.0493 -56.0657,-2 -4.2034,-4.20335 -1.9486,-7.04285 8.2828,-10.43076 8.4693,-2.80445 19.88,-8.24768 23.4915,-11.20617 l 2.2743,-1.86307 -2.9651,-7 -2.9651,-7 -36.931,-0.26204 -36.931,-0.26205 -3.1355,7.69851 c -2.413,5.92449 -2.8458,7.89262 -1.8782,8.54087 5.7951,3.8826 15.347,8.52545 22.576,10.97349 11.1498,3.77579 13.4767,6.51579 9.1813,10.81122 -1.92,1.92 -3.3333,2 -35.3333,2 -18.3334,0 -33.63342,-0.3 -34.00002,-0.66667 z m 100.33332,-6.46091 c 2.0685,-0.0129 5.0097,-1.05273 7.1913,-2.54243 2.0302,-1.38633 4.1948,-2.20937 4.8103,-1.82898 0.6155,0.3804 2.442,0.14369 4.0588,-0.52601 2.0924,-0.8667 2.9396,-1.90598 2.9396,-3.60594 v -2.38831 l -4.75,2.42573 c -8.0032,4.08705 -13.6486,6.41328 -18.5737,7.65344 -2.5906,0.65234 -4.9363,1.5518 -5.2126,1.9988 -0.2763,0.44701 0.9689,0.36786 2.767,-0.17588 1.7981,-0.54373 4.8443,-0.99843 6.7693,-1.01042 z m -90.4411,-2.34062 c 1.0676,-0.8075 1.4646,-1.4825 0.8822,-1.5 -0.5823,-0.0175 -1.9323,0.62889 -3,1.4364 -1.06762,0.8075 -1.46462,1.4825 -0.88222,1.5 0.58232,0.0175 1.93232,-0.62889 3.00002,-1.4364 z m 10.4411,-0.5318 c 0,-1.26441 -2.0435,-1.26441 -4,0 -1.1689,0.75538 -0.8929,0.97275 1.25,0.98469 1.5125,0.008 2.75,-0.43469 2.75,-0.98469 z m 14,-0.94098 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 95.25,-7.1116 c 4.2499,-1.18026 4.8059,-2.48311 1.5,-3.51481 -1.2375,-0.3862 -2.5603,-1.18658 -2.9396,-1.77862 -0.4326,-0.6753 -1.6437,-0.0469 -3.25,1.6863 -4.32,4.66136 -2.937,5.72513 4.6896,3.60713 z m -115.25,-1.44742 c 1.0382,-1.25091 0.9022,-1.5 -0.8185,-1.5 -2.1902,0 -3.554,1.29417 -2.4876,2.36052 1.0075,1.0076 1.9618,0.75921 3.3061,-0.86052 z m 3,-6.94098 c 0,-0.79254 -0.45,-1.7191 -1,-2.05902 -0.55,-0.33992 -1,0.30852 -1,1.44098 0,1.13246 0.45,2.05902 1,2.05902 0.55,0 1,-0.64844 1,-1.44098 z m 2.3616,-8.05902 c 0.3166,-0.825 0.1398,-1.5 -0.393,-1.5 -0.5327,0 -0.9686,0.675 -0.9686,1.5 0,0.825 0.1769,1.5 0.393,1.5 0.2162,0 0.652,-0.675 0.9686,-1.5 z m -0.6949,-3.95601 c 0,-0.80081 -0.3824,-1.21971 -0.8497,-0.9309 -0.4673,0.28881 -0.5907,0.94401 -0.2743,1.45601 0.8086,1.30838 1.124,1.16106 1.124,-0.52511 z m 3.3333,-5.68375 c 0,-0.62686 0.668,-1.63936 1.4844,-2.25 0.9425,-0.70495 1.2611,-1.94652 0.8727,-3.40113 -0.6641,-2.48687 -2.8477,-2.49338 -2.8722,-0.009 -0.01,0.84061 -0.5007,2.15187 -1.0943,2.91391 -2.4232,3.11102 -2.5128,3.88554 -0.4496,3.88554 1.1324,0 2.059,-0.51289 2.059,-1.13976 z m 4.1523,-9.11024 c 0.084,-0.6875 0.2082,-1.7 0.2764,-2.25 0.068,-0.55 0.4447,-1.51134 0.8365,-2.13631 0.4132,-0.65919 -0.053,-1.3363 -1.1091,-1.61261 -2.2736,-0.59457 -4.5827,4.42236 -2.8382,6.16679 1.4407,1.44071 2.6471,1.36926 2.8344,-0.16787 z m 110.8477,-1.75 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -4,-1 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -105,-5.96862 c 0,-0.53273 0.6159,-0.73228 1.3686,-0.44344 0.8212,0.31512 1.5919,-0.32898 1.927,-1.61037 0.4061,-1.55298 0.1779,-1.98952 -0.8365,-1.60023 -0.7673,0.29442 -1.6615,0.10412 -1.9872,-0.42289 -0.3258,-0.52701 0.4569,-1.35707 1.7391,-1.84459 3.2807,-1.2473 7.0259,-9.10986 4.3394,-9.10986 -4.2162,0 -6.175,3.97544 -3.3504,6.8 0.9333,0.93333 0.8953,1.2 -0.1713,1.2 -2.2397,0 -5.0287,3.13632 -5.0287,5.65499 0,1.28975 0.45,2.34501 1,2.34501 0.55,0 1,-0.43588 1,-0.96862 z m 83,-3.03138 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m -9.0887,-10.25 c -1.1327,-2.8875 -5.5919,-13.8 -9.9093,-24.25 -4.3175,-10.45 -9.166,-22.32984 -10.7745,-26.39964 -1.6085,-4.0698 -3.2357,-6.89611 -3.616,-6.28069 -0.68,1.10018 -11.0636,27.89086 -14.6043,37.68033 -0.9946,2.75 -3.4281,9.14554 -5.4078,14.2123 -1.9797,5.06677 -3.5994,9.45427 -3.5994,9.75 0,0.29574 11.2434,0.5377 24.9854,0.5377 h 24.9854 z m -41.2347,1.54653 c -1.1944,-0.30881 -1.6199,-1.04502 -1.2335,-2.13399 4.144,-11.67885 18.185,-47.16254 18.6624,-47.16254 0.6036,0 5.8945,11.45078 5.8945,12.75704 0,0.34387 -0.6451,-0.24829 -1.4335,-1.31591 -1.3467,-1.82361 -1.5889,-1.59128 -4,3.83738 -1.4116,3.17819 -2.5665,6.03764 -2.5665,6.35434 0,0.3167 -2.282,6.37009 -5.0711,13.45197 -2.7891,7.08189 -4.7875,13.33494 -4.441,13.89567 0.6403,1.03598 -2.3896,1.20076 -5.8113,0.31604 z m 35.3387,-3.04653 c 0.012,-2.14294 0.2293,-2.41887 0.9847,-1.25 1.2644,1.95653 1.2644,4 0,4 -0.55,0 -0.9931,-1.2375 -0.9847,-2.75 z m -2.3486,-7.41667 c -0.9049,-2.30349 -1.4814,-4.352 -1.2811,-4.55224 0.2002,-0.20023 1.1142,1.51077 2.0311,3.80224 0.9168,2.29147 1.4933,4.33998 1.2811,4.55224 -0.2123,0.21227 -1.1263,-1.49874 -2.0311,-3.80224 z m -3.0432,-7.37199 c -0.9649,-2.51469 -0.6803,-3.16355 0.4986,-1.13634 0.5837,1.00375 0.8506,2.03566 0.5931,2.29313 -0.2575,0.25747 -0.7487,-0.26309 -1.0917,-1.15679 z m -2,-5 c -0.9649,-2.51469 -0.6803,-3.16355 0.4986,-1.13634 0.5837,1.00375 0.8506,2.03566 0.5931,2.29313 -0.2575,0.25747 -0.7487,-0.26309 -1.0917,-1.15679 z m -2,-5 c -0.9649,-2.51469 -0.6803,-3.16355 0.4986,-1.13634 0.5837,1.00375 0.8506,2.03566 0.5931,2.29313 -0.2575,0.25747 -0.7487,-0.26309 -1.0917,-1.15679 z m -2,-5 c -0.9649,-2.51469 -0.6803,-3.16355 0.4986,-1.13634 0.5837,1.00375 0.8506,2.03566 0.5931,2.29313 -0.2575,0.25747 -0.7487,-0.26309 -1.0917,-1.15679 z m -48.873,24.78866 c 0.6122,-1.83866 -2.4306,-1.526 -3.14,0.32265 -0.4208,1.09668 -0.1,1.475 1.0601,1.25 0.915,-0.17746 1.851,-0.88515 2.0799,-1.57265 z m 3.2342,-3.05902 c -0.025,-2.72634 -1.7366,-4.83908 -2.9433,-3.63242 -0.7224,0.72246 -0.6636,1.84332 0.192,3.65628 1.3146,2.78566 2.7766,2.77298 2.7513,-0.0239 z m 11.0153,-2.30761 c 0,-1.13664 -3.7136,-1.15586 -4.4138,-0.0229 -0.2925,0.47329 -0.293,1.09934 0,1.39124 0.7843,0.78432 4.4149,-0.34097 4.4149,-1.36839 z m -6.9799,-2.3592 c -0.9372,-1.12918 -0.9764,-1.87195 -0.1512,-2.86618 0.6126,-0.7381 0.8762,-1.5796 0.5858,-1.86999 -0.2904,-0.29038 0.3885,-2.85314 1.5086,-5.69501 2.4347,-6.17673 2.4273,-6.09299 0.5367,-6.09299 -0.825,0 -1.5,-0.54 -1.5,-1.2 0,-3.07511 -5.0631,7.48375 -5.4504,11.36657 -0.091,0.91662 -0.7666,2.38999 -1.5004,3.27417 -1.6356,1.97074 -1.1904,2.48722 2.4002,2.78438 1.5336,0.12692 3.0154,0.8226 3.293,1.54595 0.2776,0.72335 0.7382,1.08165 1.0236,0.79622 0.2855,-0.28543 -0.05,-1.20483 -0.7459,-2.04312 z m 7.9799,-25.14661 c 0,-1.17254 -0.3466,-1.34103 -1.25,-0.60761 -0.6875,0.55816 -2.15,1.23606 -3.25,1.50644 -1.313,0.32274 -0.8836,0.53145 1.25,0.60761 2.3789,0.0849 3.25,-0.31887 3.25,-1.50644 z m 44,-1.41274 c 0,-1.32439 -1.3542,-1.21065 -2.8,0.23518 -1.8876,1.88759 -1.4026,2.9788 0.8,1.8 1.1,-0.5887 2,-1.50453 2,-2.03518 z m -33.5,-1.96482 c 0.3399,-0.55 -0.083,-1 -0.941,-1 -0.8574,0 -1.559,0.45 -1.559,1 0,0.55 0.4234,1 0.941,1 0.5175,0 1.2191,-0.45 1.559,-1 z m 35.5527,-4.63869 c 1.1643,-3.06228 0.2617,-4.67446 -1.1774,-2.10298 -0.5361,0.95792 -1.9074,1.74167 -3.0474,1.74167 -1.7291,0 -1.8664,0.24872 -0.8279,1.5 1.882,2.26762 3.9334,1.8053 5.0527,-1.13869 z m -43.8027,-0.75693 c 0.9625,-0.29788 1.75,-1.27888 1.75,-2.17998 0,-1.02961 -0.5455,-1.42907 -1.468,-1.07506 -0.8074,0.30982 -1.7691,0.0761 -2.1371,-0.51945 -0.3793,-0.61372 -1.2596,0.3213 -2.0321,2.15848 -1.7303,4.11539 -1.7175,4.21818 0.3872,3.0931 0.9625,-0.51451 2.5375,-1.1792 3.5,-1.47709 z m 10.1682,-3.21137 c 0.87,-0.33384 1.5818,-1.00884 1.5818,-1.5 0,-1.45856 -3.6539,-1.01499 -5,0.60699 -1.015,1.22294 -0.9603,1.5 0.2958,1.5 0.8473,0 2.2524,-0.27314 3.1224,-0.60699 z m -7.0566,-4.89301 c -0.6086,-1.58598 -2.3616,-2.08084 -2.3616,-0.66667 0,1.05752 1.0931,2.16667 2.1353,2.16667 0.4411,0 0.5429,-0.675 0.2263,-1.5 z m 4.603,-9.97222 c 0.019,-0.53472 -0.9192,-0.0176 -2.086,1.14913 -1.2567,1.25674 -1.81,2.62511 -1.3574,3.35732 0.5417,0.87664 1.1482,0.54255 2.0859,-1.14913 0.7271,-1.31181 1.338,-2.8226 1.3575,-3.35732 z m 1.0354,-3.52778 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m -0.3451,-5.54313 c 0.9303,-2.42426 -0.3678,-2.86191 -1.6091,-0.54252 -0.7739,1.44619 -0.7892,2.08565 -0.05,2.08565 0.5866,0 1.333,-0.69441 1.6587,-1.54313 z m 3.3451,-3.01589 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m 1.7023,-8.19098 c -0.6047,-3.03592 1.522,-6.84746 3.2312,-5.79112 0.5866,0.36253 1.0726,0.0701 1.0802,-0.64986 0.01,-0.71996 0.2849,-2.32152 0.6166,-3.55902 0.4467,-1.66707 0.176,-2.25 -1.0451,-2.25 -0.9064,0 -1.8985,0.7875 -2.2047,1.75 -0.3062,0.9625 -1.3372,3.325 -2.2912,5.25 -1.3366,2.69713 -1.4914,4.01613 -0.6747,5.75 1.4302,3.03678 1.9518,2.83427 1.2877,-0.5 z m 31.2341,-12.75 c 0,-0.55 -0.6607,-0.12649 -1.4682,0.94113 -0.8075,1.06762 -1.4682,2.39113 -1.4682,2.94113 0,0.55 0.6607,0.12649 1.4682,-0.94113 0.8075,-1.06762 1.4682,-2.39113 1.4682,-2.94113 z m -18.9364,-6.5 c 1.828,-1.18132 0.2491,-1.18132 -2.5,0 -1.3187,0.56668 -1.4891,0.87815 -0.5,0.9144 0.825,0.0302 2.175,-0.38124 3,-0.9144 z m -4.8425,-1.75 c 0.087,-0.9625 0.1367,-2.3125 0.1111,-3 -0.026,-0.6875 0.3802,-1.25 0.9015,-1.25 0.5214,0 0.6341,-0.50779 0.2505,-1.12842 -0.4763,-0.77077 -0.9876,-0.60978 -1.6131,0.50792 -0.5037,0.89999 -0.6398,2.08278 -0.3026,2.62842 0.3372,0.54564 0.1366,0.99208 -0.4459,0.99208 -0.5824,0 -1.059,0.675 -1.059,1.5 0,2.10797 1.9658,1.88019 2.1575,-0.25 z m 10.8425,-0.25 c 0,-0.55 -0.6484,-1 -1.441,-1 -0.7925,0 -1.7191,0.45 -2.059,1 -0.3399,0.55 0.3085,1 1.441,1 1.1324,0 2.059,-0.45 2.059,-1 z m 24,-2 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m -28.3935,-8.20594 c 1.0125,-1.95804 1.2585,-3.33907 0.6318,-3.54795 -0.5643,-0.1881 -0.7963,-1.22043 -0.5155,-2.29406 0.8456,-3.23373 -1.6185,-2.19365 -3.0366,1.28171 -1.3546,3.31981 -1.1229,7.76624 0.4047,7.76624 0.4718,0 1.6038,-1.44267 2.5156,-3.20594 z m 29.3935,-3.79406 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 3,-2.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -26.0833,-5.27605 c 0.2291,-0.15564 -0.5584,-0.28297 -1.75,-0.28297 -1.332,0 -2.1667,0.62507 -2.1667,1.62245 0,1.38879 0.252,1.42954 1.75,0.28296 0.9625,-0.73671 1.9375,-1.46681 2.1667,-1.62244 z m 5.0833,1.71703 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -6,-5.60699 c 0,-0.21616 -0.675,-0.39301 -1.5,-0.39301 -0.825,0 -1.5,0.43588 -1.5,0.96861 0,0.53274 0.675,0.7096 1.5,0.39302 0.825,-0.31659 1.5,-0.75246 1.5,-0.96862 z m 22.3616,-3.89301 c -0.6271,-1.63433 -2.3616,-2.06275 -2.3616,-0.58333 0,0.759 0.7008,1.27571 2.7186,2.00438 0.1203,0.0434 -0.04,-0.59605 -0.357,-1.42105 z m -9.2866,-0.775 c -0.1237,-1.1957 -1.4953,-0.96413 -1.925,0.325 -0.22,0.66 0.14,1.02 0.8,0.8 0.66,-0.22 1.1663,-0.72625 1.125,-1.125 z m 3.4974,-6.84218 c 1.0147,-1.64172 -1.5485,-2.85019 -6.0819,-2.86751 -2.9989,-0.0114 -4.3395,0.51329 -5.3192,2.08207 -1.6426,2.63023 -0.693,3.70954 1.8606,2.11476 2.1592,-1.34844 5.0329,-1.62228 4.8497,-0.46214 -0.2989,1.89282 0.2643,2.24227 2.0627,1.27981 1.0694,-0.57231 2.252,-1.53846 2.6281,-2.14699 z m -25.4959,1.36718 c 0.042,-0.4125 0.2273,-1.5375 0.4115,-2.5 0.2657,-1.38759 -0.365,-1.75 -3.0451,-1.75 -2.5937,0 -3.2462,0.34899 -2.8045,1.5 0.3166,0.825 0.077,1.5 -0.5314,1.5 -0.6089,0 -1.107,0.45 -1.107,1 0,1.1456 6.9601,1.39148 7.0765,0.25 z m 7.4505,-0.20633 c -0.3251,-0.52598 -1.2516,-0.70283 -2.059,-0.39301 -2.0671,0.79323 -1.8235,1.34934 0.591,1.34934 1.1325,0 1.7931,-0.43035 1.468,-0.95633 z m -31.027,-3.04367 c 0.3399,-0.55 -0.282,-1 -1.382,-1 -1.1,0 -2.2781,0.45 -2.618,1 -0.3399,0.55 0.282,1 1.382,1 1.1,0 2.2781,-0.45 2.618,-1 z m 53.5,0 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z M 771.90399,703.61048 c -11.72741,-0.3163 -11.73953,-0.31917 -12.39725,-2.93975 -1.0046,-4.00263 0.5521,-5.40972 9.19119,-8.30785 9.16962,-3.0761 18.11355,-7.48172 24.19495,-11.91798 l 4.25,-3.10029 v -49.14763 -49.14763 l -3.36315,-6.0961 c -1.84974,-3.35286 -5.28612,-9.6961 -7.6364,-14.0961 -2.35028,-4.4 -5.9592,-11.15 -8.01982,-15 -2.06062,-3.85 -6.99729,-13.075 -10.97038,-20.5 -3.97309,-7.425 -7.62575,-13.9275 -8.11702,-14.45 -0.52602,-0.55945 -0.89323,8.12618 -0.89323,21.12756 0,18.59451 -0.24132,22.27783 -1.52961,23.34702 -1.12992,0.93774 -2.1343,0.99395 -3.8437,0.2151 -1.80255,-0.8213 -2.60786,-2.45642 -3.64311,-7.39702 -3.60572,-17.20794 -10.90132,-33.7338 -18.10548,-41.01218 -5.26949,-5.32379 -10.98417,-6.94067 -17.23715,-4.877 -7.31221,2.41325 -14.41697,13.48488 -15.36542,23.94455 -1.1622,12.817 9.36807,24.08699 36.00593,38.53522 16.73709,9.0781 24.09899,15.97491 30.38181,28.46239 5.01925,9.97607 6.70353,19.14331 6.06199,32.99426 -1.47794,31.90893 -19.26908,53.20344 -49.81961,59.62995 -20.2462,4.25892 -39.38629,-1.15946 -54.09627,-15.31414 -4.6298,-4.45503 -4.7238,-4.49181 -7.25,-2.83658 -1.40766,0.92234 -2.55938,1.89584 -2.55938,2.16333 0,0.2675 2.42484,6.52861 5.38852,13.9136 4.89753,12.20376 5.25684,13.61525 3.9433,15.49059 -1.42961,2.04105 -2.02743,2.06335 -55.32342,2.06335 -33.43534,0 -54.87441,-0.37876 -56.50377,-0.99824 -2.28306,-0.86802 -2.58507,-1.48714 -2.3151,-4.74603 l 0.31047,-3.7478 8.5,-2.73793 c 9.35013,-3.01178 18.99313,-7.59465 23.43843,-11.13921 l 2.872,-2.29005 -2.8132,-7.17037 -2.8132,-7.17037 h -37.24056 -37.24056 l -2.77678,7.61345 -2.77678,7.61345 2.42532,1.87042 c 3.86594,2.98142 14.74864,8.00743 23.42533,10.81864 7.98877,2.58833 8.00044,2.59723 8.31047,6.33977 0.27445,3.31298 -0.0149,3.87151 -2.49442,4.81421 -4.47633,1.7019 -129.77873,2.62089 -131.77221,0.96644 -1.37117,-1.13797 -1.54384,-11.5011 -1.54384,-92.65882 v -91.37756 h -7.86611 -7.86612 l -3.05478,6.83188 c -3.51875,7.86955 -6.37414,16.29904 -8.18666,24.16812 -2.89454,12.56667 -3.31654,13.47605 -6.41782,13.83008 -1.64233,0.18747 -3.25577,-0.24454 -3.73469,-1 -1.40237,-2.21213 -1.09205,-73.21185 0.32618,-74.63008 1.88255,-1.88255 133.12408,-1.71936 134.69001,0.16747 0.81206,0.97847 1.06024,11.85933 0.87245,38.25 l -0.26246,36.88253 h -3.5 c -3.81906,0 -3.91308,-0.17699 -6.90573,-13 -2.0887,-8.94975 -5.18105,-17.96556 -8.41977,-24.54805 l -3.1745,-6.45195 -7.75,-0.29206 -7.75,-0.29207 v 79.53579 79.5358 l 4.15968,3.01325 c 2.28783,1.65729 4.31346,2.85948 4.50142,2.67152 0.31442,-0.31441 21.49385,-54.87639 30.34427,-78.17223 2.08953,-5.5 11.95921,-31.12104 21.93263,-56.93565 9.97343,-25.81461 17.92932,-47.46774 17.67976,-48.11807 -0.73358,-1.91168 -12.40574,-7.94378 -22.11776,-11.43031 -11.70627,-4.20246 -11.94291,-4.33537 -12.32676,-6.92314 -0.75156,-5.06669 -0.56023,-5.09283 37.28023,-5.09283 h 35.20857 l 1.17203,2.25 c 0.64461,1.2375 8.60459,20.7 17.68884,43.25 9.08425,22.55 24.04538,59.675 33.24696,82.5 l 16.73013,41.5 0.27437,-17.4269 c 0.17618,-11.18988 0.68254,-17.91872 1.41483,-18.80107 0.63841,-0.76924 2.4846,-1.24163 4.19385,-1.0731 2.67239,0.2635 3.16077,0.8002 3.91382,4.30107 7.54579,35.07978 16.75926,48.5 33.297,48.5 5.67238,0 13.41629,-2.96971 17.80745,-6.82898 4.11053,-3.61263 7.59868,-10.45999 7.59868,-14.91646 0,-8.4111 -5.00223,-13.78664 -22.63128,-24.32023 -12.45859,-7.44417 -27.74039,-21.75957 -33.19919,-31.09973 -6.56736,-11.23694 -11.18316,-29.175 -11.1508,-43.3346 0.0653,-28.56488 18.29494,-53.03762 45.02526,-60.44497 11.95623,-3.31325 24.96061,-2.46174 34.99914,2.29169 3.00282,1.42189 9.024,1.67081 45.84163,1.89509 l 42.38476,0.25819 14.88418,27.5 c 8.18629,15.125 15.44058,28.49314 16.12064,29.70698 1.13964,2.03415 1.95665,0.78118 10.43298,-16 5.05808,-10.01384 9.257,-18.65698 9.33094,-19.20698 0.20927,-1.55661 -11.59087,-7.64497 -21.53826,-11.11281 l -9,-3.13756 v -3.87481 -3.87482 h 34.5 34.5 l 0.31409,2.20831 c 0.19153,1.34662 -8.6855,20.15693 -22.75,48.20696 l -23.06409,45.99866 v 61.84303 c 0,46.76681 -0.29254,62.13558 -1.2,63.04304 -1.14252,1.14252 -51.71887,1.40594 -87.03889,0.45333 z m -6.23465,-6.0602 c -0.30789,-0.30789 -1.11479,-6.4e-4 -1.79313,0.68278 -0.98026,0.98762 -0.8654,1.10248 0.5598,0.5598 0.98622,-0.37553 1.54122,-0.93469 1.23333,-1.24258 z m 19.3043,-2.69056 c 0.27642,-0.27641 -0.24743,-0.50257 -1.16409,-0.50257 -0.91667,0 -1.66667,-0.63486 -1.66667,-1.41081 0,-1.09461 -1.45684,-0.8328 -6.5,1.16811 -3.575,1.4184 -6.5,2.87011 -6.5,3.22602 0,0.69964 15.00111,-1.65109 15.83076,-2.48075 z m 35.27408,-0.50257 c 1.84083,0 1.85652,-0.12934 0.3032,-2.5 -1.80538,-2.75537 -4.1735,-3.27477 -5.0086,-1.09854 -0.29578,0.7708 -1.51916,1.71086 -2.71861,2.08903 -2.14992,0.67782 -2.14539,0.69905 0.31917,1.49712 1.375,0.44526 3.0993,0.63019 3.83179,0.41097 0.73248,-0.21922 2.20535,-0.39858 3.27305,-0.39858 z m -415.42173,-2.1875 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.33229 0.36781,-1.1948 0.0789,-1.91667 z m 383.9545,1.42219 c 0.62568,-0.40408 1.83427,-2.40795 2.68575,-4.45304 1.44079,-3.46053 1.43125,-3.64365 -0.13761,-2.64101 -0.92716,0.59253 -2.41634,2.60329 -3.30928,4.46835 -1.61265,3.36829 -1.41965,4.03409 0.76114,2.6257 z m 51.36239,0.32433 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -281.27083,-1.16319 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m -146.72917,-2.51241 c 0,-0.48588 -0.675,-0.88342 -1.5,-0.88342 -2.11227,0 -1.87895,-1.97488 0.25,-2.116 1.66667,-0.11048 1.66667,-0.13778 0,-0.57333 -2.38574,-0.62346 -2.19709,-1.78942 0.5,-3.09018 1.61192,-0.77739 1.78844,-1.10432 0.62244,-1.15281 -1.87019,-0.0778 -3.57066,1.74738 -3.6637,3.93232 -0.0351,0.825 -0.35954,2.45737 -0.7209,3.6275 -0.57458,1.86052 -0.3327,2.0655 1.92756,1.63342 1.42153,-0.27174 2.5846,-0.89161 2.5846,-1.3775 z m 110.15,0.61658 c 0,-0.5225 -0.48375,-1.11125 -1.075,-1.30833 -0.59125,-0.19709 -1.075,0.39166 -1.075,1.30833 0,0.91667 0.48375,1.50542 1.075,1.30833 0.59125,-0.19708 1.075,-0.78583 1.075,-1.30833 z m 44.85,-0.16018 c 0,-1.14261 -0.42694,-1.18806 -2.25,-0.23955 -3.13316,1.63013 -3.13662,1.64973 -0.29167,1.64973 1.52065,0 2.54167,-0.56649 2.54167,-1.41018 z m -124,-0.33982 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m 29,0 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 40.81955,-2.82833 c 0.17575,-1.19442 -0.1883,-2.17167 -0.80902,-2.17167 -0.62071,0 -0.87047,0.4176 -0.55503,0.928 0.31545,0.51041 -0.39245,1.2346 -1.57311,1.60933 -1.68418,0.53454 -1.84889,0.8697 -0.76452,1.55574 1.99573,1.26262 3.3355,0.56719 3.70168,-1.9214 z m 138.71879,1.7663 c 0.3256,-0.52684 -1.25313,-0.93797 -3.60177,-0.93797 -3.60347,0 -4.00938,-0.20734 -2.93657,-1.5 0.82118,-0.98947 0.87354,-1.5 0.15383,-1.5 -0.60008,0 -0.83204,-0.675 -0.51546,-1.5 0.35516,-0.92551 1.8751,-1.5 3.96862,-1.5 1.86615,0 3.39301,-0.45 3.39301,-1 0,-0.55 -0.40787,-1 -0.90638,-1 -0.49851,0 -0.71766,-0.7875 -0.487,-1.75 0.23066,-0.9625 0.0138,-2.37015 -0.48181,-3.12812 -1.16057,-1.77473 -3.44653,-0.40265 -2.67573,1.60602 0.98983,2.57945 -1.20218,4.2033 -4.42592,3.27874 -1.57994,-0.45312 -3.13149,-0.56498 -3.44789,-0.24858 -1.14149,1.1415 -0.54236,3.24194 0.92473,3.24194 0.825,0 1.5,0.40186 1.5,0.89301 0,0.49116 -0.675,1.15203 -1.5,1.46862 -0.825,0.31658 -1.49937,1.37722 -1.4986,2.35699 10e-4,1.48871 0.98355,1.81226 5.97932,1.96935 3.28786,0.10338 6.23879,-0.23412 6.55762,-0.75 z m 170.46166,-0.49699 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m -205.31689,-1.62848 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.33229 0.36781,-1.1948 0.0789,-1.91667 z m 223.04665,0.49821 c 0.19512,-0.58536 -0.33925,-1.33062 -1.1875,-1.65612 -1.08089,-0.41478 -1.54226,0.022 -1.54226,1.46013 0,2.05736 2.06001,2.20526 2.72976,0.19599 z m -364.31155,0.0823 c 2.43449,-0.9342 1.87474,-2.39301 -0.91821,-2.39301 -2.42787,0 -3.19294,0.97373 -1.83333,2.33333 0.81166,0.81167 0.79296,0.81126 2.75154,0.0597 z m 108.81386,-1.39301 c 0.68696,-1.1 1.94176,-2 2.78843,-2 0.84668,0 3.02505,-1.57507 4.84084,-3.50015 2.69728,-2.85964 3.01254,-3.61102 1.72272,-4.10597 -1.57567,-0.60464 -11.70166,5.14619 -11.34298,6.442 0.1011,0.36526 -0.37761,1.67662 -1.06381,2.91412 -1.05114,1.89563 -1.00719,2.25 0.27907,2.25 0.83969,0 2.08877,-0.9 2.77573,-2 z m 217.04009,-1.0728 c 4.12745,-3.4022 4.69578,-4.9272 1.83625,-4.9272 -1.18371,0 -2.12641,0.93557 -2.51905,2.5 -0.60373,2.40543 -2.58936,3.5557 -2.58936,1.5 0,-0.55 -0.675,-1 -1.5,-1 -1.61396,0 -1.85324,0.91589 -0.89301,3.41821 0.83523,2.17659 1.3942,2.02948 5.66517,-1.49101 z m 46.72784,2.0728 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -397.34507,-3.6784 c -0.28703,-0.28703 -1.02366,-0.21175 -1.63696,0.16729 -0.8004,0.49468 -0.74862,1.1313 0.18347,2.25586 1.16994,1.41152 1.33208,1.39495 1.63696,-0.16729 0.18612,-0.9537 0.10356,-1.96884 -0.18347,-2.25586 z m 127.88619,2.61187 c 1.08933,-1.76258 -0.059,-2.0097 -2.11412,-0.45494 -1.69187,1.27997 -1.72067,1.46174 -0.23602,1.48967 0.93004,0.0175 1.9876,-0.44814 2.35014,-1.03473 z m 28.87268,-0.79399 c 0.81711,-1.32211 -0.31973,-1.97684 -2.46046,-1.41703 -1.06196,0.27771 -1.68435,0.90377 -1.38308,1.39124 0.70009,1.13276 3.14924,1.14919 3.84354,0.0258 z m -166.22396,-6.13948 c 0.44559,0 0.81016,0.675 0.81016,1.5 0,0.83333 0.88889,1.5 2,1.5 2.22935,0 2.63979,-1.96021 0.79642,-3.80358 -0.66198,-0.66198 -1.22448,-2.40204 -1.25,-3.86681 -0.066,-3.78835 -1.89037,-3.90604 -3.28475,-0.21189 -0.90926,2.40889 -1.64256,3.01594 -3.16293,2.61835 -1.7331,-0.45321 -1.83122,-0.27694 -0.78899,1.41746 1.00451,1.63308 0.83211,2.2072 -1.1048,3.67904 -1.26228,0.9592 -1.98486,2.05419 -1.60573,2.43332 0.37913,0.37913 2.05983,-0.6506 3.73489,-2.28828 1.67506,-1.63769 3.41014,-2.97761 3.85573,-2.97761 z m -12.41901,3.8125 c -0.61807,-1.85422 -2.77083,-2.16176 -2.77083,-0.39583 0,0.87083 0.7125,1.58333 1.58333,1.58333 0.87084,0 1.40521,-0.53438 1.1875,-1.1875 z m -21.27083,-1.8125 c 1.43678,-1.58763 1.50998,-2 0.35499,-2 -1.56849,0 -3.85499,1.89801 -3.85499,3.2 0,1.41695 1.6408,0.85439 3.5,-1.2 z m 15.7,-1.2 c -0.93333,-0.93333 -1.2,-0.66667 -1.2,1.2 0,1.86667 0.26667,2.13333 1.2,1.2 0.93333,-0.93333 0.93333,-1.46667 0,-2.4 z m 56.74064,-1.8 c 1.82238,-5.05734 3.11614,-8.14011 4.68118,-11.15429 1.69652,-3.2674 1.76165,-6.06224 0.17818,-7.64571 -1.65262,-1.65262 -2.47917,-1.50454 -3.06992,0.55 -0.27674,0.9625 -0.82737,2.5375 -1.22362,3.5 -0.52795,1.28243 -0.22428,1.78099 1.13655,1.866 1.67558,0.10467 1.68603,0.16068 0.10699,0.57333 -0.9625,0.25152 -1.75,1.27618 -1.75,2.27701 0,1.00082 -0.75025,2.10758 -1.66722,2.45945 -1.27071,0.48762 -1.38962,0.91737 -0.5,1.80699 1.90511,1.90511 1.40513,4.76722 -0.83278,4.76722 -2.34042,0 -2.36521,0.10433 -0.82713,3.48007 1.32982,2.91863 1.97556,2.49358 3.76777,-2.48007 z m -30.62231,-0.97223 c -2.27448,-2.21371 -2.82402,-1.84118 -1.34918,0.91459 0.62216,1.16251 1.58936,1.83049 2.14935,1.4844 0.62045,-0.38346 0.30789,-1.32053 -0.80017,-2.39899 z m 183.68167,1.97223 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -220.75,-5.41893 c 2.94462,-0.66299 3.77653,0.9924 1.59504,3.17389 -0.87328,0.87328 -0.44647,0.96282 1.75,0.36716 2.62525,-0.71194 2.87336,-1.14089 2.57676,-4.45496 -0.25417,-2.83994 0.0349,-3.66716 1.28138,-3.66716 2.18272,0 2.94486,2.38775 1.57758,4.94253 -1.60587,3.0006 -0.27489,4.58838 2.06852,2.46763 1.04539,-0.94608 1.90072,-2.14076 1.90072,-2.65485 0,-1.3982 4.26408,-4.68395 6.12803,-4.72204 0.89541,-0.0183 2.2962,-1.03959 3.11285,-2.26954 1.20779,-1.81902 1.75871,-2.00896 2.95274,-1.018 1.18482,0.98331 1.90841,0.80787 3.75201,-0.9097 2.02093,-1.88279 2.09804,-2.23209 0.66923,-3.03169 -2.34211,-1.31071 -2.00745,-2.63519 1.4918,-5.90398 1.87282,-1.74947 2.87819,-3.49746 2.53139,-4.40121 -0.75036,-1.95539 -2.63805,-1.93707 -2.63805,0.0256 0,2.44123 -4.84357,3.75862 -9.48089,2.57867 -4.71637,-1.20006 -6.83578,0.11622 -5.46898,3.39658 0.8082,1.9397 0.85367,1.93217 1.50823,-0.25 0.73304,-2.44383 1.24583,-2.66053 3.26553,-1.38 1.07552,0.68189 1.03029,1.13296 -0.24107,2.40433 -1.17251,1.17251 -1.25374,1.6914 -0.32389,2.06918 1.76172,0.71576 -1.1053,2.62135 -3.97375,2.64118 -1.21815,0.008 -2.69648,0.91531 -3.28518,2.01531 -0.5887,1.1 -1.84203,1.98999 -2.78518,1.97776 -1.36179,-0.0177 -1.20014,-0.42788 0.78518,-1.99264 2.11839,-1.66963 2.27104,-2.12183 1,-2.96245 -2.20119,-1.45579 -2.97473,-1.26803 -5.05644,1.22733 -1.03236,1.2375 -1.89199,1.6875 -1.91029,1 -0.0183,-0.6875 -0.92823,-1.25 -2.02207,-1.25 -2.86957,0 -2.33943,-4.91224 0.81697,-7.57012 3.52852,-2.97121 2.44232,-5.21709 -1.15475,-2.38763 -1.52831,1.20217 -3.05505,1.90946 -3.39275,1.57175 -0.3377,-0.3377 -0.089,-0.614 0.55266,-0.614 1.68816,0 1.43508,-2.68302 -0.31647,-3.35516 -0.84393,-0.32384 -1.22881,-1.23192 -0.89301,-2.10699 0.32457,-0.84582 0.092,-1.53785 -0.51686,-1.53785 -0.60885,0 -1.10699,-0.825 -1.10699,-1.83333 0,-2.59929 -0.9737,-3.25111 -3.13148,-2.0963 -1.71217,0.91632 -1.86852,2.42208 -1.86852,17.99475 v 16.99475 l 2.75,-1.92981 c 1.5125,-1.0614 3.9875,-2.20844 5.5,-2.54899 z m -1.75,-6.58107 c 0.33992,-0.55 1.06803,-1 1.61803,-1 0.55,0 0.72189,0.45 0.38197,1 -0.33992,0.55 -1.06803,1 -1.61803,1 -0.55,0 -0.72189,-0.45 -0.38197,-1 z m 3.5,0 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -8.5,-2 c 0.33992,-0.55 1.04148,-1 1.55902,-1 0.51754,0 0.94098,0.45 0.94098,1 0,0.55 -0.70156,1 -1.55902,1 -0.85746,0 -1.2809,-0.45 -0.94098,-1 z m 0.5,-6.34501 c 0,-0.73976 0.9,-2.1595 2,-3.15499 2.36409,-2.13947 2.80514,-0.14443 0.60795,2.75 -1.58722,2.09091 -2.60795,2.24942 -2.60795,0.40499 z m -0.5,-11.65499 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 231.16878,28.84143 c -0.34522,-1.32014 0.1704,-3.09282 1.3275,-4.56383 2.41142,-3.06563 1.67073,-5.70494 -1.1738,-4.18259 -1.17335,0.62795 -1.74417,1.66667 -1.40363,2.55412 0.31569,0.82267 0.0909,2.39832 -0.49944,3.50145 -1.20405,2.24978 -0.57907,4.84942 1.16584,4.84942 0.68379,0 0.91976,-0.87285 0.58353,-2.15857 z m -184.73907,-6.53241 c 0.0745,-2.32128 -1.59843,-4.01003 -2.74624,-2.77225 -0.37591,0.40537 -0.12097,0.93793 0.56653,1.18347 1.50037,0.53584 1.66476,3.90539 0.23369,4.78984 -0.55897,0.34546 -0.70635,1.12965 -0.3275,1.74264 0.81232,1.31437 2.16729,-1.63196 2.27352,-4.9437 z m 248.5607,0.1339 c 1.95639,-1.95639 3.31486,-3.94899 3.01881,-4.428 -0.29604,-0.47901 0.48077,-1.1899 1.72626,-1.57976 1.24549,-0.38985 3.61452,-1.83872 5.26452,-3.2197 2.54508,-2.13012 3.04903,-2.26101 3.32332,-0.86317 0.17783,0.90624 0.77066,1.64771 1.31739,1.64771 0.54748,0 0.70139,-0.92213 0.34259,-2.05262 -0.48854,-1.53926 0.2449,-2.89801 2.93261,-5.43285 3.90369,-3.68165 4.7742,-7.84387 1.87331,-8.95704 -1.44186,-0.55329 -1.11874,-1.19886 2.05565,-4.10699 l 3.76643,-3.4505 -2.80565,0.0153 c -2.19276,0.012 -2.47798,0.23043 -1.30565,1.00003 1.26981,0.83359 1.18955,1.07023 -0.52295,1.54194 -1.14503,0.31541 -3.27298,2.94476 -4.90332,6.05866 -3.00817,5.74553 -9.27397,11.63707 -15.44902,14.52624 -2.81386,1.31655 -3.14747,1.71403 -1.49134,1.77687 2.02824,0.077 4.25839,4.08095 2.27301,4.08095 -0.49851,0 -0.91416,0.5625 -0.92366,1.25 -0.01,0.6875 -1.46567,2.2625 -3.23592,3.5 -1.77025,1.2375 -2.67747,2.25 -2.01605,2.25 0.66142,0 2.80327,-1.60068 4.75966,-3.55708 z m 24.50959,2.66407 c 0,-0.49116 -0.675,-1.15203 -1.5,-1.46862 -0.91371,-0.35062 -1.5,-0.002 -1.5,0.89301 0,0.80774 0.675,1.46862 1.5,1.46862 0.825,0 1.5,-0.40186 1.5,-0.89301 z m -77.44615,-3.01986 c -0.84359,-1.36496 -5.55385,-1.43886 -5.55385,-0.0871 0,0.55 0.9,1 2,1 1.1,0 2,0.54 2,1.2 0,0.88114 0.29571,0.90429 1.11287,0.0871 0.61207,-0.61207 0.81052,-1.60207 0.44098,-2.2 z m 82.44615,2.0295 c 0,-0.48585 -0.825,-1.09911 -1.83333,-1.36279 -1.11546,-0.2917 -1.83334,0.0542 -1.83334,0.88336 0,0.74954 0.825,1.3628 1.83334,1.3628 1.00833,0 1.83333,-0.39752 1.83333,-0.88337 z m -42.57941,-3.13696 c 2.31977,-1.15659 3.00832,-1.19293 3.34708,-0.17665 0.2869,0.86069 1.21304,0.43082 2.82942,-1.31328 1.3216,-1.42603 2.40291,-2.95276 2.40291,-3.39273 0,-1.31586 -17.19505,-2.18003 -18.69003,-0.9393 -1.83115,1.51972 -1.63189,3.50478 0.43127,4.29649 1.13639,0.43607 2.32102,-0.0478 3.4103,-1.39301 0.91797,-1.13366 2.27191,-2.04688 3.00875,-2.02939 1.03641,0.0246 1.00012,0.3076 -0.16029,1.25 -1.33214,1.08188 -1.53663,2.00803 -1.11535,5.05153 0.0634,0.45834 0.45285,0.6689 0.86535,0.46792 0.4125,-0.20099 2.06426,-1.02069 3.67059,-1.82158 z m 136.23433,-1.5228 c 0.32569,-0.84872 0.35539,-1.7799 0.066,-2.06929 -0.65097,-0.65096 -4.72092,1.80861 -4.72092,2.85297 0,1.44024 4.06408,0.75603 4.65492,-0.78368 z m -171.29329,-3.95687 c 0.31658,-0.825 0.13972,-1.5 -0.39301,-1.5 -0.53274,0 -0.96862,0.675 -0.96862,1.5 0,0.825 0.17686,1.5 0.39301,1.5 0.21616,0 0.65203,-0.675 0.96862,-1.5 z m 78.36819,-0.42518 c -0.34215,-1.30837 -0.0825,-1.76365 0.8104,-1.42101 0.89081,0.34183 1.15283,-0.11158 0.81377,-1.40815 -0.54212,-2.07307 -5.98098,-2.81608 -6.06821,-0.82899 -0.0262,0.59583 -0.36153,1.83753 -0.74526,2.75932 -0.53953,1.29604 -0.0565,1.77216 2.13089,2.10017 1.55572,0.2333 2.99357,0.4916 3.19522,0.57401 0.20165,0.0824 0.14008,-0.7165 -0.13681,-1.77535 z m 12.15528,0.53226 c 1.50568,-0.83459 1.97419,-1.57601 1.27067,-2.01081 -1.29788,-0.80213 -5.15577,1.02283 -5.15577,2.43891 0,1.27977 1.00342,1.1692 3.8851,-0.4281 z m -296.11427,-2.41958 c 0.59996,-1.79986 -1.467,-1.42165 -2.16452,0.39606 -0.37373,0.97391 -0.15024,1.43108 0.58051,1.1875 0.6535,-0.21783 1.36631,-0.93044 1.58401,-1.58356 z m 177.2598,-0.6506 c -1.52381,-1.83607 -0.66776,-4.5369 1.43799,-4.5369 0.84226,0 1.53138,-0.675 1.53138,-1.5 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,-0.675 -1,-1.5 0,-1.41412 -0.39823,-1.65676 -3.11827,-1.9 -1.93895,-0.17339 -1.711,7.1516 0.32684,10.50257 1.04456,1.71764 2.16408,2.85811 2.48782,2.53438 0.32374,-0.32374 0.0241,-1.26876 -0.66576,-2.10005 z m 6.04437,-0.8119 c -0.12369,-1.1957 -1.49529,-0.96414 -1.925,0.325 -0.22,0.66 0.14,1.02 0.8,0.8 0.66,-0.22 1.16625,-0.72625 1.125,-1.125 z m 174.925,0.275 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 16,0 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m -152,-1 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 55.66417,-0.56722 c 1.13416,-2.95557 -1.19661,-3.55938 -3.65173,-0.94602 l -2.36107,2.51324 h 2.7057 c 1.53415,0 2.9661,-0.67859 3.3071,-1.56722 z m 105.33583,-0.26611 c 0,-1.40725 -1.12573,-2.05565 -2.59202,-1.49298 -0.76807,0.29473 -1.14752,0.93873 -0.84322,1.43109 0.69797,1.12934 3.43524,1.17865 3.43524,0.0619 z m -405,-1.16667 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 67.47719,-9.5 c 0.59969,-3.57861 2.92463,-7.55978 4.14199,-7.09264 2.1293,0.81709 1.63337,-0.76855 -0.69519,-2.22276 -1.65876,-1.03591 -1.83726,-1.58417 -0.88813,-2.72781 1.24752,-1.50317 0.66796,-4.45679 -0.87451,-4.45679 -0.49579,0 -1.48449,2.1375 -2.19711,4.75 -0.71263,2.6125 -1.89611,5.63763 -2.62996,6.72251 -0.73386,1.08487 -1.33428,3.58237 -1.33428,5.55 0,1.96762 -0.54,4.11749 -1.2,4.77749 -0.93333,0.93333 -0.93333,1.2 0,1.2 0.66,0 1.23179,0.7875 1.27064,1.75 0.0633,1.56724 3.99493,-5.79369 4.40655,-8.25 z m 244.27281,7.22232 c 1.4928,-1.15508 1.66523,-3.72232 0.25,-3.72232 -0.55,0 -1,0.71713 -1,1.59362 0,0.87649 -0.9,1.82897 -2,2.11663 -1.1,0.28766 -2,0.90641 -2,1.375 0,0.9452 2.80848,0.13935 4.75,-1.36293 z m -137.75,0.27768 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -177,-1 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 170.73105,-0.69316 c 0.37603,-1.12807 -4.57695,-2.79427 -5.51572,-1.85551 -0.30176,0.30177 0.20134,0.54867 1.118,0.54867 0.91667,0 1.66667,0.7125 1.66667,1.58333 0,1.70388 2.14326,1.4869 2.73105,-0.27649 z m 10.26895,0.69316 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 218,0 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -384,-2.0252 c 0,-1.43162 -1.19298,-3.9753 -1.85699,-3.95949 -0.35365,0.008 -1.24699,0.39812 -1.98518,0.86598 -1.09536,0.69425 -1.10856,1.22474 -0.0718,2.88491 1.18185,1.89243 3.91394,2.03804 3.91394,0.2086 z m 215.68311,-0.1623 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m -221.83295,-1.8125 c 0.83557,-2.39693 0.76612,-3 -0.34548,-3 -1.35126,0 -4.50468,3.65592 -4.50468,5.22251 0,0.42762 0.85598,0.77749 1.90217,0.77749 1.21446,0 2.28028,-1.08462 2.94799,-3 z m 177.14984,2 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 9,0 c 0,-0.55 -0.87344,-1 -1.94098,-1 -1.06754,0 -2.2191,0.45 -2.55902,1 -0.35052,0.56716 0.48962,1 1.94098,1 1.40746,0 2.55902,-0.45 2.55902,-1 z m 130.26903,0.34406 c -0.67703,-0.27392 -2.02703,-0.29059 -3,-0.0371 -0.97297,0.25354 -0.41903,0.47766 1.23097,0.49804 1.65,0.0204 2.44606,-0.18706 1.76903,-0.46099 z m 94.25743,-1.15093 c -0.30789,-0.30789 -1.11479,-6.4e-4 -1.79313,0.68278 -0.98026,0.98762 -0.8654,1.10248 0.5598,0.5598 0.98622,-0.37553 1.54122,-0.93469 1.23333,-1.24258 z m -422.92966,-0.22325 c 0.49676,0.48195 2.15359,0.63096 3.68185,0.33114 2.1686,-0.42545 2.64745,-0.95851 2.18105,-2.428 -0.38129,-1.20133 -0.0297,-2.1008 0.97135,-2.48493 0.86292,-0.33114 1.56895,-1.39882 1.56895,-2.37263 0,-0.97382 0.66968,-2.32635 1.48817,-3.00564 1.20519,-1.00022 1.60583,-0.92843 2.10699,0.37756 0.67172,1.75049 3.40484,2.24225 3.40484,0.61262 0,-0.55 1.275,-1 2.83333,-1 3.34114,0 4.23004,-0.67129 3.47934,-2.62757 -0.33686,-0.87784 -1.27768,-1.20092 -2.43109,-0.83484 -1.2211,0.38756 -1.88158,0.11318 -1.88158,-0.78164 0,-1.9027 -3.90615,-5.93198 -5.05961,-5.21911 -0.51722,0.31966 -0.94039,1.44933 -0.94039,2.51039 0,1.37875 0.61053,1.86122 2.13977,1.69098 1.17687,-0.13102 2.34591,0.34392 2.59787,1.05541 0.32974,0.93112 -0.23929,1.11858 -2.03067,0.66897 -1.4041,-0.35241 -2.78436,-0.14639 -3.16697,0.47269 -0.37301,0.60354 -1.04611,0.86996 -1.49579,0.59204 -0.44968,-0.27791 -1.37829,0.1703 -2.06358,0.99602 -0.94731,1.14144 -1.57375,1.22931 -2.61331,0.36655 -1.05307,-0.87398 -1.36732,-0.79004 -1.36732,0.36522 0,0.825 0.7005,2.08136 1.55667,2.79192 1.38028,1.14554 1.24936,1.55597 -1.15554,3.62244 -3.31849,2.85149 -3.78465,2.91566 -2.40113,0.33053 1.48187,-2.7689 -0.66049,-2.66758 -3.68555,0.17431 -2.87397,2.69996 -3.19306,5.36628 -0.46765,3.90768 1.05905,-0.56679 2.23207,-0.61461 2.75,-0.11211 z m 398.4032,0.0301 c 0,-0.55 -0.9,-1 -2,-1 -1.1,0 -2,0.45 -2,1 0,0.55 0.9,1 2,1 1.1,0 2,-0.45 2,-1 z m -274.625,-0.79775 c 0.27117,-0.43876 0.10702,-1.42232 -0.36477,-2.18569 -0.7094,-1.14784 -1.13049,-1.16165 -2.43401,-0.0798 -0.86692,0.71948 -1.57622,1.70304 -1.57622,2.18569 0,1.09635 3.70497,1.16394 4.375,0.0798 z m 31.625,-0.14323 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 3,-0.059 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 5.74486,-0.25 c -0.232,-0.6875 0.91688,-2.42301 2.55306,-3.85669 1.95912,-1.71665 2.58444,-2.84798 1.83141,-3.31338 -0.6289,-0.38868 -1.41342,-0.003 -1.74338,0.85669 -0.32996,0.85986 -1.15704,1.56338 -1.83795,1.56338 -0.68091,0 -1.97663,0.81614 -2.87936,1.81365 -1.2661,1.39903 -1.37011,2.08488 -0.45499,3 1.55753,1.55753 3.06547,1.51961 2.53121,-0.0636 z m 77.25514,0.25 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m -65.60631,-1.58356 c 0.37373,-0.97391 0.15024,-1.43108 -0.58051,-1.1875 -1.49484,0.49828 -2.31789,2.77106 -1.0035,2.77106 0.53699,0 1.24979,-0.7126 1.58401,-1.58356 z m 8.17541,0.47176 c 0.37792,-0.6115 0.067,-1.5046 -0.69098,-1.98469 -2.14035,-1.35567 -2.87812,-1.0746 -2.87812,1.09649 0,2.13481 2.42559,2.73844 3.5691,0.8882 z m 51.84911,0.50481 c 0.86999,-0.33384 1.58179,-1.23384 1.58179,-2 0,-2.00363 -1.31808,-1.71458 -2.76793,0.60699 -1.3515,2.16409 -1.2214,2.31687 1.18614,1.39301 z m -152.41821,-1.39301 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 86,0 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 31.5,0 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 18.5,0 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m 97,0 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -83.33772,-3.25 c -0.27741,-0.6875 -0.50439,-0.125 -0.50439,1.25 0,1.375 0.22698,1.9375 0.50439,1.25 0.27741,-0.6875 0.27741,-1.8125 0,-2.5 z m 194.16104,0.91713 c 0.18332,-0.94521 -0.31164,-1.66713 -1.14301,-1.66713 -1.58186,0 -2.9366,2.41038 -1.92391,3.42307 1.01162,1.01162 2.71987,0.0336 3.06692,-1.75594 z m -322.65356,-0.56735 c 0.65269,-1.04512 1.75699,-1.68138 2.45401,-1.41391 1.53004,0.58713 8.37616,-4.67309 8.3762,-6.43587 2e-5,-0.6875 0.72317,-1.25 1.60702,-1.25 1.05343,0 1.39823,0.544 1.00098,1.57924 -0.5055,1.3173 -0.0671,1.46379 2.64301,0.88318 3.96441,-0.84931 4.14159,-0.99702 3.42769,-2.85741 -0.69107,-1.80091 -7.99768,-1.41507 -10.36206,0.54719 -1.2613,1.04678 -1.75045,0.97497 -2.75962,-0.40515 -0.93366,-1.27686 -1.50485,-1.39919 -2.39179,-0.51225 -1.84162,1.84162 -1.36421,3.59452 1.0848,3.98307 1.79678,0.28506 1.59273,0.466 -1.01303,0.89827 -2.65431,0.44032 -3.17158,0.24679 -2.77282,-1.03742 0.7107,-2.28888 -0.85282,-4.25054 -2.7941,-3.5056 -2.08364,0.79957 -2.14829,2.78508 -0.14482,4.44782 1.36697,1.13448 1.36697,1.4407 0,2.95118 -0.83888,0.92695 -1.52523,2.21243 -1.52523,2.85662 0,1.81034 1.84958,1.38499 3.16976,-0.72896 z m -71.66976,-3.50429 c 0,-2.77794 -1.01535,-2.55679 -1.78567,0.38893 -0.30404,1.16264 -0.0377,2.01558 0.62929,2.01558 0.63601,0 1.15638,-1.08203 1.15638,-2.40451 z m 129.23476,1.26975 c 0.84634,-0.84634 0.75355,-1.71655 -0.36509,-3.4238 -1.34171,-2.04772 -1.32706,-2.62315 0.13898,-5.45817 0.90135,-1.74302 1.41282,-3.39513 1.13659,-3.67136 -0.987,-0.987 -6.64524,0.8728 -6.64524,2.18421 0,0.73547 -0.5625,1.53798 -1.25,1.78337 -0.86828,0.30991 -0.5629,1.19483 1,2.89778 1.2375,1.3484 2.25,3.43513 2.25,4.63718 0,2.3543 1.89741,2.88814 3.73476,1.05079 z m 26.26524,-0.24861 c 0,-0.76085 -0.9,-1.61872 -2,-1.90638 -2.2067,-0.57707 -2.8765,1.76941 -0.75,2.62747 2.14702,0.86634 2.75,0.70823 2.75,-0.72109 z m 10.42749,0.5007 c 0.61301,-0.99188 -5.10758,-0.77057 -6.11471,0.23655 -0.35536,0.35537 0.75233,0.64612 2.46154,0.64612 1.7092,0 3.35313,-0.3972 3.65317,-0.88267 z m 36.13768,-2.87447 c -1.76112,-1.65992 -1.81856,-1.65569 -1.20714,0.0889 0.35308,1.00748 0.64197,2.33498 0.64197,2.95 0,0.77517 0.37032,0.74789 1.20714,-0.0889 0.94286,-0.94286 0.80231,-1.58872 -0.64197,-2.95 z m -246.39391,1.10215 c 1.2923,-1.16951 1.82874,-3.07622 1.82874,-6.5 0,-4.17834 0.2752,-4.84501 2,-4.84501 2.11332,0 2.68997,-1.45554 0.99233,-2.50474 -1.2056,-0.7451 -3.63372,1.48607 -4.13448,3.79913 -0.2544,1.1751 -0.77999,1.38912 -1.81809,0.74033 -1.24414,-0.77757 -1.17015,-1.24272 0.5,-3.14324 1.81759,-2.06829 1.82694,-2.18189 0.12845,-1.56105 -1.00748,0.36827 -2.01998,0.66957 -2.25,0.66957 -0.23001,0 -0.41821,2.27656 -0.41821,5.05902 0,3.11803 0.38367,4.82189 1,4.44098 0.55,-0.33992 1,-0.14148 1,0.44098 0,0.58246 -0.45,1.05902 -1,1.05902 -0.55,0 -1,0.9 -1,2 0,2.43319 0.77115,2.51708 3.17126,0.34501 z m 327.82874,-0.46304 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m 8.55887,0.64983 c 1.06762,-0.8075 1.46464,-1.4825 0.88226,-1.5 -0.58238,-0.0175 -1.93238,0.62889 -3,1.4364 -1.06762,0.8075 -1.46464,1.4825 -0.88226,1.5 0.58238,0.0175 1.93238,-0.62889 3,-1.4364 z m 65.17881,-3.5318 c 1.43266,0 3.31527,-0.63666 4.18358,-1.4148 0.86831,-0.77814 3.15305,-1.81907 5.07721,-2.31317 3.65001,-0.93729 4.67673,-2.72463 3.02847,-5.27203 -0.82516,-1.27529 -1.20798,-1.16294 -2.55545,0.75 -0.87169,1.2375 -2.37337,2.25 -3.33706,2.25 -0.9637,0 -2.62568,0.66069 -3.6933,1.4682 -1.06762,0.8075 -3.06613,1.49682 -4.44113,1.5318 -1.375,0.035 -3.2875,0.6614 -4.25,1.39205 -2.20606,1.67463 -2.32213,4.04147 -0.15746,3.21081 1.08864,-0.41775 1.79843,0.10213 2.24323,1.64301 0.61437,2.12832 0.66872,2.10064 0.97388,-0.49587 0.26014,-2.21346 0.83141,-2.75 2.92803,-2.75 z m -232.73768,3 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 25.02006,-1.52417 c 0.69572,-0.83829 0.95135,-1.83776 0.56807,-2.22104 -0.38328,-0.38328 -1.07699,-0.0818 -1.54158,0.66989 -0.49833,0.80631 -1.55917,1.09259 -2.58707,0.69815 -1.46709,-0.56298 -1.54268,-0.42801 -0.47848,0.85428 1.59108,1.91713 2.44714,1.91686 4.03906,-10e-4 z m 215.37124,-1.05315 c 0.30547,-0.79605 -0.047,-1.42268 -0.80024,-1.42268 -1.60453,0 -3.82387,2.43386 -2.98462,3.27311 0.8828,0.88279 3.164,-0.23249 3.78486,-1.85043 z m -297.81751,-0.54208 c 0.29934,-0.48433 -1.05731,-0.8806 -3.01477,-0.8806 -3.24355,0 -4.39494,0.83074 -3.03552,2.19017 0.74734,0.74734 5.40167,-0.26008 6.05029,-1.30957 z m 332.42621,-0.0709 c 0,-1.31439 -2.27278,-0.49134 -2.77106,1.0035 -0.24358,0.73075 0.21359,0.95424 1.1875,0.58051 0.87096,-0.33422 1.58356,-1.04702 1.58356,-1.58401 z m -279,-0.30968 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -2.60246,0 -1.75909,1.97081 1.25,2.92105 0.1375,0.0434 0.25,-0.59605 0.25,-1.42105 z m 49.5,0.5 c -0.33992,-0.55 -1.04148,-1 -1.55902,-1 -0.51754,0 -0.94098,0.45 -0.94098,1 0,0.55 0.70156,1 1.55902,1 0.85746,0 1.2809,-0.45 0.94098,-1 z m 126.95295,-0.16052 c 3.50702,-1.5979 3.19056,-2.65722 -0.70295,-2.35304 -2.06604,0.1614 -3.36779,0.84763 -3.57332,1.88373 -0.38212,1.92621 0.79515,2.05542 4.27627,0.46931 z m -247.45295,-1.95751 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m 56.82332,-0.21484 c 0.18332,-0.94521 -0.31164,-1.66713 -1.14301,-1.66713 -1.58186,0 -2.9366,2.41038 -1.92391,3.42307 1.01162,1.01162 2.71987,0.0336 3.06692,-1.75594 z m 198.88081,-0.56497 c 0.99766,-1.59751 0.87748,-1.97831 -0.75946,-2.40638 -1.52836,-0.39967 -1.94467,0.007 -1.94467,1.89784 0,2.89183 1.08796,3.09643 2.70413,0.50854 z m -206.45413,-0.76444 c -0.6875,-0.27741 -1.8125,-0.27741 -2.5,0 -0.6875,0.27741 -0.125,0.50439 1.25,0.50439 1.375,0 1.9375,-0.22698 1.25,-0.50439 z m 57.75,-0.7787 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -8.45353,-3.06268 c -0.0256,-1.37702 -0.49647,-2.49664 -1.04647,-2.48804 -2.6356,0.0412 -4.5,1.30858 -4.5,3.05909 0,1.44942 0.69917,1.93261 2.79647,1.93261 2.32969,0 2.78871,-0.4179 2.75,-2.50366 z m 14.95353,1.50366 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -1.81696,0 -2.01762,-1.1414 -0.47232,-2.6867 0.78226,-0.78226 -0.0791,-1.19787 -3.07476,-1.48355 -2.28879,-0.21827 -4.37937,-0.0443 -4.64571,0.3867 -0.26635,0.43095 0.37926,0.78355 1.43468,0.78355 1.05542,0 2.76378,1.125 3.79637,2.5 2.03238,2.70634 2.94126,3.05567 3.90272,1.5 z m 17.5,-0.53138 c 0,-1.63978 -2.66872,-3.13323 -3.72013,-2.08183 -0.34863,0.34863 0.23328,1.28991 1.29313,2.09174 2.42267,1.83286 2.427,1.83284 2.427,-0.01 z m 109.37476,-1.3379 c 2.31289,-2.41414 2.49519,-2.96665 1.14924,-3.48314 -0.91511,-0.35116 -1.82709,-0.0213 -2.13103,0.77074 -0.29223,0.76153 -1.40019,1.61181 -2.46214,1.88952 -2.15325,0.56308 -2.67693,3.69216 -0.61792,3.69216 0.7221,0 2.54993,-1.29117 4.06185,-2.86928 z M 423.06899,628.9462 c 0.83662,-1.00807 0.85908,-1.60376 0.0786,-2.08609 -1.16004,-0.71695 -4.00475,1.14378 -4.00475,2.6195 0,1.38193 2.63347,1.02413 3.92611,-0.53341 z m 306.07389,0.96999 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 29,-0.55902 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -311.56593,-0.89333 c 0.30366,-0.49133 -0.62288,-1.18823 -2.05898,-1.54866 -2.89348,-0.72622 -3.91681,-0.24355 -2.91621,1.37546 0.79989,1.29424 4.209,1.41292 4.97519,0.1732 z m 51.78281,-0.714 c 2.3071,-0.81784 3.37565,-4.40253 1.64013,-5.5022 -2.21843,-1.40566 -2.75622,-1.06745 -4.34359,2.73165 -1.83474,4.39115 -1.85554,4.70403 -0.26342,3.96186 0.6875,-0.32048 2.0226,-0.85657 2.96688,-1.19131 z m 70.78312,1.03855 c 0,-0.73721 -23.92161,-59.45691 -25.02624,-61.43122 -0.70092,-1.25275 -0.95514,-1.17033 -1.54228,0.5 -1.47426,4.1941 -8.74991,23.37988 -12.13508,32 -1.9439,4.95 -4.33025,11.25 -5.30301,14 -0.97276,2.75 -2.71266,7.3625 -3.86643,10.25 l -2.09778,5.25 h 24.98541 c 13.74198,0 24.98541,-0.25595 24.98541,-0.56878 z m -42.25,-3.12055 c -0.9625,-0.25152 -1.75,-0.86454 -1.75,-1.36226 0,-0.80967 6.93666,-19.46948 14.85056,-39.94841 1.59407,-4.125 3.29231,-7.39627 3.77387,-7.26949 0.98321,0.25886 7.6343,15.3441 7.03114,15.94725 -0.2125,0.2125 -0.95856,-0.99502 -1.6579,-2.68338 -2.23164,-5.38767 -2.70089,-4.59021 -12.65445,21.50562 -2.51739,6.6 -4.59946,12.5625 -4.62681,13.25 -0.0496,1.24659 -1.65021,1.42729 -4.96641,0.56067 z m 34.98236,-2.3952 c 0.41445,-1.58486 0.74789,-1.76464 1.39106,-0.75 1.23186,1.94331 1.06528,2.83453 -0.5298,2.83453 -0.93306,0 -1.22292,-0.70155 -0.86126,-2.08453 z m -4.59443,-13.0534 c -2.26929,-5.61405 -3.96305,-10.37029 -3.76391,-10.56942 0.19914,-0.19914 2.21876,4.23124 4.48805,9.84528 2.26929,5.61405 3.96305,10.37029 3.76391,10.56942 -0.19914,0.19914 -2.21876,-4.23124 -4.48805,-9.84528 z m -5.51439,-13.40073 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z m 35.94946,30.01719 c -2.05508,-1.55476 -3.20345,-1.30764 -2.11412,0.45494 0.36254,0.58659 1.4201,1.05222 2.35014,1.03473 1.48465,-0.0279 1.45585,-0.2097 -0.23602,-1.48967 z m -156.573,-0.47853 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 4.9144,-3.5 c 0.0302,-0.55 -0.38124,-0.325 -0.9144,0.5 -0.53316,0.825 -0.94464,2.175 -0.9144,3 0.058,1.58385 1.72467,-1.60578 1.8288,-3.5 z m 288.5856,3.5 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 33.21373,-2 c 1.24111,0 4.6778,-4.94181 3.94576,-5.67384 -0.63141,-0.63141 -8.65562,6.85616 -8.65785,8.07883 -9e-4,0.49774 0.82129,0.16024 1.8271,-0.75 1.00581,-0.91025 2.30405,-1.65499 2.88499,-1.65499 z m -164.37165,0.55093 c 0.37166,-0.96852 0.0755,-1.26467 -0.89301,-0.89301 -0.79699,0.30583 -1.44907,0.95791 -1.44907,1.44907 0,1.43762 1.73512,1.02567 2.34208,-0.55606 z m -144.4055,-0.49057 c 1.05066,-0.66482 1.18319,-1.47688 0.49335,-3.02287 -0.81595,-1.82861 -1.18583,-1.93647 -2.74101,-0.79929 -1.13618,0.83079 -1.55437,1.94887 -1.13636,3.03818 0.74737,1.94761 1.33127,2.08288 3.38402,0.78398 z m -40.21153,-2.06036 c 0.0876,-1.16302 -0.4658,-2 -1.32238,-2 -1.16316,0 -1.24787,0.42073 -0.40267,2 0.5887,1.1 1.18377,2 1.32238,2 0.13861,0 0.31981,-0.9 0.40267,-2 z m 418.79134,0.97348 c 0.34893,-0.56459 1.34131,-0.90209 2.20527,-0.75 0.86397,0.15209 1.75034,-0.23438 1.96971,-0.85881 0.23382,-0.66556 -1.068,-1.30657 -3.14626,-1.5492 -1.94981,-0.22763 -3.54511,-0.091 -3.54511,0.30354 0,0.39458 -0.27314,1.42922 -0.60699,2.2992 -0.68333,1.78073 2.06413,2.26917 3.12338,0.55527 z m -215.49368,-2.22348 c 0.0125,-0.6875 1.47499,-1.96338 3.25,-2.83529 4.27414,-2.09952 4.85107,-5.53695 1.16455,-6.93856 -4.41172,-1.67734 -6.62576,-0.3855 -6.27701,3.66246 0.18219,2.11472 -0.22965,3.78624 -1.05919,4.29893 -0.74651,0.46137 -1.04808,1.33916 -0.67016,1.95066 0.93445,1.51197 3.56367,1.41081 3.59181,-0.1382 z m 0.42344,-5.83713 c -0.36954,-0.59793 -0.15236,-1.60666 0.48262,-2.24164 0.87268,-0.87268 1.37235,-0.80204 2.04689,0.28938 0.95311,1.54218 0.4725,3.03939 -0.97566,3.03939 -0.48508,0 -1.18431,-0.48921 -1.55385,-1.08713 z m 193.28302,6.48296 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m -226.22917,-2.39583 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m -152.06739,-2.25 c -0.3862,-1.2375 -1.20402,-2.57219 -1.81739,-2.96597 -0.64433,-0.41366 -1.03285,-3.08009 -0.92013,-6.31503 0.13859,-3.97771 -0.15098,-5.47621 -1,-5.17481 -0.6573,0.23333 -1.11037,1.61259 -1.00683,3.06502 0.14336,2.01084 -0.2741,2.64079 -1.75,2.64079 -1.42385,0 -1.93826,0.69445 -1.93826,2.61663 0,2.1243 0.37631,2.51823 2,2.09362 1.46457,-0.38299 2,-0.0307 2,1.31598 0,1.01145 0.9,2.12464 2,2.47377 1.1,0.34913 2,1.05445 2,1.56739 0,0.51293 0.25532,0.93261 0.56739,0.93261 0.31206,0 0.25141,-1.0125 -0.13478,-2.25 z m 5.56739,1.25 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 5.98469,-0.75 c -0.008,-0.9625 -0.45153,-2.425 -0.98469,-3.25 -0.83822,-1.29705 -0.97145,-1.27429 -0.98469,0.16821 -0.008,0.91752 -0.28845,2.38002 -0.6223,3.25 -0.39831,1.03799 -0.0545,1.58179 1,1.58179 0.88385,0 1.6001,-0.7875 1.59168,-1.75 z m -19.48469,-0.25 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 338.16228,-2.25 c -0.27741,-0.6875 -0.50439,-0.125 -0.50439,1.25 0,1.375 0.22698,1.9375 0.50439,1.25 0.27741,-0.6875 0.27741,-1.8125 0,-2.5 z m 44.83772,2.25 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 44.71667,-2.18333 c -1.52752,-1.52752 -2.65464,-0.40039 -1.80743,1.80742 0.50024,1.30358 0.93392,1.43275 1.82354,0.54313 0.88963,-0.88963 0.88579,-1.44865 -0.0161,-2.35055 z m -434.87159,0.6402 c -0.32569,-0.84872 -0.80663,-1.32866 -1.06875,-1.06653 -0.26213,0.26213 -0.17998,0.95654 0.18255,1.54313 0.98605,1.59546 1.56238,1.28551 0.8862,-0.4766 z m 90.65492,0.97739 c 0,-0.31116 -0.45122,-1.40885 -1.0027,-2.43931 -0.674,-1.25938 -0.66866,-2.08003 0.0163,-2.50336 0.56046,-0.34638 0.72495,-1.10559 0.36554,-1.68712 -0.35941,-0.58154 -1.26675,0.40122 -2.01631,2.1839 -1.81478,4.31613 -1.72636,5.01163 0.63717,5.01163 1.1,0 2,-0.25458 2,-0.56574 z m -91.46735,-4.18327 c 1.50124,0.28698 2.57699,-0.0943 2.94079,-1.04237 0.3155,-0.82218 0.45054,-1.5891 0.3001,-1.70427 -2.97442,-2.2769 -4.33161,-2.20321 -5.99951,0.32575 -1.27142,1.92779 -1.76268,2.19989 -1.76744,0.97892 -0.004,-0.93004 0.44341,-1.9691 0.99341,-2.30902 1.89614,-1.17188 0.99378,-2.22147 -1.5,-1.74475 -2.05215,0.39229 -2.5,1.05664 -2.5,3.70851 0,2.38267 0.59056,3.49719 2.25,4.24624 1.88645,0.85153 2.30377,0.69837 2.58275,-0.94794 0.24901,-1.46937 0.92854,-1.84968 2.6999,-1.51107 z m 169.46735,2.74901 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 150,-3.05902 c 0,-2.08629 -1.47115,-2.6057 -2.5296,-0.89309 -0.90709,1.46771 0.30138,4.21119 1.52254,3.45648 0.55388,-0.34232 1.00706,-1.49585 1.00706,-2.56339 z m -282,0.61804 c 0,-1.59263 -1.81436,-3.07799 -2.69007,-2.20228 -0.82264,0.82264 0.46152,3.64326 1.65869,3.64326 0.56726,0 1.03138,-0.64844 1.03138,-1.44098 z m 303.5,-0.55902 c 0.33992,-0.55 -0.057,-1 -0.88197,-1 -0.825,0 -1.77811,0.45 -2.11803,1 -0.33992,0.55 0.057,1 0.88197,1 0.825,0 1.77811,-0.45 2.11803,-1 z m 5.5,-0.5 c 0.71755,-0.86459 0.81474,-1.5 0.22943,-1.5 -0.5585,0 -1.27447,0.675 -1.59106,1.5 -0.31658,0.825 -0.41982,1.5 -0.22943,1.5 0.19039,0 0.90637,-0.675 1.59106,-1.5 z m 3.38156,-0.0519 c 0.34149,-0.88992 0.17385,-1.29132 -0.39301,-0.94098 -0.5437,0.33602 -0.98855,1.0344 -0.98855,1.55194 0,1.43843 0.71677,1.12146 1.38156,-0.61096 z m 43.3683,-1.03153 c -0.95295,-0.95296 -2.86349,0.5906 -2.1533,1.7397 0.42212,0.683 0.98146,0.66575 1.69964,-0.0524 0.58876,-0.58876 0.79291,-1.34803 0.45366,-1.68727 z m -67.69033,-1.79285 c 1.56564,-2.65357 2.8428,-3.51235 5.96627,-4.01182 4.49408,-0.71863 5.38907,-3.05855 1.29933,-3.39702 -1.47119,-0.12176 -3.41912,-0.89491 -4.32874,-1.71811 -2.23533,-2.02294 -3.25422,-1.88443 -2.54626,0.34614 0.34345,1.08211 -0.24795,2.90168 -1.43261,4.40773 -1.10964,1.41067 -2.01752,3.19138 -2.01752,3.95713 0,0.76575 -0.54,1.93227 -1.2,2.59227 -0.93333,0.93333 -0.81473,1.2 0.53373,1.2 0.95354,0 2.63015,-1.51934 3.7258,-3.37632 z m 7.94047,0.87628 c 1.01957,-1.22851 0.95124,-1.5 -0.37756,-1.5 -0.89234,0 -1.62244,0.675 -1.62244,1.5 0,0.825 0.1699,1.5 0.37756,1.5 0.20765,0 0.93775,-0.675 1.62244,-1.5 z m -134.5,-1.25789 c 1.1,-0.29203 2.60206,-1.00391 3.33791,-1.58195 1.07273,-0.84266 0.92385,-1.20415 -0.75111,-1.82375 -1.14897,-0.42503 -2.81546,-0.49403 -3.70331,-0.15333 -1.28315,0.49239 -1.47423,0.17817 -0.9315,-1.53181 0.40769,-1.28451 0.25273,-2.15127 -0.3846,-2.15127 -1.04122,0 -1.45218,1.30255 -1.15935,3.67459 0.0797,0.64603 -0.31693,1.46009 -0.88152,1.80902 -0.56459,0.34893 -1.02652,1.33101 -1.02652,2.1824 0,1.08204 0.52673,1.33112 1.75,0.82753 0.9625,-0.39625 2.65,-0.95939 3.75,-1.25143 z m 131.27083,0.57039 c -0.61807,-1.85422 -2.77083,-2.16176 -2.77083,-0.39583 0,0.87083 0.7125,1.58333 1.58333,1.58333 0.87084,0 1.40521,-0.53438 1.1875,-1.1875 z m -162.27083,-0.8125 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z M 416.26697,606.0905 c -0.98762,-0.98026 -1.10248,-0.8654 -0.5598,0.5598 0.37553,0.98622 0.93469,1.54122 1.24258,1.23333 0.30789,-0.30789 6.4e-4,-1.11479 -0.68278,-1.79313 z m 18.31492,-0.9261 c 1.52687,-3.63135 0.42428,-7.39846 -2.43066,-8.30458 -0.92847,-0.29468 -2.278,-1.63798 -2.99895,-2.98509 -1.36448,-2.54954 -3.0094,-2.49462 -3.0094,0.10047 0,0.825 0.4176,1.24191 0.928,0.92647 1.26638,-0.78267 2.35397,2.99172 1.572,5.4555 -0.49094,1.54682 -0.1797,2 1.3736,2 1.1046,0 2.28648,0.45 2.6264,1 0.33992,0.55 0.14148,1 -0.44098,1 -0.58246,0 -1.05902,0.9 -1.05902,2 0,3.05435 1.93548,2.38306 3.43901,-1.19277 z m 6.56099,2.19277 c 0,-0.55 -0.70156,-1 -1.55902,-1 -0.85746,0 -1.2809,0.45 -0.94098,1 0.33992,0.55 1.04148,1 1.55902,1 0.51754,0 0.94098,-0.45 0.94098,-1 z m 64.65497,-3.36394 c -1.38301,-2.66575 -1.41213,-2.67268 -1.98742,-0.47276 -0.65353,2.49908 1.15802,5.41113 2.51934,4.04981 0.49554,-0.49554 0.26602,-2.03902 -0.53192,-3.57705 z m 77.34503,0.24591 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m 123,-1.48896 c 0,-1.69637 -0.21492,-1.70784 -3.54769,-0.18933 -2.33954,1.06597 -2.43073,1.27896 -0.79705,1.86162 2.3828,0.84983 4.34474,0.0947 4.34474,-1.67229 z m -254,-0.89301 c 0,-0.76008 -0.45,-1.66008 -1,-2 -0.5694,-0.35191 -1,0.50929 -1,2 0,1.49071 0.4306,2.35191 1,2 0.55,-0.33992 1,-1.23992 1,-2 z m 281.49414,-6 c -0.29014,-1.65 -0.59502,-3.5625 -0.6775,-4.25 -0.17738,-1.47842 -1.81664,-1.70401 -1.81664,-0.25 0,0.55 -0.7875,1.01431 -1.75,1.0318 -1.58117,0.0287 -1.59632,0.14933 -0.15708,1.25 2.05987,1.57531 2.33064,7.7182 0.3402,7.7182 -1.51818,0 -1.89625,1.20354 -0.74099,2.3588 0.38067,0.38067 1.73555,-0.55683 3.01084,-2.08334 1.70252,-2.03789 2.17852,-3.5727 1.79117,-5.77546 z m -114.49414,5.5 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 81.32411,-0.40223 c 0.56462,-1.47138 -0.0818,-2.59777 -1.49078,-2.59777 -0.45833,0 -0.83333,0.9 -0.83333,2 0,2.29292 1.52327,2.68471 2.32411,0.59777 z m 8.31171,-3.05102 c -1.5753,-1.26718 -2.43413,-2.47109 -1.90851,-2.67536 1.28736,-0.50029 2.47683,-6.87139 1.28287,-6.87139 -1.45501,0 -3.07369,3.67092 -2.39665,5.43525 0.45571,1.18757 0.0474,1.51611 -1.64336,1.32244 -1.23734,-0.14173 -2.47321,0.37652 -2.74639,1.15166 -0.3494,0.99143 0.009,1.21531 1.20854,0.755 1.1723,-0.44986 2.50867,0.3005 4.27611,2.40098 1.90643,2.26567 2.85787,2.762 3.68123,1.92037 0.81874,-0.83691 0.35815,-1.74004 -1.75384,-3.43895 z m 48.36418,1.83081 c 0,-2.16959 -0.24876,-2.41599 -1.44056,-1.42689 -0.79231,0.65756 -1.19416,1.83766 -0.89301,2.62244 0.90132,2.34882 2.33357,1.61504 2.33357,-1.19555 z m -246.06616,0.65785 c 1.77057,-0.94758 1.83737,-2.15415 0.48643,-8.78541 -0.61837,-3.03534 -2.23274,-2.84536 -3.03657,0.35733 -0.43319,1.726 -0.18612,2.9039 0.73095,3.48469 1.10733,0.70128 1.04121,0.88043 -0.32947,0.89267 -0.94315,0.008 -2.17899,0.88263 -2.74632,1.94269 -0.81994,1.53208 -0.67333,2.02104 0.71482,2.384 0.96048,0.25114 1.8884,0.50882 2.06206,0.57262 0.17366,0.0638 1.1268,-0.31807 2.1181,-0.84859 z m 216.38997,-0.43687 c 0.31645,-0.82465 -0.2323,-1.60285 -1.33326,-1.89076 -1.61325,-0.42187 -1.70836,-0.22878 -0.69025,1.40146 1.41172,2.26053 1.34959,2.24551 2.02351,0.4893 z m -318.55387,-3.67555 c 0.4757,-6.03203 1.23929,-7.98728 3.50998,-8.98766 2.05499,-0.90536 2.01559,-0.94963 -0.52992,-0.59538 -1.84069,0.25616 -2.75,-0.0674 -2.75,-0.97862 0,-0.74873 0.3375,-1.36484 0.75,-1.36913 0.91464,-0.01 3.25,-4.86631 3.25,-6.75895 0,-0.91295 -0.6653,-1.15687 -2,-0.73325 -1.51261,0.48008 -2,0.1797 -2,-1.23261 0,-1.02707 -0.54,-2.40739 -1.2,-3.06739 -0.93333,-0.93333 -0.93333,-1.2 0,-1.2 0.8,0 1.2,-2 1.2,-6 0,-4.12517 0.39059,-6.00478 1.25,-6.01531 0.93333,-0.0114 0.91117,-0.23009 -0.0875,-0.86309 -1.94375,-1.23206 -1.01545,-5.39632 1.479,-6.63469 1.90022,-0.94337 1.98472,-1.27758 0.75,-2.96617 -1.22326,-1.67292 -1.3915,-1.69853 -1.3915,-0.21187 0,0.93012 -0.37704,1.69113 -0.83787,1.69113 -1.21016,0 -1.36493,-8.75663 -0.16784,-9.49647 0.55314,-0.34186 0.97018,-1.60751 0.92676,-2.81255 -0.0434,-1.20504 -0.30685,-1.62568 -0.58541,-0.93475 -0.27855,0.69093 -0.91887,1.00135 -1.42292,0.68983 -0.50406,-0.31153 -1.38306,0.66083 -1.95335,2.1608 -0.78,2.05155 -0.71759,2.94448 0.25188,3.60423 0.98582,0.67088 0.75987,1.24793 -0.96125,2.45494 -1.80109,1.2631 -2.25,2.53453 -2.25,6.37261 0,2.92464 0.48753,4.97345 1.25,5.25303 1,0.36666 1,0.72333 0,1.78333 -0.76484,0.81073 -1.25,4.15833 -1.25,8.625 0,5.13123 0.37137,7.32345 1.25,7.37895 1,0.0632 1,0.17982 0,0.58333 -2.03969,0.82303 -1.56399,4.37258 0.5,3.73083 1.66667,-0.51821 1.66667,-0.49054 0,0.58107 -1.45049,0.93263 -1.75,2.64275 -1.75,9.99218 0,6.16024 0.38157,9.0196 1.25,9.36697 2.31975,0.9279 3.24881,0.0278 3.51994,-3.41034 z m 312.38073,2.82768 c -0.83115,-0.83115 -0.69641,-1.59514 0.51797,-2.93702 1.53688,-1.69823 1.50419,-1.81365 -0.51365,-1.81365 -1.48832,0 -2.15499,0.61872 -2.15499,2 0,1.51144 -0.67177,2.00374 -2.75,2.01531 -3.80284,0.0212 -1.07627,1.65684 2.95282,1.77139 2.27231,0.0646 2.77899,-0.20489 1.94785,-1.03603 z m 84.04382,-1.95618 c -1.26705,-1.26705 -3.19449,-0.18117 -3.19449,1.79971 0,1.19136 0.40659,1.25857 2.10736,0.34834 1.43276,-0.76679 1.78077,-1.45441 1.08713,-2.14805 z m -367.51138,0.018 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z M 691.9707,597.0127 c 0.30042,-1.55997 0.0508,-1.66095 -1.73852,-0.70333 -2.52927,1.35362 -2.77118,3.32576 -0.35078,2.85963 0.95618,-0.18414 1.89637,-1.15448 2.0893,-2.1563 z m 53.98362,0.3055 c 2.83672,-2.6428 2.77382,-3.96104 -0.189,-3.96104 -2.88953,0 -4.88181,2.16052 -4.0327,4.37325 0.81596,2.12638 1.57657,2.05211 4.2217,-0.41221 z m -294.15651,-3.63943 c -0.28703,-0.28703 -1.02366,-0.21175 -1.63696,0.16729 -0.8004,0.49468 -0.74862,1.1313 0.18347,2.25586 1.16994,1.41152 1.33208,1.39495 1.63696,-0.16729 0.18612,-0.9537 0.10356,-1.96884 -0.18347,-2.25586 z m 260.34507,1.6784 c 1.21296,-0.78387 1.06944,-0.9723 -0.75,-0.98469 -1.2375,-0.008 -2.25,0.43469 -2.25,0.98469 0,1.25292 1.06124,1.25292 3,0 z m 28.45729,-1.0691 c -0.74259,-1.20154 -3.45729,-1.21272 -3.45729,-0.0142 0,1.08371 2.17036,2.0002 3.26631,1.37929 0.42147,-0.23879 0.50742,-0.85306 0.19098,-1.36506 z m 74.95725,-3.1809 c 0.73836,-0.51017 0.6058,-1.06488 -0.41454,-1.73469 -2.49951,-1.64082 -3.00132,-1.17871 -2.96959,2.73469 0.0269,3.31092 0.1632,3.51582 1.16454,1.75 0.62377,-1.1 1.62258,-2.3375 2.21959,-2.75 z m -367.42985,1 c -0.012,-1.75671 -0.21673,-1.9316 -0.93402,-0.79775 -0.50529,0.79874 -0.69684,1.81124 -0.42567,2.25 0.86737,1.40343 1.37543,0.86078 1.35969,-1.45225 z m 243.01531,-3.56884 c 0,-0.55185 1.35,-2.13932 3,-3.52771 1.65,-1.38838 3,-3.00338 3,-3.58889 0,-0.58551 0.87344,-1.06456 1.94098,-1.06456 2.01036,0 3.69329,-1.69906 2.68332,-2.70903 -0.31678,-0.31679 -1.26184,-0.007 -2.10013,0.68897 -1.04232,0.86505 -1.52417,0.9101 -1.52417,0.1425 0,-0.61734 -0.675,-1.12244 -1.5,-1.12244 -0.825,0 -1.5,0.54 -1.5,1.2 0,0.93333 -0.26667,0.93333 -1.2,0 -0.66,-0.66 -1.50541,-1.2 -1.87868,-1.2 -0.90779,0 -2.78645,4.83804 -3.18888,8.21219 -0.17792,1.4917 -0.6405,3.0292 -1.02796,3.41666 -0.38746,0.38747 -0.70448,1.81517 -0.70448,3.17268 v 2.46819 l 2,-2.54259 c 1.1,-1.39842 2,-2.99411 2,-3.54597 z m 65,4.92583 c 0,-0.49116 -0.675,-1.15203 -1.5,-1.46862 -0.91371,-0.35062 -1.5,-0.002 -1.5,0.89301 0,0.80774 0.675,1.46862 1.5,1.46862 0.825,0 1.5,-0.40186 1.5,-0.89301 z m -333,-1.66601 c 0,-0.85746 -0.45734,-1.27636 -1.01631,-0.9309 -0.55897,0.34546 -0.75742,1.04702 -0.44098,1.55902 0.85723,1.38704 1.45729,1.12841 1.45729,-0.62812 z m 192.5,-0.44098 c -0.33992,-0.55 -1.06803,-1 -1.61803,-1 -0.55,0 -0.72189,0.45 -0.38197,1 0.33992,0.55 1.06803,1 1.61803,1 0.55,0 0.72189,-0.45 0.38197,-1 z m 100,-2.43036 c 0,-1.59664 -0.5625,-3.09047 -1.25,-3.31964 -0.78495,-0.26165 -1.25,0.54444 -1.25,2.16667 0,1.78781 -0.5389,2.58805 -1.75,2.59864 -1.49796,0.0131 -1.53397,0.15695 -0.25,0.99875 2.59466,1.70112 4.5,0.66613 4.5,-2.44442 z m 34.56278,1.87354 c 1.68636,-1.52613 1.57984,-5.44318 -0.14803,-5.44318 -0.46859,0 -0.62062,0.6029 -0.33786,1.33979 0.28277,0.73688 -0.18135,1.91698 -1.03138,2.62244 -1.58132,1.31238 -2.07787,3.03777 -0.87425,3.03777 0.36919,0 1.44538,-0.70057 2.39152,-1.55682 z m -30.47438,-3.18812 c -1.07549,-1.07549 -1.64645,0.43075 -0.89148,2.35181 0.7082,1.80207 0.76169,1.80519 1.11193,0.0649 0.20237,-1.00555 0.10317,-2.09305 -0.22045,-2.41667 z m 88.4116,2.74494 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m -292.00049,-2.99931 c 2.32358,-3.26316 1.97581,-7.31218 -0.54496,-6.34488 -0.79368,0.30457 -1.17559,0.98655 -0.84867,1.51551 0.32692,0.52896 -0.18081,1.5286 -1.12829,2.22141 -1.18522,0.86665 -1.50743,1.93788 -1.03275,3.43347 0.88355,2.78383 1.00461,2.75572 3.55467,-0.82551 z m 4.00049,0.89232 c 0,-0.49115 -0.675,-0.89301 -1.5,-0.89301 -0.825,0 -1.5,0.66088 -1.5,1.46862 0,0.89459 0.58629,1.24363 1.5,0.89301 0.825,-0.31659 1.5,-0.97746 1.5,-1.46862 z m 161.41821,1.5 c 2.38312,-0.91449 1.89944,-3.09647 -0.83875,-3.78371 -2.91115,-0.73065 -5.57946,0.14501 -5.57946,1.83102 0,2.45382 2.8515,3.32137 6.41821,1.95269 z m 61.61503,-1.90986 c 2.73172,-1.38426 5.00376,-2.84676 5.04899,-3.25 0.0452,-0.40323 0.28049,-1.93234 0.52281,-3.39801 0.32715,-1.9788 0.0459,-2.60694 -1.09235,-2.43988 -1.72483,0.25315 -3.94856,2.21732 -4.13769,3.65474 -0.0688,0.5225 -0.19622,1.5125 -0.28327,2.2 -0.0925,0.73067 -0.9381,0.31521 -2.03529,-1 -2.31535,-2.77542 -2.68136,-2.79229 -3.37092,-0.15542 -0.44385,1.69727 -1.08246,1.9846 -3.36663,1.51474 -2.23573,-0.45989 -3.19058,-0.0657 -4.61557,1.90542 -1.91726,2.65204 -0.79458,3.50508 1.29668,0.98526 1.68929,-2.03547 2.74305,-1.88494 3.5,0.5 0.83347,2.62604 2.53435,2.52302 8.53324,-0.51685 z m 79.96676,-0.51833 c 0,-0.53065 -0.675,-0.96482 -1.5,-0.96482 -0.825,0 -1.5,0.1882 -1.5,0.41821 0,0.23002 -0.29323,1.18237 -0.65163,2.11634 -0.56261,1.46615 -0.35771,1.54081 1.5,0.5466 1.1834,-0.63333 2.15163,-1.58568 2.15163,-2.11633 z m 24.18714,0.60561 c 1.81462,-1.59799 2.65396,-3.29243 2.58495,-5.2184 -0.0562,-1.56861 0.25266,-3.65894 0.68639,-4.64516 0.43373,-0.98622 0.56472,-2.017 0.29109,-2.29063 -0.76991,-0.76992 -7.74957,3.63875 -7.74957,4.89497 0,0.61251 -1.13962,2.03056 -2.5325,3.15123 -2.38839,1.92162 -2.44206,2.16559 -0.94329,4.28756 2.02058,2.86075 4.27034,2.80803 7.66293,-0.17957 z m -4.18714,-3.96344 c 0,-0.21616 0.69837,-0.661 1.55194,-0.98855 0.88992,-0.34149 1.29132,-0.17385 0.94098,0.39301 -0.58726,0.95021 -2.49292,1.40545 -2.49292,0.59554 z m -418.59312,3.54369 c 0.82018,-1.32709 -4.18776,-5.17199 -5.88711,-4.51989 -2.17458,0.83446 -1.88308,2.27698 0.34252,1.69497 1.28341,-0.33562 2.03141,0.15974 2.40638,1.59362 0.55472,2.12125 2.19132,2.76339 3.13821,1.2313 z m 27.59312,-0.15068 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 380,-0.46862 c 0,-0.89459 -0.58629,-1.24363 -1.5,-0.89301 -0.825,0.31659 -1.5,0.97746 -1.5,1.46862 0,0.49115 0.675,0.89301 1.5,0.89301 0.825,0 1.5,-0.66088 1.5,-1.46862 z m -389.78849,-3.51914 c 0.48967,-3.3363 -0.28947,-3.82816 -2.27476,-1.43602 -1.08413,1.30629 -1.06229,1.73178 0.12755,2.48468 1.08414,0.68602 1.11516,0.91222 0.12668,0.92379 -0.71996,0.008 -1.02636,0.47265 -0.6809,1.03162 1.00089,1.61947 2.22217,0.26137 2.70143,-3.00407 z m 363.7356,-0.8632 c -1.63602,-0.54534 -3.30042,1.47027 -2.40733,2.91532 0.56846,0.91979 1.12124,0.75213 2.14747,-0.65133 0.96106,-1.31433 1.04021,-2.00388 0.25986,-2.26399 z m -97.44711,1.85096 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m 20.95696,-2.06963 c -0.58703,-0.94984 -3.45696,-0.11138 -3.45696,1.00995 0,0.39949 0.2961,1.02244 0.65799,1.38434 0.8824,0.88239 3.46089,-1.32329 2.79897,-2.39429 z m -281.45696,1.62865 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 75,-2.17705 c 0,-0.825 -0.45,-1.22189 -1,-0.88197 -0.55,0.33992 -1,1.29303 -1,2.11803 0,0.825 0.45,1.22189 1,0.88197 0.55,-0.33992 1,-1.29303 1,-2.11803 z m 201,0.55901 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m -294.6981,-1.56598 c 0.98531,-1.30625 1.35727,-2.375 0.82657,-2.375 -0.53069,0 -1.6767,-0.27314 -2.54668,-0.60699 -1.01917,-0.39109 -1.58179,-0.0608 -1.58179,0.92857 0,0.84456 -0.65089,2.18646 -1.44643,2.98199 -1.2619,1.26191 -1.16556,1.44643 0.75522,1.44643 1.21091,0 3.00781,-1.06875 3.99311,-2.375 z m 286.4981,1.425 c 0.66,-0.66 1.2,-2.05878 1.2,-3.10841 0,-1.53629 -0.48747,-1.78606 -2.5,-1.28095 -1.44165,0.36183 -2.5,0.19606 -2.5,-0.39159 0,-0.56048 -0.45,-1.01905 -1,-1.01905 -1.57224,0 -1.16741,2.72178 0.5,3.36163 0.825,0.31658 1.5,1.26472 1.5,2.10699 0,1.83681 1.15757,1.97381 2.8,0.33138 z m 111.59917,-0.10261 c 1.47373,-1.07762 1.54791,-1.49642 0.42946,-2.42465 -1.05207,-0.87314 -1.60578,-0.5842 -2.49621,1.30262 -1.27645,2.70477 -0.60001,3.07201 2.06675,1.12203 z m -119.10102,-0.32887 c 0.53343,-0.53343 -0.69066,-3.86799 -1.94394,-5.29552 -0.41938,-0.47769 -3.27273,3.04661 -3.32241,4.10368 -0.0268,0.57127 1.43367,1.18673 4.05153,1.70732 0.32084,0.0638 0.8675,-0.16817 1.21482,-0.51548 z M 435.85619,577.3097 c 0.23032,-3.28611 -2.01014,-5.05572 -3.94774,-3.11812 -0.8,0.8 -0.64531,1.27449 0.56721,1.73978 0.91697,0.35187 1.66722,1.49162 1.66722,2.53278 0,3.12691 1.48329,2.12746 1.71331,-1.15444 z m 79.28669,1.48843 c 0,-0.85746 -0.45734,-1.27636 -1.01631,-0.9309 -0.55897,0.34546 -0.75742,1.04702 -0.44098,1.55902 0.85723,1.38704 1.45729,1.12841 1.45729,-0.62812 z m -63.4672,-0.49405 c 0.35796,-0.57919 -0.19816,-1.81669 -1.23581,-2.75 -1.06036,-0.95373 -1.70662,-2.57287 -1.47559,-3.69693 0.3982,-1.93747 0.34828,-1.94351 -1.5967,-0.19318 -2.19041,1.97119 -1.93418,5.69318 0.39193,5.69318 0.76085,0 1.38337,0.45 1.38337,1 0,1.31914 1.70683,1.28338 2.5328,-0.0531 z m 273.6403,-0.0396 c 1.35261,-0.7239 2.37701,-0.75725 3.03544,-0.0988 1.96317,1.96317 8.72017,-1.1965 8.77615,-4.10385 0.0207,-1.07375 -7.12673,0.27238 -8.89731,1.6757 -1.05411,0.83546 -1.5172,0.80894 -1.8247,-0.1045 -0.30688,-0.91159 -1.02907,-0.81984 -2.8288,0.35939 -1.32919,0.87092 -2.16901,1.98427 -1.86628,2.4741 0.708,1.14557 1.13188,1.12182 3.6055,-0.20202 z m -308.1731,-0.90733 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 103.26113,-3 c 1.91719,-4.42533 4.15071,-5.48908 3.14951,-1.5 -0.48679,1.93953 -0.24257,2.5 1.08936,2.5 1.27377,0 1.57743,-0.58063 1.17668,-2.25 -0.29707,-1.2375 -0.86492,-4.03871 -1.26189,-6.22491 -0.8732,-4.80895 -3.13683,-7.59288 -4.44834,-5.47081 -0.48515,0.78499 -0.44076,1.87421 0.10308,2.5295 0.63127,0.76063 0.44606,1.57335 -0.54619,2.39685 -0.82572,0.68529 -1.23342,1.67946 -0.90598,2.20927 0.32744,0.5298 -0.35251,1.84634 -1.51101,2.92564 -2.51024,2.33865 -2.65291,3.46075 -0.54297,4.27041 0.85986,0.32996 1.2833,1.0531 0.94099,1.60699 -0.34232,0.55388 -0.252,1.00706 0.20071,1.00706 0.45272,0 1.60294,-1.8 2.55605,-4 z m 294.73887,2.5 c 0,-0.825 -0.72314,-1.5 -1.60699,-1.5 -1.05528,0 -1.39836,-0.54367 -0.99932,-1.58356 0.79723,-2.07755 -1.40009,-1.36006 -2.82225,0.92155 -0.81327,1.30475 -0.71,1.94935 0.42856,2.67516 2.2767,1.45136 5,1.17186 5,-0.51315 z m 16.5,0.5 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -130.75014,-2.58347 c -0.95295,-0.95296 -2.86349,0.5906 -2.1533,1.7397 0.42212,0.683 0.98146,0.66575 1.69964,-0.0524 0.58876,-0.58876 0.79291,-1.34803 0.45366,-1.68727 z m 119.75014,1.58347 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m -137.17013,-1.41724 c 0.61925,-1.61373 -1.95396,-3.00001 -2.85686,-1.53909 -0.68044,1.10098 0.24777,2.95633 1.47902,2.95633 0.4587,0 1.07872,-0.63776 1.37784,-1.41724 z m -259.32987,-0.58276 c 0,-0.55 -0.46037,-1 -1.02305,-1 -0.56268,0 -0.28593,-1.125 0.61501,-2.5 1.56925,-2.39498 1.54921,-2.5 -0.47695,-2.5 -2.16378,0 -2.76217,2.14996 -1.50802,5.41821 0.66951,1.74472 2.39301,2.16374 2.39301,0.58179 z m 402,0 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m -409.44512,-6.31251 c -0.43564,-2.79163 -1.47038,-4.7864 -3.10417,-5.98417 -2.10353,-1.54216 -2.45071,-1.57758 -2.45071,-0.25 0,0.85067 0.675,1.54668 1.5,1.54668 0.825,0 1.5,0.68912 1.5,1.53138 0,0.84227 -0.675,1.79041 -1.5,2.10699 -2.45768,0.9431 -1.78958,4.25085 1,4.95099 1.375,0.3451 2.53553,1.14117 2.57895,1.76905 0.0472,0.68327 0.28981,0.61465 0.60417,-0.17092 0.28887,-0.72188 0.23116,-3.19688 -0.12824,-5.5 z m 421.68987,3.81251 c -0.50022,-2.61675 -1.67465,-3.23146 -2.77435,-1.45211 -0.92943,1.50385 0.22252,3.95211 1.85954,3.95211 0.94634,0 1.23954,-0.80127 0.91481,-2.5 z m -97.04475,0.3 c -0.93333,-0.93333 -1.46667,-0.93333 -2.4,0 -0.93333,0.93333 -0.66667,1.2 1.2,1.2 1.86667,0 2.13333,-0.26667 1.2,-1.2 z m 68.7721,-0.26638 c 2.35299,-2.83518 0.48402,-3.65825 -2.49313,-1.09794 -2.72866,2.34662 -2.8002,2.56198 -0.85141,2.5631 1.17015,6.7e-4 2.67519,-0.65865 3.34454,-1.46516 z m -368.61766,-3.05234 c -0.84388,-2.19911 -5.25231,-3.98341 -6.57465,-2.66107 -0.90639,0.90639 -0.90171,1.17979 0.0202,1.17979 0.66,0 1.2,0.6895 1.2,1.53222 0,1.87854 4.21585,3.66262 5.15748,2.18257 0.36161,-0.56838 0.45025,-1.57346 0.19696,-2.23351 z m 379.4142,2.26872 c -0.21891,-0.6875 -1.38141,-1.69421 -2.58333,-2.23713 -3.3594,-1.51748 -2.60755,-2.51287 1.89802,-2.51287 2.74347,0 3.95139,-0.39585 3.68121,-1.20638 -0.54532,-1.63596 -9.42138,-2.15788 -10.37788,-0.61023 -0.40742,0.65922 -0.21186,1.37488 0.43457,1.59035 0.69363,0.23121 0.93503,1.34923 0.58899,2.72793 -0.47218,1.88132 -0.13113,2.42277 1.75172,2.78106 4.27188,0.81289 5.00807,0.72776 4.6067,-0.53273 z m -110.55599,-1 c 1.20203,-0.6875 2.65842,-1.60285 3.23643,-2.03411 0.578,-0.43125 1.90717,-1.37549 2.9537,-2.09829 2.3285,-1.60823 1.20433,-3.94506 -1.48694,-3.09089 -1.34763,0.42772 -1.91584,0.12936 -1.91584,-1.00601 0,-1.43681 -0.27499,-1.41675 -2.50397,0.18262 -1.54828,1.11094 -2.34124,2.48795 -2.07762,3.60785 0.23449,0.99615 -0.21373,2.05679 -0.99603,2.35699 -1.61824,0.62098 -1.95086,3.33184 -0.40881,3.33184 0.55746,0 1.99705,-0.5625 3.19908,-1.25 z m -16.21265,-0.75 c 0,-0.55 0.64844,-1 1.44098,-1 2.04638,0 2.99764,-1.96211 1.6179,-3.33713 -0.88755,-0.88452 -1.62735,-0.56445 -3.09064,1.33713 -2.1572,2.80336 -2.44686,4 -0.96824,4 0.55,0 1,-0.45 1,-1 z m 35.89562,-0.8929 c 3.59797,-1.91687 3.40555,-2.4049 -1.39562,-3.5396 -2.41987,-0.57192 -2.75828,-0.46329 -1.75,0.56174 1.80823,1.83826 1.53848,2.87076 -0.75,2.87076 -1.1,0 -2,0.45 -2,1 0,1.46636 2.05008,1.15587 5.89562,-0.8929 z m -42.89562,-0.1071 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m -9,-1.5 c 2.65388,-1.5171 1.95737,-1.86325 -1.75,-0.86971 -1.2375,0.33163 -2.25,1.00049 -2.25,1.48634 0,1.22151 1.07419,1.05592 4,-0.61663 z m 24.25,-0.58002 c 6.66761,-6.16388 8.75,-8.44628 8.75,-9.59046 0,-1.32347 -2.4529,-0.82984 -4.76233,0.95839 -0.94926,0.73503 -0.9809,1.31655 -0.12756,2.34477 0.89634,1.08001 0.70848,1.36732 -0.89405,1.36732 -1.53649,0 -1.9019,-0.48533 -1.50581,-2 0.60354,-2.30794 -0.92296,-2.65355 -2.63086,-0.59565 -0.66635,0.8029 -0.88511,2.52155 -0.51078,4.01298 0.3863,1.53914 0.14876,3.2183 -0.57939,4.09566 -1.82259,2.19609 -0.33383,1.80558 2.26078,-0.59301 z m 20.39421,-1.42069 c 0.15901,-2.75564 -0.80865,-3.211 -2.49797,-1.1755 -0.80229,0.9667 -0.78137,1.64108 0.0775,2.5 1.73934,1.73934 2.26008,1.45439 2.42042,-1.3245 z m 83.40861,7.1e-4 c -0.0784,-1.48429 -2.31562,-1.2116 -2.83465,0.3455 -0.28038,0.84112 0.17677,1.21599 1.21948,1 0.9174,-0.19002 1.64422,-0.7955 1.61517,-1.3455 z m -119.05282,-0.5 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 169.26179,-2.75 c -0.1503,-1.41964 0.30351,-2.25 1.22968,-2.25 0.80733,0 2.38617,-1.8 3.50853,-4 2.24319,-4.39703 1.75172,-4.76289 -3.73362,-2.77936 -2.82003,1.01974 -3.5287,0.97859 -4.30569,-0.25 -1.20216,-1.90088 -1.2195,-3.24863 -0.0323,-2.51493 0.51058,0.31556 2.35576,-2.24538 4.1004,-5.69098 4.08972,-8.07709 5.0427,-9.26718 6.07862,-7.59102 0.43114,0.6976 0.92086,1.0564 1.08827,0.79733 0.1674,-0.25907 1.42937,-1.76443 2.80437,-3.34525 2.43858,-2.8036 2.44585,-2.85758 0.29558,-2.19708 -1.38204,0.42452 -3.1657,0.0473 -4.78121,-1.01125 -1.41723,-0.92861 -2.79225,-1.47292 -3.05558,-1.20958 -0.70431,0.70425 -8.45884,15.80152 -8.45884,16.46838 0,0.31274 0.63494,0.0417 1.41097,-0.60237 0.79808,-0.66235 1.65503,-0.77612 1.97282,-0.26193 0.76848,1.24344 -0.34183,2.18804 -2.5719,2.18804 -1.02012,0 -2.37079,1.13256 -3.00149,2.51679 -0.9631,2.11376 -0.85513,2.73002 0.67421,3.8483 1.04656,0.76526 1.50548,1.84193 1.07914,2.53176 -0.54925,0.88871 -1.09069,0.91072 -2.08587,0.0848 -1.02316,-0.84915 -1.83754,-0.62199 -3.41097,0.95144 -1.1368,1.1368 -2.06691,2.38191 -2.06691,2.76691 0,0.385 0.48696,0.21304 1.08213,-0.38213 1.62489,-1.62489 6.91787,0.64582 6.91787,2.96779 0,1.42515 0.6283,1.77489 2.75,1.53076 2.18012,-0.25085 2.70064,-0.78269 2.51179,-2.56642 z m -163.76179,0.75 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -157.5,-1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -9,-1.87756 c 0,-1.26051 -2.93548,-3.5203 -3.6477,-2.80807 -1.02406,1.02406 0.50424,3.68563 2.11632,3.68563 0.84226,0 1.53138,-0.3949 1.53138,-0.87756 z m -88,-2.24047 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m 11.6707,-1.54461 c -0.2957,-0.2957 -1.06562,-0.21132 -1.71093,0.1875 -0.86994,0.53766 -0.82251,0.94308 0.18347,1.56809 1.33344,0.82847 2.62596,-0.65708 1.52746,-1.75559 z m 240.92108,-1.07892 c -0.8335,-0.8335 -4.63279,1.86618 -4.02051,2.85688 0.38674,0.62576 1.3585,0.35322 2.53414,-0.71071 1.04877,-0.94913 1.71763,-1.9149 1.48637,-2.14617 z m -154.09178,1.74156 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m -110.51531,-0.91667 c -0.0831,-3.16698 -5.17668,-4.04045 -5.76443,-0.98851 -0.22165,1.15092 0.51169,1.57185 2.73851,1.57185 1.67268,0 3.03434,-0.2625 3.02592,-0.58334 z m 100.34359,-1.63795 c -0.0944,-1.01166 0.58055,-2.41141 1.5,-3.11057 1.48638,-1.13026 1.37885,-1.27473 -0.96987,-1.30301 -2.00933,-0.0242 -2.79454,0.57758 -3.2806,2.51419 -0.35145,1.40029 -0.35899,2.99905 -0.0168,3.55279 0.97366,1.57541 2.95798,0.38979 2.76723,-1.6534 z m 69.17172,-0.30993 c 0,-2.02506 -1.71834,-1.69226 -3.26135,0.63165 -1.44979,2.1835 -1.41742,2.23458 0.87803,1.38544 1.31082,-0.4849 2.38332,-1.3926 2.38332,-2.01709 z m 246.5,1.86455 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -137,-2.05902 c 0,-0.51754 -0.675,-0.94098 -1.5,-0.94098 -1.54641,0 -1.9867,1.17996 -0.86052,2.30615 0.79893,0.79893 2.36052,-0.10419 2.36052,-1.36517 z m 107,0.61804 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -378.63837,-2.05902 c 0.31658,-0.825 0.18787,-1.5 -0.28603,-1.5 -0.47389,0 -1.12064,0.675 -1.43723,1.5 -0.31658,0.825 -0.18787,1.5 0.28603,1.5 0.47389,0 1.12064,-0.675 1.43723,-1.5 z m 395.28258,-0.99929 c -0.0837,-1.44995 -0.75301,-2.49959 -1.59421,-2.5 -1.04184,-5.1e-4 -1.14478,-0.30593 -0.36567,-1.08504 1.34443,-1.34443 0.47406,-5.135 -1.06165,-4.62359 -1.671,0.55647 -1.63826,8.70792 0.035,8.70792 0.73829,0 1.34235,0.45 1.34235,1 0,0.55 0.4024,1 0.89421,1 0.49182,0 0.82932,-1.12468 0.75,-2.49929 z m 7.35579,2.05831 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -406,-2.16601 c 0,-0.21615 -0.675,-0.39301 -1.5,-0.39301 -0.825,0 -1.5,0.43588 -1.5,0.96862 0,0.53273 0.675,0.70959 1.5,0.39301 0.825,-0.31659 1.5,-0.75246 1.5,-0.96862 z m 266.41265,-2.14301 c -0.80567,-4.45634 -0.93884,-4.66087 -2.43325,-3.73727 -0.83075,0.51344 -0.84938,1.01729 -0.0665,1.80014 0.59789,0.59792 1.0871,2.12213 1.0871,3.38713 0,1.265 0.47039,2.3 1.04531,2.3 0.66178,0 0.79656,-1.37591 0.36734,-3.75 z m 11.08735,2.75 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 97.98922,-2.63154 c -1.42129,-1.03928 -1.54158,-1.60045 -0.58905,-2.74818 1.58311,-1.90752 -0.16946,-3.02049 -3.45701,-2.19537 -1.72696,0.43344 -2.44316,1.30458 -2.44316,2.9717 0,2.79069 1.56765,4.28254 5,4.75823 3.09313,0.42868 3.87793,-1.03971 1.48922,-2.78638 z m -121.98922,1.63154 c 0.35052,-0.56716 -0.48962,-1 -1.94098,-1 -1.40746,0 -2.55902,0.45 -2.55902,1 0,0.55 0.87344,1 1.94098,1 1.06754,0 2.2191,-0.45 2.55902,-1 z m 4,-1 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m 104.62207,-1.675 c -0.87155,-1.49877 -1.06669,-1.54197 -1.09166,-0.24167 -0.0323,1.68408 1.01919,3.2004 1.72792,2.49167 0.23375,-0.23375 -0.0526,-1.24625 -0.63626,-2.25 z m 31.27914,0.51515 c -0.31812,-0.51472 -1.41712,-0.80182 -2.44223,-0.638 -1.02511,0.16382 -2.54593,-0.60215 -3.3796,-1.70215 -1.69886,-2.24157 -2.16682,-0.46617 -0.6327,2.40037 0.68479,1.27955 1.78854,1.64534 3.9898,1.32226 1.67371,-0.24565 2.78284,-0.86777 2.46473,-1.38248 z m -273.40121,0.15985 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 238.09922,-1 c 1.53141,0 1.8851,-0.62271 1.70396,-3 -0.12573,-1.65 -0.58288,-3 -1.01589,-3 -0.71547,0 -1.15787,1.48811 -0.93768,3.15409 0.0476,0.35975 -0.57416,1.20235 -1.38158,1.87244 -0.80742,0.6701 -1.4325,1.72576 -1.38908,2.34591 0.0496,0.70849 0.26641,0.66298 0.58333,-0.12244 0.27741,-0.6875 1.37403,-1.25 2.43694,-1.25 z m 8.62995,0.39583 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m -43.04606,-3.58333 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m -315.68311,-0.75348 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 377,-1.05902 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m -387.5,-1 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 16.5,-1.11803 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m 225.45696,-0.9516 c -0.58703,-0.94984 -3.45696,-0.11138 -3.45696,1.00995 0,0.39949 0.2961,1.02244 0.65799,1.38434 0.8824,0.88239 3.46089,-1.32329 2.79897,-2.39429 z m 123.54304,2.06963 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 14.25,-1.06179 c 2.6125,-0.75616 4.75,-1.93022 4.75,-2.60902 0,-1.21017 -1.32085,-1.1464 -11.25,0.54319 -0.4125,0.0702 -0.75,1.07576 -0.75,2.23461 0,1.25917 0.50298,1.92573 1.25,1.65652 0.6875,-0.24776 3.3875,-1.06915 6,-1.8253 z m 21.875,-2.0452 c 0.0688,-0.49115 0.18125,-1.44222 0.25,-2.11348 0.0688,-0.67125 1.25,-1.78962 2.625,-2.48526 2.22453,-1.12542 2.03804,-1.81189 -0.37268,-1.3718 -0.47998,0.0876 -0.59409,-0.56668 -0.25359,-1.45402 0.81714,-2.12942 -1.17648,-5.75812 -2.81755,-5.12838 -1.19384,0.45812 -2.04319,-1.42711 -4.07237,-9.03904 -0.39669,-1.48811 -1.09457,-2.00389 -2.15879,-1.59551 -0.8767,0.33642 -1.9343,-0.0429 -2.38997,-0.8571 -1.25072,-2.2349 -7.71239,-1.15721 -9.07702,1.5139 -0.60066,1.17572 -1.98444,2.84856 -3.07507,3.71741 -1.32381,1.05462 -1.98296,2.78791 -1.98296,5.21435 0,2.61971 -0.50186,3.79391 -1.79728,4.20506 -1.20013,0.3809 -1.62654,1.22339 -1.28337,2.53565 0.60971,2.33153 2.11103,2.5708 2.91902,0.46521 0.31659,-0.825 1.44159,-1.5 2.5,-1.5 1.05842,0 2.17252,-0.64659 2.47577,-1.43686 0.30326,-0.79027 1.18914,-1.19212 1.96862,-0.89301 1.98945,0.76342 1.76893,2.13582 -0.31635,1.96876 -1.24489,-0.0997 -1.75131,0.63632 -1.79646,2.61111 -0.0736,3.21739 0.22989,3.33161 2.76236,1.03976 1.63056,-1.47563 2.01715,-1.50992 2.81824,-0.25 0.51064,0.80313 0.72229,2.02274 0.47033,2.71024 -0.25196,0.6875 0.20277,1.25 1.0105,1.25 1.34935,0 1.92485,-1.72386 1.56058,-4.67459 -0.2137,-1.73111 2.00921,-2.77975 2.88582,-1.36136 0.58757,0.95071 1.22563,0.92587 2.8882,-0.11243 1.17371,-0.73299 2.13402,-1.67447 2.13402,-2.09217 0,-1.65186 1.79896,-0.63625 2.30575,1.30172 0.36093,1.38023 -0.0135,2.23026 -1.13337,2.573 -0.91981,0.2815 -2.45988,0.93279 -3.42238,1.4473 -1.21733,0.65073 -1.75,0.56764 -1.75,-0.273 0,-0.89744 -0.29047,-0.918 -1.12858,-0.0799 -0.83811,0.83811 -0.43163,1.7745 1.57931,3.63818 2.51728,2.33294 5.38416,2.59882 5.67427,0.52625 z m -390.79159,-2.44824 c 2.32987,-3.10678 3.28928,-3.08422 4.0875,0.0961 0.6872,2.73804 2.81362,2.40738 2.35561,-0.36631 -0.19633,-1.18898 0.47772,-1.70326 2.32443,-1.77345 2.892,-0.10993 4.89905,-1.07883 4.89905,-2.365 0,-0.46521 -1.8,-0.6044 -4,-0.30931 -2.62633,0.35226 -4,0.14787 -4,-0.59516 0,-1.67463 -2.96978,-1.37398 -3.63837,0.36833 -0.31659,0.825 -1.76496,1.51107 -3.21862,1.5246 -2.02352,0.0188 -3.06252,0.86695 -4.43281,3.6184 l -1.78979,3.59379 2.78979,-0.67362 c 1.53439,-0.3705 3.61483,-1.77378 4.62321,-3.1184 z m 314.04497,0.80523 c -0.72455,-3.02019 -1.16498,-3.79931 -1.79008,-3.16667 -0.73504,0.74392 0.61773,5.91667 1.54733,5.91667 0.49636,0 0.6056,-1.2375 0.24275,-2.75 z m 37.60797,2 c -0.0804,-4.41821 -3.1159,-6.96075 -4.37936,-3.66821 -1.19001,3.10112 -0.6257,4.41821 1.89301,4.41821 1.375,0 2.49386,-0.3375 2.48635,-0.75 z m 43.51365,-0.25 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -417,-1 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 11.47104,0.0391 c 0.80907,-0.51167 1.18048,-1.22087 0.82536,-1.57599 -0.87435,-0.87435 -4.7964,0.43751 -4.7964,1.60432 0,1.18988 2.0681,1.17513 3.97104,-0.0283 z m -18.97104,-2.0391 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 13.66417,-0.56722 c 0.33077,-0.86197 0.0916,-2.07697 -0.53139,-2.7 -0.82633,-0.82633 -1.13278,-0.83028 -1.13278,-0.0146 0,0.61502 -0.27314,1.83002 -0.60699,2.7 -0.33443,0.87151 -0.0958,1.58179 0.53139,1.58179 0.6261,0 1.409,-0.70525 1.73977,-1.56722 z m 377.72902,-0.69434 c 0.56984,-0.90338 0.71725,-1.96134 0.32757,-2.35101 -0.95241,-0.95241 -4.82651,2.63244 -4.10554,3.799 0.76259,1.2339 2.50834,0.5648 3.77797,-1.44799 z m -231.24319,-0.23844 c 0,-0.5225 -0.48375,-1.11125 -1.075,-1.30833 -0.59125,-0.19709 -1.075,0.39166 -1.075,1.30833 0,0.91667 0.48375,1.50542 1.075,1.30833 0.59125,-0.19708 1.075,-0.78583 1.075,-1.30833 z m 7.87432,-0.5 c 1.0217,0 2.13576,-0.45 2.47568,-1 0.99934,-1.61697 -0.34376,-2.85362 -2.48975,-2.29243 -1.09326,0.2859 -1.76048,0.88756 -1.48269,1.33702 0.27778,0.44947 0.0477,1.09987 -0.51125,1.44533 -0.55897,0.34546 -0.98078,1.16406 -0.93736,1.8191 0.0569,0.85875 0.21965,0.84229 0.58333,-0.059 0.27741,-0.6875 1.34033,-1.25 2.36204,-1.25 z m 112.97568,1.16667 c 0,-1.30208 -1.18877,-2.16804 -2.15579,-1.57039 -1.03422,0.63919 -0.14245,2.40372 1.21481,2.40372 0.51754,0 0.94098,-0.375 0.94098,-0.83333 z m 92.26414,-1.98656 c 1.01178,-0.86928 1.52752,-2.26117 1.20932,-3.26373 -0.30515,-0.96144 -0.0865,-2.03749 0.48586,-2.39124 0.57238,-0.35375 1.02571,-1.17912 1.00741,-1.83416 -0.0183,-0.65504 -0.87793,-0.17848 -1.91029,1.05902 -1.03236,1.2375 -2.28139,2.25 -2.7756,2.25 -0.49422,0 -1.71656,0.59812 -2.71632,1.32917 -1.51519,1.10793 -1.62187,1.69515 -0.64096,3.528 1.19712,2.23684 2.07918,2.12501 5.34058,-0.67706 z m -412.33443,-4.93011 c 0.0387,-0.6875 -0.60471,-1.25 -1.42971,-1.25 -1.605,0 -1.9185,1.74584 -0.82513,4.5951 0.62625,1.63198 0.72924,1.61986 1.42971,-0.16821 0.41517,-1.05979 0.78648,-2.48939 0.82513,-3.17689 z m 426.57029,3.75 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m -388.5,-0.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 129.72201,-1.59937 c -0.16037,-2.12887 -3.72201,-6.11125 -3.72201,-4.16169 0,1.73071 2.23375,6.20204 3.09837,6.20204 0.42753,0 0.70817,-0.91816 0.62364,-2.04035 z M 681.684,527.42368 c -0.36254,-0.58659 -1.1377,-1.06653 -1.72258,-1.06653 -0.6631,0 -0.58723,0.57378 0.20152,1.52417 1.37154,1.6526 2.59733,1.2838 1.52106,-0.45764 z m -249.54112,-0.56653 c 0,-0.825 -0.42344,-1.5 -0.94098,-1.5 -1.26098,0 -2.1641,1.56159 -1.36517,2.36052 1.12619,1.12618 2.30615,0.68589 2.30615,-0.86052 z m -25,0.059 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 20,-2.559 c 0,-1.1 -0.17252,-2 -0.38337,-2 -0.21085,0 -0.61872,0.9 -0.90638,2 -0.28766,1.1 -0.11514,2 0.38337,2 0.49851,0 0.90638,-0.9 0.90638,-2 z m 440.2107,0.25 c 2.23038,-2.56672 3.06326,-6.93089 1.4415,-7.55322 -0.73346,-0.28146 -1.76884,-0.21587 -2.30085,0.14574 -1.77201,1.20447 -4.35135,5.57909 -4.35135,7.37999 0,2.30772 3.21454,2.32468 5.2107,0.0275 z m -497.18595,-5.8151 c 1.32453,-3.48378 1.22546,-5.43797 -0.27475,-5.41959 -2.83475,0.0347 -3.96809,1.71524 -3.27744,4.85977 0.83295,3.7924 2.23892,4.01397 3.55219,0.55982 z m 60.04099,1.52992 c 2.68095,-1.43481 2.41945,-2.96482 -0.50672,-2.96482 -2.63389,0 -4.05299,1.39172 -3.05902,3 0.77405,1.25244 1.16703,1.24857 3.56574,-0.0352 z m 7.18426,-0.35687 c 0.9625,-0.73064 1.75,-2.27683 1.75,-3.43597 0,-1.75255 -0.37126,-1.97019 -2.20415,-1.29216 -1.21229,0.44845 -2.52337,2.00895 -2.91352,3.46777 -0.79264,2.96379 0.49089,3.44415 3.36767,1.26036 z m 7.74337,-4.62805 c -1.76944,-5.36144 -3.03299,-6.01759 -2.43268,-1.26328 0.74945,5.93559 1.47322,7.64947 2.70862,6.41407 0.76084,-0.76084 0.681,-2.25123 -0.27594,-5.15079 z m 215.00663,4.5201 c 1.04007,-1.2532 0.89568,-1.5 -0.87756,-1.5 -1.16734,0 -2.12244,-0.45 -2.12244,-1 0,-0.55 -0.45,-1 -1,-1 -1.11717,0 -1.3707,3.29596 -0.33333,4.33333 1.11551,1.11552 3.01987,0.74929 4.33333,-0.83333 z m 215.59167,-3.24167 c -0.82313,-0.82313 -3.55308,2.99509 -2.89859,4.05409 0.28366,0.45895 1.18965,-0.12768 2.01333,-1.30364 0.82367,-1.17597 1.22204,-2.41367 0.88526,-2.75045 z m -89.77418,0.87563 c 0.95723,-0.60697 0.4787,-1.18285 -1.75,-2.10601 -1.68712,-0.69882 -3.06749,-1.891 -3.06749,-2.64927 0,-2.01029 -2.78671,-1.68976 -3.22825,0.37132 -0.87637,4.09083 4.17089,6.84099 8.04574,4.38396 z M 419.69629,515.1271 c -0.93688,-0.5243 -1.99413,-0.66256 -2.34945,-0.30724 -0.87994,0.87994 1.96767,2.54925 3.12671,1.83292 0.50939,-0.31482 0.15962,-1.00137 -0.77726,-1.52568 z m 378.44659,1.23005 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -389.27607,-5.6094 c -0.24072,-0.24072 -1.14274,-0.16712 -2.00448,0.16356 -1.40561,0.53939 -1.39461,0.80396 0.10687,2.57155 1.65877,1.95274 1.67663,1.95129 2.00448,-0.16357 0.18194,-1.17363 0.13385,-2.33082 -0.10687,-2.57154 z m 4.27607,3.6094 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 252.45854,-7.55503 c 1.06198,-2.54166 1.12502,-3.44096 0.24043,-3.42966 -2.35216,0.03 -3.94897,1.79748 -3.94897,4.37096 0,1.83274 -0.52828,2.61373 -1.76801,2.61373 -2.10176,0 -3.24058,2.34141 -1.82657,3.75542 1.32254,1.32254 5.40243,-2.76143 7.30312,-7.31045 z m 129.79146,5.8467 c -0.6875,-0.25209 -1.25,-0.89739 -1.25,-1.43402 0,-0.53663 0.45,-0.69757 1,-0.35765 0.55,0.33992 1,-0.0835 1,-0.94098 0,-1.94046 -0.3642,-1.93917 -4.14259,0.0147 -3.23394,1.67233 -3.19925,2.03511 0.37488,3.92027 1.46824,0.77441 2.62026,0.8541 3.26771,0.22604 0.66368,-0.6438 0.5796,-1.1242 -0.25,-1.42838 z m -19.25,0.70833 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 11,0 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 22.65958,0.23155 c 1.48393,-0.9442 1.2159,-6.22991 -0.31596,-6.23084 -0.6411,-4e-4 -0.93648,0.84019 -0.66288,1.88643 0.27142,1.03793 0.004,2.18949 -0.59362,2.55902 -1.23432,0.76285 -1.47322,2.56172 -0.33712,2.53853 0.4125,-0.008 1.27181,-0.34734 1.90958,-0.75314 z m -387.65958,-1.23155 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 349.13671,-0.78776 c -0.72144,-0.24048 -1.78716,0.0382 -2.36826,0.61931 -0.74207,0.74207 -0.35164,0.87221 1.31171,0.43724 1.3522,-0.35361 1.8055,-0.80691 1.05655,-1.05655 z M 415.64076,506.7676 c -2.96665,-2.74939 -4.49788,-3.07022 -4.49788,-0.94239 0,1.59941 4.99463,4.65329 6.29552,3.8493 0.44181,-0.27305 -0.36714,-1.58116 -1.79764,-2.90691 z m 369.50212,0.43259 c -3.80701,-0.84273 -6,-0.45561 -6,1.05915 0,1.37904 5.13109,1.85429 7.5,0.69466 1.79483,-0.8786 1.64095,-1.05852 -1.5,-1.75381 z m 90.88909,0.0453 c 0.95427,-2.73743 1.40965,-3.03015 3.78606,-2.43371 1.48573,0.3729 3.23574,1.40886 3.88892,2.30214 1.04447,1.42839 1.38646,1.23961 2.83745,-1.5663 1.28581,-2.48647 1.35733,-3.19044 0.32416,-3.19044 -0.72912,0 -1.80863,0.48295 -2.3989,1.07322 -0.76428,0.76428 -1.25912,0.3325 -1.71905,-1.5 -0.68115,-2.71393 -3.31579,-3.49758 -4.18075,-1.24353 -0.28064,0.73133 -2.06651,1.94032 -3.96861,2.68665 -2.80343,1.09997 -3.45837,1.88974 -3.45837,4.17031 0,4.06202 3.44228,3.85197 4.88909,-0.29834 z m -499.59934,0.11169 c 0.30682,-1.1733 1.36401,-2 2.55761,-2 2.12402,0 3.80078,-1.68519 2.73611,-2.74986 -0.33924,-0.33925 -1.1493,-0.0843 -1.80014,0.56653 -0.65083,0.65083 -2.04581,1.18333 -3.09996,1.18333 -1.40093,0 -1.78087,-0.51914 -1.41208,-1.92941 0.34759,-1.32919 -0.005,-1.92454 -1.13337,-1.91377 -0.90086,0.009 -2.65042,-0.30066 -3.88792,-0.68723 -1.79519,-0.56078 -2.25,-0.31543 -2.25,1.21378 0,2.40936 1.85574,4.31663 4.2,4.31663 1.13333,0 1.8,0.74074 1.8,2 0,1.1 0.39752,2 0.88337,2 0.48585,0 1.11872,-0.9 1.40638,-2 z m 372.79204,0 c 0.50501,0 0.91821,-1.60458 0.91821,-3.56574 0,-1.96116 0.48646,-4.4747 1.08102,-5.58565 1.32679,-2.47913 0.15594,-4.02343 -1.20571,-1.59028 -0.53608,0.95792 -1.8365,1.74167 -2.88982,1.74167 -2.17647,0 -4.41032,3.45052 -3.60035,5.56128 0.29653,0.77275 1.11869,1.26134 1.82701,1.08576 0.70832,-0.17559 0.95035,-0.1305 0.53785,0.10019 -1.52871,0.85493 -0.76713,3.47332 0.83179,2.85976 0.86998,-0.33385 1.99498,-0.60699 2.5,-0.60699 z m -328.08179,-1 c 0,-0.55 -0.70156,-1 -1.55902,-1 -0.85746,0 -1.2809,0.45 -0.94098,1 0.33992,0.55 1.04148,1 1.55902,1 0.51754,0 0.94098,-0.45 0.94098,-1 z m 33,-1.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -19.44615,-1.64615 c 1.03052,-1.66742 -1.28721,-3.57951 -2.66672,-2.2 -1.15392,1.15392 -0.43172,3.28713 1.11287,3.28713 0.48508,0 1.18431,-0.48921 1.55385,-1.08713 z m 116.44615,0.0871 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -164,-2.49163 c 0,-1.44686 -3.73436,-3.10734 -4.7359,-2.10581 -0.8418,0.84181 2.83352,4.65514 3.86955,4.01484 0.47649,-0.29449 0.86635,-1.15355 0.86635,-1.90903 z m 42.74431,-2.78713 c -0.36512,-2.09422 -0.45506,-2.05919 -1.57294,0.61268 -0.65212,1.55865 -0.89519,3.30394 -0.54014,3.87841 0.96194,1.55646 2.57114,-1.8637 2.11308,-4.49109 z m 9.25569,4.27876 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m -48,-2 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 23,0.42857 c 0,-1.07604 -2.59246,-3.16445 -4.79664,-3.86403 -1.38097,-0.4383 -2.20336,-0.27889 -2.20336,0.42709 0,0.61952 0.45,0.84829 1,0.50837 0.55,-0.33992 1,0.0505 1,0.86766 0,1.28288 1.3171,2.06271 4.25,2.51634 0.4125,0.0638 0.75,-0.14114 0.75,-0.45543 z m 134,-0.98759 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m 122.70731,-1.42973 c 0.28604,-1.09382 0.91975,-1.74174 1.40825,-1.43983 0.81234,0.50205 2.88444,-3.50509 2.88444,-5.57809 0,-0.48205 -2.01462,0.95701 -4.47694,3.19791 -4.37353,3.98027 -4.9623,5.80876 -1.87042,5.80876 0.84403,0 1.76863,-0.89494 2.05467,-1.98875 z M 420.36573,495.18 c -2.04577,-2.04577 -3.24268,0.0357 -2.29936,3.99858 0.0421,0.17678 0.81258,-0.41464 1.71222,-1.31429 1.141,-1.141 1.31858,-1.95285 0.58714,-2.68429 z m 460.2492,2.08841 c -3.06175,-1.19655 -4.45809,-1.03846 -3.89056,0.44049 0.33199,0.86517 1.48053,1.16789 3.19066,0.84098 2.41165,-0.46102 2.47983,-0.58586 0.6999,-1.28147 z m -510.47205,-0.87988 c 0,-0.53273 -0.675,-0.70959 -1.5,-0.39301 -0.84948,0.32598 -1.5,0.0232 -1.5,-0.69805 0,-0.70051 -0.27006,-1.00359 -0.60014,-0.67352 -0.9108,0.9108 0.52885,2.7332 2.15916,2.7332 0.79254,0 1.44098,-0.43588 1.44098,-0.96862 z m 55.34934,-1.49935 c 0.30982,-0.80739 0.13297,-1.73395 -0.39301,-2.05902 -0.52598,-0.32508 -0.95633,-0.37629 -0.95633,-0.11381 0,0.26247 -0.27314,1.18903 -0.60699,2.05901 -0.33384,0.86999 -0.15699,1.58179 0.39301,1.58179 0.55,0 1.25349,-0.66059 1.56332,-1.46797 z m -50.06601,-2.53203 c 1.86223,0 2.73578,-0.44268 2.46667,-1.25 -0.22917,-0.6875 -1.95417,-1.25 -3.83333,-1.25 -2.88853,0 -3.4684,0.38644 -3.75135,2.5 -0.27051,2.02069 -0.0884,2.26034 0.95,1.25 0.70658,-0.6875 2.58218,-1.25 4.16801,-1.25 z m 500.71667,0.44098 c 0,-0.85746 -0.45734,-1.27636 -1.01631,-0.9309 -0.55897,0.34546 -0.75742,1.04702 -0.44098,1.55902 0.85723,1.38704 1.45729,1.12841 1.45729,-0.62812 z m 8.37187,0.60773 c 1.95939,-0.74495 2.43847,-1.54792 2.20879,-3.7021 -0.35098,-3.29198 -1.78677,-4.00812 -3.61627,-1.8037 -1.07277,1.2926 -1.08568,1.7641 -0.0656,2.39457 0.91388,0.56481 0.68543,0.93797 -0.81431,1.33016 -1.14644,0.29982 -2.08448,1.03725 -2.08448,1.63874 0,1.34349 1.11696,1.37985 4.37187,0.14233 z m 6.62813,-0.0487 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m -209.93426,-1.03518 c 1.09267,-0.58478 1.93426,-2.08601 1.93426,-3.45031 0,-1.32832 0.7875,-2.87381 1.75,-3.43441 3.3566,-1.95504 0.40727,-1.06316 -3.6555,1.10542 -2.98376,1.59264 -4.0945,2.81339 -4.0945,4.5 0,2.52832 1.09067,2.87151 4.06574,1.2793 z m -299.08105,-1.21482 c -0.0205,-1.67296 -1.74397,-4.32406 -2.39065,-3.67737 -0.77481,0.77481 0.50836,4.92737 1.52259,4.92737 0.48585,0 0.87648,-0.5625 0.86806,-1.25 z m 21.65368,-0.25 c -0.39152,-1.02029 0.054,-1.5 1.39301,-1.5 1.08274,0 1.96862,-0.45 1.96862,-1 0,-1.46067 -3.57046,-1.22249 -4.85376,0.32379 -0.80229,0.9667 -0.78137,1.64108 0.0776,2.5 1.5954,1.5954 2.10618,1.47849 1.41458,-0.32379 z m 4.36163,0.5 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 12.75927,-1.30546 c 3.48736,0.46775 4.24073,0.27893 4.24073,-1.06287 0,-1.3258 -1.1137,-1.63167 -5.94098,-1.63167 -6.08874,0 -7.69731,0.89425 -6.62678,3.68401 0.55452,1.44507 0.76615,1.44642 2.34788,0.015 1.26136,-1.14152 2.90217,-1.41717 5.97915,-1.00446 z m 36.24073,1.86448 c 0,-1.05548 -1.91911,-1.49891 -2.48992,-0.57533 -0.34546,0.55897 0.0734,1.01631 0.9309,1.01631 0.85746,0 1.55902,-0.19844 1.55902,-0.44098 z m 7.60417,-2.28819 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69478 0.14921,-1.53512 -0.18308,-1.86741 z m -13.25722,-1.40345 c -1.01582,-0.39975 -3.19695,-0.69716 -4.84695,-0.66091 -2.67179,0.0587 -2.72649,0.11622 -0.5,0.52592 1.375,0.25301 2.87382,1.11668 3.33072,1.91927 0.67452,1.18485 1.11583,1.22263 2.34695,0.20088 1.33838,-1.11075 1.29958,-1.34361 -0.33072,-1.98516 z m 426.26329,0.51783 c 0.61064,-0.76187 1.62314,-1.38521 2.25,-1.38521 0.62687,0 1.13976,-0.45 1.13976,-1 0,-1.66223 -23.23236,-1.2818 -25.55766,0.4185 -1.8524,1.35451 -1.80463,1.44641 1.05887,2.03685 1.64933,0.3401 4.12379,0.97582 5.49879,1.41273 3.64984,1.15974 14.30332,0.14773 15.61024,-1.48287 z m -14.87691,-1.5093 c 0.67834,-0.68342 1.48524,-0.99067 1.79313,-0.68278 0.30789,0.30788 -0.24711,0.86705 -1.23333,1.24258 -1.4252,0.54268 -1.54006,0.42782 -0.5598,-0.5598 z m -493.73333,2.19741 c 0,-0.50967 0.7875,-1.15526 1.75,-1.43464 1.05349,-0.30579 0.78616,-0.43448 -0.67167,-0.32333 -2.33929,0.17837 -4.35734,2.68465 -2.16166,2.68465 0.59583,0 1.08333,-0.417 1.08333,-0.92668 z m 89.68311,-1.26082 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.33229 0.36781,-1.1948 0.0789,-1.91667 z m 15.63508,0.80068 c 0.37259,-0.97094 -0.0418,-1.23672 -1.38176,-0.88631 -1.05266,0.27528 -1.66744,0.89935 -1.36617,1.38682 0.81352,1.3163 2.14373,1.07402 2.74793,-0.50051 z m 242.16395,0.35792 c -0.72854,-1.1788 -3.50728,-1.24172 -5.2763,-0.11948 -0.82709,0.5247 -1.9e-4,0.86964 2.29115,0.95579 2.09455,0.0787 3.33577,-0.269 2.98515,-0.83631 z m 63.01786,0.0289 c 0.33992,-0.55 -0.11008,-1 -1,-1 -0.88992,0 -1.33992,0.45 -1,1 0.33992,0.55 0.78992,1 1,1 0.21008,0 0.66008,-0.45 1,-1 z m 9.93612,-1.07059 c -1.86788,-2.06398 -1.8612,-2.06956 2.09501,-1.75 2.3074,0.18638 4.25342,0.94853 4.64858,1.82059 0.49051,1.08245 0.69928,0.87367 0.75,-0.75 0.0646,-2.06626 -0.37403,-2.25 -5.37069,-2.25 -2.99254,0 -5.73242,0.47155 -6.08862,1.04789 -1.18685,1.92037 0.43418,3.95211 3.1532,3.95211 2.65356,0 2.66349,-0.0253 0.81252,-2.07059 z m 105.02117,1.13969 c 0.31644,-0.512 0.16515,-1.18441 -0.33619,-1.49426 -0.50134,-0.30984 -1.16956,0.10906 -1.48493,0.9309 -0.6217,1.62012 0.88076,2.0849 1.82112,0.56336 z m -499.45729,-1.0691 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 40,0 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 317.75701,-2.57633 c -0.98419,-0.98418 -2.75701,0.52669 -2.75701,2.34963 0,1.52648 0.13153,1.52374 1.69048,-0.0352 0.92976,-0.92976 1.4097,-1.97125 1.06653,-2.31442 z m -46.75701,1.57633 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 105.5,0 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -120.5,-0.44098 c 0,-1.05548 -1.91911,-1.49891 -2.48992,-0.57533 -0.34546,0.55897 0.0734,1.01631 0.9309,1.01631 0.85746,0 1.55902,-0.19844 1.55902,-0.44098 z m 31,-4.55902 c 0,-0.55 -0.7875,-0.99311 -1.75,-0.98469 -1.49555,0.0131 -1.5319,0.15626 -0.25,0.98469 1.88721,1.21961 2,1.21961 2,0 z m -6.27083,-0.60417 c -0.33229,-0.33229 -1.1948,-0.36782 -1.91667,-0.0789 -0.79773,0.31923 -0.56078,0.55619 0.60417,0.60417 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m -168.74448,-4.14583 c 0.0219,-1.78608 -1.65707,-1.54615 -2.38095,0.34024 -0.83287,2.17043 0.39545,4.01911 1.50595,2.26652 0.47283,-0.74622 0.86658,-1.91926 0.875,-2.60676 z m 27.01531,-0.30902 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 501.15792,225.05902 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m -87.07902,-0.58333 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58438 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z M -4.19045,700.69048 C -4.557117,700.32382 -4.857117,652.65637 -4.857117,594.76282 V 489.50183 l -7.352362,-4.91756 c -7.598277,-5.08204 -18.741435,-10.19005 -27.115811,-12.42985 -5.81386,-1.55497 -8.04397,-4.32003 -6.583146,-8.16229 l 1.001817,-2.63498 32.774751,-10e-4 c 18.026113,-5.8e-4 55.957871,-0.29782 84.292801,-0.66053 48.045097,-0.61501 51.634797,-0.54271 53.249997,1.07249 1.52956,1.52961 1.73195,4.11921 1.73195,22.16057 v 20.42857 h 22.97695 c 22.73416,0 22.99218,0.0238 24.41847,2.25 1.22023,1.90459 9.32611,21.73097 45.97925,112.4618 l 4.12533,10.21179 0.5,-65.71179 0.5,-65.7118 9.61173,-0.28454 9.61174,-0.28455 31.88826,36.70382 c 17.53855,20.18709 36.55747,42.14014 42.26427,48.78454 5.7068,6.6444 12.1193,13.98318 14.25,16.30839 l 3.874,4.22765 V 561.4535 519.59453 l -3.25,-2.47845 c -1.7875,-1.36315 -5.95,-3.81001 -9.25,-5.43747 -5.1334,-2.53163 -8.08059,-3.60322 -16.27268,-5.91669 -1.79219,-0.50612 -2.55167,-2.97634 -1.81611,-5.90701 l 0.62689,-2.49776 h 25.44577 c 24.13402,0 25.49913,0.0997 26.48095,1.93426 1.58728,2.96587 1.42626,196.27466 -0.16482,197.86574 -3.18764,3.18764 -3.39134,2.99464 -47.81097,-45.3 -10.62327,-11.55 -24.10771,-26.175 -29.96543,-32.5 -5.85771,-6.325 -15.34686,-16.6375 -21.087,-22.91667 l -10.4366,-11.41667 -0.2643,31.85237 c -0.14536,17.5188 0.0796,32.18892 0.5,32.60026 2.38251,2.33136 13.42802,8.09524 20.07184,10.47409 4.23085,1.51488 7.74906,2.78859 7.81823,2.83047 0.0692,0.0419 0.4297,1.06563 0.80115,2.275 0.47086,1.53296 0.0542,2.82 -1.37577,4.25 -1.9463,1.9463 -3.19799,2.05115 -24.48605,2.05115 -12.3392,0 -23.5892,-0.43886 -25,-0.97525 -2.28375,-0.86828 -2.5651,-1.52639 -2.5651,-6 v -5.02475 h -34.53222 -34.53223 l -0.8377,-2.25 c -1.47539,-3.96278 0.14652,-5.84343 7.04026,-8.16338 5.96975,-2.00901 15.86189,-7.06583 15.86189,-8.10854 0,-0.24068 -0.72386,-2.24671 -1.60858,-4.45784 l -1.60858,-4.02024 h -24.23313 -24.23313 l -1.15829,3.86602 c -0.63706,2.12631 -1.15829,4.33186 -1.15829,4.90122 0,1.47669 5.78145,4.69026 13.1613,7.31559 3.48628,1.24022 6.9012,2.68405 7.5887,3.20851 1.6126,1.23016 1.6126,5.17333 0,6.465 -1.59852,1.28039 -46.012687,2.23578 -48.156767,1.0359 -2.23258,-1.24942 -2.09307,-2.04434 2.33277,-13.29224 2.164147,-5.5 6.666127,-17.0875 10.004407,-25.75 3.33827,-8.6625 8.80442,-22.8375 12.14699,-31.5 3.34258,-8.6625 8.15112,-21.15 10.68566,-27.75 2.53453,-6.6 6.96574,-17.97438 9.84713,-25.27639 l 5.23889,-13.27639 -2.17454,-1.42179 c -2.76131,-1.80543 -11.09967,-5.50017 -14.82247,-6.56786 l -2.85207,-0.81796 v 14.7302 c 0,15.93438 -0.36449,17.13019 -5.22144,17.13019 -3.32281,0 -4.01266,-1.3637 -5.81747,-11.5 -1.66147,-9.33127 -6.26809,-23.17382 -10.52507,-31.62706 l -3.46116,-6.87294 H 82.130313 62.142883 v 30.5 30.5 h 23.27749 c 19.449487,0 23.642987,0.256 25.499997,1.5567 2.11492,1.48135 2.22251,2.22774 2.22251,15.41822 0,7.62383 -0.27314,14.57331 -0.60699,15.44329 -0.531,1.38377 -3.72332,1.58179 -25.499997,1.58179 h -24.89301 l 0.005,40.75 0.005,40.75 5.5319,4 c 7.86039,5.68368 15.48965,9.47147 26.43832,13.12613 7.907247,2.63944 9.676947,3.61228 10.451457,5.74539 0.72578,1.99887 0.52524,3.01782 -0.90499,4.5982 -1.8015,1.99143 -2.84476,2.03028 -54.515007,2.03028 -28.973091,0 -52.978347,-0.3 -53.345013,-0.66667 z m 82.333333,-9.16666 c 0,-1.30208 -1.18877,-2.16804 -2.15579,-1.57039 -1.03422,0.63919 -0.14245,2.40372 1.21481,2.40372 0.51754,0 0.94098,-0.375 0.94098,-0.83333 z m -24.75,-2.55872 c 2.40172,-1.82316 2.19378,-2.60795 -0.69098,-2.60795 -2.63389,0 -4.05299,1.39172 -3.05902,3 0.80827,1.30781 1.62292,1.22264 3.75,-0.39205 z m 1.75,-7.60795 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z M 350.684,669.29062 c 1.07627,-1.74144 -0.14952,-2.11024 -1.52106,-0.45764 -0.78875,0.95039 -0.86462,1.52417 -0.20152,1.52417 0.58488,0 1.36004,-0.47994 1.72258,-1.06653 z m -13.19178,-5.40144 c 0.30982,-0.80739 0.22398,-1.6777 -0.19076,-1.93402 -1.24671,-0.77051 -3.46711,1.09376 -2.72768,2.29019 0.95526,1.54564 2.24924,1.38772 2.91844,-0.35617 z m -73.89205,-1.60113 c -0.31643,-0.51199 -2.21377,-0.9309 -4.21631,-0.9309 -3.98636,0 -3.44984,1.56683 0.75902,2.2166 2.98074,0.46017 4.24559,-0.0102 3.45729,-1.2857 z m -28.45729,-3.9309 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 105,-1.03518 c 0,-1.76824 -0.28006,-1.88531 -2.1351,-0.89252 -1.70587,0.91296 -1.85664,1.31902 -0.75,2.01987 2.15485,1.3647 2.8851,1.07935 2.8851,-1.12735 z M 4.142883,655.35715 c 0,-0.55 -0.198442,-1 -0.440983,-1 -0.242541,0 -0.719098,0.45 -1.059017,1 -0.339919,0.55 -0.141476,1 0.440983,1 0.582459,0 1.059017,-0.45 1.059017,-1 z m 33,-3 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m 131.499997,0 c 0.33992,-0.55 -0.11008,-1 -1,-1 -0.88992,0 -1.33992,0.45 -1,1 0.33992,0.55 0.78992,1 1,1 0.21008,0 0.66008,-0.45 1,-1 z m 12.3176,-4.8558 c -0.68841,-0.90431 -1.31453,-1.76723 -1.39136,-1.9176 -0.0768,-0.15037 -1.99556,0.78075 -4.26383,2.06915 -2.96423,1.68371 -3.81904,2.64762 -3.03936,3.4273 0.77967,0.77967 2.33087,0.66015 5.51549,-0.42495 3.86871,-1.31821 4.27196,-1.71827 3.17906,-3.1539 z m 52.1824,3.88718 c 0,-0.53273 -0.675,-0.70959 -1.5,-0.39301 -0.825,0.31659 -1.5,0.75246 -1.5,0.96862 0,0.21615 0.675,0.39301 1.5,0.39301 0.825,0 1.5,-0.43588 1.5,-0.96862 z m 97.73812,-2.03138 c 0.5597,0 2.70681,-0.70578 4.77135,-1.5684 2.7935,-1.1672 3.46425,-1.85788 2.62213,-2.7 -1.80316,-1.80316 -1.31094,-2.89795 0.79596,-1.77037 1.06015,0.56738 2.64026,0.75811 3.51134,0.42384 1.15637,-0.44374 1.41692,-0.17291 0.96545,1.00359 -0.34008,0.88624 -0.12018,1.61134 0.48866,1.61134 0.60885,0 1.10699,-0.58361 1.10699,-1.29691 0,-0.7133 1.33094,-2.4008 2.95765,-3.75 2.58831,-2.14675 2.96294,-3.12104 3,-7.80187 l 0.0423,-5.34877 -3.57677,2.11034 c -1.96722,1.16069 -3.95983,1.87361 -4.428,1.58426 -0.46818,-0.28935 -1.10923,0.26794 -1.42455,1.23843 -0.5528,1.70141 -11.02393,7.24851 -13.74198,7.27983 -0.73078,0.008 -1.97476,0.42413 -2.7644,0.92379 -1.18984,0.7529 -1.21168,1.17839 -0.12755,2.48468 0.87569,1.05515 0.93708,1.57622 0.18569,1.57622 -1.69576,0 -1.34551,3.09603 0.59252,5.23753 1.53585,1.6971 1.83457,1.73143 2.86024,0.32874 0.62996,-0.86145 1.60327,-1.56627 2.16297,-1.56627 z m -4.73812,-1 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -96,0.43261 c 0,-1.15868 0.58669,-1.39145 2.25,-0.89267 2.10712,0.63186 2.14496,0.56512 0.59596,-1.05094 -0.90972,-0.94911 -2.0929,-1.45442 -2.62929,-1.12291 -1.32772,0.82058 -2.2519,4.63391 -1.12305,4.63391 0.49851,0 0.90638,-0.70532 0.90638,-1.56739 z m -121.24001,-3.97679 3.69574,-1.54418 -2.47786,-1.29609 c -2.07951,-1.08771 -2.75922,-1.05569 -4.22787,0.19917 -1.62147,1.38543 -2.4362,4.18528 -1.21788,4.18528 0.29266,0 2.1952,-0.69488 4.22787,-1.54418 z m 80.10481,-0.69315 c 1.4041,0.52533 1.44649,0.37967 0.29992,-1.03066 -1.08065,-1.32924 -1.69672,-1.41672 -3.23069,-0.45874 -1.04247,0.65104 -2.12318,1.77725 -2.40156,2.5027 -0.38378,1.00012 0.002,0.96312 1.5955,-0.15305 1.1559,-0.80962 2.83747,-1.19674 3.73683,-0.86025 z m -148.864797,0.23733 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -39,-1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 318.999997,0 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -119.5,-2 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 8.5,0 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 110,-7.64072 c 0,-1.05023 -0.77448,-0.84656 -2.97916,0.78343 -2.40485,1.77798 -2.75037,2.47826 -1.79234,3.63261 1.00881,1.21555 1.45561,1.09806 2.97915,-0.78343 0.98579,-1.2174 1.79235,-2.85208 1.79235,-3.63261 z m 7,2.64072 c 1.16887,-0.75538 0.89294,-0.97275 -1.25,-0.98469 -1.5125,-0.008 -2.75,0.43469 -2.75,0.98469 0,1.26441 2.04347,1.26441 4,0 z m -110.49563,-3.00706 c 0.34231,-0.55389 -0.10054,-1.28448 -0.98412,-1.62354 -1.91464,-0.73472 -2.98171,0.0749 -2.06137,1.56407 0.83038,1.34358 2.23491,1.37101 3.04549,0.0595 z m 19.49563,0.007 c 0,-0.55 -0.70156,-1 -1.55902,-1 -0.85746,0 -1.2809,0.45 -0.94098,1 0.33992,0.55 1.04148,1 1.55902,1 0.51754,0 0.94098,-0.45 0.94098,-1 z m 80,-3.61658 c 0,-2.02152 -2.76537,-1.69036 -3.92134,0.4696 -0.86144,1.60962 -0.66904,1.79133 1.46482,1.38342 1.35109,-0.25828 2.45652,-1.09213 2.45652,-1.85302 z m 5.33357,-1.95653 c -0.30115,-0.78479 -0.89692,-1.42689 -1.32393,-1.42689 -0.96261,0 -1.99473,3.68158 -1.24289,4.43342 0.98065,0.98065 3.13053,-1.53753 2.56682,-3.00653 z m 4.47893,0.63561 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.72188,0.24062 -1.50937,1.02812 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.72187,-0.24063 1.50937,-1.02813 1.75,-1.75 z m 13.1875,-0.18053 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m -107,-0.88197 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 100.46958,-3.98292 c 3.25281,-1.82699 3.96689,-1.7814 3.64884,0.23292 -0.0651,0.4125 0.35131,0.75 0.92542,0.75 0.57411,0 0.91161,-0.76099 0.75,-1.69108 -0.18898,-1.08762 1.13356,-2.5146 3.70616,-3.99881 l 4,-2.30773 2.70935,2.96909 c 1.49014,1.633 2.9756,2.53829 3.30102,2.01176 0.32541,-0.52654 -0.31573,-1.93131 -1.42477,-3.12173 -2.12684,-2.28289 -1.9333,-3.8615 0.47342,-3.8615 0.79254,0 1.44098,-0.9 1.44098,-2 0,-2.53393 -0.80673,-2.52886 -3.01643,0.0189 -1.73111,1.99599 -1.75608,1.9844 -2.19688,-1.01898 -0.52512,-3.57781 0.67325,-4.99992 4.21331,-4.99992 0.55,0 1,-0.9 1,-2 0,-2.12367 -1.45715,-2.68737 -2.51639,-0.97348 -0.34893,0.56459 -1.16299,0.92039 -1.80902,0.79067 -0.64602,-0.12972 -2.15364,0.39569 -3.35025,1.16759 -1.99737,1.28845 -2.03834,1.50461 -0.5,2.63792 1.56091,1.14993 1.55582,1.28092 -0.0743,1.91287 -0.9625,0.37312 -1.75,1.25712 -1.75,1.96443 0,0.70731 -0.72605,1.56464 -1.61345,1.90516 -1.02338,0.39271 -1.42334,1.34614 -1.09362,2.60699 0.34412,1.31594 0.0245,1.98785 -0.94557,1.98785 -0.85417,0 -1.16738,-0.4822 -0.7509,-1.15607 0.51639,-0.83554 -0.35083,-0.9832 -3.12776,-0.53256 -2.3572,0.38252 -4.44644,0.1657 -5.40547,-0.56096 -0.85978,-0.65146 -1.24519,-0.80627 -0.85648,-0.34402 0.38872,0.46225 -0.39878,2.28989 -1.75,4.06142 -1.35121,1.77154 -2.45675,3.741 -2.45675,4.37658 0,1.80554 4.57822,1.35834 8.46958,-0.82731 z m -4.46958,-2.01708 c 0,-0.55 0.70156,-1 1.55902,-1 0.85746,0 1.2809,0.45 0.94098,1 -0.33992,0.55 -1.04148,1 -1.55902,1 -0.51754,0 -0.94098,-0.45 -0.94098,-1 z m 24,3 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -235.31689,-3.1875 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19292,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 120,-1 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 86.81689,-0.8125 c -0.33992,-0.55 -1.04148,-1 -1.55902,-1 -0.51754,0 -0.94098,0.45 -0.94098,1 0,0.55 0.70156,1 1.55902,1 0.85746,0 1.2809,-0.45 0.94098,-1 z m -189.13837,-2.5 c -0.31659,-0.825 -1.08996,-1.50689 -1.71862,-1.51531 -0.62865,-0.008 -0.46801,-0.45153 0.35699,-0.98469 0.825,-0.53316 0.9926,-0.97627 0.37244,-0.98469 -2.03113,-0.0276 -3.45713,2.5 -2.14865,3.80848 1.68425,1.68425 3.82368,1.46349 3.13784,-0.32379 z m 18.63837,0 c 0.92769,-1.1178 0.94385,-1.5 0.0634,-1.5 -0.64981,0 -0.88172,-0.485 -0.51536,-1.07778 0.44549,-0.72081 -0.61138,-0.95463 -3.19098,-0.70596 -3.07261,0.2962 -3.92208,0.82048 -4.17664,2.57778 -0.27665,1.90978 0.14326,2.20596 3.12755,2.20596 1.89591,0 4.00731,-0.675 4.692,-1.5 z m 24,-2.50933 c 0,-1.04021 0.7875,-2.34997 1.75,-2.91057 2.89426,-1.68575 -0.56673,-1.2609 -4.34887,0.53384 -3.8954,1.84849 -4.4502,4.07406 -1.15113,4.61779 2.97853,0.4909 3.75,0.0299 3.75,-2.24106 z m 139,2.00933 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -148,-1.5 c 0,-0.87695 -0.91013,-1.5 -2.19113,-1.5 -2.14132,0 -2.147,0.0334 -0.25,1.4682 2.43437,1.84126 2.44113,1.84135 2.44113,0.0318 z m 166.44721,-1.58541 c -0.32197,-0.52097 -1.01165,-0.68378 -1.53262,-0.3618 -0.52097,0.32197 -0.68378,1.01165 -0.3618,1.53262 0.32197,0.52097 1.01165,0.68378 1.53262,0.3618 0.52097,-0.32197 0.68378,-1.01165 0.3618,-1.53262 z m -14.44721,0.27654 c 0,-0.44488 -0.66069,-1.68238 -1.4682,-2.75 -1.4063,-1.85929 -1.46953,-1.82519 -1.5,0.80887 -0.0207,1.79191 0.49079,2.75 1.4682,2.75 0.825,0 1.5,-0.36399 1.5,-0.80887 z m 7.5,-0.19113 c 0.36058,-0.58342 -0.65628,-1 -2.44098,-1 -1.68246,0 -3.05902,0.45 -3.05902,1 0,0.55 1.09844,1 2.44098,1 1.34254,0 2.7191,-0.45 3.05902,-1 z m -94.07294,-1.76531 c -0.59012,-0.40408 -1.44726,-1.63469 -1.90476,-2.73469 -0.79343,-1.90771 -0.85229,-1.91324 -1.27545,-0.11983 -0.244,1.0341 0.16314,2.26471 0.90476,2.73469 1.66281,1.05377 3.80406,1.16653 2.27545,0.11983 z m -67.42706,-2.55249 c 0,-1.15953 -4.39525,-12.29916 -12.25629,-31.06317 -1.35508,-3.23453 -2.74868,-5.42 -3.09689,-4.8566 -1.35918,2.1992 -13.64682,34.42348 -13.64682,35.78872 0,1.19852 2.50531,1.44885 14.5,1.44885 11.33121,0 14.5,-0.28799 14.5,-1.3178 z m -22.9093,-7.9322 c 1.13383,-2.8875 3.20856,-8.175 4.6105,-11.75 1.40194,-3.575 2.86068,-6.8455 3.24166,-7.26777 0.59389,-0.65827 10.05714,21.48578 10.05714,23.53378 0,0.40369 -4.49343,0.73399 -9.98541,0.73399 h -9.98541 z m 15.45679,3.17315 c 0.66969,-1.08358 -2.08093,-9.62327 -3.65581,-11.34998 -0.77235,-0.84681 -5.89168,9.10683 -5.89168,11.45534 0,1.33127 8.71908,1.23505 9.54749,-0.10536 z m 157.94543,3.0883 c 0.35034,-0.56686 -0.0511,-0.7345 -0.94098,-0.39301 -1.73242,0.66479 -2.04939,1.38156 -0.61096,1.38156 0.51754,0 1.21592,-0.44485 1.55194,-0.98855 z m 9.23625,0.38438 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m -85.72917,-1.89583 c 0,-0.825 -0.17686,-1.5 -0.39301,-1.5 -0.21616,0 -0.65203,0.675 -0.96862,1.5 -0.31658,0.825 -0.13972,1.5 0.39301,1.5 0.53274,0 0.96862,-0.675 0.96862,-1.5 z m -66.44113,-0.9682 c 1.06762,-0.8075 1.46464,-1.4825 0.88226,-1.5 -0.58238,-0.0175 -1.93238,0.62889 -3,1.4364 -1.06762,0.8075 -1.46464,1.4825 -0.88226,1.5 0.58238,0.0175 1.93238,-0.62889 3,-1.4364 z m 148.44113,0.4682 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z M 2.048941,601.74396 c -1.453033,-1.7508 -2.380837,-1.06645 -1.536659,1.13344 0.339061,0.88358 1.091505,1.31293 1.672096,0.9541 0.724945,-0.44804 0.682518,-1.10197 -0.135437,-2.08754 z m 229.093939,1.61319 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 89,-3 c 1.13525,-0.73365 0.69536,-0.9731 -1.80902,-0.98469 -1.95454,-0.009 -3.05604,0.39402 -2.69098,0.98469 0.77641,1.25626 2.55607,1.25626 4.5,0 z m 30.5,0 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -225.8694,-3.52025 c -0.33906,-0.88358 -1.0915,-1.31293 -1.6721,-0.9541 -0.72494,0.44804 -0.68251,1.10197 0.13544,2.08754 1.45303,1.7508 2.38084,1.06645 1.53666,-1.13344 z m 105.47302,-2.77613 c -0.80483,-0.80483 -1.09539,-0.30495 -1.07321,1.84638 0.0267,2.58611 0.16279,2.72225 1.10362,1.10362 0.76916,-1.32326 0.76054,-2.15905 -0.0304,-2.95 z m 60.04638,0.79638 c 0,-0.5225 -0.48375,-1.11125 -1.075,-1.30833 -0.59125,-0.19709 -1.075,0.39166 -1.075,1.30833 0,0.91667 0.48375,1.50542 1.075,1.30833 0.59125,-0.19708 1.075,-0.78583 1.075,-1.30833 z m -102.15,-0.5 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 92,-0.94098 c 0,-1.67643 -1.77354,-2.09154 -2.36383,-0.55328 -0.3483,0.90766 0.003,1.49426 0.89521,1.49426 0.80774,0 1.46862,-0.42344 1.46862,-0.94098 z M 17.142883,591.16683 c 0,-1.31439 -2.272781,-0.49134 -2.77106,1.0035 -0.243583,0.73075 0.213586,0.95424 1.1875,0.58051 0.870958,-0.33422 1.58356,-1.04702 1.58356,-1.58401 z m 216.447207,0.10491 c -0.32197,-0.52097 -1.01165,-0.68378 -1.53262,-0.3618 -0.52097,0.32197 -0.68378,1.01165 -0.3618,1.53262 0.32197,0.52097 1.01165,0.68378 1.53262,0.3618 0.52097,-0.32197 0.68378,-1.01165 0.3618,-1.53262 z m 42.55279,-2.41459 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m -262.999997,-0.5 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 115.999997,-0.5 c 0,-0.825 0.47296,-1.5 1.05103,-1.5 0.8508,0 3.94897,-5.76743 3.94897,-7.35125 0,-0.22852 -0.9247,-0.6573 -2.05489,-0.95285 -1.5411,-0.40301 -2.29665,0.0985 -3.0218,2.00582 -1.44518,3.80111 -1.96399,9.29828 -0.87755,9.29828 0.52483,0 0.95424,-0.675 0.95424,-1.5 z m 182,-0.44098 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z M 18.142883,584.88853 c 0,-0.89459 -0.586289,-1.24363 -1.5,-0.89301 -0.825,0.31659 -1.5,0.97746 -1.5,1.46862 0,0.49115 0.675,0.89301 1.5,0.89301 0.825,0 1.5,-0.66088 1.5,-1.46862 z m 80.38062,-3.12394 c 1.37303,-0.52688 1.37958,-0.84379 0.0591,-2.8591 -0.8168,-1.24659 -1.20174,-3.00494 -0.85542,-3.90744 0.35005,-0.9122 0.13808,-1.6409 -0.47731,-1.6409 -0.60885,0 -1.10699,1.125 -1.10699,2.5 0,1.58102 -0.56432,2.5 -1.53518,2.5 -1.22531,0 -1.31913,0.4037 -0.46482,2 1.13373,2.1184 1.89255,2.3622 4.38062,1.40744 z m 247.435907,-0.87212 c -0.17409,-0.14543 -1.44153,-0.83366 -2.81653,-1.5294 l -2.5,-1.26499 2,2.00166 c 1.1,1.10091 2.36744,1.78914 2.81653,1.5294 0.44909,-0.25975 0.67409,-0.59125 0.5,-0.73667 z M 28.142883,578.35715 c 0,-0.55 -0.701558,-1 -1.559017,-1 -0.857459,0 -1.280902,0.45 -0.940983,1 0.339919,0.55 1.041476,1 1.559017,1 0.517541,0 0.940983,-0.45 0.940983,-1 z m 322.499997,-1 c 0.33992,-0.55 -0.11008,-1 -1,-1 -0.88992,0 -1.33992,0.45 -1,1 0.33992,0.55 0.78992,1 1,1 0.21008,0 0.66008,-0.45 1,-1 z m -2.77748,-8.53905 c 1.46994,-1.07485 1.15062,-1.48502 -2.67583,-3.43713 l -4.34497,-2.21664 0.65684,4.79215 c 0.7409,5.40547 2.69076,7.49963 3.91115,4.2006 0.43103,-1.16517 1.53479,-2.66771 2.45281,-3.33898 z m -210.72252,0.48003 c 0,-1.68246 -0.38965,-2.8182 -0.86589,-2.52386 -0.80557,0.49786 -0.36612,5.58288 0.48247,5.58288 0.21088,0 0.38342,-1.37656 0.38342,-3.05902 z m -88.499997,1.05902 c 0.33992,-0.55 -0.11008,-1 -1,-1 -0.88992,0 -1.33992,0.45 -1,1 0.33992,0.55 0.78992,1 1,1 0.21008,0 0.66008,-0.45 1,-1 z m 181.183107,-2.1875 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z M 2.953248,564.02985 c 0.226562,-2.68102 -0.08031,-3.6727 -1.1365,-3.6727 -1.423303,0 -2.940249,5.64293 -1.963153,7.30279 1.075503,1.82703 2.810169,-0.20449 3.099653,-3.63009 z m 231.975112,0.5773 c -0.83848,-0.9625 -1.29984,-2.37514 -1.02526,-3.1392 0.30539,-0.84979 0.0606,-1.11809 -0.63049,-0.69098 -1.23498,0.76326 -1.52594,3.85063 -0.46306,4.91351 0.36666,0.36667 1.33641,0.66667 2.15498,0.66667 1.30398,0 1.2995,-0.21675 -0.0362,-1.75 z M 66.519033,563.8193 c 0.33982,-0.88556 -0.0572,-1.78628 -0.93614,-2.12354 -1.95661,-0.75083 -2.84947,0.15198 -2.09493,2.11826 0.75909,1.97817 2.27299,1.9808 3.03107,0.005 z m 283.623847,-2.96215 c 0,-0.825 -0.43588,-1.5 -0.96862,-1.5 -0.53273,0 -0.70959,0.675 -0.39301,1.5 0.31659,0.825 0.75246,1.5 0.96862,1.5 0.21615,0 0.39301,-0.675 0.39301,-1.5 z m -119,-4.5 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m -227.999997,-2 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 342.999997,-1.58333 c 0,-1.76593 -2.15276,-1.45839 -2.77083,0.39583 -0.21771,0.65312 0.31666,1.1875 1.1875,1.1875 0.87083,0 1.58333,-0.7125 1.58333,-1.58333 z M 11.142883,549.35715 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 20,0 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 14,-0.94098 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 199.999997,-2.05902 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 100.42856,-1.33799 c 0.81327,-1.30475 0.71,-1.94935 -0.42856,-2.67516 -2.32123,-1.47974 -2.66667,-1.21537 -2.66667,2.04093 0,3.21004 1.32097,3.48072 3.09523,0.63423 z m -72.74545,-0.84951 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m -255.976338,-2.4314 c 0.234966,-0.70579 -0.560881,-0.94048 -2.155479,-0.63566 -1.390389,0.26579 -2.266269,0.90672 -1.946399,1.42428 0.751094,1.21529 3.618257,0.66406 4.101878,-0.78862 z m 147.293228,-3.25866 c 0,-1.03265 -0.675,-2.43775 -1.5,-3.12244 -1.22294,-1.01495 -1.5,-0.96032 -1.5,0.29577 0,2.27674 1.08726,4.70423 2.10699,4.70423 0.49115,0 0.89301,-0.8449 0.89301,-1.87756 z m -15.2,-0.32244 c 1.44744,-1.44744 1.61262,-4.17305 0.2,-3.3 -0.55,0.33992 -1,0.11492 -1,-0.5 0,-0.61492 -0.48068,-0.82096 -1.06817,-0.45787 -0.5875,0.3631 -0.79726,1.36618 -0.46613,2.22907 0.33112,0.8629 0.0243,1.93549 -0.68183,2.38354 -0.98024,0.62198 -0.9173,0.81826 0.26613,0.82995 0.8525,0.008 2.09,-0.52469 2.75,-1.18469 z m -130.342702,-0.7309 c 0.316431,-0.512 0.117988,-1.21356 -0.440983,-1.55902 -0.558972,-0.34546 -1.016312,0.0734 -1.016312,0.9309 0,1.75653 0.600055,2.01516 1.457295,0.62812 z m 14.542705,-2.51008 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z M 1.302107,530.2405 c -1.103386,-1.7668 -1.027191,-2.26649 0.52504,-3.44324 0.998655,-0.75708 2.351678,-1.39081 3.006719,-1.40831 0.655041,-0.0175 1.45066,-0.45197 1.768044,-0.9655 0.322179,-0.5213 -0.645557,-0.77258 -2.190983,-0.5689 -1.522424,0.20064 -3.555544,0.39581 -4.518044,0.4337 -1.271134,0.05 -1.75,0.9078 -1.75,3.13464 0,4.2058 1.822769,7.51149 3.3176,6.01666 0.843092,-0.84309 0.802638,-1.66022 -0.158376,-3.19905 z m 24.59064,0.53318 c -0.952958,-0.95296 -2.863492,0.5906 -2.153308,1.7397 0.422119,0.683 0.981465,0.66575 1.699645,-0.0524 0.588756,-0.58876 0.792905,-1.34803 0.453663,-1.68727 z m 27.250136,-0.35685 c 0,-2.25641 -0.86389,-3.04914 -2.59777,-2.38379 -1.40796,0.54029 -1.92181,3.47119 -0.80446,4.58854 1.07308,1.07309 3.40223,-0.43628 3.40223,-2.20475 z m 289.999997,0.44032 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m -189,-1.55902 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 76.47724,-5.40561 c 0.11805,-1.94445 -0.16603,-3.53537 -0.6313,-3.53537 -0.46527,0 -0.84594,1.875 -0.84594,4.16667 0,4.94698 1.16889,4.44746 1.47724,-0.6313 z m 114.52276,-5.09439 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z M 1.142883,518.46414 c 0,-0.49116 -0.675,-1.15203 -1.5,-1.46862 -0.913711,-0.35062 -1.5,-0.002 -1.5,0.89301 0,0.80774 0.675,1.46862 1.5,1.46862 0.825,0 1.5,-0.40186 1.5,-0.89301 z m 25.574601,-3.98628 c -0.74873,-1.21147 -4.574601,-2.12862 -4.574601,-1.09664 0,0.46025 1.0125,1.03184 2.25,1.2702 1.2375,0.23835 2.389058,0.49465 2.559017,0.56955 0.169959,0.0749 0.06447,-0.2595 -0.234416,-0.74311 z m -16.574601,-1.12071 c 0,-0.55 -0.476558,-1 -1.059017,-1 -0.582459,0 -0.780902,0.45 -0.440983,1 0.339919,0.55 0.816476,1 1.059017,1 0.242541,0 0.440983,-0.45 0.440983,-1 z m 41.9922,-1.30902 c -0.004,-0.65504 -1.12929,-1.71114 -2.5,-2.3469 -2.97591,-1.38026 -3.32105,-0.038 -0.49856,1.93891 1.0965,0.76802 1.659,1.76568 1.25,2.21703 -0.409,0.45135 -0.18114,0.49693 0.50636,0.10129 0.6875,-0.39564 1.24649,-1.25529 1.2422,-1.91033 z M 0.161882,509.83426 c 1.056784,-1.27335 0.994917,-1.41968 -0.377555,-0.89301 -0.902794,0.34643 -1.641444,1.03173 -1.641444,1.52289 0,1.28596 0.578873,1.10536 2.018999,-0.62988 z m 30.981001,0.0819 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -16.496677,-5.5644 c 0.338091,-0.54704 -0.259363,-0.99462 -1.327675,-0.99462 -1.095716,0 -2.168384,0.86422 -2.46086,1.98265 -0.436313,1.66846 -0.225917,1.82608 1.327675,0.99462 1.015382,-0.54341 2.12277,-1.4356 2.46086,-1.98265 z m 330.496674,1.83871 c 0,-0.45833 0.62252,-0.83333 1.38337,-0.83333 0.76085,0 1.60935,-0.86414 1.88554,-1.92032 0.63242,-2.41836 -3.6964,-3.79971 -5.97673,-1.90721 -0.83408,0.69223 -2.92854,1.27411 -4.65435,1.29306 -3.79625,0.0417 -4.72349,1.90652 -1.16892,2.35089 1.3921,0.17403 2.53109,0.66153 2.53109,1.08334 0,0.4218 1.35,0.76691 3,0.76691 1.65,0 3,-0.375 3,-0.83334 z M 53.142883,505.35715 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 178.796327,-1.95452 c -0.67134,-1.07499 -1.41428,-1.76086 -1.65098,-1.52417 -0.42859,0.4286 1.75074,3.47869 2.48557,3.47869 0.21231,0 -0.16325,-0.87953 -0.83459,-1.95452 z m -229.849735,0.009 c 1.194899,-0.75597 1.029921,-1.25261 -0.948204,-2.85439 l -2.394796,-1.9392 2.198204,-0.69768 c 1.209012,-0.38373 2.198204,-1.11736 2.198204,-1.6303 0,-1.07787 -1.167954,-1.18913 -3.418213,-0.32562 -1.77847,0.68246 -2.193184,5.39301 -0.474798,5.39301 0.608844,0 0.847967,0.675 0.531385,1.5 -0.651802,1.69857 0.182682,1.89892 2.308218,0.55417 z m 50.053408,-4.24531 c 0,-1.29546 -1.65047,-0.93496 -2.96365,0.64732 -0.66469,0.80091 -0.8761,1.99408 -0.4698,2.6515 0.53198,0.86075 1.11583,0.67958 2.08609,-0.64733 0.74105,-1.01344 1.34736,-2.20661 1.34736,-2.65149 z m 185.418207,3.58414 c 1.95369,-0.7497 2.08332,-2.39301 0.18878,-2.39301 -0.76616,0 -1.65203,0.675 -1.96862,1.5 -0.64349,1.67692 -0.4786,1.75966 1.77984,0.89301 z m 84.58179,0.21398 c 0,-0.21616 -0.69837,-0.661 -1.55194,-0.98855 -0.88992,-0.34149 -1.29132,-0.17385 -0.94098,0.39301 0.58726,0.95021 2.49292,1.40545 2.49292,0.59554 z M 39.332673,498.85715 c -0.22473,-1.925 -0.77807,-3.5 -1.22965,-3.5 -1.25,0 -1.60219,4.33732 -0.46381,5.71196 1.67964,2.02822 2.12115,1.45152 1.69346,-2.21196 z m -15.18979,1 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -0.825,0 -1.5,0.675 -1.5,1.5 0,0.825 0.675,1.5 1.5,1.5 0.825,0 1.5,-0.675 1.5,-1.5 z m -17.5,-0.5 c 0.339919,-0.55 0.168034,-1 -0.381966,-1 -0.55,0 -1.278115,0.45 -1.618034,1 -0.339919,0.55 -0.168034,1 0.381966,1 0.55,0 1.278115,-0.45 1.618034,-1 z m 39.5,-0.58333 c 0,-0.87084 -0.53437,-1.40521 -1.1875,-1.1875 -1.85422,0.61807 -2.16176,2.77083 -0.39583,2.77083 0.87083,0 1.58333,-0.7125 1.58333,-1.58333 z m -12,-0.85765 c 0,-1.61407 -1.4163,-2.80939 -2.29162,-1.93407 -0.78038,0.78038 0.29485,3.37505 1.39861,3.37505 0.49115,0 0.89301,-0.64844 0.89301,-1.44098 z m 79.770827,-2.37152 c 0.21771,-0.65313 -0.31666,-1.1875 -1.1875,-1.1875 -0.87083,0 -1.58333,0.7125 -1.58333,1.58333 0,1.76593 2.15276,1.45839 2.77083,-0.39583 z m -70.770827,-0.1875 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -43,-2.05902 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 45.5,0.059 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 72.183107,-3.1875 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19292,1.64479 0.52522,1.3125 0.33229,-0.33229 0.36781,-1.1948 0.0789,-1.91667 z m -114.683107,0.1875 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 5,-2 c 0,-0.55 -0.476558,-1 -1.059017,-1 -0.582459,0 -0.780902,0.45 -0.440983,1 0.339919,0.55 0.816476,1 1.059017,1 0.242541,0 0.440983,-0.45 0.440983,-1 z m 37.69347,-3.79459 c 0.18131,-2.6152 -0.0208,-2.76559 -3.21599,-2.39257 -2.91607,0.34043 -3.20765,0.59984 -2.0149,1.7926 0.76701,0.76701 1.90326,1.39456 2.52501,1.39456 0.62174,0 0.85233,0.45 0.51241,1 -0.33992,0.55 -0.029,0.99911 0.69098,0.99801 0.71996,-0.001 1.39608,-1.25776 1.50249,-2.7926 z m 9.30653,1.79459 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 37.26903,-0.65594 c -0.67703,-0.27392 -2.02703,-0.29059 -3,-0.0371 -0.97297,0.25355 -0.41903,0.47767 1.23097,0.49804 1.65,0.0204 2.44606,-0.18706 1.76903,-0.46098 z m -88.26903,-2.84406 c 0,-0.84767 0.895446,-1.5 2.059017,-1.5 1.356932,0 1.81838,0.42623 1.353296,1.25 -0.546569,0.9681 -0.417175,0.98326 0.573765,0.0672 1.593636,-1.47319 0.614661,-4.31722 -1.486078,-4.31722 -0.859523,0 -1.821791,0.675 -2.138374,1.5 -0.316582,0.825 -1.202459,1.5 -1.968615,1.5 -1.470238,0 -1.847559,1.21212 -0.726344,2.33333 1.150633,1.15064 2.333333,0.72824 2.333333,-0.83333 z m 87,-1.94098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -3,-2.61804 c 0,-0.51754 -0.675,-0.94098 -1.5,-0.94098 -1.54641,0 -1.9867,1.17996 -0.86052,2.30615 0.79893,0.79893 2.36052,-0.10419 2.36052,-1.36517 z m 11.5,0.059 c -0.33992,-0.55 -1.04148,-1 -1.55902,-1 -0.51754,0 -0.94098,0.45 -0.94098,1 0,0.55 0.70156,1 1.55902,1 0.85746,0 1.2809,-0.45 0.94098,-1 z m -52.33333,-1.75 c 0.18333,-0.4125 1.67148,-1.50195 3.307,-2.42101 3.61505,-2.03142 4.74856,-4.35169 1.64464,-3.36654 -1.25462,0.3982 -2.11831,0.23712 -2.11831,-0.39506 0,-0.58707 -0.675,-1.06739 -1.5,-1.06739 -1.36214,0 -1.61883,0.48987 -1.44098,2.75 0.0325,0.4125 -0.97768,0.99473 -2.24475,1.29384 -3.31065,0.78154 -3.68854,3.95616 -0.47093,3.95616 1.3695,0 2.63999,-0.3375 2.82333,-0.75 z m -42.384809,-3.0769 c 0.307364,-0.93523 -0.385093,-1.23043 -2.345763,-1 -1.530023,0.17982 -2.978104,0.92406 -3.217959,1.65388 -0.307364,0.93523 0.385093,1.23043 2.345763,1 1.530023,-0.17982 2.978104,-0.92406 3.217959,-1.65388 z m 14.836173,-0.36404 c 0.404837,-0.65504 0.203591,-1.36848 -0.447214,-1.58541 -2.078897,-0.69297 -0.155223,-2.22361 2.794577,-2.22361 2.355034,0 2.756931,-0.34581 2.324352,-2 -0.409745,-1.56687 -1.364016,-2 -4.40638,-2 -2.135853,0 -3.883369,0.46583 -3.883369,1.03518 0,0.69066 -0.687954,0.66701 -2.067058,-0.0711 -1.610793,-0.86207 -2.611117,-0.74977 -4.531865,0.50875 -2.958937,1.93877 -2.217989,3.72253 1.44809,3.48614 4.455871,-0.28731 4.98576,-0.0438 4.440582,2.041 -0.39787,1.52146 -0.03068,2 1.534603,2 1.131688,0 2.388845,-0.53594 2.793682,-1.19098 z m 55.165836,0.34572 c 0.70776,-0.44909 0.9963,-1.56404 0.64301,-2.48469 -0.52444,-1.36668 0.0036,-1.67005 2.90711,-1.67005 3.85293,0 5.19446,-1.18051 4.22184,-3.7151 -0.48584,-1.26608 -0.88511,-1.35562 -1.83025,-0.41048 -0.94515,0.94515 -0.88346,1.41459 0.28278,2.15191 1.26571,0.80021 1.22658,0.94536 -0.25836,0.95836 -0.9625,0.008 -1.78553,-0.54719 -1.82895,-1.23469 -0.0592,-0.937 -0.20106,-0.94954 -0.56664,-0.0501 -0.3508,0.86311 -1.20962,0.92543 -3.05974,0.22202 -3.18647,-1.21149 -4.09751,-0.43713 -2.49834,2.12354 0.733,1.17373 0.81775,1.95453 0.21214,1.95453 -0.55466,0 -1.00847,0.675 -1.00847,1.5 0,1.67104 0.86249,1.87389 2.78387,0.65474 z m 7.57776,-0.65474 c -0.31659,-0.825 -0.97746,-1.5 -1.46862,-1.5 -0.49115,0 -0.89301,0.675 -0.89301,1.5 0,0.825 0.66088,1.5 1.46862,1.5 0.89459,0 1.24363,-0.58629 0.89301,-1.5 z m -52.36163,-1.5 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -25.5,-3.47391 4,-2.46367 -6.25,-0.0312 c -6.008323,-0.03 -6.25,0.0655 -6.25,2.46879 0,3.31582 3.143145,3.32546 8.5,0.0261 z m 31.5,0.62141 c 0,-3.56355 -8.375701,-4.64283 -9.277211,-1.19545 -0.57906,2.21433 0.127432,2.58909 5.475851,2.90467 3.16846,0.18696 3.80136,-0.0976 3.80136,-1.70922 z m 9.43403,-0.35677 c 1.97716,-2.8228 0.65303,-4.1884 -3.2335,-3.33477 -3.04882,0.66963 -4.99561,4.03509 -2.84437,4.91714 2.5532,1.04687 4.61164,0.51095 6.07787,-1.58237 z m 46.184,1.01829 c 0.40484,-0.65504 0.2064,-1.36754 -0.44098,-1.58334 -0.64738,-0.21579 -1.17705,-1.02985 -1.17705,-1.80901 0,-0.77917 -0.39754,-1.41667 -0.88342,-1.41667 -0.99827,0 -2.11271,4.67054 -1.30675,5.4765 0.929,0.92899 3.05144,0.55698 3.8082,-0.66748 z m -36.61803,-0.25 c 0,-1.05548 -1.91911,-1.49891 -2.48992,-0.57533 -0.34546,0.55897 0.07344,1.01631 0.9309,1.01631 0.85746,0 1.55902,-0.19844 1.55902,-0.44098 z m -81.638374,-2.05902 c 0.480918,-1.25325 -0.611851,-1.48348 -6.643011,-1.39955 -6.713412,0.0934 -6.941659,0.16533 -3.261321,1.02744 2.176512,0.50985 4.539012,0.70377 5.25,0.43094 0.710988,-0.27283 1.292706,-0.0602 1.292706,0.47255 0,1.54883 2.728907,1.11746 3.361626,-0.53138 z m 122.638374,0.0833 c 0,-0.77916 0.5625,-1.64364 1.25,-1.92105 0.6875,-0.27741 0.0125,-0.53991 -1.5,-0.58333 -2.59512,-0.0745 -3.69465,1.64307 -2.08333,3.25438 1.12787,1.12788 2.33333,0.74041 2.33333,-0.75 z m -101.5,-0.58333 c 0.339919,-0.55 -0.335081,-1 -1.5,-1 -1.164919,0 -1.839919,0.45 -1.5,1 0.339919,0.55 1.014919,1 1.5,1 0.485081,0 1.160081,-0.45 1.5,-1 z m 65,-1 c 0.33992,-0.55 -0.33508,-1 -1.5,-1 -1.16492,0 -1.83992,0.45 -1.5,1 0.33992,0.55 1.01492,1 1.5,1 0.48508,0 1.16008,-0.45 1.5,-1 z m 48.229167,-0.60417 c -0.3323,-0.33229 -1.1948,-0.36782 -1.91667,-0.0789 -0.79773,0.31923 -0.56078,0.55619 0.60417,0.60417 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 647.42872,234.60417 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 233.87271,-0.5 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -999.032934,-103 -0.497663,-103 -7.91037,-4.12594 c -4.350704,-2.26927 -11.605198,-5.3283 -16.121097,-6.79786 -6.903248,-2.24644 -8.731055,-3.3194 -11.478292,-6.73797 -2.790093,-3.4719 -2.918523,-3.84522 -0.878903,-2.55486 1.313764,0.83115 5.088662,2.269 8.388662,3.19521 7.332277,2.05796 22.99652,9.66559 26.754656,12.9939 l 2.754656,2.4396 -0.256993,103.79396 -0.256992,103.79396 z M 1057.9554,692.67404 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m 26,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m -43.3125,-6.67243 c -6.8017,-3.77683 -7.5299,-5.4904 -4.7986,-11.29198 l 1.8137,-3.85248 34.6038,-0.2628 34.6038,-0.2628 2.1484,5.16969 c 1.1817,2.84332 2.0316,5.27251 1.8887,5.3982 -1.5657,1.37722 -10.4046,6.45187 -11.2056,6.43338 -0.5798,-0.0134 1.0757,-1.20985 3.6788,-2.65882 4.6022,-2.56169 6.5432,-5.25192 5.2725,-7.3079 -0.8306,-1.34399 -62.9576,-1.37252 -65.4661,-0.0301 -1.0059,0.53839 -2.3039,2.34117 -2.8843,4.00618 -1.0255,2.9416 -0.9223,3.09655 3.6448,5.47454 2.585,1.346 4.2501,2.46285 3.7001,2.48191 -0.55,0.019 -3.7,-1.46463 -7,-3.29706 z m 54.5,2.96253 c 0,-0.21616 0.6984,-0.661 1.5519,-0.98855 0.89,-0.34149 1.2914,-0.17385 0.941,0.39301 -0.5872,0.95021 -2.4929,1.40545 -2.4929,0.59554 z m -101.96942,-1.10699 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z M 97.955383,686.67404 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.332287,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 675.187497,0.2901 c 0,-0.21616 0.69837,-0.661 1.55194,-0.98855 0.88992,-0.34149 1.29132,-0.17385 0.94098,0.39301 -0.58726,0.95021 -2.49292,1.40545 -2.49292,0.59554 z M 90.142883,684.35715 c -1.82797,-1.18132 -0.24909,-1.18132 2.5,0 1.31874,0.56668 1.48906,0.87815 0.5,0.9144 -0.825,0.0302 -2.175,-0.38124 -3,-0.9144 z m 440.812497,0.31689 c 0.72187,-0.28887 1.58438,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 25,0 c 0.72187,-0.28887 1.58438,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 221.1875,0.2901 c 0,-0.21616 0.69837,-0.661 1.55194,-0.98855 0.88992,-0.34149 1.29132,-0.17385 0.94098,0.39301 -0.58726,0.95021 -2.49292,1.40545 -2.49292,0.59554 z M 81.892883,680.79142 c -2.6125,-1.35993 -4.75,-2.69656 -4.75,-2.97028 0,-0.44638 9.89973,4.2296 10.91667,5.15631 1.2381,1.12826 -2.01533,-0.025 -6.16667,-2.18603 z m 441.249997,1.56573 c -1.82797,-1.18132 -0.24909,-1.18132 2.5,0 1.31874,0.56668 1.48906,0.87815 0.5,0.9144 -0.825,0.0302 -2.175,-0.38124 -3,-0.9144 z m 40,0 c 0.825,-0.53316 1.95,-0.96937 2.5,-0.96937 0.55,0 0.325,0.43621 -0.5,0.96937 -0.825,0.53316 -1.95,0.96937 -2.5,0.96937 -0.55,0 -0.325,-0.43621 0.5,-0.96937 z m 218,0.60699 c 0,-0.21616 0.69837,-0.661 1.55194,-0.98855 0.88992,-0.34149 1.29132,-0.17385 0.94098,0.39301 -0.58726,0.95021 -2.49292,1.40545 -2.49292,0.59554 z m 214.0306,-0.10699 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -477.0306,-2.5 c -0.825,-0.53316 -1.05,-0.96937 -0.5,-0.96937 0.55,0 1.675,0.43621 2.5,0.96937 0.825,0.53316 1.05,0.96937 0.5,0.96937 -0.55,0 -1.675,-0.43621 -2.5,-0.96937 z m 50,0 c 0.825,-0.53316 1.95,-0.96937 2.5,-0.96937 0.55,0 0.325,0.43621 -0.5,0.96937 -0.825,0.53316 -1.95,0.96937 -2.5,0.96937 -0.55,0 -0.325,-0.43621 0.5,-0.96937 z m 218.97829,-0.70369 c 1.36306,-0.98797 3.27556,-2.58381 4.25,-3.54631 0.97444,-0.9625 1.77171,-1.33064 1.77171,-0.81809 0,0.51254 -1.2375,1.78876 -2.75,2.83603 -3.6366,2.51802 -6.45092,3.83273 -3.27171,1.52837 z m -556.58923,-0.25044 c -1.16102,-0.4832 -3.86102,-3.14702 -6,-5.91961 l -3.88906,-5.04107 -29.79966,-0.0426 c -24.9707,-0.0357 -30.28803,-0.29515 -32.81343,-1.60108 -2.6939,-1.39307 -3.45812,-1.40007 -7.20034,-0.066 -4.73168,1.68685 -46.40919,3.06457 -50.09022,1.65581 -1.152987,-0.44126 -3.637767,-2.72565 -5.521737,-5.07643 -3.41366,-4.25952 -3.41537,-4.26693 -0.5,-2.1629 2.84233,2.05132 3.60197,2.09405 26.755447,1.50508 20.43729,-0.51988 24.13188,-0.85059 25.95,-2.32281 2.76503,-2.23899 2.85427,-8.0496 0.16994,-11.06623 -1.94585,-2.18672 -1.9455,-2.18863 0.16349,-0.89444 1.80956,1.11044 2.77918,0.97468 6.74281,-0.94408 2.54613,-1.23256 5.14777,-2.0682 5.78141,-1.85699 0.63365,0.21122 -0.73344,0.94895 -3.03797,1.6394 -6.33786,1.89887 -8.14542,8.19326 -3.64519,12.69348 l 2.45454,2.45455 h 32.41765 32.41764 l 0.62805,3.92761 c 0.40868,2.55575 1.54829,4.65147 3.26267,6 2.50119,1.96743 3.86577,2.07239 26.94399,2.07239 24.13389,0 24.32928,-0.0171 27.06515,-2.37041 2.06259,-1.77417 2.75576,-3.27995 2.75576,-5.98642 v -3.61602 l 2.3,2.16074 c 3.34291,3.1405 3.20295,9.61456 -0.27861,12.8878 -2.56792,2.41427 -2.67869,2.42519 -26.75,2.63651 -13.29426,0.11671 -25.12131,-0.18314 -26.28233,-0.66633 z m 1030.89896,-0.79587 c -13.3206,-7.32854 -26.1042,-30.26578 -31.9073,-57.25 -2.3082,-10.73296 -2.6253,-43.65493 -0.5251,-54.5 4.3909,-22.67276 13.2551,-43.41877 23.6137,-55.26559 5.75,-6.57615 11.1985,-10.23441 15.2427,-10.23441 5.4705,0 13.6388,4.50927 19.2096,10.60457 5,5.47083 12.4755,19.13041 13.6245,24.89543 0.3289,1.65 -0.9059,-0.6 -2.744,-5 -1.8381,-4.4 -4.8208,-10.14284 -6.6282,-12.76188 -4.9647,-7.19385 -16.405,-13.06909 -21.9942,-11.29516 -7.1034,2.25453 -16.2706,13.46204 -23.7672,29.05704 -15.7726,32.81114 -17.8653,74.54123 -5.4448,108.57412 8.1911,22.44406 18.1845,33.92588 29.5281,33.92588 2.8073,0 5.6442,-0.54 6.3042,-1.2 0.8613,-0.86131 1.2,-7.46989 1.2,-23.41451 v -22.2145 l -4.25,-2.37082 c -4.322,-2.41096 -13.4774,-6.27715 -21.9215,-9.25707 -2.998,-1.05799 -5.6424,-2.92134 -7.3814,-5.20132 -2.0752,-2.7207 -2.2692,-3.31819 -0.8284,-2.55125 1.0347,0.55081 5.403,2.18157 9.7073,3.62391 9.1077,3.05193 14.3281,5.52753 20.9221,9.92158 l 4.748,3.16398 v 24.63337 24.63337 l -2.25,0.60297 c -4.3199,1.1577 -11.3057,0.61683 -14.462,-1.11971 z M 509.84122,676.1081 c -4.11927,-2.38717 -4.18658,-2.94485 -1.21397,-10.0593 l 1.54247,-3.69165 h 34.54281 34.54281 l 2.0228,4.57287 c 1.11254,2.51507 1.81854,5.10257 1.5689,5.75 -0.45043,1.16814 -8.70416,6.2317 -8.70416,5.33989 0,-0.25586 1.575,-1.39448 3.5,-2.53026 2.53574,-1.49612 3.5,-2.7631 3.5,-4.59877 v -2.53373 h -31.41821 c -17.28002,0 -32.14666,0.27953 -33.03699,0.62118 -2.61917,1.00507 -4.9108,6.2329 -3.48518,7.95065 1.5709,1.89283 1.13978,1.78754 -3.36128,-0.82088 z m 487.33226,1.74905 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z M 71.042923,674.19702 c -2.42002,-1.73807 -4.73065,-3.65057 -5.13473,-4.25 -0.87964,-1.30491 -1.03032,-71.7357 -0.15832,-74.00808 0.52786,-1.37559 3.45478,-1.58179 22.45295,-1.58179 23.046387,0 26.541817,-0.5651 27.516497,-4.44852 0.29066,-1.1581 0.39237,-8.94708 0.22602,-17.30883 l -0.30246,-15.20319 2.45093,2.45393 c 1.98848,1.99091 2.53131,3.7163 2.87695,9.14445 0.40326,6.33313 0.50214,6.56156 1.85095,4.27634 1.93456,-3.27762 1.73538,-2.69216 -5.58095,16.40448 -3.52116,9.19074 -6.57125,16.5413 -6.77798,16.33458 -0.20672,-0.20673 0.0756,-1.56327 0.62737,-3.01455 l 1.00323,-2.63869 H 92.689563 c -16.30651,0 -19.65466,0.25084 -20.97525,1.57143 -1.36759,1.36758 -1.57143,6.02804 -1.57143,35.92752 v 34.35609 l 3.25,2.56139 c 4.59115,3.61837 2.92001,3.20836 -2.34996,-0.57656 z m 394.656657,-1.06238 c -1.37521,-1.96339 -1.5567,-10.93221 -1.5567,-76.92857 0,-66.58127 0.1709,-74.87697 1.57143,-76.27749 1.6334,-1.6334 6.10536,-2.08136 8.04742,-0.80612 1.42878,0.9382 6.40391,10.75476 6.31051,12.45145 -0.0389,0.70578 -0.9204,-0.62926 -1.95899,-2.96676 -2.04114,-4.59386 -4.56864,-5.50887 -7.39894,-2.67857 -1.39943,1.39943 -1.56975,9.36226 -1.55612,72.75 0.01,46.32378 0.35381,70.65479 0.98469,69.67857 1.43232,-2.21635 1.2047,-0.42568 -0.44897,3.53212 -1.70677,4.08487 -1.95193,4.1613 -3.99433,1.24537 z m 534.0772,-1.77749 c 0.33742,-1.375 1.22812,-3.85 1.97942,-5.5 1.0972,-2.40941 1.2453,-2.50784 0.7528,-0.5 -0.3374,1.375 -1.2281,3.85 -1.9794,5.5 -1.09722,2.40941 -1.24532,2.50784 -0.75282,0.5 z m 423.03282,1.33333 c -0.3667,-0.36666 -0.6667,-14.94352 -0.6667,-32.39301 0,-28.00778 0.1854,-31.79749 1.5818,-32.33333 0.87,-0.33385 10.7201,-0.60699 21.8892,-0.60699 26.4794,0 24.9111,1.08018 25.3575,-17.46475 0.1976,-8.20606 -0.1085,-14.89961 -0.7677,-16.79055 l -1.0961,-3.14449 3.054,3.42075 c 1.6797,1.88141 3.2985,4.39474 3.5973,5.58517 0.2988,1.19043 0.3949,8.27983 0.2136,15.75423 -0.4635,19.1108 1.0827,17.99776 -25.8935,18.63964 -17.2071,0.40943 -21.1848,0.77171 -21.9595,2 -0.5349,0.84815 -0.9526,13.55921 -0.9613,29.25 l -0.015,27.75 19.25,-0.0153 c 10.5875,-0.008 19.7471,-0.34592 20.3546,-0.75 0.6076,-0.40408 1.8271,-2.08469 2.71,-3.73469 0.8829,-1.65 1.6217,-2.55 1.6416,-2 0.02,0.55 -0.8554,2.4625 -1.9452,4.25 l -1.9816,3.25 h -21.848 c -12.0165,0 -22.1481,-0.3 -22.5147,-0.66667 z m -419.6361,-10.83333 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -724.47175,-2.0318 c -1.06762,-0.80751 -1.46022,-1.4682 -0.87244,-1.4682 0.58777,0 1.62888,0.675 2.31357,1.5 1.5572,1.87632 1.06734,1.86551 -1.44113,-0.0318 z m -9.05887,-3.4682 c -1.31874,-0.56668 -1.48906,-0.87815 -0.5,-0.9144 0.825,-0.0302 2.175,0.38124 3,0.9144 1.82797,1.18132 0.24909,1.18132 -2.5,0 z m 735.53062,0.5 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -322.39336,-2.90762 c -2.12451,-0.78882 -5.14936,-2.66688 -6.72189,-4.17346 -6.10493,-5.84889 -13.42751,-23.94256 -16.33169,-40.35464 l -0.60797,-3.43573 2.46027,2.31131 c 1.35315,1.27122 2.73063,3.71729 3.06107,5.43572 2.89073,15.03319 8.36508,30.60462 12.28053,34.93114 3.01917,3.33615 7.51051,5.00956 13.3038,4.9568 6.81917,-0.0621 12.47633,-2.73082 16.9255,-7.9845 1.76018,-2.07846 2.74244,-2.87902 2.18278,-1.77902 -4.22592,8.30606 -17.63584,13.40308 -26.5524,10.09238 z M 92.776823,651.35715 c 0.33732,-1.375 1.22805,-3.85 1.97938,-5.5 1.09714,-2.40941 1.24533,-2.50784 0.75274,-0.5 -0.33732,1.375 -1.22805,3.85 -1.97938,5.5 -1.09714,2.40941 -1.24533,2.50784 -0.75274,0.5 z m 914.396677,0.5 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -67.77992,-2.9843 c -10.3258,-2.90018 -22.13818,-10.87774 -28.39819,-19.1789 -5.5651,-7.37966 -11.02509,-17.9576 -12.49713,-24.21136 -1.44238,-6.12779 -1.63324,-18.14259 -0.35146,-22.12544 0.46977,-1.45968 0.58128,0.65407 0.26799,5.07959 -1.59273,22.49876 9.05786,41.03969 29.35248,51.09785 l 8.72171,4.32256 h 12.077 c 13.8692,0 18.012,-1.16182 28.5769,-8.01428 7.5259,-4.88133 10.4663,-7.87303 15.22,-15.48572 5.7171,-9.15536 7.0197,-13.51348 7.5512,-25.26365 0.42602,-9.41978 0.20622,-11.53321 -1.7606,-16.92741 -2.8453,-7.80341 -7.1848,-15.06598 -12.4167,-20.78047 -2.2516,-2.45934 -2.9689,-3.60666 -1.5939,-2.54959 6.9781,5.36458 16.28272,19.34896 19.14582,28.77533 2.9389,9.67564 2.3039,24.43025 -1.4429,33.52556 -5.62182,13.64665 -16.30002,24.37902 -29.70292,29.85333 -8.1448,3.32667 -24.3011,4.25542 -32.7493,1.8826 z m -460.62223,-2.45113 c 0.93802,-3.66097 3.29824,-8.77848 3.25822,-7.06457 -0.0193,0.825 -0.90064,3.3 -1.95862,5.5 -1.05798,2.2 -1.6428,2.90406 -1.2996,1.56457 z m -340.30307,-0.99957 c -8.46751,-3.04829 -11.37359,-5.10644 -10.22928,-7.24461 0.89659,-1.67528 2.71657,-1.82039 22.83207,-1.82039 19.3529,0 21.93009,0.1883 22.48836,1.64313 0.77067,2.00832 1.14373,1.65654 -5.06178,4.77294 -5.42667,2.72527 -8.61366,3.51853 -4.35477,1.08393 2.24787,-1.285 0.93677,-1.4295 -13,-1.43276 -13.84283,-0.003 -15.29247,0.15334 -13.55887,1.46456 1.06762,0.80751 2.64262,1.47509 3.5,1.48351 0.85738,0.008 2.23387,0.45153 3.05887,0.98469 2.3123,1.49432 0.0281,1.11795 -5.6746,-0.935 z m 871.30852,-0.065 c 0.3374,-1.375 1.2281,-3.85 1.9794,-5.5 1.0972,-2.40941 1.2453,-2.50784 0.7528,-0.5 -0.3374,1.375 -1.2281,3.85 -1.9794,5.5 -1.0972,2.40941 -1.2453,2.50784 -0.7528,0.5 z m 468.445,-2.58333 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z M 96.257083,641.85715 c 0.0188,-0.55 0.89975,-2.8 1.95773,-5 1.05798,-2.2 1.64352,-2.875 1.3012,-1.5 -0.70493,2.83149 -3.31113,8.02961 -3.25893,6.5 z m 843.385797,-1.44591 c -12.55313,-2.0701 -26.95003,-13.4943 -33.48944,-26.57448 -3.34537,-6.69143 -3.50238,-7.49572 -3.8026,-19.47961 l -0.31315,-12.5 4.05785,-8.33526 c 9.77711,-20.08322 29.10264,-30.48188 50.68414,-27.27203 16.4971,2.45364 29.6534,13.18807 37.5128,30.60729 1.9117,4.23711 2.261,6.75464 2.289,16.5 0.032,11.1545 -0.074,11.72604 -3.546,19.02366 -5.1707,10.86959 -13.0115,18.95661 -23.2588,23.98929 -7.0894,3.48179 -9.2252,4.05063 -16.6338,4.4302 -4.675,0.23951 -10.75,0.0644 -13.5,-0.38906 z m 28.1175,-16.12131 c 3.201,-1.83143 6.8432,-4.47802 8.0937,-5.88133 3.2007,-3.59164 7.0738,-11.82321 7.7878,-16.55145 0.5209,-3.44914 0.1699,-2.99983 -2.5489,3.26263 -5.7484,13.24081 -16.1275,20.86354 -30.4501,22.36357 -6.723,0.70412 -6.638,0.72132 2.1487,0.43478 8.2501,-0.26903 9.7205,-0.62544 14.9688,-3.6282 z m -33.0764,2.00069 c 1.0138,-1.64026 -0.1816,-2.24051 -3.0354,-1.52425 -1.4231,0.35718 -2.3175,1.08622 -1.9876,1.6201 0.8046,1.30185 4.1992,1.23707 5.023,-0.0959 z m 20.5164,-17.04083 c 1.3112,-2.45007 0.073,-4.26363 -2.2917,-3.35625 -1.6272,0.6244 -2.9677,3.9284 -1.9904,4.90571 1.1917,1.19165 3.2049,0.46316 4.2821,-1.54946 z m -39.25502,-1.36178 c 1.14137,-1.14138 -0.80874,-1.6884 -3.73097,-1.04657 -1.68933,0.37104 -3.07151,1.28245 -3.07151,2.02536 0,1.03835 0.72522,1.14275 3.13581,0.4514 1.7247,-0.49464 3.3747,-1.13822 3.66667,-1.43019 z m 45.31792,-6.75587 c 1.2819,-2.39526 -0.1845,-4.34812 -2.5759,-3.43045 -1.9389,0.74403 -2.9579,3.13573 -2.1893,5.1386 0.7202,1.87682 3.3514,0.93364 4.7652,-1.70815 z m 22.5726,-11.50596 c -0.2536,-0.97297 -0.4777,-0.41903 -0.4981,1.23097 -0.02,1.65 0.1871,2.44606 0.461,1.76903 0.274,-0.67703 0.2906,-2.02703 0.037,-3 z m -76.193,-2.26903 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 5.65385,-6 c 1.65,-1.65 2.62788,-3.03656 2.17307,-3.08124 -5.8629,-0.57601 -6.60895,-0.39387 -7.63801,1.86467 -0.83875,1.84086 -0.75784,2.56059 0.36795,3.27287 1.94685,1.23177 1.71563,1.32506 5.09699,-2.0563 z m 25.84615,-3.37756 c 0,-0.75765 -0.6976,-1.95649 -1.5502,-2.66409 -1.277,-1.05985 -1.8265,-1.01023 -3.1183,0.28159 -0.8625,0.86248 -1.2633,2.06132 -0.8908,2.6641 0.9855,1.59451 5.5593,1.36283 5.5593,-0.2816 z m -9.2322,-10.58253 c 2.0283,-1.67195 3.3411,-3.03991 2.9172,-3.03991 -1.2094,0 -10.72162,9.18615 -11.8648,11.45811 -0.56508,1.12304 0.38717,0.37235 2.1161,-1.6682 1.72893,-2.04055 4.80309,-5.07805 6.8315,-6.75 z m -14.76191,8.04342 c 0.27824,-0.0458 1.0549,-1.32083 1.72592,-2.83333 1.85147,-4.17329 8.63309,-10.36195 14.84099,-13.54337 1.6901,-0.86612 3.6355,-2.25268 4.3231,-3.08125 0.6877,-0.82858 1.7799,-1.30807 2.4272,-1.06555 0.6473,0.24253 1.6684,-0.62353 2.2692,-1.92457 0.9558,-2.07006 0.8621,-2.30535 -0.75,-1.88376 -1.0133,0.26497 -1.8423,0.81688 -1.8423,1.22646 0,0.40958 -1.081,0.53806 -2.4021,0.2855 -1.5268,-0.29185 -3.1139,0.25258 -4.3553,1.49394 -1.0742,1.07422 -3.1194,2.24585 -4.54489,2.60362 -4.24388,1.06515 -14.46673,12.0138 -16.0812,17.22294 -0.62779,2.02557 -0.0347,2.22814 4.38938,1.49937 z m 30.38781,-21.66689 c 0.3737,-0.97391 0.1502,-1.43108 -0.5805,-1.1875 -1.4949,0.49828 -2.3179,2.77106 -1.0035,2.77106 0.537,0 1.2498,-0.7126 1.584,-1.58356 z m 533.68522,85.00023 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m -767.99997,-2.26546 c -0.0906,-3.84432 -3.60028,-7.64345 -10.99165,-11.89825 -21.74929,-12.51986 -38.01957,-28.27069 -46.45278,-44.96972 -3.76446,-7.45421 -3.21844,-7.95073 0.71631,-0.65137 8.52031,15.80607 18.53632,25.41888 39.77157,38.17052 10.49053,6.29951 16.59014,12.14841 17.45021,16.73298 0.34641,1.84651 0.39481,3.94394 0.10756,4.66096 -0.28725,0.71702 -0.5578,-0.20329 -0.60122,-2.04512 z m 302.03527,-0.65121 c 0.019,-0.55 0.8997,-2.8 1.9577,-5 1.058,-2.2 1.6435,-2.875 1.3012,-1.5 -0.7049,2.83149 -3.3111,8.02961 -3.2589,6.5 z m 467.0437,-2.5 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m -1380.12729,-1.5 c 0,-0.55 0.43621,-1.675 0.96937,-2.5 0.53316,-0.825 0.96937,-1.05 0.96937,-0.5 0,0.55 -0.43621,1.675 -0.96937,2.5 -0.53316,0.825 -0.96937,1.05 -0.96937,0.5 z M 1481.1429,629.6788 c 0,-0.55642 1.0125,-1.86892 2.25,-2.91666 l 2.25,-1.90499 -1.9893,2.5 c -1.0942,1.375 -2.1067,2.6875 -2.25,2.91667 -0.1434,0.22916 -0.2607,-0.0386 -0.2607,-0.59502 z M 102.14288,627.01311 c 0,-1.31103 7.28807,-19.70123 7.66017,-19.32913 0.20723,0.20723 -1.25197,4.60597 -3.24267,9.77498 -3.45702,8.97644 -4.4175,11.05376 -4.4175,9.55415 z m 915.03062,-1.15596 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m 472.4694,-0.5 -4,-0.71619 3.691,-0.1419 c 2.03,-0.078 3.9691,0.30809 4.309,0.85809 0.3399,0.55 0.479,0.93614 0.309,0.85809 -0.1699,-0.078 -2.109,-0.46419 -4.309,-0.85809 z m -848.82487,-6.25 c -1.39565,-3.4375 -6.56219,-16.15 -11.48121,-28.25 -4.91903,-12.1 -14.57809,-35.95 -21.4646,-53 -6.88651,-17.05 -15.53014,-38.425 -19.20807,-47.5 -3.67793,-9.075 -7.56232,-17.4 -8.63198,-18.5 -1.87361,-1.92675 -3.25979,-2 -37.84603,-2 -19.74566,0 -35.268,-0.35435 -34.4941,-0.78745 0.7739,-0.4331 16.98447,-0.6581 36.02348,-0.5 l 34.61638,0.28745 4.34109,4.86518 c 3.4241,3.83748 5.80277,8.48465 11.26079,22 18.21087,45.09444 45.24395,111.55727 46.82993,115.13482 l 1.77325,4 0.67132,-3.5 c 0.46746,-2.43714 0.71129,-0.84286 0.80296,5.25 0.0724,4.8125 -0.0455,8.75 -0.26202,8.75 -0.21651,0 -1.53555,-2.8125 -2.93119,-6.25 z m -152.60451,3.02024 c -0.11459,-1.18386 3.14313,-8.8898 3.57544,-8.45749 0.21765,0.21764 -0.4819,2.37381 -1.55454,4.79148 -1.07265,2.41768 -1.98205,4.06738 -2.0209,3.66601 z m 530.92938,-1.11428 c 0,-1.31103 7.2881,-19.70123 7.6602,-19.32913 0.2072,0.20723 -1.252,4.60597 -3.2427,9.77498 -3.457,8.97644 -4.4175,11.05376 -4.4175,9.55415 z M 211.91693,589.10715 c -33.87582,-83.17885 -34.69635,-85.29379 -31.8779,-82.16601 1.52845,1.69619 4.15182,6.42119 5.82973,10.5 1.6779,4.0788 9.45159,23.16601 17.27487,42.41601 7.82327,19.25 14.73603,36.125 15.36169,37.5 0.87613,1.92545 1.25572,-8.87599 1.65172,-47 l 0.51416,-49.5 0.23584,54.75 c 0.12971,30.1125 0.10724,54.75 -0.05,54.75 -0.15718,0 -4.18026,-9.5625 -8.94016,-21.25 z m 1027.30487,17.66667 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m -595.07892,-1.79423 c 0,-0.20765 0.7875,-0.99515 1.75,-1.75 1.58606,-1.24387 1.62143,-1.2085 0.37756,0.37756 -1.30637,1.66575 -2.12756,2.19548 -2.12756,1.37244 z m 12.87244,-1.37244 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37756 1.66575,1.30637 2.19548,2.12756 1.37244,2.12756 -0.20765,0 -0.99515,-0.7875 -1.75,-1.75 z m 498.50438,-8.00616 c -14.508,-35.97202 -27.4295,-67.89265 -31.8757,-78.74384 -2.9296,-7.15 -7.1987,-17.725 -9.4868,-23.5 -2.288,-5.775 -4.8326,-11.625 -5.6547,-13 -0.9592,-1.60455 -0.3858,-1.24636 1.6008,1 4.3997,4.97497 4.3361,4.83521 20.021,44 18.4047,45.95629 24.9811,62.03441 26.3821,64.5 0.9394,1.65312 1.2343,0.52576 1.7002,-6.5 0.4976,-7.50301 0.5855,-6.82858 0.75,5.75 0.1025,7.8375 0.074,14.24723 -0.064,14.24384 -0.1375,-0.003 -1.6554,-3.49088 -3.3732,-7.75 z m -128.3462,4.25616 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m 215.7027,-0.62409 c 0.6784,-0.68342 1.4853,-0.99067 1.7932,-0.68278 0.3078,0.30789 -0.2472,0.86705 -1.2334,1.24258 -1.4252,0.54268 -1.54,0.42782 -0.5598,-0.5598 z m 27.5167,-1.62503 c 13.0625,-0.15789 34.4375,-0.15789 47.5,0 13.0625,0.1579 2.375,0.28709 -23.75,0.28709 -26.125,0 -36.8125,-0.12919 -23.75,-0.28709 z m -772.21939,-1.75088 c 0,-0.55 0.43621,-1.675 0.96937,-2.5 0.53316,-0.825 0.96937,-1.05 0.96937,-0.5 0,0.55 -0.43621,1.675 -0.96937,2.5 -0.53316,0.825 -0.96937,1.05 -0.96937,0.5 z m 530.99999,-1 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -707.64911,-14.3324 c -9.55643,-10.88791 -19.72806,-22.57405 -45.84195,-52.6676 -4.73478,-5.45635 -18.08027,-20.78602 -24.23138,-27.83406 -1.36037,-1.55873 -2.31438,-2.99307 -2.12003,-3.18743 0.19436,-0.19435 8.21903,8.70881 17.83261,19.78481 9.61358,11.07599 19.50424,22.42643 21.97924,25.22319 2.475,2.79676 11.475,13.16769 20,23.0465 18.9207,21.9254 21.66618,24.79134 22.97467,23.98264 0.66618,-0.41172 1.02533,-11.9418 1.02533,-32.91697 v -32.28329 l -7.75,-3.5283 c -4.2625,-1.94056 -9.7906,-4.26174 -12.28467,-5.15817 -2.90834,-1.04532 -5.15165,-2.67432 -6.25496,-4.54209 l -1.72029,-2.91222 6.75496,2.43463 c 9.3578,3.37275 16.49267,6.95495 19.61375,9.84747 l 2.64121,2.44779 -0.0997,33.29775 c -0.0548,18.31376 -0.39232,34.27317 -0.75,35.46535 -0.56855,1.89504 -2.04841,0.57473 -11.76881,-10.5 z m 178.64912,10.3324 c 0,-0.55 0.43621,-1.675 0.96937,-2.5 0.53316,-0.825 0.96937,-1.05 0.96937,-0.5 0,0.55 -0.43621,1.675 -0.96937,2.5 -0.53316,0.825 -0.96937,1.05 -0.96937,0.5 z m 530.99999,-1 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m 282.4694,-2.94217 c -1.65,-0.7411 -4.1948,-2.89219 -5.655,-4.78019 l -2.6551,-3.43275 3.7573,1.85897 c 3.9499,1.95425 7.4599,1.46701 9.723,-1.34968 0.5984,-0.7448 5.1872,-18.41151 10.1974,-39.25936 5.0102,-20.84785 9.3252,-38.12093 9.5889,-38.38461 1.8322,-1.83225 12.5546,6.24793 12.5282,9.441 -0.01,1.12196 -0.3042,1.41622 -0.75,0.74849 -0.4041,-0.60516 -1.7997,-1.66159 -3.1014,-2.34762 -4.2633,-2.24693 -4.2051,-2.40961 -14.1133,39.44792 -7.8039,32.96755 -8.1864,34.30798 -10.3581,36.29348 -3.0696,2.80651 -5.7097,3.31493 -9.1619,1.76435 z m -278.9268,-6.55783 c 0.3678,-1.375 1.0858,-3.175 1.5955,-4 0.6441,-1.04249 0.7228,-0.73748 0.2581,1 -0.3678,1.375 -1.0858,3.175 -1.5955,4 -0.6441,1.04249 -0.7228,0.73748 -0.2581,-1 z M 787.21918,570.0426 c -12.72405,-24.06185 -18.35955,-33.80003 -19.10825,-33.01917 -0.43966,0.45855 -0.94983,5.40005 -1.13372,10.98112 -0.26681,8.09801 -0.70263,10.55389 -2.15793,12.16007 -3.99526,4.40947 -10.85627,3.54378 -13.99255,-1.76553 l -1.6973,-2.87329 2.93624,1.10831 c 3.77551,1.42509 7.73278,-0.24083 9.09729,-3.82977 0.53896,-1.41756 0.97992,-8.71309 0.97992,-16.21229 0,-8.2044 0.36182,-13.25653 0.90845,-12.6849 2.03902,2.13228 30.51502,55.35986 29.92981,55.94507 -0.2067,0.20671 -2.79959,-4.20762 -5.76196,-9.80962 z m 112.00265,8.73122 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 0.95004,-2.77669 c -0.0726,-2.15446 6.82552,-13.36758 10.78353,-17.52892 l 4.38577,-4.61106 -3.96164,4.73457 c -2.1789,2.60402 -5.58547,7.77902 -7.57015,11.5 -1.98468,3.72099 -3.62156,6.37842 -3.63751,5.90541 z m 404.33153,-8.63998 c 0,-5.225 0.1685,-7.3625 0.3745,-4.75 0.206,2.6125 0.206,6.8875 0,9.5 -0.206,2.6125 -0.3745,0.475 -0.3745,-4.75 z m -267.3299,6.5 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -387.40708,-3.03866 c -0.34295,-0.8937 -0.59502,-2.15061 -0.56015,-2.79313 0.0349,-0.64251 0.49453,-0.0904 1.02148,1.22697 0.52695,1.31735 0.77902,2.57426 0.56015,2.79313 -0.21887,0.21887 -0.67854,-0.33327 -1.02148,-1.22697 z m -525.59291,-0.96134 c 0,-0.55 0.43621,-1.675 0.96937,-2.5 0.53316,-0.825 0.96937,-1.05 0.96937,-0.5 0,0.55 -0.43621,1.675 -0.96937,2.5 -0.53316,0.825 -0.96937,1.05 -0.96937,0.5 z M 491.236,564.46837 c -2.25122,-2.68883 -4.09312,-5.22452 -4.09312,-5.63486 0,-0.41034 0.93266,0.43961 2.07258,1.88878 2.68492,3.41332 8.66411,3.68828 11.52243,0.52987 1.802,-1.99118 1.90499,-4.13148 1.90499,-39.58835 v -37.48337 l -2.36078,-1.91164 c -1.29844,-1.05141 -1.84643,-1.91165 -1.21778,-1.91165 0.62865,0 1.54998,-1.0125 2.0474,-2.25 0.8824,-2.1953 0.90593,-2.18584 0.96777,0.38922 0.0929,3.86806 2.90886,6.44874 8.56339,7.8479 2.75,0.68046 9.6125,3.44472 15.25,6.14279 7.74649,3.70743 10.25,5.37533 10.25,6.82882 0,1.05778 -0.45,2.20135 -1,2.54127 -0.55,0.33992 -1,0.14906 -1,-0.42414 0,-1.38225 -7.86251,-5.2592 -16.28519,-8.03013 -5.2896,-1.74019 -7.09763,-1.97291 -8.20268,-1.0558 -1.16371,0.96579 -1.47072,7.5032 -1.71481,36.51401 l -0.29732,35.3376 -2.42431,2.57923 c -1.7658,1.87863 -3.4382,2.57923 -6.15689,2.57923 -3.24292,0 -4.2695,-0.64131 -7.82568,-4.88878 z m 547.9375,4.38878 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m 437.2933,-0.13764 c -0.6468,-0.26386 -2.3934,-2.0758 -3.8813,-4.02653 -2.3254,-3.04877 -2.4153,-3.39156 -0.6397,-2.44131 5.5893,2.99128 11.5457,0.13496 12.6971,-6.08874 0.3364,-1.81818 0.474,-19.80547 0.3058,-39.97176 -0.2619,-31.39962 -0.104,-36.49851 1.0991,-35.5 3.7677,3.12697 4.0951,6.61776 4.0951,43.66598 0,38.34108 -0.3501,41.51143 -4.8496,43.91951 -2.0412,1.09242 -6.6653,1.32442 -8.8265,0.44285 z M 747.14288,566.2678 c -2.15377,-1.76168 -2.1961,-1.89635 -0.30569,-0.97239 1.20687,0.58987 2.47092,1.52008 2.80901,2.06712 0.90258,1.4604 0.29641,1.19531 -2.50332,-1.09473 z m 413.07892,0.50602 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m 262.1542,-25.16667 0.2669,-25.75 16,-0.27173 c 15.6496,-0.26577 16.0307,-0.22247 17.4005,1.97741 1.8694,3.00213 7.1122,15.77838 7.0508,17.18186 -0.027,0.61185 -1.2324,-1.81254 -2.6791,-5.38754 -1.4467,-3.575 -3.1123,-6.83061 -3.7013,-7.23469 -0.589,-0.40408 -6.7763,-0.74158 -13.7495,-0.75 -10.2072,-0.0123 -12.9849,0.291 -14.25,1.55612 -1.3283,1.32835 -1.5714,4.80526 -1.5714,22.47692 v 20.9055 l 17.75,0.29767 17.75,0.29768 -20.2669,0.2254 -20.2669,0.2254 z m -684.48476,19.34992 c -7.36585,-4.18757 -8.75002,-5.60353 -2.24836,-2.29999 4.60941,2.34207 9.67521,5.68143 8.5,5.60316 -0.275,-0.0183 -3.08824,-1.50474 -6.25164,-3.30317 z m 303.28226,2.90008 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -393.95167,-2.08333 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m -519.73401,-0.75957 c 2.19506,-6.09602 2.06339,-6.6571 -1.56222,-6.6571 -2.29445,0 -4.10629,-0.74669 -5.45964,-2.25 -3.55329,-3.94703 -3.65555,-4.70574 -0.51277,-3.8044 3.37865,0.96898 8.57074,-0.89025 9.54003,-3.41619 0.35731,-0.93114 0.65655,-6.71868 0.66497,-12.8612 0.008,-6.14251 0.40766,-11.78763 0.8872,-12.5447 0.71568,-1.1299 1.72028,-0.95278 5.60765,0.98867 2.60468,1.30084 4.92839,2.86709 5.1638,3.48057 0.40096,1.04488 -13.23713,37.32141 -14.43913,38.40725 -0.30442,0.275 -0.25487,-0.32931 0.11011,-1.3429 z m 10.5664,-27.6571 c 2.60669,-6.86743 2.59855,-7.21152 -0.16134,-6.81955 -2.03085,0.28843 -2.27955,0.94973 -2.55343,6.78965 -0.16689,3.55855 -0.0941,6.25855 0.16184,6 0.2559,-0.25856 1.40472,-2.9451 2.55293,-5.9701 z m 508.16761,24.41667 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 516.07897,-0.41667 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m -439.25288,-5.13892 c -16.08474,-10.39391 -20.90504,-16.54278 -20.90504,-26.66688 0,-10.47924 7.01844,-21.60175 14.00963,-22.20183 8.37016,-0.71843 13.44454,2.75396 18.85285,12.90099 3.44588,6.46514 8.4552,19.1223 7.81958,19.75792 -0.21814,0.21813 -1.41121,-2.42666 -2.65128,-5.87733 -3.56415,-9.91784 -8.08113,-17.74863 -11.15456,-19.33796 -4.43159,-2.29166 -10.25428,-1.8302 -13.72174,1.08748 -7.33154,6.16908 -10.51378,20.09494 -6.20628,27.15938 2.12441,3.48409 9.85397,9.94483 16.69282,13.95266 3.82352,2.24073 5.16422,3.36449 4.01402,3.36449 -0.18973,0 -3.22723,-1.86251 -6.75,-4.13892 z m 321.66818,2.13892 c 0.3678,-1.375 1.0858,-3.175 1.5955,-4 0.6441,-1.04249 0.7228,-0.73748 0.2581,1 -0.3678,1.375 -1.0858,3.175 -1.5955,4 -0.6441,1.04249 -0.7228,0.73748 -0.2581,-1 z m -399.34122,-2 c 0,-1.925 0.2058,-2.7125 0.45733,-1.75 0.25152,0.9625 0.25152,2.5375 0,3.5 -0.25153,0.9625 -0.45733,0.175 -0.45733,-1.75 z m 657.92592,1 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m 164,0 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m -549.85209,-0.70567 c 1.79382,-2.06139 13.69417,-8.90335 13.69417,-7.8733 0,0.29608 -1.9125,1.49887 -4.25,2.67287 -2.3375,1.174 -5.825,3.29129 -7.75,4.70508 -2.71762,1.99593 -3.09633,2.10666 -1.69417,0.49535 z M 65.749873,551.77536 c -0.33385,-0.86998 -0.60699,-12.70498 -0.60699,-26.3 0,-17.89194 0.3314,-25.04961 1.2,-25.91821 1.55868,-1.55868 30.06042,-1.66618 32.94156,-0.12424 1.105537,0.59167 3.267817,3.87904 4.805057,7.30527 4.12063,9.1841 4.6633,12.11278 0.85587,4.61897 l -3.30249,-6.5 -14.151707,-0.27686 c -11.88487,-0.23251 -14.40774,-0.0208 -15.75,1.32143 -1.36928,1.36928 -1.59829,4.80888 -1.59829,24.00527 v 22.40697 l 19.25,0.2945 19.249997,0.2945 -21.143007,0.22709 c -18.49286,0.19863 -21.21909,0.0288 -21.75,-1.35469 z m 419.550897,-0.41821 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 493.71451,0.25 c -1.2438,-1.58606 -1.2085,-1.62143 0.3776,-0.37756 1.6657,1.30637 2.1955,2.12756 1.3724,2.12756 -0.2076,0 -0.9951,-0.7875 -1.75,-1.75 z m -7.1224,-3.81573 c -2.6125,-1.35993 -4.75,-2.69656 -4.75,-2.97028 0,-0.27373 2.25,0.64248 5,2.03601 2.75,1.39353 5,2.75111 5,3.01685 0,0.66145 0.09,0.69714 -5.25,-2.08258 z m 494.40792,0.56573 c 0,-1.375 0.227,-1.9375 0.5044,-1.25 0.2774,0.6875 0.2774,1.8125 0,2.5 -0.2774,0.6875 -0.5044,0.125 -0.5044,-1.25 z m -721.00003,-1 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 557.07413,-1 c 0,-1.925 0.2058,-2.7125 0.4573,-1.75 0.2516,0.9625 0.2516,2.5375 0,3.5 -0.2515,0.9625 -0.4573,0.175 -0.4573,-1.75 z m -818.15307,0.41667 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 562.95167,1.08333 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -402.68781,-10 c 0.004,-4.4 0.17944,-6.07561 0.39069,-3.72357 0.21124,2.35204 0.20827,5.95204 -0.007,8 -0.21487,2.04796 -0.38771,0.12357 -0.38408,-4.27643 z m 820.22861,4.92857 c -0.3678,-1.46551 -0.4759,-2.85742 -0.2402,-3.09314 0.2358,-0.23571 0.7296,0.77049 1.0974,2.236 0.3678,1.46551 0.4759,2.85742 0.2402,3.09314 -0.2358,0.23571 -0.7296,-0.77049 -1.0974,-2.236 z m -982.85713,-3.64286 c -0.91066,-2.84768 -1.48976,-5.34358 -1.2869,-5.54644 0.20286,-0.20286 1.13554,1.93947 2.07261,4.76073 0.93707,2.82126 1.51617,5.31716 1.28689,5.54644 -0.22928,0.22928 -1.16195,-1.91304 -2.0726,-4.76073 z m 262.36466,3.63096 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 189.73355,0.90022 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.3323 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m 115.21812,-0.81689 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -104.28062,-1.23221 c 2.3375,-0.21053 6.1625,-0.21053 8.5,0 2.3375,0.21054 0.425,0.3828 -4.25,0.3828 -4.675,0 -6.5875,-0.17226 -4.25,-0.3828 z m 222.28062,0.23221 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z M 113.22183,539.77382 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.3323,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 630,-1 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 307.95167,-0.91667 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -938.87273,-2.5 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 732.29331,-8.6541 c -2.06467,-3.76524 -4.53661,-8.1959 -5.49319,-9.8459 -0.95658,-1.65 -4.98769,-9.075 -8.95801,-16.5 -3.97032,-7.425 -8.15315,-15.075 -9.29517,-17 l -2.07641,-3.5 2.28422,1.99407 c 2.56892,2.2426 5.87401,7.82212 18.53168,31.28443 7.45055,13.81037 9.00594,16.09271 10.25855,15.05313 1.48613,-1.23337 11.69029,-20.80853 11.10889,-21.31073 -0.17147,-0.14811 -4.58676,-1.92899 -9.81176,-3.95752 -12.77831,-4.96098 -13.61285,-5.41827 -14.85217,-8.13826 l -1.07308,-2.35516 7.21263,2.59516 c 8.92253,3.21039 16.62166,6.65693 19.06539,8.53469 1.76636,1.35726 1.59246,1.94272 -3.72851,12.55241 -3.0697,6.12082 -6.44479,12.54869 -7.5002,14.28417 l -1.91892,3.15541 z m 208.54882,6.37798 c 0,-1.29076 5.2795,-14.77772 5.6426,-14.41459 0.2109,0.21088 -0.7855,3.49006 -2.2143,7.28706 -2.4444,6.49614 -3.4283,8.5417 -3.4283,7.12753 z m 118.5643,-2.01701 c 0.3755,-0.98622 0.9347,-1.54122 1.2426,-1.23333 0.3079,0.30789 6e-4,1.11479 -0.6828,1.79313 -0.9876,0.98026 -1.1025,0.8654 -0.5598,-0.5598 z m -1060.99289,-2.2783 c -0.36782,-1.46551 -0.47591,-2.85742 -0.24019,-3.09314 0.23571,-0.23571 0.72951,0.77049 1.09733,2.236 0.36782,1.46551 0.47591,2.85742 0.24019,3.09314 -0.23571,0.23571 -0.72951,-0.77049 -1.09733,-2.236 z m 534.58646,-3.42857 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m -536.53435,-3.53866 c -0.34295,-0.8937 -0.59502,-2.15061 -0.56015,-2.79313 0.0349,-0.64251 0.49453,-0.0904 1.02148,1.22697 0.52695,1.31735 0.77902,2.57426 0.56015,2.79313 -0.21887,0.21887 -0.67854,-0.33327 -1.02148,-1.22697 z m 1068.37648,-0.46134 c 0.5887,-1.1 1.2954,-2 1.5704,-2 0.275,0 0.018,0.9 -0.5704,2 -0.5887,1.1 -1.2954,2 -1.5704,2 -0.275,0 -0.018,-0.9 0.5704,-2 z m -529.92107,-4.58333 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 533.89957,-1.38643 c 1.163,-1.63337 2.6253,-3.28538 3.2495,-3.67115 0.6242,-0.38576 -0.1252,0.95063 -1.6653,2.96976 -3.3426,4.38248 -4.6026,4.94029 -1.5842,0.70139 z m -121.9479,1.46976 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -410.99999,-3 c 0,-0.55 0.43621,-1.675 0.96937,-2.5 0.53316,-0.825 0.96937,-1.05 0.96937,-0.5 0,0.55 -0.43621,1.675 -0.96937,2.5 -0.53316,0.825 -0.96937,1.05 -0.96937,0.5 z m 413.50559,-3.12049 c 0.4304,-1.76758 -0.3753,-2.54268 -4.8416,-4.65736 -2.9469,-1.39527 -8.8204,-3.76606 -13.0522,-5.2684 -6.2812,-2.22985 -8.283,-3.48661 -10.8992,-6.84264 -1.7627,-2.26111 -2.5265,-3.5769 -1.6973,-2.92398 0.8291,0.65292 5.9305,2.78818 11.3363,4.74501 9.8332,3.55948 18.868,7.95148 20.5425,9.98617 0.5358,0.651 0.3338,2.27618 -0.5073,4.08169 -0.7687,1.65 -1.1652,2.04578 -0.8812,0.87951 z m 124.9638,-2.37951 c 0.9955,-1.1 2.035,-2 2.31,-2 0.275,0 -0.3145,0.9 -1.31,2 -0.9955,1.1 -2.035,2 -2.31,2 -0.275,0 0.3145,-0.9 1.31,-2 z m -654.41442,-0.5 c 0.10413,-1.89422 1.77076,-5.08385 1.8288,-3.5 0.0302,0.825 -0.38124,2.175 -0.9144,3 -0.53316,0.825 -0.94464,1.05 -0.9144,0.5 z m 121.9144,-6.5 c 0.5887,-1.1 1.29537,-2 1.57037,-2 0.275,0 0.0183,0.9 -0.57037,2 -0.5887,1.1 -1.29537,2 -1.57037,2 -0.275,0 -0.0183,-0.9 0.57037,-2 z m -522.26679,-1.25 c -1.41112,-1.06965 -1.69119,-3.99601 -1.94113,-20.28256 l -0.29208,-19.03257 2.5,2.97065 c 2.40491,2.85764 2.51902,3.6292 3,20.2844 0.51189,17.72535 0.30058,18.76419 -3.26679,16.06008 z m 1063.76681,-1.6739 c 4.6213,-5.02242 20.5,-17.2792 20.5,-15.824 0,0.26517 -1.8397,1.69956 -4.0881,3.18753 -2.2485,1.48797 -7.536,5.67347 -11.75,9.30112 -4.2141,3.62765 -6.3119,5.12855 -4.6619,3.33535 z m -537.50002,-2.5761 c 1.29175,-1.375 2.57363,-2.5 2.84863,-2.5 0.275,0 -0.55688,1.125 -1.84863,2.5 -1.29175,1.375 -2.57363,2.5 -2.84863,2.5 -0.275,0 0.55688,-1.125 1.84863,-2.5 z m -353.22405,-0.53712 2.27594,-2.46288 24.52478,-0.30001 c 24.20003,-0.29603 24.53651,-0.32914 25.41067,-2.5 0.8118,-2.01601 0.89115,-1.9491 0.94886,0.80001 l 0.063,3 h -25.39533 c -23.769,0 -25.5461,0.1257 -27.74959,1.96288 l -2.35428,1.96288 z m -68.77595,-1.96288 -7.5,-0.63968 7,-0.10988 c 3.85,-0.0604 7.9,0.27687 9,0.74956 1.10871,0.47643 1.33153,0.81046 0.5,0.74956 -0.825,-0.0604 -4.875,-0.39773 -9,-0.74956 z m 430,-5.76455 c 0,-1.72422 15.86755,-11.28096 21,-12.64792 1.375,-0.36622 -0.65,0.85556 -4.5,2.71506 -3.85,1.8595 -9.1375,5.02415 -11.75,7.03255 -2.6125,2.00841 -4.75,3.31355 -4.75,2.90031 z m 551.00002,-5.58274 c 0,-0.67861 9.092,-5.89401 9.5233,-5.46277 0.2014,0.20144 -1.8589,1.61707 -4.5785,3.14584 -2.7197,1.52878 -4.9448,2.57139 -4.9448,2.31693 z M 833.14288,480.9796 c 0,-0.20766 0.7875,-0.99516 1.75,-1.75 1.58606,-1.24388 1.62143,-1.20851 0.37756,0.37755 -1.30637,1.66575 -2.12756,2.19548 -2.12756,1.37245 z m 198.77662,-1.65957 2.2767,-2.46288 34.7233,-0.0505 34.7234,-0.0505 -34.6466,0.55047 c -32.5146,0.51661 -34.7914,0.67126 -37,2.51336 l -2.3534,1.96288 2.2766,-2.46288 z m -633.52662,0.2876 c 18.0125,-0.1528 47.4875,-0.1528 65.5,0 18.0125,0.15279 3.275,0.27781 -32.75,0.27781 -36.025,0 -50.7625,-0.12502 -32.75,-0.27781 z m 417.25,-1.25048 c -1.1,-0.47269 -20.675,-0.89795 -43.5,-0.94503 -22.825,-0.0471 -42.02025,-0.41621 -42.65611,-0.82028 -1.31609,-0.83636 79.44306,-0.55965 84.37103,0.28908 1.76821,0.30453 3.48226,0.98626 3.80902,1.51496 0.68505,1.10844 0.64384,1.10766 -2.02394,-0.0387 z m 23.2873,-1.17972 c 0.94199,-0.37384 15.4377,-0.67971 32.2127,-0.67971 16.775,0 31.27071,0.30587 32.2127,0.67971 0.94198,0.37385 -13.55374,0.67972 -32.2127,0.67972 -18.65896,0 -33.15468,-0.30587 -32.2127,-0.67972 z m 391.21272,-2.23568 c 1.375,-0.73443 3.625,-1.61541 5,-1.95773 1.375,-0.34232 0.7,0.24322 -1.5,1.3012 -4.5254,2.17628 -7.3303,2.70242 -3.5,0.65653 z m 85.5,-1.14478 c -1.65,-0.80849 -2.1,-1.1257 -1,-0.7049 1.1,0.42079 38.45,0.99659 83,1.27955 l 81,0.51447 -80,0.19043 c -68.6288,0.16335 -80.4264,-0.0185 -83,-1.27955 z m -624.68752,-0.12293 c 0.72187,-0.28888 1.58438,-0.25335 1.91667,0.079 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28495 -0.60417,-0.60417 z m 28.6875,-0.31689 c -1.26064,-0.54172 -1.44548,-0.85943 -0.5,-0.85943 0.825,0 2.4,0.38674 3.5,0.85943 1.26064,0.54171 1.44548,0.85943 0.5,0.85943 -0.825,0 -2.4,-0.38674 -3.5,-0.85943 z m -24.6875,-0.68311 c 0.72187,-0.28888 1.58438,-0.25335 1.91667,0.079 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28495 -0.60417,-0.60417 z m 8.30784,-1.59583 c 2.71717,-0.52342 6.42436,-0.51893 9,0.0109 3.84359,0.79068 3.27806,0.89963 -4.62034,0.89005 -8.06942,-0.01 -8.52227,-0.10295 -4.37966,-0.90096 z m 541.69218,-1.40417 c 0.7219,-0.28888 1.5844,-0.25335 1.9167,0.079 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28495 -0.6042,-0.60417 z m 59,0 c 0.7219,-0.28888 1.5844,-0.25335 1.9167,0.079 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28495 -0.6042,-0.60417 z m -55,-1 c 0.7219,-0.28888 1.5844,-0.25335 1.9167,0.079 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28495 -0.6042,-0.60417 z m 51,0 c 0.7219,-0.28888 1.5844,-0.25335 1.9167,0.079 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28495 -0.6042,-0.60417 z m -44.8125,-1.31689 c 1.375,-0.44035 3.625,-0.79225 5,-0.782 2.2456,0.0167 2.1947,0.0963 -0.5,0.782 -1.65,0.41985 -3.9,0.77176 -5,0.782 -1.5672,0.0146 -1.459,-0.15462 0.5,-0.782 z m 35,0 c -3.3918,-0.71394 -3.4073,-0.73771 -0.5,-0.76868 1.65,-0.0176 4.125,0.32833 5.5,0.76868 3.2789,1.05009 -0.011,1.05009 -5,0 z m -20.25,-1.73724 c 2.8875,-0.202 7.6125,-0.202 10.5,0 2.8875,0.202 0.525,0.36727 -5.25,0.36727 -5.775,0 -8.1375,-0.16527 -5.25,-0.36727 z\"\n         id=\"path84\"\n         inkscape:connector-curvature=\"0\" />\n      <path\n         style=\"fill:#a3a3a3;fill-opacity:1\"\n         d=\"m 1258.176,717.22869 c -20.0698,-4.21129 -37.3644,-12.72571 -53.2093,-26.19593 -3.6719,-3.12158 -7.1594,-5.67561 -7.75,-5.67561 -1.8131,0 -1.2088,3.60806 1.9262,11.5 5.3781,13.53858 3.752,17.84823 -7.1609,18.97797 -3.4865,0.36094 -28.6141,0.51356 -55.8391,0.33914 -53.5043,-0.34276 -52.2667,-0.21472 -56.7972,-5.8766 l -2.2973,-2.87092 2.7973,1.45904 c 2.3524,1.22702 11.5621,1.46003 57.9123,1.46521 54.2491,0.006 55.1566,-0.0264 57.75,-2.06642 1.6845,-1.32503 2.6349,-3.04673 2.6349,-4.7734 0,-1.48545 -2.6534,-9.35054 -5.8964,-17.47798 l -5.8965,-14.77716 9.6465,9.33012 c 28.5368,27.60106 63.0229,37.87327 103.2755,30.7622 18.2472,-3.22357 28.8273,-4.7894 37.215,-5.50772 12.7295,-1.09014 11.6559,3.85191 11.6559,-53.65474 0,-45.41101 -0.1338,-49.32223 -1.75,-51.14551 -1.6913,-1.90799 -1.6789,-1.93698 0.3685,-0.86392 1.1652,0.61068 2.4027,0.82616 2.75,0.47884 0.3473,-0.34732 0.6365,22.28102 0.6425,50.28518 0.01,28.00417 0.2848,52.57236 0.6194,54.59598 0.5945,3.59565 0.5204,3.70167 -3.261,4.6623 -2.1282,0.54065 -7.0194,1.2765 -10.8694,1.63523 -3.85,0.35874 -16.1522,2.1982 -27.3382,4.0877 -24.0621,4.06449 -36.475,4.3818 -51.1287,1.307 z m 101.4669,1.03142 c -1.65,-0.50417 -3.7237,-1.92608 -4.6083,-3.15981 l -1.6083,-2.24315 69.8069,0.26334 69.8069,0.26334 2.0514,-2.2019 c 1.9968,-2.1433 2.0514,-3.25407 2.0514,-41.73556 v -39.53366 l 2.25,2.24877 c 2.2411,2.23989 2.2512,2.3959 2.5546,39.47663 0.3471,42.41466 0.099,44.39597 -5.8082,46.4126 -4.2808,1.46133 -131.7591,1.6569 -136.4964,0.2094 z m -362.00002,-1.98913 c -1.65,-0.47451 -4.295,-2.49732 -5.8779,-4.49514 -2.6914,-3.397 -2.7215,-3.52994 -0.4652,-2.05155 2.1379,1.40079 6.3625,1.49838 37.09312,0.85685 39.0769,-0.81577 38.1082,-0.60624 38.2008,-8.26291 l 0.049,-4.06588 2.25,2.60816 c 3.0476,3.5327 2.9987,8.83881 -0.11,11.9475 -1.8135,1.81352 -3.8395,2.4887 -8.75,2.91596 -11.5902,1.00847 -59.3299,1.42704 -62.39002,0.54701 z m -229,-3.40531 c -0.55,-0.18347 -2.14138,-0.58239 -3.53639,-0.88649 -1.39501,-0.3041 -3.5398,-1.91009 -4.76619,-3.56887 l -2.2298,-3.01597 2.58129,0.98141 c 3.00892,1.14399 97.35348,1.34981 99.05139,0.21609 3.25021,-2.17023 3.3997,-5.07021 3.39794,-65.91895 l -0.002,-60.81574 23.71007,-47.1451 c 22.58863,-44.91524 23.65066,-47.28013 22.45412,-50 l -1.25595,-2.8549 2.49565,3 c 5.33876,6.41766 5.91689,4.76344 -19.02797,54.44555 l -22.87241,45.55445 -0.5,62 c -0.38156,47.31331 -0.79889,62.52262 -1.76177,64.20625 -0.69397,1.21343 -2.94397,2.67342 -5,3.24442 -3.37251,0.93661 -90.03996,1.45795 -92.73823,0.55785 z M 1.249855,710.05071 c -1.866166,-0.65646 -3.983998,-2.09356 -4.706294,-3.19356 -1.284257,-1.95582 -1.120958,-1.99191 7.393029,-1.63377 4.788461,0.20142 29.084943,0.0355 53.992183,-0.36877 51.364337,-0.83365 49.560237,-0.52782 49.660787,-8.41833 l 0.0533,-4.18393 2.25,2.60816 c 3.00751,3.48626 2.95745,8.56266 -0.11971,12.14007 l -2.36972,2.75496 -26.380277,0.72131 C 39.540563,711.6111 5.16366,711.42747 1.249835,710.05071 Z M 1262.1429,709.78944 c -14.9693,-2.60282 -23.5577,-5.24465 -34.2682,-10.54106 -11.8726,-5.87104 -19.3221,-11.31179 -29.8552,-21.80462 -47.6256,-47.44367 -47.8537,-127.48741 -0.4978,-174.67543 18.1436,-18.07924 37.2133,-27.90368 61.9496,-31.91561 17.0926,-2.77221 33.0505,-1.1892 51.5314,5.11187 l 10.3597,3.53217 77.6723,-0.72165 c 59.2031,-0.55005 78.1996,-0.43939 79.8902,0.46538 l 2.218,1.18703 v 38.76481 c 0,40.8835 -0.031,41.16482 -4.5776,41.16482 -3.1943,0 -3.9483,-1.47265 -6.3053,-12.31575 -2.1421,-9.8547 -7.7717,-26.20179 -11.0377,-32.05099 l -1.7494,-3.13326 -19.165,-0.27159 -19.165,-0.2716 v 29.5035 29.50349 l 23.75,0.2681 23.75,0.2681 0.2774,14.86454 c 0.1887,10.1102 -0.09,15.30766 -0.8725,16.25 -0.9185,1.10673 -5.7523,1.38546 -24.0273,1.38546 h -22.8776 v 36 36 h 25.5418 25.5418 l 3.0552,-6.75 c 4.6784,-10.33613 7.3378,-18.69999 10.4005,-32.70975 0.8368,-3.82787 2.0703,-7.30848 2.7411,-7.73469 2.2206,-1.41098 5.6336,-0.83468 6.6844,1.1287 0.6608,1.23468 1.0352,15.49514 1.0352,39.42857 0,32.75241 -0.1987,37.69305 -1.5714,39.06574 -1.3974,1.39741 -9.0165,1.57143 -68.8,1.57143 -50.9556,0 -67.5191,-0.29047 -68.4286,-1.2 -0.9175,-0.91746 -1.2,-24.93194 -1.2,-101.99373 V 506.3697 l -4.25,-3.09921 c -2.3375,-1.70456 -6.3417,-4.16673 -8.8981,-5.47149 l -4.6481,-2.37229 -2.7005,11.21522 c -1.4852,6.16837 -4.9146,20.44022 -7.6209,31.71522 -10.0292,41.78487 -9.4321,40 -13.3824,40 -1.2403,0 -2.7007,-0.5625 -3.2453,-1.25 -0.5446,-0.6875 -1.2561,-7.325 -1.5811,-14.75 -0.7081,-16.1796 -3.2078,-27.31679 -8.6409,-38.5 -5.0856,-10.46796 -12.3053,-18.4807 -20.2112,-22.43134 -13.6024,-6.7972 -23.0998,-2.25125 -35.3089,16.90081 -17.6568,27.69753 -24.4432,69.60985 -17.0064,105.03053 5.6753,27.03128 19.7739,51.47578 33.6881,58.40952 5.9908,2.98533 9.3891,3.20033 16.6242,1.05174 l 5.1815,-1.53874 v -26.424 -26.424 l -5.75,-3.8965 c -8.0016,-5.42234 -13.0146,-7.83919 -23.032,-11.10419 -9.3414,-3.04467 -10.8693,-4.34283 -9.8572,-8.37525 0.4898,-1.95161 1.474,-2.76009 3.8973,-3.20145 1.783,-0.32476 24.071,-0.45697 49.5289,-0.2938 39.8356,0.25532 46.4191,0.50573 47.2347,1.79667 0.5617,0.88916 0.9539,20.71235 0.963,48.67857 0.013,39.5618 -0.2153,47.40913 -1.4128,48.60665 -0.8881,0.88809 -4.7638,1.69272 -10.25,2.128 -4.852,0.38496 -16.2469,2.05278 -25.3219,3.70628 -15.6323,2.84827 -38.9951,4.53079 -46,3.31279 z m 105,-8.61851 c 3.7287,-0.26 4.5,-0.65656 4.5,-2.31378 0,-1.69858 -0.6405,-1.98818 -4.25,-1.92157 -2.3375,0.0431 -4.25,-0.36411 -4.25,-0.90499 0,-0.54088 -0.824,-0.23769 -1.8312,0.67375 -1.0071,0.91145 -2.1321,1.35619 -2.5,0.98833 -0.3678,-0.36787 -0.6688,0.0249 -0.6688,0.87281 0,0.84792 -0.2874,3.06042 -0.6387,4.91667 l -0.6386,3.375 2.8886,-2.68622 c 2.0624,-1.91781 4.176,-2.77598 7.3887,-3 z m -71.7685,-4.9225 c 2.163,-2.09912 3.6267,-4.31175 3.2526,-4.91695 -0.374,-0.60519 0.1003,-1.96262 1.0541,-3.01649 1.6112,-1.7804 1.6155,-1.96163 0.061,-2.55827 -0.9479,-0.36375 -2.4501,0.0607 -3.4649,0.97915 -2.5327,2.29209 -3.234,2.0145 -2.1452,-0.84917 0.7189,-1.89089 0.5774,-2.67295 -0.6032,-3.33362 -1.2928,-0.72348 -1.1251,-1.1366 1.036,-2.55261 1.4181,-0.92918 2.5784,-2.25376 2.5784,-2.94351 0,-1.74887 5.8087,-7.93606 6.8477,-7.29391 0.468,0.28924 1.8187,-0.58719 3.0016,-1.94761 2.5065,-2.88272 2.7347,-3.89638 0.7016,-3.11621 -0.9685,0.37166 -1.2646,0.0755 -0.893,-0.89301 0.3059,-0.79699 0.9579,-1.44907 1.4491,-1.44907 0.4911,0 0.893,-0.4822 0.893,-1.07157 0,-0.58936 -1.0125,-0.94074 -2.25,-0.78085 -3.1134,0.40227 -5.4732,-1.07461 -3.6068,-2.25727 1.0857,-0.68789 1.0381,-0.86274 -0.2382,-0.875 -2.1431,-0.0206 -5.2807,3.56779 -4.3857,5.01585 0.3933,0.63645 1.7874,0.95221 3.0979,0.70168 1.3105,-0.25052 2.3828,-0.0275 2.3828,0.49554 0,1.50875 -4.2415,4.61395 -7.2385,5.29927 -3.6581,0.8365 -4.9708,2.93668 -1.4101,2.25601 1.4567,-0.27847 2.6486,-0.15552 2.6486,0.27322 0,2.11845 -1.5156,4.15839 -4.0715,5.48011 -3.5503,1.83592 -4.0069,1.83079 -3.2901,-0.037 0.3166,-0.825 0.098,-1.5 -0.4861,-1.5 -0.5839,0 -1.3513,1.5439 -1.7053,3.43088 -0.4121,2.19644 -1.1007,3.25551 -1.9139,2.94345 -0.6986,-0.2681 -1.4924,0.36218 -1.764,1.4006 -0.5058,1.93427 -3.8619,3.08027 -14.4969,4.95026 -3.4071,0.59908 -5.578,0.56902 -6.2333,-0.0863 -0.5531,-0.55305 -1.2595,-0.75162 -1.5699,-0.44126 -0.3103,0.31036 0.1643,1.29286 1.0548,2.18333 1.4921,1.49207 1.4612,1.61905 -0.3934,1.61905 -1.1068,0 -2.2691,0.41538 -2.5829,0.92306 -0.3137,0.50769 -1.8842,1.21161 -3.4899,1.56428 -1.6057,0.35267 -3.4556,1.28729 -4.1109,2.07694 -0.9718,1.17093 -0.8001,1.43572 0.9309,1.43572 1.1673,0 2.1224,-0.37934 2.1224,-0.84298 0,-0.46364 4.3875,-1.6466 9.75,-2.62881 9.8627,-1.80646 18.4056,-3.8022 21.3711,-4.99253 0.9136,-0.36673 2.3007,0.029 3.1785,0.90681 0.8567,0.85663 2.0397,1.55751 2.629,1.55751 0.5893,0 1.0714,0.39754 1.0714,0.88342 0,1.24889 -4.7141,2.00245 -5.7909,0.92568 -0.5252,-0.52515 -1.3914,-0.29437 -2.1,0.55949 -0.8204,0.98847 -0.8708,1.66064 -0.1577,2.1014 1.9844,1.22639 1.1398,3.68053 -1.2014,3.49088 -3.9766,-0.32211 -5.75,0.0137 -5.75,1.08879 0,0.6945 2.0806,0.81426 6.1494,0.35393 5.3134,-0.60115 6.6839,-1.21453 10.0821,-4.51231 z m 106.7886,3.58455 c 1.5452,-1.86186 0.536,-3.18227 -1.2801,-1.67497 -1.7032,1.41349 -8.7722,-0.12439 -10.3235,-2.24589 -1.5652,-2.14059 -3.6102,-1.95606 -3.2294,0.29141 0.172,1.0155 -0.3048,2.5905 -1.0596,3.5 -1.2571,1.51472 -0.7004,1.65362 6.6276,1.65362 5.9475,0 8.3245,-0.39104 9.265,-1.52417 z m 18.4799,0.52417 c -0.3399,-0.55 -1.2399,-1 -2,-1 -0.7601,0 -1.6601,0.45 -2,1 -0.3519,0.5694 0.5093,1 2,1 1.4907,0 2.3519,-0.4306 2,-1 z m 9.5,-1 c 0,-1.1 -0.2092,-2 -0.4648,-2 -0.2557,0 -0.9465,0.9 -1.5352,2 -0.8543,1.5963 -0.7605,2 0.4648,2 0.8685,0 1.5352,-0.86852 1.5352,-2 z m 20,1 c 0,-1.2702 -3.0345,-1.2702 -5,0 -1.1383,0.7356 -0.7162,0.97307 1.75,0.98469 1.7875,0.008 3.25,-0.43469 3.25,-0.98469 z m 3.7499,-1.58347 c -0.953,-0.95296 -2.8635,0.5906 -2.1533,1.7397 0.4221,0.683 0.9814,0.66575 1.6996,-0.0524 0.5888,-0.58876 0.7929,-1.34803 0.4537,-1.68727 z m 18.0523,0.69194 c 0.3388,-1.02758 -0.2292,-1.26 -2.1717,-0.88867 -1.7098,0.32686 -2.6305,0.0639 -2.6305,-0.75148 0,-0.68989 -0.675,-1.51336 -1.5,-1.82995 -2.1672,-0.83161 -1.9446,2.9981 0.25,4.30197 2.2912,1.36126 5.4732,0.92389 6.0522,-0.83187 z m 12.3642,-1.13802 c 0.3631,-1.66471 -0.1282,-1.97045 -3.1664,-1.97045 -1.1,0 -2,0.45 -2,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,0.765 1.5,1.7 0,1.96699 1.647,0.6521 2.1664,-1.72955 z m -105.6091,-0.38869 c 1.0668,-0.78003 1.6413,-1.71649 1.2768,-2.08102 -0.8428,-0.84279 -4.8341,1.24978 -4.8341,2.53444 0,1.36334 1.2992,1.19773 3.5573,-0.45342 z m -72.6183,-2.18631 c 1.3414,-1.4135 3.0022,-3.65573 3.6907,-4.98273 1.0608,-2.04472 1.0182,-2.41272 -0.2792,-2.41272 -2.5331,0 -9.174,5.33944 -9.6391,7.75 -0.615,3.18774 3.0647,2.97824 6.2276,-0.35455 z m 79.561,1.60455 c 1.0809,-1.74886 -0.5219,-3.22667 -2.089,-1.92611 -0.7761,0.64405 -1.411,1.5659 -1.411,2.04855 0,1.20559 2.7384,1.10978 3.5,-0.12244 z m 36.5,-1.5 c 2.0838,-2.21814 2.1441,-2.5 0.5346,-2.5 -0.9978,0 -2.4119,0.7875 -3.1426,1.75 -2.9356,3.8672 -0.8767,4.4593 2.608,0.75 z m -61.9576,-2.85762 c -1.3352,-1.3352 -3.5742,0.68812 -2.5662,2.31905 0.5188,0.83942 1.081,0.82103 2.1552,-0.0705 1.0083,-0.83681 1.1342,-1.52538 0.411,-2.24856 z m 14.9576,-0.45595 c 0,-1.2558 -0.2928,-1.18151 -1.4682,0.37244 -1.9208,2.53959 -1.9402,4.02496 -0.032,2.44113 0.825,-0.68469 1.5,-1.9508 1.5,-2.81357 z m 108.1943,0.28644 c 1.4589,-3.20189 0.043,-4.8215 -3.449,-3.94509 -3.0298,0.76045 -4.4174,5.12358 -1.848,5.81126 3.3273,0.89054 4.1774,0.59105 5.297,-1.86617 z m -235.1943,-0.47287 c 0,-1.94919 -1.0607,-2.606 -2.2644,-1.40223 -0.8011,0.80111 0.2473,3.40223 1.3714,3.40223 0.4911,0 0.893,-0.9 0.893,-2 z m 87.277,-2.3125 c 1.3981,-4.22222 -0.041,-4.55882 -3.3394,-0.78106 -1.6157,1.85052 -2.9376,3.55849 -2.9376,3.79549 0,0.237 1.2028,0.28852 2.6729,0.11449 1.9027,-0.22525 2.9412,-1.12679 3.6041,-3.12892 z m 46.723,1.20551 c 0,-1.14261 -2.7118,-1.16842 -3.4138,-0.0325 -0.2925,0.47329 -0.2751,1.11728 0.039,1.4311 0.7803,0.78038 3.375,-0.29485 3.375,-1.39861 z m -60.2,-0.093 c 1.5538,-1.5538 1.5314,-2.80406 -0.05,-2.78469 -2.1107,0.0259 -4.0443,1.69949 -3.3191,2.87289 0.8856,1.43291 1.8739,1.40704 3.3691,-0.0882 z m 139.7214,-0.82363 c 1.3075,-1.44481 1.5235,-2.3315 0.755,-3.1 -1.2797,-1.27962 -5.7163,2.60289 -4.7539,4.1601 0.9009,1.4576 1.9791,1.17178 3.9989,-1.0601 z m -221.8445,-1.22638 c 3.4434,-3.82495 3.8586,-5.05474 1.4483,-4.28975 -1.2609,0.4002 -2.1252,0.24042 -2.1252,-0.39286 0,-0.58707 -0.45,-1.06739 -1,-1.06739 -0.55,0 -1,0.8449 -1,1.87756 0,1.03265 -0.6963,2.45543 -1.5473,3.16172 -1.2359,1.02571 -1.2862,1.44982 -0.25,2.10714 1.8868,1.19693 2.2383,1.08723 4.4742,-1.39642 z m 150.3231,-2.40499 c 0,-1.65833 -0.1635,-1.66036 -3.2851,-0.0409 -2.0089,1.04227 -2.3149,1.6593 -1.5237,3.07304 0.9385,1.6771 1.089,1.67922 2.8994,0.0409 1.0502,-0.95041 1.9094,-2.33327 1.9094,-3.07303 z m 60.592,1.15499 c 0.9992,-1.52499 2.5804,-2.5 4.0544,-2.5 1.329,0 2.6828,-0.69441 3.0085,-1.54313 0.929,-2.42081 -0.3634,-2.87789 -3.0885,-1.09233 -3.0703,2.01175 -4.9622,2.10919 -4.2365,0.21822 0.7363,-1.91876 -2.0038,-2.82764 -4.499,-1.49229 -2.5554,1.36763 -11.1562,1.99417 -11.8573,0.86377 -0.2895,-0.46677 -1.1857,-0.44116 -1.9916,0.0569 -3.0241,1.86899 0.7101,3.41156 7.6393,3.15572 3.6356,-0.13423 6.8957,-0.33919 7.2445,-0.45547 0.3488,-0.11627 0.7705,0.2386 0.937,0.7886 0.1666,0.55 -0.5084,1.13885 -1.5,1.30855 -4.1072,0.70295 -4.869,1.2217 -3.2748,2.22993 2.6676,1.68702 5.8784,1.03396 7.564,-1.53848 z m -198.8068,-0.19734 c 1.4931,-0.93354 2.8724,-1.8036 3.0649,-1.93347 0.1926,-0.12987 0.037,-0.743 -0.346,-1.3625 -0.4723,-0.76428 -1.1258,-0.54456 -2.0328,0.68347 -1.0711,1.45023 -1.5885,1.56147 -2.604,0.55984 -1.3268,-1.30868 -4.8673,-1.73341 -4.8673,-0.58389 0,0.61015 3.1226,4.13637 3.7852,4.27446 0.1568,0.0327 1.5068,-0.70437 3,-1.63791 z m 131.7559,-1.36919 c 1.1726,-1.89735 -0.5376,-2.36554 -2.2792,-0.62395 -1.5589,1.55895 -1.5617,1.69048 -0.035,1.69048 0.9104,0 1.9519,-0.47994 2.3144,-1.06653 z m -156.7911,-1.91982 c 0.6875,-0.008 1.25,-0.4245 1.25,-0.92665 0,-1.475 -6.292,-0.72146 -6.8022,0.81464 -0.3473,1.04565 0.1399,1.2396 1.9183,0.76366 1.3112,-0.3509 2.9464,-0.64414 3.6339,-0.65165 z m 137.711,-0.36149 c 1.7873,-1.30687 1.7851,-1.40603 -0.07,-3.26149 -1.0525,-1.0525 -1.7504,-2.76163 -1.5508,-3.79806 0.2641,-1.37104 -0.065,-1.72036 -1.2065,-1.28219 -2.1866,0.83909 -3.0474,-0.97934 -1.0047,-2.12249 1.1077,-0.61989 1.4773,-1.67461 1.0968,-3.12965 -0.3157,-1.20706 -0.091,-3.57997 0.4992,-5.27313 0.8084,-2.3189 0.7586,-3.5823 -0.202,-5.12038 -1.0897,-1.74484 -0.9951,-2.26908 0.6497,-3.60334 1.0587,-0.85879 2.2234,-2.34134 2.5884,-3.29457 0.4007,-1.04676 1.2725,-1.49943 2.2013,-1.14301 2.217,0.85073 4.5949,-0.31182 3.9698,-1.94081 -0.4501,-1.17293 -1.0786,-1.14603 -3.9832,0.17049 -1.8968,0.85974 -3.4487,1.94596 -3.4487,2.41383 0,0.46787 -0.45,0.57256 -1,0.23264 -0.55,-0.33992 -1.0069,-2.95398 -1.0153,-5.80902 -0.017,-5.60736 -1.1033,-8.35374 -2.8729,-7.26008 -1.4552,0.89934 -1.4458,7.5691 0.011,7.5691 0.7413,0 0.6685,0.54708 -0.2143,1.61073 -0.9708,1.16971 -1.2646,4.5034 -1.0731,12.17532 0.145,5.81052 0.5052,10.95541 0.8004,11.43307 0.2952,0.47767 0.056,1.44762 -0.5313,2.15545 -0.7864,0.94756 -0.5233,1.87168 0.9975,3.50412 1.9356,2.07761 1.9645,2.37151 0.459,4.66924 -1.5471,2.36107 -1.5202,2.45207 0.7252,2.45207 1.2826,0 3.1614,-0.60653 4.1752,-1.34784 z m 45.066,0.39151 c -0.3251,-0.52598 -1.2516,-0.70283 -2.059,-0.39301 -2.0671,0.79323 -1.8235,1.34934 0.591,1.34934 1.1325,0 1.7931,-0.43035 1.468,-0.95633 z m 13.7432,-0.96885 c 0.3532,-1.35055 0.09,-1.76634 -0.8834,-1.39301 -0.7627,0.29269 -1.3868,1.15902 -1.3868,1.92518 0,2.07843 1.6912,1.68199 2.2702,-0.53217 z m 46.1465,0.67518 c 0.4666,-1 0.7,-1 1.1666,0 0.3209,0.6875 1.4227,1.25 2.4485,1.25 2.1937,0 6.9682,-4.14549 6.9682,-6.05022 0,-0.72648 1.0125,-2.39837 2.25,-3.71531 1.7547,-1.86729 2.2751,-3.65863 2.3638,-8.13671 0.063,-3.15825 0.599,-7.28476 1.192,-9.17002 1.722,-5.47424 2.6751,-17.34296 1.3257,-16.50903 -0.6223,0.38463 -1.1315,1.31594 -1.1315,2.06958 0,2.75626 -7.141,22.84162 -10.474,29.46017 l -3.4286,6.80811 -6.5487,0.70131 c -3.6018,0.38572 -6.5487,0.90948 -6.5487,1.16392 0,2.88421 9.1879,4.76136 10.4167,2.1282 z m 14.5833,-0.86663 c 0,-1.13664 -3.7136,-1.15586 -4.4138,-0.0229 -0.2925,0.47329 -0.293,1.09934 0,1.39124 0.7843,0.78432 4.4149,-0.34097 4.4149,-1.36839 z m -185,0.67565 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 84.5551,-2.80902 c 1.9008,-1.7875 4.1659,-3.86514 5.0335,-4.61698 1.0359,-0.89767 1.2392,-1.70523 0.5922,-2.35222 -1.1728,-1.17276 -7.1808,2.90362 -7.1808,4.87207 0,0.70222 -0.9,1.75843 -2,2.34713 -1.1,0.5887 -2,1.50453 -2,2.03518 0,1.82486 2.1057,0.95865 5.5551,-2.28518 z m -77.2623,1 c 3.2356,-1.50263 3.4073,-2.33366 0.6322,-3.05936 -1.1847,-0.30982 -2.9009,0.16454 -4,1.10561 -3.646,3.12177 -1.6458,4.28213 3.3678,1.95375 z m -65.863,-2.42754 c 0.3641,-0.94904 -0.024,-2.3449 -0.8931,-3.21429 -1.0282,-1.02825 -1.5367,-1.13495 -1.5367,-0.32246 0,0.66786 0.5625,1.24982 1.25,1.29324 0.6875,0.0434 -0.038,0.54789 -1.6132,1.12105 -2.1477,0.78173 -2.5225,1.25788 -1.5,1.90574 2.0996,1.33019 3.586,1.05899 4.293,-0.78328 z m 82.664,-2.14603 c 3.4515,0.503 3.3951,-1.91015 -0.062,-2.66953 -2.4285,-0.5334 -3.5786,-0.1902 -5.4733,1.63339 -2.9568,2.84585 -2.3191,4.40446 0.9308,2.27502 1.3115,-0.85935 3.3837,-1.41685 4.6049,-1.23888 z m -106.3702,-0.55222 c 1.0279,-1.30668 3.2794,-2.6856 5.0035,-3.06427 1.7241,-0.37868 3.6709,-1.33457 4.3262,-2.12422 0.6554,-0.78965 1.628,-1.43572 2.1614,-1.43572 0.5334,0 2.0684,-0.86412 3.4111,-1.92028 3.0882,-2.42916 1.2457,-3.88077 -2.1236,-1.67311 -1.8306,1.19942 -3.0376,1.34033 -5.0211,0.58619 -3.396,-1.29114 -3.4811,-1.27613 -3.4811,0.61419 0,1.01759 0.5502,1.39587 1.5,1.03138 0.825,-0.31658 1.5,-0.19482 1.5,0.27057 0,1.67616 -3.1286,3.39176 -6.0346,3.30914 -1.631,-0.0464 -2.9654,0.36215 -2.9654,0.90782 0,0.54567 0.45,0.71402 1,0.3741 0.55,-0.33992 1,-0.14148 1,0.44098 0,0.58246 -1.575,1.05902 -3.5,1.05902 -2.25,0 -3.5,0.47619 -3.5,1.33333 0,3.43092 4.1137,3.60889 6.7236,0.29088 z m 8.2764,-0.12421 c 0,-0.83333 -0.8889,-1.5 -2,-1.5 -1.9922,0 -2.6011,1.06554 -1.3333,2.33333 1.2179,1.21793 3.3333,0.68908 3.3333,-0.83333 z m 62.5,-0.5 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -51.5,-4.55902 c 0,-0.85746 -0.4573,-1.27636 -1.0163,-0.9309 -0.559,0.34546 -0.7574,1.04702 -0.441,1.55902 0.8572,1.38704 1.4573,1.12841 1.4573,-0.62812 z m 55,-0.44098 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 111.6462,-2 c 1.1536,0 7.3594,-7.97602 7.3385,-9.43178 -0.01,-0.72953 -0.2483,-0.71936 -0.75,0.0321 -1.4201,2.1268 -5.1025,3.37614 -8.1528,2.76607 -1.8125,-0.36249 -3.0819,-0.20103 -3.0819,0.392 0,0.5546 -0.9,1.24372 -2,1.53138 -1.1,0.28766 -2,0.11514 -2,-0.38337 0,-1.4963 -2.7419,-1.02124 -3.357,0.58162 -0.3141,0.81841 -0.2497,1.44012 0.143,1.38158 2.0459,-0.30495 3.214,0.2876 3.214,1.63042 0,0.93333 0.9444,1.5 2.5,1.5 1.7022,0 2.5101,0.55848 2.5318,1.75 0.03,1.66667 0.095,1.66667 1.3602,0 0.7307,-0.9625 1.7451,-1.75 2.2542,-1.75 z m -76.6462,0.89301 c 0,-0.60884 0.6717,-0.84925 1.4926,-0.53424 0.8209,0.31501 2.0584,-0.1191 2.75,-0.96469 0.6916,-0.84559 2.0449,-2.40518 3.0074,-3.46576 1.8219,-2.00751 2.3987,-5.92832 0.8721,-5.92832 -2.586,0 -7.9622,3.30908 -10.3721,6.38412 -3.4036,4.34296 -3.4602,5.61588 -0.25,5.61588 1.375,0 2.5,-0.49814 2.5,-1.10699 z m 49.3899,-4.14301 c 0.6563,-2.78432 0.056,-3.24219 -2.8081,-2.14301 -1.8715,0.71814 -2.0759,3.4989 -0.3818,5.19301 1.4493,1.44926 2.3274,0.60968 3.1899,-3.05 z m -86.7317,1.48239 c 0.645,-0.4104 1.3097,-3.9498 1.5,-7.98694 0.3003,-6.36891 0.1291,-7.24968 -1.4082,-7.2477 -2.3307,0.003 -2.2265,-1.67234 0.1843,-2.96257 2.6341,-1.40975 3.0497,-1.3159 3.1654,0.71482 0.064,1.11671 0.3584,0.8453 0.8146,-0.75 0.4274,-1.49441 0.2868,-2.66581 -0.3496,-2.91223 -2.6458,-1.02442 -3.4096,-3.52317 -2.0626,-6.74714 0.7302,-1.74763 1.0895,-3.41568 0.7984,-3.70679 -0.2911,-0.29111 -0.6135,-2.01531 -0.7164,-3.83156 -0.1461,-2.57882 -0.5812,-3.23286 -1.986,-2.9854 -1.0735,0.18911 -1.5329,-0.1133 -1.1394,-0.75 0.3626,-0.58678 0.1828,-1.06688 -0.3997,-1.06688 -1.2054,0 -1.2686,1.24071 -1.0449,20.5 0.2659,22.89439 0.062,21.3752 2.6441,19.73239 z m 10.0968,-2.98239 c 0.5925,-1.79918 -2.2686,-1.54099 -3.8347,0.34604 -1.1565,1.39347 -1.0233,1.55212 1.0492,1.25 1.3056,-0.19032 2.5591,-0.90854 2.7855,-1.59604 z m 14.245,0.25 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -0.825,0 -1.5,0.675 -1.5,1.5 0,0.825 0.675,1.5 1.5,1.5 0.825,0 1.5,-0.675 1.5,-1.5 z m 71,-3.5 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m -61.5,-2 c 0.3399,-0.55 -0.083,-1 -0.941,-1 -0.8574,0 -1.559,0.45 -1.559,1 0,0.55 0.4234,1 0.941,1 0.5175,0 1.2191,-0.45 1.559,-1 z m 11.0573,-1.41824 c 1.0668,-0.78003 1.6926,-1.66515 1.3909,-1.96693 -0.8808,-0.8808 -6.2796,0.87932 -6.7164,2.18969 -0.55,1.65012 2.9653,1.50308 5.3255,-0.22276 z m 37.7107,-0.58176 c 0.9418,-1.1 1.4622,-2 1.1565,-2 -1.2939,0 -4.4245,2.14758 -4.4245,3.03518 0,1.56386 1.4306,1.11068 3.268,-1.03518 z m 22.4975,0.004 c 1.3372,-2.14113 1.2758,-3.68425 -0.1279,-3.21635 -0.4743,0.1581 -1.4185,-0.47315 -2.0983,-1.40278 -0.7266,-0.9937 -1.7464,-1.37472 -2.4747,-0.92459 -0.8921,0.55134 -0.9346,1.06993 -0.1517,1.85278 1.5289,1.52893 1.3509,2.68713 -0.4129,2.68713 -0.825,0 -1.5,0.49814 -1.5,1.10699 0,0.60884 0.675,0.84797 1.5,0.53138 0.825,-0.31658 1.5,-0.13972 1.5,0.39301 0,1.71017 2.4781,1.03392 3.7655,-1.02757 z m -198.188,-2.84221 c -2.1354,-0.41672 -3.0036,0.34001 -2.0886,1.82043 0.4947,0.8004 1.1313,0.74862 2.2559,-0.18347 1.4115,-1.16994 1.3949,-1.33208 -0.1673,-1.63696 z m 126.1645,-0.17332 c 1.4067,-1.10645 3.1539,-3.16128 3.8829,-4.56629 1.2404,-2.39103 1.1828,-2.53431 -0.8998,-2.23828 -1.422,0.20213 -2.3405,1.12917 -2.5449,2.56848 -0.1759,1.23871 -1.1884,2.71704 -2.25,3.28519 -1.0616,0.56814 -1.9302,1.46715 -1.9302,1.9978 0,1.43826 0.9043,1.18526 3.742,-1.0469 z m 8.5737,-2.12373 c 2.918,-1.51685 2.8153,-1.35948 2.1008,-3.22142 -0.8298,-2.16248 -3.0218,-2.10084 -3.8005,0.10687 -0.3395,0.9625 -0.8795,2.3125 -1.2,3 -0.7225,1.54998 0.078,1.58158 2.8997,0.11455 z m 44.6843,0.13526 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -68,-1 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m 92.5594,-0.0961 c 0.3726,-0.60286 1.9742,-0.9058 3.559,-0.67319 1.874,0.27504 2.8816,-0.0175 2.8816,-0.8365 0,-0.69268 0.9,-1.54506 2,-1.89419 1.7099,-0.5427 2,-1.51303 2,-6.68983 0,-5.24585 -0.1988,-5.8901 -1.4873,-4.82074 -0.818,0.67888 -2.1018,0.99849 -2.8529,0.71026 -0.7511,-0.28823 -2.1238,0.36137 -3.0504,1.44355 -1.0186,1.18961 -2.3883,1.74433 -3.464,1.4029 -1.1278,-0.35796 -2.6424,0.35403 -4.1367,1.94457 -1.2965,1.38011 -1.8289,2.50929 -1.183,2.50929 0.6459,0 1.1743,1.125 1.1743,2.5 0,1.375 0.4359,2.5 0.9686,2.5 0.5328,0 0.7096,0.675 0.393,1.5 -0.672,1.75128 2.1452,2.10709 3.1978,0.40388 z m -81.8032,-1.6539 c 0.5963,-1.81583 -3.2641,-1.54787 -4.8268,0.33505 -1.1552,1.39196 -0.9663,1.54423 1.5505,1.25 1.5762,-0.18428 3.0506,-0.89755 3.2763,-1.58505 z m 18.2438,-0.45 c 0,-1.61542 -0.2957,-1.90429 -1.1129,-1.08713 -0.612,0.61207 -0.8105,1.60207 -0.441,2.2 1.0344,1.67368 1.5539,1.30164 1.5539,-1.11287 z m 47.0797,-0.39604 c 1.1565,-1.39347 1.0233,-1.55212 -1.0492,-1.25 -1.3056,0.19032 -2.5591,0.90854 -2.7855,1.59604 -0.5925,1.79918 2.2686,1.54099 3.8347,-0.34604 z m 4.4203,-0.40396 c 0.3399,-0.55 0.168,-1 -0.382,-1 -0.55,0 -1.2781,0.45 -1.618,1 -0.3399,0.55 -0.168,1 0.382,1 0.55,0 1.2781,-0.45 1.618,-1 z m -87.5,-1.5 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -1.5616,0 -1.984,1.1827 -0.8333,2.33333 1.1506,1.15064 2.3333,0.72824 2.3333,-0.83333 z m 10.5,-1.5 c -0.4838,-0.78284 -1.0591,-0.84093 -1.7257,-0.17426 -0.55,0.55 -0.6735,1.52841 -0.2743,2.17426 0.4838,0.78284 1.0591,0.84093 1.7257,0.17426 0.55,-0.55 0.6735,-1.52841 0.2743,-2.17426 z m -119.5,-1.41821 c 0,-0.23002 0.2638,-1.10556 0.5861,-1.94565 0.5041,-1.31347 0.1539,-1.36426 -2.5,-0.36255 -3.7259,1.40638 -4.0097,2.72641 -0.5861,2.72641 1.375,0 2.5,-0.1882 2.5,-0.41821 z m 199,-0.58179 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -204.75,-1.9426 c 4.2537,-2.13216 3.5634,-4.18218 -0.75,-2.22711 -1.925,0.87252 -3.5,2.20515 -3.5,2.96139 0,0.75624 0.3375,1.21055 0.75,1.00957 0.4125,-0.20099 1.9875,-0.98572 3.5,-1.74385 z m 192.5397,-1.64743 c 0.1593,-0.0858 -0.6282,-0.39599 -1.75,-0.68935 -1.558,-0.4074 -2.0397,-0.0542 -2.0397,1.49544 0,1.77583 0.2182,1.86179 1.75,0.68935 0.9625,-0.73671 1.8803,-1.40966 2.0397,-1.49544 z m 7.2103,-0.73715 c 0,-0.55339 0.2842,-0.72199 0.6315,-0.37467 1.1226,1.12258 4.3685,-1.31034 4.3685,-3.27432 0,-2.81698 -1.4933,-3.24117 -3.5213,-1.00025 -0.9838,1.08703 -2.3242,1.97642 -2.9787,1.97642 -1.7365,0 -4.8038,3.69938 -4.0623,4.89928 0.7648,1.23735 5.5623,-0.683 5.5623,-2.22646 z m -180.6838,-1.67282 c 1.645,0 3.8997,-3.74852 2.7005,-4.48967 -0.9109,-0.56301 -9.0167,3.97177 -9.0167,5.04442 0,0.29131 0.5598,1.12898 1.2441,1.86147 1.0288,1.1013 1.4713,1.00746 2.5567,-0.54221 0.7219,-1.0307 1.8538,-1.87401 2.5154,-1.87401 z m 159.1952,-3.72237 c 0.092,-1.5277 -0.264,-3.33773 -0.7904,-4.0223 -0.5264,-0.68457 -0.7057,-2.20595 -0.3984,-3.38084 0.5428,-2.07583 -1.8238,-5.70666 -2.9715,-4.5589 -0.3045,0.30452 -0.8818,3.33663 -1.2829,6.73801 -0.6446,5.46728 -0.4944,6.40307 1.2958,8.07088 2.4048,2.24045 3.9039,1.21145 4.1474,-2.84685 z m 13.4886,0.66335 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m -165.6384,-2.44098 c 0.3507,-0.91371 0,-1.5 -0.893,-1.5 -0.8077,0 -1.4686,0.675 -1.4686,1.5 0,0.825 0.4019,1.5 0.893,1.5 0.4912,0 1.152,-0.675 1.4686,-1.5 z m 178.6384,-0.65065 c 1.925,-0.10921 4.2312,-0.81377 5.1248,-1.56568 1.7547,-1.47633 3.9341,-1.38406 5.1099,0.21633 0.4516,0.61465 0.7406,0.50621 0.75,-0.28138 0.01,-0.70477 -0.6597,-1.54041 -1.4847,-1.85699 -1.3024,-0.49978 -2.2234,-3.36163 -1.0818,-3.36163 0.23,0 1.1351,-0.2751 2.0114,-0.61134 1.1434,-0.43878 1.4265,-0.17712 1.0028,0.92704 -0.4454,1.16059 -0.088,1.40697 1.4559,1.00327 1.1254,-0.2943 2.566,-1.16147 3.2014,-1.92703 0.6353,-0.76557 1.7096,-1.39194 2.3873,-1.39194 0.8882,0 1.238,-2.65404 1.2534,-9.50987 0.021,-9.14379 -0.046,-9.4325 -1.7218,-7.5 -0.9588,1.10543 -2.5075,2.00987 -3.4416,2.00987 -2.5851,0 -5.567,1.89362 -5.567,3.53518 0,1.63146 -2.5497,2.00237 -3.4749,0.5055 -0.8815,-1.42633 1.7059,-5.04068 3.6085,-5.04068 0.9088,0 1.9136,-0.68056 2.2328,-1.51237 0.4632,-1.20704 0.03,-1.38052 -2.143,-0.85932 -1.4979,0.35917 -2.8822,0.78601 -3.0762,0.94852 -0.1941,0.16252 -1.4156,-0.10859 -2.7146,-0.60246 -1.493,-0.56765 -2.5914,-0.52652 -2.9859,0.11182 -0.3719,0.60175 -2.4065,0.74247 -5.0354,0.34824 -3.6576,-0.54849 -4.4113,-0.38728 -4.4113,0.94355 0,0.88279 0.8771,2.15284 1.9492,2.82234 1.3676,0.85413 1.6515,1.57591 0.9514,2.41945 -1.8172,2.1896 0.9179,2.56171 3.0629,0.4167 2.0034,-2.00336 4.0365,-2.68802 4.0365,-1.3593 0,0.37245 -1.4625,1.90355 -3.25,3.40246 -1.7875,1.4989 -2.9234,3.0583 -2.5242,3.46532 0.3992,0.40703 1.4117,0.17083 2.25,-0.52489 1.2662,-1.05084 1.5242,-0.97059 1.5242,0.47413 0,1.7333 1.0635,1.73579 5.25,0.0123 1.2043,-0.49579 1.75,-0.25753 1.75,0.76411 0,1.79394 -1.8173,3.38686 -4.4171,3.87182 -1.0545,0.19669 -2.0927,0.8847 -2.3071,1.52892 -0.2565,0.77037 0.3997,0.97336 1.9171,0.59301 2.2944,-0.57512 2.2966,-0.56636 0.3893,1.59282 -1.1667,1.32087 -2.602,1.95396 -3.665,1.61659 -1.1147,-0.3538 -2.321,0.26464 -3.3322,1.70837 -2.0629,2.94519 -2.0078,4.08396 0.165,3.40925 0.9625,-0.29888 3.325,-0.63278 5.25,-0.742 z m 0,-17.14935 c 0,-1.44095 1.9538,-3.7 3.2,-3.7 1.486,0 0.8132,3.78097 -0.7818,4.39301 -2.2017,0.84487 -2.4182,0.78282 -2.4182,-0.69301 z m 10.9243,-1.07277 c 2.5037,-2.71321 4.0757,-3.35076 4.0757,-1.65291 0,0.53588 -1.4625,1.71813 -3.25,2.62723 l -3.25,1.65291 z m 4.0757,1.37277 c 1.9565,-1.26441 4,-1.26441 4,0 0,0.55 -1.2375,0.99311 -2.75,0.98469 -2.1429,-0.0119 -2.4189,-0.22931 -1.25,-0.98469 z m 4.5239,15.92464 c 0.8252,-2.59991 0.081,-3.3976 -2.2308,-2.39046 -0.9862,0.42969 -2.3484,0.69221 -3.0271,0.58337 -0.7114,-0.11407 -0.993,0.43035 -0.6649,1.28535 0.4914,1.2806 1.8516,2.01718 4.5815,2.4811 0.3754,0.0638 0.979,-0.81791 1.3413,-1.95936 z m -111.5239,-1.44847 c 0,-1.51614 -3.8107,-3.99878 -4.7288,-3.08073 -0.3066,0.30662 0.182,0.84122 1.0857,1.18801 0.9037,0.34679 1.6431,1.50894 1.6431,2.58256 0,1.07361 0.45,1.67391 1,1.33399 0.55,-0.33992 1,-1.25064 1,-2.02383 z m 73.5281,-1.52163 c 0.4174,-0.67536 -0.3447,-0.79912 -2.1943,-0.35636 -3.9838,0.95361 -4.7447,1.52986 -3.2444,2.45704 1.3564,0.83836 4.3328,-0.31123 5.4387,-2.10068 z m -156.1099,-2.56153 c 1.8027,-0.69175 2.1751,-4.39301 0.442,-4.39301 -1.1635,0 -3.7709,2.89452 -3.8284,4.25 -0.038,0.90733 1.2525,0.96185 3.3864,0.14301 z m -42.4182,-1.39301 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m 136,-1.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -8.1767,-2.89189 c 0.1914,-0.98676 -0.3187,-1.66713 -1.25,-1.66713 -0.9276,0 -1.5733,0.855 -1.5733,2.08333 0,2.43705 2.3368,2.09257 2.8233,-0.4162 z m -10.602,-4.35399 c -0.2128,-0.65277 -0.9121,-0.98222 -1.5541,-0.7321 -1.3132,0.51163 -3.6757,5.0771 -2.9848,5.76803 0.793,0.79302 4.9393,-3.80731 4.5389,-5.03593 z m 26.7787,-0.9946 c 0,-1.27119 -0.2783,-1.33244 -1.489,-0.32768 -0.8189,0.67967 -1.2378,1.64211 -0.9309,2.13876 0.7889,1.27647 2.4199,0.0558 2.4199,-1.81108 z m -17.9248,-0.38379 c 1.3097,-1.13589 2.5336,-1.60843 2.7197,-1.05009 0.2221,0.66629 1.197,0.68871 2.8368,0.0652 3.2973,-1.25363 3.4109,-1.22451 2.6776,0.68654 -0.4335,1.12965 -0.1915,1.48464 0.7814,1.14626 0.7751,-0.26961 1.2771,-1.23101 1.1155,-2.13645 -0.3287,-1.84142 2.4095,-2.29914 3.0083,-0.50286 0.2675,0.80264 0.9629,0.84496 2.3333,0.14201 1.0737,-0.55076 4.9897,-1.09631 8.7022,-1.21232 5.9271,-0.18521 6.7537,0.0108 6.7804,1.60799 0.029,1.71401 0.089,1.71798 1.0497,0.0689 0.5606,-0.9625 1.8272,-1.75 2.8146,-1.75 2.0003,0 5.7814,-3.65724 4.7979,-4.64073 -0.3457,-0.34566 -2.0345,-0.0461 -3.7529,0.6657 -2.3067,0.95545 -3.3084,0.99648 -3.8274,0.15677 -0.4996,-0.80834 -8.8352,-1.12197 -28.8108,-1.08401 -26.8751,0.0511 -28.1298,0.1378 -28.611,1.97783 -0.2768,1.05844 -1.1079,1.88891 -1.8469,1.84549 -0.9346,-0.0549 -0.9802,-0.22679 -0.1498,-0.56461 0.6566,-0.26711 0.9423,-1.14115 0.6349,-1.94231 -0.4533,-1.18121 -2.9482,-1.42672 -13.1938,-1.29833 -14.1426,0.17722 -13.6879,0.92322 2.0013,3.28385 14.4259,2.17055 18.073,2.0963 19.6317,-0.39965 0.687,-1.1 1.765,-2 2.3956,-2 0.6408,0 0.3482,0.88206 -0.6635,2 -1.5541,1.71721 -1.5878,2 -0.2383,2 0.8644,0 1.808,0.5625 2.0969,1.25 0.388,0.92333 0.7904,0.83624 1.5397,-0.33321 1.2303,-1.92013 7.1017,-1.3852 7.1017,0.64702 0,1.00883 2.0041,2.90636 3.597,3.40578 0.053,0.0167 1.1685,-0.89895 2.4782,-2.03484 z m -102.5752,-2.93475 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -15.529,-2.96094 c 0.8091,-0.51167 1.2263,-1.17513 0.927,-1.47435 -0.2992,-0.29923 -1.4112,0.11199 -2.471,0.91382 -2.1084,1.59508 -0.8272,2.06017 1.544,0.56053 z m 179.636,-1.62085 c -0.3339,-0.86998 -0.607,-2.21998 -0.607,-3 0,-0.78001 -0.4199,-1.41821 -0.9331,-1.41821 -0.5132,0 -0.8948,1.35 -0.8478,3 0.054,1.91949 0.6092,3 1.5401,3 0.9157,0 1.2299,-0.58611 0.8478,-1.58179 z m -185.607,-0.41821 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 203.935,-4.84433 c -0.5506,-0.18938 -1.7736,-0.0286 -2.718,0.35734 -1.5518,0.63414 -1.5245,0.77443 0.283,1.45783 1.1863,0.44854 2.2921,0.30317 2.718,-0.35733 0.3948,-0.61243 0.2675,-1.26846 -0.283,-1.45784 z m 8.94,0.21933 c 1.7188,-0.34375 3.125,-1.04591 3.125,-1.56037 0,-1.39447 -7.279,-0.51663 -7.756,0.93537 -0.4656,1.41709 0.2128,1.50864 4.631,0.625 z m -27.1997,-1.03299 c -0.3619,-0.3619 -0.1477,-1.27277 0.4759,-2.02417 1.6,-1.9279 0.6961,-2.4106 -1.5029,-0.80261 -1.853,1.35494 -1.5001,3.48477 0.5774,3.48477 0.6092,0 0.8115,-0.2961 0.4496,-0.65799 z m 23.3247,-3.78299 c 0,-1.05548 -1.9191,-1.49891 -2.4899,-0.57533 -0.3455,0.55897 0.073,1.01631 0.9309,1.01631 0.8574,0 1.559,-0.19844 1.559,-0.44098 z m 6,-1.55902 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 39.6507,-0.46797 c -0.3099,-0.80739 -0.1257,-1.73849 0.4093,-2.0691 1.235,-0.76327 0.1116,-2.68678 -1.2953,-2.21782 -1.7749,0.59162 -1.8551,5.75489 -0.09,5.75489 0.942,0 1.3203,-0.56928 0.9755,-1.46797 z m 27.8161,-0.84109 c 1.0079,-1.53813 1.4097,-4.12564 1.2036,-7.75 -0.1702,-2.99252 0.051,-6.18346 0.4918,-7.09098 0.5529,-1.13865 0.2645,-1.89103 -0.9305,-2.42762 -2.2321,-1.00227 -15.8448,-1.32079 -29.3119,-0.68586 -8.5482,0.40301 -11.045,0.87703 -13,2.46795 -1.3309,1.08302 -1.8884,1.69773 -1.2389,1.36603 0.6495,-0.33169 1.4636,-0.14574 1.809,0.41323 1.0153,1.64277 2.236,1.1726 2.8274,-1.08905 0.7634,-2.9191 3.1916,-1.79667 3.1433,1.45298 -0.023,1.51887 0.5116,2.65238 1.25,2.65238 0.7092,0 1.2894,0.6199 1.2894,1.37756 0,0.75765 0.6611,1.92623 1.4692,2.59684 1.1834,0.98214 1.9876,0.81146 4.1348,-0.87756 1.4661,-1.15326 3.1321,-2.09684 3.7021,-2.09684 0.57,0 1.8018,-0.69265 2.7372,-1.53922 1.3313,-1.20474 3.7387,-1.47637 11.0788,-1.25 l 9.3779,0.28922 -4.4996,4.25 c -2.4747,2.3375 -3.94,4.25 -3.2562,4.25 0.7297,0 1.094,0.92933 0.8818,2.25 -0.2217,1.37972 -0.9636,2.14304 -1.9183,1.97348 -0.8563,-0.15209 -1.8424,0.18541 -2.1913,0.75 -0.4018,0.65012 1.2121,1.02652 4.4015,1.02652 4.1572,0 5.3,-0.40294 6.5489,-2.30906 z m -2.4668,-15.19094 c 0.6847,-0.825 1.6949,-1.5 2.2449,-1.5 0.5578,0 0.4495,0.66326 -0.2449,1.5 -0.6847,0.825 -1.6949,1.5 -2.2449,1.5 -0.5578,0 -0.4495,-0.66326 0.2449,-1.5 z m -94.5365,15.12435 c 2.2162,0.85044 2.8532,-1.61692 0.9581,-3.71099 -1.2554,-1.38716 -2.0859,-1.64904 -2.8396,-0.89535 -0.7537,0.75369 -0.629,1.3411 0.4264,2.00832 0.9958,0.62956 1.0761,0.94813 0.2416,0.95836 -0.6875,0.008 -1.2145,0.80281 -1.1711,1.76531 0.043,0.9625 0.2975,1.21278 0.5647,0.55618 0.2671,-0.65661 1.086,-0.96343 1.8199,-0.68183 z m 20.5365,-0.18846 c 1.375,-0.39755 3.0465,-1.49892 3.7143,-2.44749 0.8047,-1.14277 2.0693,-1.56126 3.7482,-1.24032 1.3936,0.2664 3.5495,-0.18112 4.7908,-0.9945 1.4212,-0.93119 3.0205,-1.19643 4.3187,-0.71622 3.3359,1.23403 9.2558,0.87506 10.511,-0.63736 0.9197,-1.10822 0.8014,-1.4 -0.5675,-1.4 -1.1522,0 -1.5307,-0.51803 -1.1339,-1.55194 0.3415,-0.88992 0.1738,-1.29132 -0.3931,-0.94098 -0.5437,0.33602 -0.9885,1.22907 -0.9885,1.98455 0,1.55959 -3.4643,2.95746 -4.9911,2.0139 -1.4111,-0.87213 -1.2597,-3.24929 0.2411,-3.78529 0.6875,-0.24554 0.9021,-0.81839 0.477,-1.273 -0.4252,-0.45462 -1.4843,0.189 -2.3538,1.43027 -0.8694,1.24126 -2.209,2.01573 -2.977,1.72105 -0.7679,-0.29469 -1.4099,0.0126 -1.4266,0.68282 -0.017,0.67024 -0.5031,0.40617 -1.0807,-0.58683 -0.8317,-1.4296 -1.3469,-1.5593 -2.475,-0.62306 -0.8633,0.71642 -2.9005,0.94781 -5.1693,0.58715 -2.0595,-0.32738 -4.3648,-0.20981 -5.1227,0.26126 -1.7563,1.09152 -0.5444,3.17945 1.4101,2.42944 2.7818,-1.06749 1.3757,1.15551 -2.1563,3.40903 -1.9468,1.2421 -4.0222,1.96008 -4.6122,1.59549 -0.6483,-0.40067 -0.7803,-0.19012 -0.3339,0.53231 0.4063,0.65735 1.4883,0.98759 2.4046,0.73385 0.9162,-0.25373 2.7908,-0.78659 4.1658,-1.18413 z m 6,-5.43589 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -216.6384,4.5 c 0.3507,-0.91371 0,-1.5 -0.893,-1.5 -0.8077,0 -1.4686,0.675 -1.4686,1.5 0,0.825 0.4019,1.5 0.893,1.5 0.4912,0 1.152,-0.675 1.4686,-1.5 z m 241.6384,-0.5 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 12.5,0 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -254.8149,-5.37814 c -0.2908,-0.75798 -0.075,-1.83219 0.4802,-2.38714 0.6786,-0.67865 0.6034,-1.25965 -0.2299,-1.77463 -0.739,-0.45675 -1.7828,-0.0217 -2.5871,1.07826 -1.958,2.67766 -1.6546,4.46165 0.7587,4.46165 1.3792,0 1.9243,-0.47601 1.5781,-1.37814 z m 192.8688,-5.53473 c -0.7131,-1.15366 -4.5539,-1.53099 -4.5539,-0.44737 0,0.35186 0.7875,1.22157 1.75,1.93268 1.879,1.38826 3.9137,0.31043 2.8039,-1.48531 z m 22.9334,-0.1076 c -0.5824,-0.94248 -4.4873,-0.0737 -4.4873,0.99843 0,0.40958 1.1198,0.53064 2.4883,0.26902 1.3686,-0.26162 2.2682,-0.83198 1.999,-1.26745 z m -215.4829,-3.47132 c -1.1503,-2.14942 -1.1018,-2.7431 0.3559,-4.35388 0.9584,-1.05901 1.413,-2.5814 1.0519,-3.52245 -0.3498,-0.91154 -0.037,-2.37852 0.6941,-3.25995 1.1493,-1.38483 1.066,-1.55176 -0.613,-1.22841 -4.1632,0.80175 -6.1021,10.62143 -2.7433,13.89358 2.3221,2.26226 2.9039,1.55321 1.2544,-1.52889 z m 15.4529,2.56089 c 0.3164,-0.512 0.118,-1.21356 -0.441,-1.55902 -0.559,-0.34546 -1.0163,0.0734 -1.0163,0.9309 0,1.75653 0.6001,2.01516 1.4573,0.62812 z m 175.5427,-4.0691 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 31,-5 c 0,-1.1 -0.45,-2 -1,-2 -0.55,0 -1,0.9 -1,2 0,1.1 0.45,2 1,2 0.55,0 1,-0.9 1,-2 z m -29.9663,-2.97917 c -0.592,-0.36591 -0.4356,-1.61984 0.4041,-3.23829 0.7536,-1.45264 1.1132,-2.89819 0.7991,-3.21234 -0.3142,-0.31415 -0.6835,-1.58346 -0.8207,-2.82069 -0.1373,-1.23723 -0.287,-2.35761 -0.3329,-2.48972 -0.046,-0.13212 -0.9044,0.4628 -1.9079,1.32204 -2.2208,1.90154 -2.9228,10.81271 -1.0313,13.09186 1.105,1.33136 1.4024,1.29939 2.5532,-0.27442 0.7933,-1.08489 0.9248,-2.01478 0.3364,-2.37844 z m 47.538,0.21757 c -0.3328,-0.33279 -1.1563,-0.0538 -1.83,0.61991 -0.9666,0.96663 -0.9104,1.42153 0.2667,2.157 1.0626,0.66396 1.5889,0.48566 1.83,-0.61991 0.1861,-0.85357 0.066,-1.82422 -0.2667,-2.157 z m -7.1901,-3.79034 c 0.3415,-0.88992 0.1738,-1.29132 -0.3931,-0.94098 -0.5437,0.33602 -0.9885,1.0344 -0.9885,1.55194 0,1.43843 0.7168,1.12146 1.3816,-0.61096 z m -88.3816,-4.50708 c 0,-1.06754 -0.45,-1.94098 -1,-1.94098 -0.55,0 -1,1.15156 -1,2.55902 0,1.45136 0.4328,2.2915 1,1.94098 0.55,-0.33992 1,-1.49148 1,-2.55902 z m -139.9056,-1.11735 c 0.8458,-1.58045 0.822,-1.88999 -0.1016,-1.3192 -0.9003,0.55643 -1.0227,-0.11114 -0.4821,-2.62932 0.9219,-4.29475 1.2848,-4.87511 3.0483,-4.87511 1.3765,0 1.6146,-0.4204 1.841,-3.25 0.055,-0.6875 0.3599,-1.475 0.6776,-1.75 1.5937,-1.37959 7.9224,-14.7339 7.9224,-16.71728 0,-1.32885 0.6067,-2.28272 1.452,-2.28272 0.7985,0 2.7914,-1.9125 4.4284,-4.25 1.6371,-2.3375 5.4837,-6.84808 8.5481,-10.02352 3.0643,-3.17543 5.5715,-6.21293 5.5715,-6.75 0,-0.53706 0.6199,-0.97648 1.3776,-0.97648 0.7576,0 1.9297,-0.66537 2.6046,-1.47859 0.675,-0.81323 4.4426,-3.58536 8.3725,-6.16028 3.9299,-2.57492 7.3703,-4.94946 7.6453,-5.27674 0.275,-0.32728 2.3,-1.21905 4.5,-1.9817 2.2,-0.76265 6.25,-2.39558 9,-3.62873 5.884,-2.63849 15.1722,-5.40052 18.0039,-5.35381 2.9344,0.0484 7.4146,-0.70533 8.0663,-1.35703 0.3119,-0.31186 1.9747,-0.34516 3.6952,-0.074 2.2522,0.35494 3.4932,-0.006 4.4314,-1.28918 2.1669,-2.96343 1.5061,-3.63862 -2.9468,-3.01063 -2.3375,0.32966 -5.7773,0.58347 -7.6439,0.56402 -12.2552,-0.1277 -37.9049,9.66328 -50.6754,19.34377 -7.478,5.66862 -18.2688,16.36309 -23.9512,23.73737 -8.4228,10.93067 -21.9173,40.96553 -18.4056,40.96553 0.4748,0 0.576,0.74882 0.2248,1.66404 -0.8867,2.31076 1.3686,0.82604 2.7957,-1.84041 z m 6.4056,-22.82363 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 194,23 c 0.3491,-1.1 1.2653,-2 2.036,-2 0.8073,0 1.1675,-0.609 0.8499,-1.43686 -0.7747,-2.01862 -2.5914,-1.04777 -4.5894,2.45252 -1.3649,2.3911 -1.4279,2.98434 -0.3174,2.98434 0.7624,0 1.6718,-0.9 2.0209,-2 z m 35.5,-1.58333 c 0,-1.76593 -2.1528,-1.45839 -2.7708,0.39583 -0.2177,0.65312 0.3166,1.1875 1.1875,1.1875 0.8708,0 1.5833,-0.7125 1.5833,-1.58333 z m 65.6623,-4.66667 c -0.2774,-0.6875 -0.5044,-0.125 -0.5044,1.25 0,1.375 0.227,1.9375 0.5044,1.25 0.2774,-0.6875 0.2774,-1.8125 0,-2.5 z m -161.6623,0.80902 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 47.9799,-2.08319 c -0.6957,-0.83829 -0.9797,-1.80938 -0.6311,-2.15799 0.8876,-0.88761 -1.379,-3.41723 -2.4621,-2.74781 -0.4877,0.3014 -0.8867,1.87145 -0.8867,3.48899 0,2.507 0.387,2.94098 2.6224,2.94098 2.2362,0 2.4362,-0.22451 1.3575,-1.52417 z m 17.0201,-2.47583 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 30.9167,-0.62423 c 0.2291,-0.20667 0.1457,-0.64667 -0.1854,-0.97777 -0.3311,-0.3311 -1.6436,0.16057 -2.9166,1.09259 l -2.3147,1.69458 2.5,-0.71681 c 1.375,-0.39425 2.6875,-0.88591 2.9167,-1.09259 z m -223.9167,-3.4938 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m 129,-0.38197 c 0,-1.375 -0.4019,-2.5 -0.893,-2.5 -1.1663,0 -2.274,2.92079 -1.5512,4.09024 1.0893,1.76249 2.4442,0.88095 2.4442,-1.59024 z m 47,-1.51357 c 0,-1.10746 0.5455,-2.887 1.2121,-3.95452 1.5536,-2.48757 0.7017,-3.29936 -2.5941,-2.47217 -2.9773,0.74727 -3.7409,4.44026 -0.918,4.44026 1.3222,0 1.4333,0.26667 0.5,1.2 -1.6332,1.63321 -1.5082,2.8 0.3,2.8 0.8367,0 1.5,-0.8904 1.5,-2.01357 z m 44,1.01357 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -34.4589,-1.06653 c 1.06,-1.71501 0.1108,-1.88329 -1.9838,-0.35171 -1.6221,1.1861 -1.6724,1.41824 -0.3074,1.41824 0.8976,0 1.9287,-0.47994 2.2912,-1.06653 z m 23.1148,-1.44127 c 0.9139,-1.97043 0.884,-2.4922 -0.143,-2.4922 -0.7144,0 -1.5721,0.7118 -1.9059,1.58179 -1.5228,3.96825 0.2627,4.76159 2.0489,0.91041 z m 5.8413,0.51675 c 0.3475,-1.09508 0.3626,-2.42678 0.034,-2.95932 -0.8439,-1.36544 1.6543,-5.04963 3.4241,-5.04963 1.1851,0 1.1269,-0.34273 -0.2971,-1.75 -1.6868,-1.6669 -1.8203,-1.6629 -2.8111,0.0841 -0.7431,1.31038 -1.7264,1.66188 -3.4434,1.23095 -2.8163,-0.70685 -3.3283,1.42224 -0.8389,3.48828 0.9465,0.78557 1.3486,2.15744 1.0182,3.47399 -0.9043,3.60289 1.8044,4.97978 2.9147,1.48161 z m 73.1859,-0.19645 c -0.3192,-0.79773 -0.5562,-0.56078 -0.6042,0.60417 -0.043,1.05416 0.193,1.64479 0.5253,1.3125 0.3323,-0.3323 0.3678,-1.1948 0.079,-1.91667 z m -271.2453,-1.39312 c 1.6311,-1.63116 1.2842,-3.41938 -0.6635,-3.41938 -0.6092,0 -0.7905,0.3171 -0.403,0.70467 0.3876,0.38757 -0.7749,1.4937 -2.5833,2.45808 l -3.288,1.75342 2.6786,0.0419 c 1.4732,0.0231 3.3898,-0.66936 4.2592,-1.5387 z m 7.5622,0.70306 c 0,-0.48265 -0.581,-1.35977 -1.2912,-1.94915 -0.9588,-0.79576 -1.6045,-0.56987 -2.5085,0.87755 -1.0852,1.7377 -0.9451,1.94916 1.2912,1.94916 1.3797,0 2.5085,-0.3949 2.5085,-0.87756 z m 173,-1.56342 c 0,-2.13272 -1.8753,-2.90736 -3.5911,-1.48338 -1.2057,1.00058 -1.2465,1.41088 -0.2062,2.07078 2.0132,1.27709 3.7973,1.00111 3.7973,-0.5874 z m 6.5,-2.55902 c 1.2172,-1.34498 1.3916,-2 0.5325,-2 -1.0033,0 -1.0188,-0.31155 -0.072,-1.45196 0.6628,-0.79858 1.0554,-2.18895 0.8725,-3.08971 -0.2913,-1.43435 -0.6288,-1.38014 -2.7178,0.43655 -1.975,1.71753 -2.169,2.33493 -1.1276,3.58971 0.9315,1.12243 0.9513,1.51541 0.076,1.51541 -0.6498,0 -0.9271,0.41157 -0.6162,0.91459 0.3109,0.50302 0,1.1425 -0.691,1.42105 -0.8216,0.33124 -0.7044,0.53378 0.3388,0.58541 0.8773,0.0434 2.4095,-0.82105 3.405,-1.92105 z m -7.5,-2 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -20.2,-1.2 c 1.5148,-1.5148 1.5679,-4.8 0.078,-4.8 -0.7756,0 -0.7377,-0.46364 0.1224,-1.5 1.5316,-1.84547 0.1276,-1.91284 -2.25,-0.10795 -2.4455,1.85638 -2.2817,7.60795 0.2167,7.60795 0.3483,0 1.1733,-0.54 1.8333,-1.2 z m 8.2,-2.8 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 21.1833,-5.21667 c -0.7175,-0.71756 -1.1833,-0.7766 -1.1833,-0.15 0,1.33478 1.1826,2.51739 1.85,1.85 0.2842,-0.28416 -0.016,-1.04916 -0.6667,-1.7 z m 9.8167,-1.84235 c 0,-1.13246 -0.45,-1.7809 -1,-1.44098 -0.55,0.33992 -1,1.26648 -1,2.05902 0,0.79254 0.45,1.44098 1,1.44098 0.55,0 1,-0.92656 1,-2.05902 z m -81,-0.94098 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 39.075,-0.275 c -0.1237,-1.1957 -1.4953,-0.96414 -1.925,0.325 -0.22,0.66 0.14,1.02 0.8,0.8 0.66,-0.22 1.1663,-0.72625 1.125,-1.125 z m 7.1058,-2.437 c 1.7876,-0.5159 3.3652,-3.288 1.8711,-3.288 -0.4869,0 -1.0491,0.49146 -1.2493,1.09213 -0.2002,0.60068 -1.5874,1.16318 -3.0826,1.25 -1.5446,0.0897 -2.7189,0.74389 -2.7193,1.51486 -5e-4,0.90023 0.5883,1.11449 1.7493,0.63655 0.9625,-0.39625 2.5064,-0.93874 3.4308,-1.20554 z M 1221.0289,516.478 c 1.3123,-1.00907 1.9759,-2.08819 1.4745,-2.39804 -0.5013,-0.30986 -1.9598,0.52575 -3.241,1.85691 -2.7366,2.84333 -1.6574,3.17391 1.7665,0.54113 z m 139.5322,1.27216 c 1.7277,-0.66299 2.1958,-3.39301 0.5818,-3.39301 -0.55,0 -1,-0.675 -1,-1.5 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,1.575 -1,3.5 0,3.76328 0.036,3.80696 2.4182,2.89301 z m 8.0115,-4.27932 c 0.3013,-0.48747 -0.3729,-1.12707 -1.4981,-1.42133 -1.6779,-0.43879 -1.8338,-0.27939 -0.8663,0.88631 1.3809,1.66394 1.6317,1.72067 2.3644,0.53502 z m 13.3201,-2.36369 c -2e-4,-1.66114 -0.6218,-2.28774 -2.375,-2.39421 -2.7408,-0.16644 -2.8046,-0.0168 -1.1343,2.65778 1.66,2.65803 3.5096,2.51911 3.5093,-0.26357 z m 12.5025,-1.28964 c 0.3067,-1.60428 0.073,-2.40227 -0.6334,-2.16666 -0.6154,0.20513 -1.1258,0.78547 -1.1342,1.28963 -0.01,0.50417 -0.3725,1.47917 -0.809,2.16667 -0.5011,0.78911 -0.2619,1.25 0.6487,1.25 0.7933,0 1.6609,-1.14284 1.9279,-2.53964 z m -23.069,-2.67703 c -0.7175,-0.71756 -1.1833,-0.7766 -1.1833,-0.15 0,1.33478 1.1826,2.51739 1.85,1.85 0.2842,-0.28416 -0.016,-1.04916 -0.6667,-1.7 z m 37.4232,-1.78105 c -0.1205,-3.39086 -1.1241,-3.7488 -3.7778,-1.34729 -2.7233,2.46457 -2.2785,4.34501 1.0278,4.34501 2.5304,0 2.8443,-0.34221 2.75,-2.99772 z m -46.1065,0.99772 c 0.3399,-0.55 -0.282,-1 -1.382,-1 -1.1,0 -2.2781,0.45 -2.618,1 -0.3399,0.55 0.282,1 1.382,1 1.1,0 2.2781,-0.45 2.618,-1 z m -149.5,-2.12245 c 0,-1.77323 -0.2468,-1.91762 -1.5,-0.87755 -0.825,0.68469 -1.5,1.63979 -1.5,2.12245 0,0.48265 0.675,0.87755 1.5,0.87755 0.8622,0 1.5,-0.90249 1.5,-2.12245 z m 27.4493,-1.60604 c 0.644,-1.67834 -0.013,-1.60379 -2.9759,0.33787 -1.3509,0.88516 -2.2142,2.00095 -1.9185,2.47952 0.6417,1.03828 4.2011,-1.01063 4.8944,-2.81739 z m 150.5507,2.72849 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -15,-1.90638 c 0,-0.49851 -0.9,-0.67103 -2,-0.38337 -1.1,0.28766 -2,0.69553 -2,0.90638 0,0.21085 0.9,0.38337 2,0.38337 1.1,0 2,-0.40787 2,-0.90638 z m -143.5,-2.09362 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 205.256,-0.75 c 0.2377,-0.72357 -0.4419,-1.25 -1.6136,-1.25 -1.1134,0 -2.3025,-0.45 -2.6424,-1 -1.0786,-1.74524 -2.2507,-1.08464 -2.7548,1.5527 -0.4567,2.38892 -0.2606,2.53328 3.0561,2.25 1.9493,-0.16649 3.7289,-0.8652 3.9547,-1.5527 z m 8.244,0.12755 c 0,-1.32879 -0.2715,-1.39712 -1.5,-0.37755 -0.825,0.68469 -1.5,1.41479 -1.5,1.62245 0,0.20765 0.675,0.37755 1.5,0.37755 0.825,0 1.5,-0.7301 1.5,-1.62245 z m 16.6196,0.42886 c 0.4786,-0.77429 0.1323,-0.92519 -1.0669,-0.46501 -1.3282,0.50968 -1.627,0.29462 -1.1863,-0.85387 0.5702,-1.48598 -0.7432,-1.56403 -9.6164,-0.57143 -0.4125,0.0461 -0.75,0.71053 -0.75,1.47641 0,1.77251 11.5459,2.15119 12.6196,0.4139 z m -49.6196,-0.80641 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m 37.7297,-4.06221 c 0.1768,-2.34712 -0.1261,-2.39854 -2.1583,-0.36636 -2.091,2.09103 -1.9908,3.35101 0.2205,2.77274 0.9855,-0.25772 1.8575,-1.34059 1.9378,-2.40638 z m 19.0786,0.98721 c -0.197,-0.59125 -0.7858,-1.075 -1.3083,-1.075 -0.5225,0 -1.1113,0.48375 -1.3083,1.075 -0.1971,0.59125 0.3916,1.075 1.3083,1.075 0.9167,0 1.5054,-0.48375 1.3083,-1.075 z m -105.1174,-3.5143 2.6011,-2.4107 h -4.031 c -3.1809,0 -4.3716,0.5198 -5.646,2.46482 -0.8882,1.35565 -1.615,2.7414 -1.615,3.07945 0,1.37346 6.2651,-0.8855 8.6909,-3.13357 z m 54.8998,0.84666 c -0.6935,-0.69349 -2.5907,0.71555 -2.5907,1.9241 0,0.66309 0.5738,0.58723 1.5242,-0.20152 0.8383,-0.69572 1.3182,-1.47088 1.0665,-1.72258 z m -93.2514,-3.55375 c -0.7787,-4.79883 1.3812,-6.30547 6.9175,-4.82515 2.3337,0.62402 5.1432,1.12895 6.2432,1.12207 11.6685,-0.073 14.1371,-0.28334 15.3828,-1.31083 1.1203,-0.92401 1.5364,-0.91055 1.8632,0.0603 0.5886,1.74896 2.254,1.56425 2.254,-0.25 0,-0.825 0.675,-1.5 1.5,-1.5 0.825,0 1.5,0.75 1.5,1.66667 0,0.91667 0.2589,1.40779 0.5753,1.09139 0.3164,-0.3164 1.8908,-0.19797 3.4987,0.26317 2.1063,0.60408 3.3231,0.43878 4.3533,-0.59139 0.7864,-0.78642 2.3069,-1.42984 3.3788,-1.42984 1.072,0 2.5092,-0.675 3.1939,-1.5 1.5225,-1.83448 -0.092,-2.05655 -3.1297,-0.43061 -1.3497,0.72237 -2.3929,0.74176 -3.2147,0.0598 -1.2152,-1.00856 -48.6556,-1.58893 -48.6556,-0.59524 0,0.27128 0.5512,1.37589 1.225,2.4547 0.9414,1.50745 0.9517,2.23469 0.045,3.14183 -0.9072,0.90714 -0.6699,1.71905 1.025,3.50768 1.213,1.28003 2.2896,2.3351 2.3925,2.3446 0.103,0.01 -0.054,-1.46609 -0.3478,-3.27911 z m 38.8896,-5.89043 c 0.4983,-1.49484 2.7711,-2.31789 2.7711,-1.0035 0,0.53699 -0.7126,1.24979 -1.5836,1.58401 -0.9739,0.37373 -1.431,0.15024 -1.1875,-0.58051 z m 23.7711,8.18682 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m -152.6499,-2.46527 c 2.4897,-1.88617 1.2403,-3.92039 -1.3965,-2.27371 -1.0745,0.67104 -1.9536,1.78683 -1.9536,2.47953 0,1.61545 1.0296,1.5522 3.3501,-0.20582 z m 191.1072,0.53437 c 1.0019,-1.62117 -1.1753,-2.11382 -2.4664,-0.55809 -1.0048,1.21067 -0.9436,1.48899 0.3276,1.48899 0.8599,0 1.8224,-0.41891 2.1388,-0.9309 z m 12.2047,-3.01785 c 1.9432,-1.52856 3.0195,-1.74263 4.9916,-0.99284 2.8321,1.07673 4.3464,0.5132 4.3464,-1.61743 0,-0.79254 0.9266,-1.44098 2.059,-1.44098 1.1325,0 1.8189,-0.38851 1.5255,-0.86335 -0.2935,-0.47484 -3.9201,-0.94186 -8.0591,-1.03783 -7.0926,-0.16445 -7.5254,-0.0506 -7.5254,1.97998 0,1.74625 -0.4263,2.04021 -2.25,1.55149 -1.2375,-0.33164 -2.5875,-0.60913 -3,-0.61663 -0.4125,-0.008 -0.75,-0.68866 -0.75,-1.51366 0,-1.05236 -1.0621,-1.5 -3.559,-1.5 -1.9575,0 -3.3027,0.41468 -2.9895,0.92151 0.658,1.06464 -5.0233,4.17339 -5.9441,3.25257 -0.8843,-0.88428 -7.5074,-0.99023 -7.5074,-0.12009 0,1.39283 2.548,1.6547 13.6784,1.40581 9.2225,-0.20623 11.0846,-0.006 10.643,1.14512 -0.7683,2.00195 1.4516,1.71879 4.3406,-0.55367 z m -117.662,-2.25324 c 0,-0.47654 -1.2375,-0.66304 -2.75,-0.41445 -1.5125,0.24859 -3.0875,0.48898 -3.5,0.53421 -0.4125,0.0452 -0.75,0.71511 -0.75,1.48863 0,1.14525 0.6499,1.20694 3.5,0.33222 1.925,-0.5908 3.5,-1.46408 3.5,-1.94061 z m -16,1.20199 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 85,-1.58206 c 0,-0.95384 -1.1456,-1.41794 -3.5,-1.41794 -1.925,0 -3.5,-0.45 -3.5,-1 0,-1.83265 -3.4708,-0.99623 -5.7217,1.37887 -1.222,1.28937 -2.0489,2.51909 -1.8376,2.73272 0.2113,0.21362 3.5736,0.23898 7.4717,0.0563 5.295,-0.24808 7.0876,-0.69069 7.0876,-1.75 z m 15.75,0.35484 c 1.2375,-0.61091 2.25,-1.51126 2.25,-2.00078 0,-0.48952 -0.45,-0.61192 -1,-0.272 -0.55,0.33992 -1,0.14148 -1,-0.44098 0,-0.63674 -2.5918,-1.05902 -6.5,-1.05902 -6.4296,0 -6.4998,0.0298 -6.4778,2.75 l 0.022,2.75 1.9237,-2.5 c 1.4384,-1.86924 2.2117,-2.2131 3.0649,-1.36287 0.8139,0.81104 0.8294,1.32981 0.054,1.80902 -0.5979,0.36954 -1.0871,1.13108 -1.0871,1.69232 0,1.16946 5.2858,0.34445 8.75,-1.36569 z m 48.7122,0.16611 c -0.2894,-0.46835 -1.1843,-0.59904 -1.9885,-0.29043 -0.8042,0.30861 -1.2254,0.9443 -0.9359,1.41265 0.2894,0.46835 1.1843,0.59904 1.9885,0.29043 0.8042,-0.30861 1.2254,-0.9443 0.9359,-1.41265 z m 10.3503,-0.87639 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.7219,0.24062 -1.5094,1.02812 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.7219,-0.24063 1.5094,-1.02813 1.75,-1.75 z m -155.3125,-2.5625 c 0,-0.55 -1.4625,-1.14101 -3.25,-1.31336 -2.4632,-0.23749 -3.25,0.0805 -3.25,1.31336 0,1.23288 0.7868,1.55085 3.25,1.31336 1.7875,-0.17235 3.25,-0.76336 3.25,-1.31336 z m 110.5,0.5 c 0,-0.55 -0.7016,-1 -1.559,-1 -0.8575,0 -1.2809,0.45 -0.941,1 0.3399,0.55 1.0415,1 1.559,1 0.5176,0 0.941,-0.45 0.941,-1 z m -128,-4 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m 9.9658,-0.4588 c 0.9966,-1.20077 0.763,-1.57118 -1.3207,-2.09414 -3.3431,-0.83906 -5.1472,0.24302 -3.5712,2.14197 1.5053,1.81376 3.362,1.7956 4.8919,-0.0478 z m -17.154,-2.80241 c 0.3848,-1.9981 -2.1762,-2.31114 -6.2467,-0.76354 -4.0356,1.53433 -3.0807,3.13151 1.6734,2.79888 3.0828,-0.2157 4.3297,-0.77064 4.5733,-2.03534 z m -2.3118,0.26121 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z M 406.76222,708.56809 c -1.58436,-0.39102 -3.50489,-1.65287 -4.26785,-2.80413 l -1.3872,-2.09319 65.45899,-0.57403 c 51.76524,-0.45395 66.04469,-0.85475 68.25874,-1.91592 3.87399,-1.85675 5.77458,-6.07511 4.44961,-9.87592 -1.35195,-3.87821 -0.9386,-3.71972 2.23237,0.856 5.0987,7.35742 2.73294,13.48773 -5.864,15.1952 -5.82727,1.15737 -124.57709,2.27409 -128.88066,1.21199 z m 154.88066,-0.68106 c -0.55,-0.19521 -2.20762,-0.62037 -3.68361,-0.9448 -1.47598,-0.32442 -3.68121,-1.99086 -4.9005,-3.7032 -2.1723,-3.05072 -2.17496,-3.0909 -0.13213,-1.99761 1.46211,0.7825 18.64737,1.11573 57.53971,1.11573 52.70756,0 55.56953,-0.0928 57.76755,-1.87262 3.30038,-2.67249 2.81539,-6.6345 -2.40259,-19.62738 -2.4297,-6.05 -4.27311,-11.16795 -4.09647,-11.37323 0.17664,-0.20527 2.47821,1.5276 5.1146,3.85082 18.73061,16.50564 47.12095,19.69314 71.97326,8.08073 22.51682,-10.52113 35.59044,-32.71562 35.67176,-60.55832 0.0501,-17.14132 -4.30386,-30.38048 -14.32095,-43.54639 -3.88357,-5.10433 -3.91583,-5.19743 -0.50381,-1.45361 16.52405,18.13093 22.91297,42.35723 17.53726,66.5 -2.29792,10.32014 -4.73916,16.1587 -9.98828,23.88838 -10.51313,15.48127 -29.52726,25.74061 -51.49341,27.78398 -3.93516,0.36606 -9.04579,-0.0394 -14.47674,-1.14856 -11.17471,-2.28221 -15.30929,-3.82221 -23.44308,-8.7318 -8.67496,-5.23626 -9.44753,-4.32565 -5.50209,6.48512 3.34782,9.17323 3.12297,12.83535 -0.9521,15.50676 -2.38055,1.56058 -7.42559,1.73356 -55.6631,1.90853 -29.1749,0.10583 -53.49528,0.0327 -54.04528,-0.16253 z m 430.7787,-2.24589 c -0.6971,-1.81683 0.7589,-6.14019 10.70472,-31.78399 3.413,-8.8 7.9205,-20.5 10.0166,-26 2.0961,-5.5 6.5964,-17.2 10.0007,-26 15.908,-41.12253 25.5362,-66.09915 31.9953,-83 2.1019,-5.5 5.8952,-15.4 8.4295,-22 4.3215,-11.25446 4.498,-12.08122 2.8411,-13.30726 -3.6843,-2.72635 -19.7169,-10.26683 -25.1259,-11.81731 -7.2032,-2.06476 -8.3105,-3.0115 -7.9418,-6.79026 l 0.3011,-3.08517 35.6172,-0.26249 c 27.7497,-0.2045 35.8333,0.0164 36.5956,1 0.5381,0.69437 5.3052,12.06249 10.5936,25.26249 5.2883,13.2 17.5462,43.575 27.2397,67.5 38.5995,95.26959 51.4539,127.40681 51.4539,128.63994 0,0.70933 -0.8704,1.75553 -1.9343,2.32488 -2.2267,1.19171 -49.0513,1.39011 -87.4112,0.37036 -24.3597,-0.64757 -24.8653,-0.70373 -25.8529,-2.87134 -1.7465,-3.83313 0.4407,-6.03888 8.3788,-8.45003 7.6947,-2.33718 20.7801,-8.53902 24.6753,-11.69487 l 2.3557,-1.90857 -2.9457,-6.95519 -2.9457,-6.95518 h -37.2717 -37.2716 l -2.9606,7.46059 c -2.8322,7.13719 -2.8816,7.51971 -1.1383,8.82421 3.4477,2.58001 19.8306,10.08941 25.5755,11.72303 6.4624,1.83766 8.6109,4.30011 6.9438,7.95882 -0.9507,2.08661 -1.8319,2.25133 -15.3528,2.86985 -7.8894,0.3609 -23.4709,0.65783 -34.6257,0.65984 -18.24212,0.003 -20.34762,-0.16888 -20.93992,-1.71235 z m 9.68752,-6.77325 c 1.1186,-0.35503 2.0672,-0.95269 2.1081,-1.32813 0.3487,-3.20268 1.2118,-5.97026 2.4524,-7.86377 0.8103,-1.23666 1.4733,-3.13775 1.4733,-4.22464 0,-1.08689 0.45,-2.25428 1,-2.5942 0.55,-0.33992 1,-1.31097 1,-2.15789 0,-0.84692 0.6238,-2.95786 1.3861,-4.69098 0.7624,-1.73312 2.3923,-5.96363 3.622,-9.40113 1.665,-4.65444 2.7152,-6.25 4.1138,-6.25 1.033,0 1.8781,-0.45 1.8781,-1 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,-0.45 -1.5,-1 0,-0.55 0.4142,-1 0.9205,-1 0.5063,0 1.2306,-1.4625 1.6096,-3.25 0.3789,-1.7875 1.7452,-4.65696 3.0362,-6.37658 1.2909,-1.71962 2.0811,-3.39269 1.7559,-3.71793 -0.3253,-0.32525 -0.047,-1.9049 0.6177,-3.51033 0.9333,-2.25323 1.7052,-2.81094 3.3846,-2.44532 1.6359,0.35616 1.8297,0.22936 0.7814,-0.51117 -1.8513,-1.30783 -0.8785,-7.12843 2.2718,-13.59243 2.0949,-4.29843 2.4743,-4.6379 3.0735,-2.75 0.4909,1.54676 1.4934,2.15376 3.5572,2.15376 3.1378,0 3.8673,-0.76455 5.6885,-5.96172 1.5363,-4.38446 0.96,-5.14369 -0.8318,-1.09571 -1.018,2.29982 -2.0097,3.05743 -4.0022,3.05743 -1.4569,0 -2.9079,-0.675 -3.2245,-1.5 -0.3507,-0.91371 0,-1.5 0.893,-1.5 1.7166,0 1.953,-1.58258 0.3815,-2.55385 -0.7829,-0.48382 -0.7829,-0.97617 0,-1.75902 0.5979,-0.59792 1.0871,-2.08999 1.0871,-3.3157 0,-1.22572 0.748,-2.97655 1.6622,-3.89075 1.405,-1.40503 1.4437,-1.80048 0.25,-2.55612 -0.7767,-0.49166 -1.7497,-0.90083 -2.1622,-0.90925 -0.4125,-0.008 -0.75,-0.91531 -0.75,-2.01531 0,-1.31388 0.6667,-2 1.9433,-2 2.0742,0 5.3203,-3.76447 4.4543,-5.16567 -0.2854,-0.46186 -1.3325,-0.40435 -2.3268,0.12778 -0.9943,0.53214 -2.0357,0.73963 -2.3143,0.4611 -0.579,-0.579 -10.33,23.5305 -11.3555,28.07679 -0.3722,1.65 -1.044,3.47113 -1.4928,4.04695 -0.7505,0.9629 -5.4768,12.90279 -13.0441,32.95305 -1.6607,4.4 -3.3876,8.70632 -3.8376,9.5696 -0.4499,0.86328 -0.5876,2.77578 -0.3057,4.25 0.3848,2.01313 0.1099,2.6804 -1.1042,2.6804 -0.8891,0 -1.6166,0.45 -1.6166,1 0,0.55 0.675,1 1.5,1 2.2859,0 1.7881,1.81701 -0.5975,2.18045 -1.6025,0.24415 -2.8868,2.31054 -5.4428,8.75758 -1.8399,4.64092 -3.13872,8.77232 -2.88622,9.1809 0.2525,0.40858 0.046,0.99814 -0.4587,1.31013 -0.5048,0.312 -1.422,2.01353 -2.0382,3.78118 l -1.1204,3.21392 1.9881,-2.13395 c 1.0934,-1.17368 2.90332,-2.42444 4.02192,-2.77947 z m 98.2914,-0.18143 c 0.6833,-0.42867 2.0617,-0.64446 3.063,-0.47953 1.0013,0.16492 4.4946,-1.29301 7.7627,-3.23984 3.2682,-1.94683 7.684,-4.00873 9.8129,-4.582 5.7879,-1.55851 6.6791,-3.22648 3.1271,-5.85263 l -2.9351,-2.16998 -6.6771,4.66762 c -7.103,4.96533 -21.6888,11.72572 -27.7535,12.86347 -2.0117,0.37739 -3.6576,1.00892 -3.6576,1.40341 0,0.85336 15.4649,-1.48599 17.2576,-2.61052 z m -48.2576,0.70207 c 0,-0.53273 -0.675,-0.70959 -1.5,-0.39301 -0.825,0.31659 -1.5,0.75246 -1.5,0.96862 0,0.21615 0.675,0.39301 1.5,0.39301 0.825,0 1.5,-0.43588 1.5,-0.96862 z m -39,-2.03138 c 0,-0.55 -1.0984,-1 -2.441,-1 -1.3425,0 -2.7191,0.45 -3.059,1 -0.3606,0.58342 0.6563,1 2.441,1 1.6824,0 3.059,-0.45 3.059,-1 z m 14.43,-0.88669 c 0.3014,-0.48768 -0.1221,-1.44278 -0.941,-2.12245 -0.819,-0.67966 -1.489,-0.99245 -1.489,-0.69509 0,0.29736 -0.2731,1.25246 -0.607,2.12244 -0.65,1.69402 2.0392,2.30953 3.037,0.6951 z m 106.07,-22.11331 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -15.7836,-8.36391 c 1.4514,0.37954 2.4393,-0.0585 3.1572,-1.39991 0.8734,-1.63201 0.6268,-2.14277 -1.503,-3.1132 -2.2477,-1.02409 -2.6119,-0.91631 -3.0907,0.91462 -0.3229,1.23487 -1.0971,1.86281 -1.9113,1.55034 -0.8892,-0.34122 -1.3686,0.20726 -1.3686,1.56589 0,1.60404 0.3033,1.83938 1.302,1.01047 0.7162,-0.59433 2.2526,-0.83202 3.4144,-0.52821 z m 1.7836,-10.63609 c 0.3399,-0.55 0.168,-1 -0.382,-1 -0.55,0 -1.2781,0.45 -1.618,1 -0.3399,0.55 -0.168,1 0.382,1 0.55,0 1.2781,-0.45 1.618,-1 z m 11.5,-4.12244 c 0,-0.48266 -0.675,-0.87756 -1.5,-0.87756 -0.8622,0 -1.5,0.90249 -1.5,2.12244 0,1.77324 0.2468,1.91763 1.5,0.87756 0.825,-0.68469 1.5,-1.63979 1.5,-2.12244 z m -5.1659,-0.81688 c 0.4049,-2.76655 -1.3677,-1.95206 -2.1347,0.98084 -0.3454,1.32095 -0.1172,1.9329 0.6293,1.68726 0.6442,-0.21199 1.3216,-1.41263 1.5054,-2.6681 z m 12.6659,0.93932 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -15.35,-4.5 c 0,-0.5225 -0.4837,-1.11125 -1.075,-1.30833 -0.5912,-0.19709 -1.075,0.39166 -1.075,1.30833 0,0.91667 0.4838,1.50542 1.075,1.30833 0.5913,-0.19708 1.075,-0.78583 1.075,-1.30833 z m -24.15,-1 c 0,-0.825 -0.4981,-1.5 -1.107,-1.5 -0.6088,0 -0.8605,-0.64239 -0.5592,-1.42752 0.4356,-1.13513 -0.2082,-1.31097 -3.143,-0.85846 -2.0299,0.31298 -3.9121,0.76412 -4.1825,1.00252 -0.827,0.72913 5.1756,3.77627 8.2417,4.18378 0.4125,0.0548 0.75,-0.57532 0.75,-1.40032 z m -12.4896,-0.51686 c 0.2598,-0.42041 -0.5852,-1.45739 -1.878,-2.3044 -2.0314,-1.33108 -2.8783,-1.35771 -6.2414,-0.19628 -3.4356,1.18646 -3.9586,1.15685 -4.4685,-0.25298 -0.5833,-1.61289 -1.1127,-1.14081 -2.2219,1.98128 -0.5401,1.52055 0.2231,1.70108 6.8649,1.62375 4.1099,-0.0478 7.6851,-0.43097 7.9449,-0.85137 z m 17.5553,-0.0183 c 2.1857,-1.16974 2.5673,-3.51804 0.6843,-4.21052 -2.2107,-0.81299 -3.75,0.34824 -3.75,2.82903 0,2.71205 0.3146,2.85383 3.0657,1.38149 z m -41.0657,-2.44101 c 0,-1.56043 -2.1051,-1.19594 -3.0255,0.52386 -1.0332,1.93056 -0.9551,2.01227 0.9498,0.99282 1.1416,-0.61098 2.0757,-1.29349 2.0757,-1.51668 z m -11.2501,-1.1073 c -0.953,-0.95296 -2.8635,0.5906 -2.1533,1.7397 0.4221,0.683 0.9814,0.66575 1.6996,-0.0524 0.5888,-0.58876 0.7929,-1.34803 0.4537,-1.68727 z m 16.6683,1.97648 c 1.6339,-0.62698 2.2043,-2.39301 0.7729,-2.39301 -0.4448,0 -1.6823,0.66069 -2.75,1.4682 -1.9817,1.49888 -0.8718,2.01804 1.9771,0.92481 z m -23.9182,-1.39301 c 0.3399,-0.55 -0.083,-1 -0.941,-1 -0.8574,0 -1.559,0.45 -1.559,1 0,0.55 0.4234,1 0.941,1 0.5175,0 1.2191,-0.45 1.559,-1 z m 83.5,0 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m 7.6549,-3.54313 c 0.9312,-2.42653 -0.1597,-2.66152 -2.1494,-0.463 -1.6567,1.83071 -1.668,2.00613 -0.1291,2.00613 0.9275,0 1.9528,-0.69441 2.2785,-1.54313 z m -40.3428,-5.70687 c -0.9195,-2.3375 -4.5441,-11.225 -8.0547,-19.75 -3.5106,-8.525 -8.4922,-20.78498 -11.0702,-27.24441 -2.5779,-6.45943 -4.9122,-11.74006 -5.1872,-11.73474 -0.3669,0.007 -20.2594,51.6502 -23.7776,61.72915 -0.3416,0.97839 5.0174,1.25 24.6625,1.25 h 25.0989 z m -41.0621,0.54427 c -1.2375,-0.23836 -2.25,-0.51652 -2.25,-0.61815 0,-0.40198 5.1244,-13.98231 11.0092,-29.17612 3.4085,-8.8 6.4282,-16.7875 6.7106,-17.75 0.8365,-2.8509 1.8943,-2.03725 3.8943,2.99532 1.0373,2.60992 2.036,5.08523 2.2195,5.50068 0.1834,0.41545 -0.3023,0.51137 -1.0794,0.21316 -1.6549,-0.63504 -2.2655,0.6754 -10.8527,23.29084 -3.3936,8.9375 -6.4472,16.18872 -6.7858,16.11382 -0.3387,-0.0749 -1.6282,-0.3312 -2.8657,-0.56955 z m 35,-2.90103 c 0,-1.83967 0.253,-2.20751 0.8597,-1.25 1.119,1.766 1.1273,3.85676 0.015,3.85676 -0.4812,0 -0.875,-1.17304 -0.875,-2.60676 z m -1.6265,-4.9319 c -0.9649,-2.51469 -0.6803,-3.16355 0.4986,-1.13634 0.5837,1.00375 0.8506,2.03566 0.5931,2.29313 -0.2575,0.25747 -0.7487,-0.26309 -1.0917,-1.15679 z m -2,-5 c -0.9649,-2.51469 -0.6803,-3.16355 0.4986,-1.13634 0.5837,1.00375 0.8506,2.03566 0.5931,2.29313 -0.2575,0.25747 -0.7487,-0.26309 -1.0917,-1.15679 z m -2,-5 c -0.9649,-2.51469 -0.6803,-3.16355 0.4986,-1.13634 0.5837,1.00375 0.8506,2.03566 0.5931,2.29313 -0.2575,0.25747 -0.7487,-0.26309 -1.0917,-1.15679 z m 44.3765,11.53866 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -89.4411,-1.4682 c 1.9016,-1.43834 1.8975,-1.46884 -0.2019,-1.5 -1.1787,-0.0175 -2.402,0.6432 -2.7186,1.4682 -0.7303,1.90304 0.4298,1.91567 2.9205,0.0318 z m 93.1703,-10.13597 c -0.3323,-0.33229 -1.1948,-0.36781 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60416 1.0541,0.0434 1.6448,-0.19293 1.3125,-0.52522 z m -28.7292,-4.39583 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m -15,-15 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m 0.051,-4.05115 c 1.2761,-1.27612 1.8275,-2.75573 1.4593,-3.91585 -0.3255,-1.02558 -0.1235,-2.15411 0.4488,-2.50786 1.5951,-0.98579 1.2358,-4.52514 -0.4593,-4.52514 -0.825,0 -1.5,0.4187 -1.5,0.93045 0,0.51175 -1.0125,1.07425 -2.25,1.25 -1.2375,0.17575 -2.2053,0.76955 -2.1508,1.31955 0.055,0.55 -0.5761,1.49381 -1.4015,2.09736 -1.1157,0.81583 -1.194,1.28687 -0.3054,1.83609 0.6574,0.4063 1.8105,0.22814 2.5625,-0.39592 2.2134,-1.83694 2.7057,0.50726 0.5216,2.48381 -1.087,0.98375 -1.9764,2.16889 -1.9764,2.63365 0,1.57114 2.9872,0.85785 5.0512,-1.20614 z m 41.449,-0.94885 c 0.3519,-0.5694 -0.5093,-1 -2,-1 -1.4907,0 -2.3519,0.4306 -2,1 0.3399,0.55 1.2399,1 2,1 0.7601,0 1.6601,-0.45 2,-1 z m -75,-2 c 0.3399,-0.55 -0.282,-1 -1.382,-1 -1.1,0 -2.2781,0.45 -2.618,1 -0.3399,0.55 0.282,1 1.382,1 1.1,0 2.2781,-0.45 2.618,-1 z m 60.5,-3 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m -69.3608,-1.63307 c 2.054,-0.97468 3.3632,-2.28496 3.2474,-3.25 -0.2278,-1.89863 0.4017,-3.72102 3.8094,-11.02806 1.3879,-2.97612 2.5866,-7.09845 2.6637,-9.16072 0.077,-2.06228 0.5504,-3.67727 1.0516,-3.58887 0.5013,0.0884 1.5616,-1.63928 2.3564,-3.83928 0.7947,-2.2 2.4861,-6.475 3.7586,-9.5 1.2725,-3.025 3.088,-7.89771 4.0344,-10.82824 1.7442,-5.40104 3.0618,-6.52019 8.9291,-7.58413 2.827,-0.51263 7.0748,-4.12068 5.7877,-4.91611 -0.4801,-0.29675 -1.5265,-0.12614 -2.3252,0.37915 -0.7988,0.50529 -2.4167,0.9256 -3.5953,0.93402 -1.1787,0.008 -2.402,0.69031 -2.7186,1.51531 -0.6134,1.59842 -2.6384,2.08545 -2.6384,0.63455 0,-0.476 1.6018,-4.1885 3.5596,-8.25 1.9578,-4.0615 3.3499,-6.37205 3.0936,-5.13455 -0.2563,1.2375 -0.1706,2.20421 0.1904,2.14825 1.1296,-0.1751 9.4902,-9.89783 8.9637,-10.42424 -0.2749,-0.27491 -2.2459,0.88778 -4.38,2.58375 -4.5302,3.60015 -5.7502,2.30313 -2.0122,-2.13922 1.4217,-1.68959 2.5849,-3.71246 2.5849,-4.49527 0,-1.47373 -2.6604,-1.87454 -5.4182,-0.81628 -2.5428,0.97576 -1.8181,2.67133 0.9182,2.14826 1.375,-0.26285 2.5,-0.0903 2.5,0.38342 0,0.47373 -0.8776,0.86133 -1.9503,0.86133 -1.0727,0 -2.3506,0.71532 -2.8399,1.5896 -0.4893,0.87428 -1.2947,1.50839 -1.7897,1.40913 -0.4951,-0.0993 -3.2845,6.04793 -6.1986,13.6604 -2.9141,7.61248 -6.8529,17.89087 -8.7528,22.84087 -1.8999,4.95 -3.4576,9.55162 -3.4616,10.22583 0,0.67421 -0.9054,2.69921 -2.0034,4.5 -1.0979,1.80079 -1.9979,4.06778 -2,5.03774 0,0.96996 -0.4546,2.54496 -1.0056,3.5 -0.9275,1.60757 -8.9981,21.29009 -8.9981,21.94462 0,0.61541 1.3201,0.23374 4.6392,-1.34126 z m 12.4375,-4.06872 c 1.2499,-3.28739 1.2452,-3.29821 -1.4217,-3.29821 -3.2552,0 -6.3321,3.47919 -4.7562,5.37801 1.6435,1.98033 5.0732,0.8257 6.1779,-2.0798 z m 51.9434,1.17762 c 1.9323,-2.32837 0.5535,-2.76715 -1.5146,-0.48196 -0.9985,1.10337 -1.3508,2.00613 -0.7829,2.00613 0.5679,0 1.6017,-0.68587 2.2975,-1.52417 z m 13.9799,-2.47583 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m 4,-2.5 c 0,-0.825 -0.4019,-1.5 -0.893,-1.5 -0.4912,0 -1.152,0.675 -1.4686,1.5 -0.3507,0.91371 0,1.5 0.893,1.5 0.8077,0 1.4686,-0.675 1.4686,-1.5 z m -23.0153,-9.25 c -0.01,-0.4125 -0.4515,-1.425 -0.9847,-2.25 -0.7839,-1.21296 -0.9723,-1.06944 -0.9847,0.75 -0.01,1.2375 0.4347,2.25 0.9847,2.25 0.55,0 0.9931,-0.3375 0.9847,-0.75 z m -33.9847,-10.25 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 46,-1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -20.3956,-4.75 c 0.2979,-0.9625 0.9587,-2.53139 1.4686,-3.48643 1.1608,-2.17438 1.1663,-2.76357 0.026,-2.76357 -0.7902,0 -5.0988,6.38598 -5.0988,7.55716 0,1.31566 3.1457,0.17484 3.6044,-1.30716 z m -15.6044,-1.25 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m 39.15,-1.5 c 0,-0.5225 -0.4837,-1.11125 -1.075,-1.30833 -0.5912,-0.19709 -1.075,0.39166 -1.075,1.30833 0,0.91667 0.4838,1.50542 1.075,1.30833 0.5913,-0.19708 1.075,-0.78583 1.075,-1.30833 z m -33.15,-0.46862 c 0,-0.53273 -0.675,-0.70959 -1.5,-0.39301 -0.825,0.31659 -1.5,0.75246 -1.5,0.96862 0,0.21615 0.675,0.39301 1.5,0.39301 0.825,0 1.5,-0.43588 1.5,-0.96862 z m -1.2612,-5.25569 c 2.6614,-2.50028 2.9481,-3.97653 0.5972,-3.07437 -1.1189,0.42936 -1.4272,0.25527 -0.941,-0.53138 0.3977,-0.64347 1.5525,-1.16994 2.5662,-1.16994 1.1589,0 2.2411,-1.14161 2.9151,-3.07501 0.5954,-1.70798 1.5353,-2.78866 2.1141,-2.4309 0.5732,0.35426 0.7472,1.12139 0.3867,1.70474 -0.3685,0.59628 -0.079,0.86833 0.6623,0.62138 1.7149,-0.57164 3.5754,-3.5387 2.7418,-4.37238 -0.3565,-0.35646 -1.2406,-0.27942 -1.9647,0.17118 -0.7241,0.45061 -2.329,0.68846 -3.5665,0.52857 -1.2375,-0.15989 -2.25,0.17598 -2.25,0.74638 0,0.57039 -1.3437,2.41167 -2.986,4.09173 -1.6423,1.68005 -3.2661,4.17057 -3.6084,5.53448 -0.4793,1.90964 -1.2737,2.47983 -3.455,2.47983 -1.5579,0 -3.153,0.51853 -3.5447,1.1523 -1.2609,2.04008 7.866,-0.0591 10.3329,-2.37661 z m 9.2612,-3.27569 c 0,-0.825 -0.4234,-1.5 -0.941,-1.5 -1.261,0 -2.1641,1.56159 -1.3651,2.36052 1.1261,1.12618 2.3061,0.68589 2.3061,-0.86052 z m 10,-5.5 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m 12,0.059 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m -31.7003,-1.39767 c 0.2825,-0.73626 0.2063,-2.84146 -0.1693,-4.67823 l -0.683,-3.33958 -2.7237,2.72369 c -3.2102,3.21018 -3.2644,3.50184 -0.9737,5.24072 2.2592,1.71495 3.9047,1.73427 4.5497,0.0534 z m -3.2997,-2.72035 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 23.8816,-2.01416 c -1.5168,-0.93744 -3.1543,-0.17707 -2.3659,1.0986 0.3016,0.48798 1.2467,0.61926 2.1002,0.29174 1.2121,-0.46515 1.2703,-0.76946 0.2657,-1.39034 z m -9.8816,-3.3678 c 0,-1.05548 -1.9191,-1.49891 -2.4899,-0.57533 -0.3455,0.55897 0.073,1.01631 0.9309,1.01631 0.8574,0 1.559,-0.19844 1.559,-0.44098 z m -5.2321,-2.55902 c 0.687,-1.1 0.9881,-2 0.6691,-2 -0.7486,0 -3.437,2.68177 -3.437,3.42857 0,1.27224 1.5955,0.44878 2.7679,-1.42857 z m 13.4264,-0.52713 c 0.9012,-1.97787 0.8645,-2.79291 -0.1686,-3.75 -1.0641,-0.98576 -1.2007,-0.88355 -0.7043,0.52713 0.4361,1.23914 0.1,1.75 -1.1528,1.75 -1.8286,0 -4.1686,1.79627 -4.1686,3.2 0,0.44 1.1346,0.8 2.5214,0.8 1.7264,0 2.8846,-0.7969 3.6729,-2.52713 z m 2.8057,0.52713 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 5,-0.5 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m -25,-1.55902 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 22,-2.5 c 0,-0.79254 -0.45,-1.44098 -1,-1.44098 -0.55,0 -1,0.92656 -1,2.05902 0,1.13246 0.45,1.7809 1,1.44098 0.55,-0.33992 1,-1.26648 1,-2.05902 z m -17.9203,-1.03702 c 1.1565,-1.39347 1.0233,-1.55212 -1.0492,-1.25 -1.3056,0.19032 -2.5591,0.90854 -2.7855,1.59604 -0.5925,1.79918 2.2686,1.54099 3.8347,-0.34604 z m 6.4203,-1.40396 c 0.3399,-0.55 -0.083,-1 -0.941,-1 -0.8574,0 -1.559,0.45 -1.559,1 0,0.55 0.4234,1 0.941,1 0.5175,0 1.2191,-0.45 1.559,-1 z m 8.5528,-0.5 c -0.078,-1.48429 -2.3156,-1.21161 -2.8346,0.3455 -0.2804,0.84112 0.1767,1.21599 1.2195,1 0.9173,-0.19002 1.6442,-0.7955 1.6151,-1.3455 z m -2.5999,-3.66051 c 1.6456,-0.74976 2.5471,-1.96767 2.5471,-3.44099 0,-3.01244 -1.6849,-3.96654 -2.4954,-1.41302 -0.3517,1.10799 -1.2316,2.01452 -1.9554,2.01452 -0.7237,0 -1.5513,0.9 -1.8389,2 -0.6006,2.29648 0.167,2.46865 3.7426,0.83949 z m -7.0139,-2.93822 c -0.398,-0.64392 -1.118,-0.58264 -2.028,0.17262 -2.1337,1.77075 -1.6897,3.14566 0.617,1.91112 1.1154,-0.59695 1.7504,-1.53463 1.411,-2.08374 z m -4.6319,-8.63365 c -1.6654,-2.00671 -2.546,-1.50013 -3.0212,1.73807 -0.5825,3.96876 0.2456,4.60404 2.3554,1.80698 1.2361,-1.63868 1.4228,-2.63296 0.6658,-3.54505 z m 10.6929,4.73238 c -0.3399,-0.55 -1.379,-1.01001 -2.309,-1.02224 -1.4039,-0.0185 -1.3205,-0.31554 0.4914,-1.75 1.6215,-1.2837 2.0428,-2.4267 1.6393,-4.44722 -0.7188,-3.59865 -3.0598,-5.62669 -3.9169,-3.39316 -0.3403,0.88694 -1.5999,1.61262 -2.7991,1.61262 -1.7252,0 -2.2301,-0.65331 -2.4188,-3.13016 -0.2273,-2.98251 -0.096,-3.10172 2.7757,-2.52731 2.6123,0.52245 3.2193,0.20642 4.5515,-2.36984 l 1.5373,-2.97269 h -8.4439 c -9.2983,0 -11.6075,0.51864 -11.6075,2.60699 0,1.72147 -0.1383,1.72147 -3.4565,-5e-5 -1.7749,-0.92082 -2.2374,-1.57205 -1.3643,-1.92105 0.7264,-0.2904 -4.7767,-0.56352 -12.2292,-0.60694 -9.5613,-0.0557 -13.94,0.28901 -14.875,1.17105 -1.06,1 -1.4167,1 -1.7833,0 -0.5345,-1.4577 -5.8979,-1.69613 -6.7605,-0.30053 -0.8138,1.31674 5.7495,2.40805 9.8528,1.63827 2.5292,-0.47449 3.5316,-0.25002 3.9686,0.88871 0.3215,0.83795 1.3863,1.51666 2.366,1.50824 1.3574,-0.0117 1.4639,-0.21657 0.4476,-0.86084 -1.0572,-0.67016 -0.9757,-0.98297 0.3931,-1.50822 0.9498,-0.36449 1.775,-0.53961 1.8338,-0.38917 1.3448,3.44198 2.6209,4.25105 6.2294,3.94944 2.1326,-0.17826 4.3771,-0.96576 4.9877,-1.75 1.3702,-1.75976 2.4747,-1.85055 2.1398,-0.1759 -0.179,0.8949 1.1239,1.16218 4.5862,0.94086 4.3964,-0.28103 4.7801,-0.13267 4.2202,1.63158 -0.4082,1.28594 -0.062,2.15335 1.0264,2.57097 1.3317,0.51102 1.4088,0.91179 0.4074,2.11842 -0.7832,0.94369 -0.846,1.48817 -0.1717,1.48817 1.7797,0 2.4261,-2.00035 1.1451,-3.54381 -0.9966,-1.20086 -0.8176,-1.45619 1.0209,-1.45619 1.5709,0 2.0594,-0.44309 1.6539,-1.5 -0.722,-1.88149 0.081,-1.92335 1.9051,-0.0993 1.201,1.20092 1.1908,1.57494 -0.071,2.62244 -1.8971,1.57415 -1.884,2.97687 0.028,2.97687 0.825,0 1.5,0.47656 1.5,1.05902 0,0.58246 0.4189,0.80012 0.9309,0.48368 0.512,-0.31643 1.2249,-0.0997 1.5842,0.48166 0.3592,0.58135 1.4621,0.80028 2.4506,0.48652 2.3055,-0.73174 3.4144,1.92875 1.4749,3.53845 -2.3647,1.96248 -1.6552,2.95067 2.1184,2.95067 2.1181,0 3.3088,-0.40488 2.941,-1 z m -31.5,-10.5 c 0,-0.825 -0.4234,-1.5 -0.941,-1.5 -1.261,0 -2.1641,1.56159 -1.3651,2.36052 1.1261,1.12618 2.3061,0.68589 2.3061,-0.86052 z m 4.3451,-0.0431 c -0.3257,-0.84872 -0.8066,-1.32866 -1.0688,-1.06653 -0.2621,0.26213 -0.18,0.95653 0.1826,1.54313 0.986,1.59546 1.5624,1.28551 0.8862,-0.4766 z M 352.88942,703.03703 c -3.37872,-3.37873 -58.95706,-63.23391 -70.67525,-76.11383 -12.86897,-14.14478 -21.56332,-22.56605 -23.29783,-22.56605 -1.64493,0 -1.77346,1.61619 -1.77346,22.3 0,16.45755 0.32749,22.65162 1.25,23.6421 0.6875,0.73815 -0.18043,0.52507 -1.92874,-0.47352 -1.74831,-0.99859 -3.42967,-2.75003 -3.73635,-3.8921 -0.74917,-2.78988 -0.71977,-43.12808 0.0348,-47.68983 l 0.59766,-3.61335 7.70555,8.11335 c 8.44175,8.88853 26.05114,27.90735 38.57712,41.66479 13.54015,14.87131 36.8409,40.02079 45.12447,48.70475 6.71636,7.04099 8.35388,8.25528 11.12553,8.25 1.90999,-0.004 4.07462,-0.83081 5.25,-2.00619 1.96026,-1.96026 2,-3.33333 2,-69.10699 0,-60.31131 0.15756,-67.04653 1.5559,-66.50993 0.85574,0.32838 3.07923,-0.0394 4.94108,-0.81737 2.66794,-1.11474 3.57834,-2.22501 4.29674,-5.24007 4.19372,-17.6005 5.61833,-22.43792 8.76496,-29.76257 3.57321,-8.31761 4.77439,-9.51 9.61989,-9.54942 2.04705,-0.0166 4.82143,2.60602 4.82143,4.55778 0,0.84575 -0.99032,1.42857 -2.42742,1.42857 -1.40512,0 -3.26458,1.06428 -4.41523,2.52709 -2.68943,3.41906 -7.43161,16.86866 -10.09154,28.62125 -2.23819,9.88924 -3.22238,11.49572 -8.56581,13.98193 l -3,1.39584 -0.5,64.98695 c -0.51632,67.10798 -0.59734,68.35097 -4.55401,69.86929 -3.84395,1.47506 -7.42689,0.57008 -10.69945,-2.70247 z m 421.51564,0.57248 -14.23782,-0.30712 -0.65944,-2.6274 c -0.99929,-3.9815 0.45668,-5.29328 9.15575,-8.24899 9.22045,-3.13287 18.1588,-7.55277 24.22933,-11.9811 l 4.25,-3.10029 v -49.14519 -49.14519 l -18.59416,-34.59854 c -10.22679,-19.0292 -19.00179,-35.02604 -19.5,-35.54854 -0.54245,-0.5689 -0.90584,7.90667 -0.90584,21.12756 0,18.59451 -0.24132,22.27783 -1.52961,23.34702 -2.61148,2.16733 -6.10297,-0.21163 -6.89168,-4.69569 -1.46802,-8.3462 -5.84755,-21.85605 -9.74336,-30.05602 -9.34914,-19.67829 -21.9076,-24.75097 -32.96589,-13.31576 -5.28557,5.46574 -8.86946,13.76266 -8.86946,20.53335 0,12.00453 9.87566,22.31147 34.5,36.00665 13.23867,7.36288 17.0776,10.03491 22.61508,15.74091 9.86933,10.16967 14.81483,22.63488 15.61794,39.36532 1.83936,38.3173 -21.65547,65.29561 -59.23302,68.01525 -15.54707,1.12521 -32.04108,-4.67014 -43.50891,-15.28732 -5.90243,-5.46462 -6.04103,-5.52857 -8.4957,-3.9202 -1.37247,0.89927 -2.49539,1.84229 -2.49539,2.09561 0,0.25331 2.25,6.10031 5,12.99332 5.53035,13.8621 5.8968,15.94968 3.06574,17.46482 -2.10821,1.12828 -59.26509,1.22176 -93.06574,0.15221 l -19.5,-0.61703 -0.31001,-3.74409 c -0.34029,-4.10972 -0.12458,-4.27712 8.81001,-6.83689 6.88039,-1.97123 14.9069,-5.64285 21.10712,-9.65516 l 5.60711,-3.6285 -2.98039,-7.31768 -2.98039,-7.31768 h -37.21874 -37.21874 l -2.65798,6.77476 c -1.4619,3.72612 -2.65799,7.26632 -2.65799,7.86711 0,2.54736 11.34059,8.65602 24,12.92772 l 9.5,3.20561 v 3.8624 3.8624 l -21.5,1.15221 c -30.28114,1.6228 -111.21894,1.72885 -112.8,0.14779 -0.91581,-0.91581 -1.2,-22.82222 -1.2,-92.5 v -91.3 h -7.86611 -7.86612 l -3.05478,6.83188 c -3.51875,7.86955 -6.37414,16.29904 -8.18666,24.16812 -2.73454,11.87202 -3.41444,13.48414 -5.83137,13.82676 -5.19633,0.73664 -5.19496,0.74675 -5.19496,-38.2492 0,-26.80477 0.31089,-36.48845 1.2,-37.37756 1.73498,-1.73498 132.86502,-1.73498 134.6,0 1.7209,1.7209 1.7209,72.8791 0,74.6 -2.01675,2.01675 -5.75319,1.43222 -6.71188,-1.05 -0.47795,-1.2375 -2.05203,-7.16641 -3.49796,-13.17535 -1.44593,-6.00894 -4.46923,-15.12144 -6.71844,-20.25 l -4.08947,-9.32465 h -7.89113 -7.89112 v 79.41597 79.41597 l 4.04611,3.20458 c 2.22537,1.76252 4.29488,2.95582 4.59893,2.65178 0.30404,-0.30405 8.41306,-20.9458 18.02004,-45.87056 9.60698,-24.92476 25.35727,-65.79274 35.00064,-90.81774 9.64337,-25.025 17.69658,-45.76699 17.89602,-46.0933 0.74529,-1.21946 -15.05641,-9.33561 -24.38583,-12.52516 -7.84892,-2.68341 -9.85001,-3.77573 -10.59794,-5.78503 -0.64584,-1.73503 -0.53427,-2.94424 0.37244,-4.03676 1.12793,-1.35907 5.8342,-1.55975 36.57872,-1.55975 h 35.28423 l 3.23621,7.75 c 3.95052,9.46062 30.71574,75.62829 50.72069,125.38922 l 14.72974,36.63922 0.5,-17.63922 c 0.275,-9.70157 0.86406,-18.20172 1.30902,-18.88922 1.04491,-1.61448 5.15294,-1.61448 6.45147,0 0.55296,0.6875 1.74933,4.625 2.6586,8.75 6.57328,29.82018 16.51346,43.0383 32.32001,42.97804 16.48915,-0.0629 30.13742,-16.64721 23.79443,-28.9132 -2.02591,-3.91768 -9.23363,-10.05997 -17.81685,-15.1832 -28.91114,-17.25674 -41.39277,-33.87963 -46.21869,-61.55349 -2.83301,-16.24569 -1.28256,-29.86317 4.8763,-42.82815 5.8321,-12.27713 14.12088,-20.85953 26.93369,-27.88778 14.03391,-7.69807 34.00941,-8.67462 46.39236,-2.26799 2.83119,1.46478 8.09791,1.65577 45.65961,1.65577 h 42.45928 l 3.93341,7.25 c 2.16338,3.9875 9.48197,17.48459 16.26353,29.99353 6.78156,12.50893 12.40587,22.63393 12.49846,22.5 0.0926,-0.13394 4.50682,-8.63442 9.8094,-18.88996 l 9.64106,-18.64643 -2.23255,-1.46134 c -4.77146,-3.12322 -13.58016,-7.15942 -21.23254,-9.72889 -7.16878,-2.40707 -8.03348,-2.9694 -8.32226,-5.41202 -0.66519,-5.62659 -0.79824,-5.60489 34.36292,-5.60489 17.76267,0 33.00757,0.27314 33.87755,0.60699 0.86999,0.33384 1.58179,1.48412 1.58179,2.55617 0,1.07205 -10.35,22.56957 -23,47.77226 l -23,45.82307 v 61.54933 c 0,54.6206 -0.1769,61.72622 -1.57143,63.12075 -1.3762,1.3762 -5.81767,1.54407 -35.75,1.35117 -18.79821,-0.12115 -40.58559,-0.35847 -48.41639,-0.52738 z m 4.44375,-7.29638 c 6.74706,-1.31868 10.43272,-2.64331 13.79902,-4.95938 3.62958,-2.49723 4.88827,-2.91515 6.00026,-1.99227 1.81531,1.50657 3.49479,0.44783 3.49479,-2.2031 0,-1.14441 0.65027,-2.58035 1.44504,-3.19099 2.46406,-1.89316 2.25116,-3.85071 -0.44504,-4.09196 -1.49517,-0.13378 -4.19458,1.02339 -6.71607,2.87902 -7.17947,5.28354 -9.21965,6.66403 -9.77196,6.61219 -0.29311,-0.0275 -1.95855,0.68721 -3.70098,1.58825 -4.52184,2.33834 -15.98356,6.40226 -18.05666,6.40226 -0.96488,0 -1.75433,0.43875 -1.75433,0.975 0,1.01913 0.47089,0.9586 15.70593,-2.01902 z m -365.42988,-5.45598 c 2.79134,-0.55 5.28138,-1.63074 5.53343,-2.40164 0.32962,-1.00812 -0.14065,-1.24502 -1.67496,-0.84379 -2.18654,0.57179 -7.11273,-1.15944 -7.12672,-2.50457 -0.004,-0.4125 0.86564,-0.75 1.93318,-0.75 1.06754,0 2.26665,-0.52694 2.66468,-1.17097 0.47075,-0.76169 1.03637,-0.32576 1.61825,1.24721 l 0.89454,2.41819 1.79769,-2.38325 c 1.26464,-1.67658 2.01836,-2.02618 2.54192,-1.17904 0.40933,0.66231 1.34082,0.97528 2.06998,0.69547 0.72915,-0.2798 1.8897,0.17081 2.57899,1.00135 0.72212,0.8701 2.13048,1.28565 3.32311,0.98051 1.86905,-0.47821 1.83763,-0.35274 -0.32396,1.29326 -1.33773,1.01865 -2.08375,2.32455 -1.69098,2.96006 0.88912,1.43863 2.5848,1.48178 2.5848,0.0658 0,-1.36806 2.53758,-3.92857 3.89339,-3.92857 0.56993,0 1.51791,-0.9 2.10661,-2 1.35643,-2.53452 4,-2.60523 4,-0.10699 0,1.95046 -2.19341,3.43717 -5.23063,3.54535 -0.95185,0.0339 -1.76591,0.51164 -1.80902,1.06164 -0.0899,1.14694 3.27456,2.25478 7.28965,2.40032 2.1801,0.079 2.75,-0.34691 2.75,-2.05531 0,-2.09164 -0.0588,-2.10178 -2,-0.34501 -1.79859,1.6277 -2,1.64331 -2,0.15499 0,-0.91025 0.45,-1.65499 1,-1.65499 0.55,0 1,-0.9 1,-2 0,-3.21273 5.3065,-2.70736 7.55166,0.71918 0.97992,1.49555 1.78167,3.29555 1.78167,4 0,0.70445 0.6,1.28082 1.33334,1.28082 1.54836,0 1.82579,-4.57761 0.33333,-5.5 -1.51136,-0.93407 -1.19817,-2.5 0.5,-2.5 0.825,0 1.5,0.675 1.5,1.5 0,1.04762 1.05556,1.5 3.5,1.5 1.925,0 3.5,-0.50248 3.5,-1.11663 0,-0.63425 -0.88772,-0.88449 -2.05489,-0.57927 -1.53306,0.40091 -2.29509,-0.0944 -3.00077,-1.95051 -0.69515,-1.82836 -1.44601,-2.32914 -2.8325,-1.88909 -1.75249,0.55622 -1.84904,0.13073 -1.35813,-5.98496 0.35303,-4.39807 0.0996,-7.38509 -0.76335,-8.99756 -1.04666,-1.9557 -1.0502,-2.70495 -0.0186,-3.94789 1.96517,-2.36788 -0.38042,-4.60235 -4.05893,-3.86665 -2.2611,0.45219 -2.91283,0.21895 -2.91283,-1.04246 0,-0.89375 0.675,-1.625 1.5,-1.625 1.81435,0 1.87914,-1.024 0.29752,-4.70295 -0.66137,-1.53838 -1.22387,-2.85365 -1.25,-2.92282 -0.0261,-0.0692 -0.98502,-0.4132 -2.13085,-0.76449 -1.56026,-0.47835 -2.09096,-0.19569 -2.1137,1.12577 -0.0167,0.97047 0.42243,2.33786 0.97584,3.03866 1.21365,1.53688 0.99906,1.75786 -2.52881,2.60421 -1.63254,0.39164 -2.75,0.24563 -2.75,-0.35933 0,-0.56048 0.50248,-1.01905 1.11663,-1.01905 0.69549,0 0.85675,-0.8486 0.42757,-2.25 -0.37899,-1.2375 -0.65056,-2.925 -0.60349,-3.75 0.0471,-0.825 0.10416,-2.33358 0.12687,-3.3524 0.0298,-1.33492 0.58451,-1.71034 1.98586,-1.34388 2.45467,0.64191 3.183,-0.51349 2.36875,-3.75773 -0.43389,-1.72876 -1.32643,-2.55091 -2.7806,-2.5613 -1.64384,-0.0118 -1.81404,-0.22267 -0.73227,-0.90748 0.77512,-0.49069 2.01262,-0.66066 2.75,-0.3777 0.77132,0.29598 1.34068,-0.15466 1.34068,-1.06114 0,-0.98969 -0.5578,-1.36155 -1.5,-1 -0.8737,0.33527 -1.51328,0.009 -1.5318,-0.78138 -0.0206,-0.87649 -0.57214,-0.6488 -1.55776,0.64301 -1.42962,1.87374 -1.58857,1.88952 -2.51789,0.25 -0.54556,-0.9625 -2.14564,-1.75 -3.55574,-1.75 -2.27986,0 -2.51504,0.33226 -2.1235,3 0.30046,2.04719 0.0189,3 -0.8865,3 -0.72975,0 -1.32681,-0.87344 -1.32681,-1.94098 0,-1.06754 -0.45734,-2.22364 -1.01631,-2.5691 -0.55897,-0.34546 -0.79953,-0.97887 -0.53458,-1.40757 0.26495,-0.42871 -0.40143,-1.72742 -1.48084,-2.88603 -1.89062,-2.02935 -2.07242,-2.04406 -4.9591,-0.40145 -3.51845,2.00212 -3.74214,2.78019 -1.00504,3.49596 1.33695,0.34962 1.80068,1.05424 1.39301,2.11663 -0.80697,2.10291 -2.13733,2.02555 -2.70781,-0.15746 -0.32404,-1.23998 -0.48667,-1.31284 -0.55802,-0.25 -0.0554,0.825 0.30813,2.14606 0.80779,2.9357 0.7529,1.18984 1.17839,1.21168 2.48468,0.12755 0.86692,-0.71948 1.57622,-1.90148 1.57622,-2.62668 0,-1.72473 1.95026,-2.90167 2.98178,-1.79944 1.40378,1.50001 2.27783,7.36287 1.09768,7.36287 -0.59371,0 -1.07946,-0.77513 -1.07946,-1.72251 0,-1.44387 -0.24261,-1.37613 -1.49979,0.41875 -0.82489,1.17769 -1.2023,2.91652 -0.8387,3.86406 0.57786,1.50588 0.19846,1.63601 -3.01326,1.03349 -2.91263,-0.54641 -3.80552,-0.34752 -4.30702,0.95937 -0.34797,0.90678 -0.15792,1.9421 0.42232,2.30071 0.68223,0.42164 0.41209,1.44595 -0.76458,2.89907 -2.09314,2.58492 -3.48725,2.96188 -2.62282,0.70921 0.33603,-0.87569 -0.0496,-1.78333 -0.89548,-2.10794 -1.87452,-0.71932 -1.87056,-12.01426 0.005,-13.12797 1.9175,-1.13887 3.56871,-4.922 2.90416,-6.6538 -0.72127,-1.87959 -3.01863,-2.07834 -3.72715,-0.32244 -0.27741,0.6875 -0.53991,0.0636 -0.58333,-1.3865 -0.0656,-2.1891 0.43085,-2.71132 2.92526,-3.07743 1.7918,-0.26298 2.95469,-0.006 2.88151,0.63651 -0.38276,3.36133 0.12824,3.87477 2.08969,2.09967 1.37363,-1.24311 1.70892,-2.26391 1.10062,-3.35087 -0.64805,-1.15801 -0.22328,-1.90116 1.6389,-2.86727 3.51706,-1.82467 4.80673,-1.64014 6.61065,0.94589 1.55011,2.22218 1.57016,2.20421 1.62197,-1.45295 0.0289,-2.03662 0.57468,-4.84912 1.21297,-6.25 1.41601,-3.10781 4.32786,-3.52262 3.53849,-0.50408 -0.35097,1.34212 0.1236,2.45381 1.38337,3.24055 1.05469,0.65867 1.91762,1.98933 1.91762,2.95703 0,2.14916 -1.57028,2.32168 -2.36163,0.25945 -0.8368,-2.17963 -2.63877,-1.83813 -2.63877,0.5 0,1.11111 0.66667,2 1.5,2 2.19578,0 1.83002,1.37549 -0.6682,2.51287 -2.24166,1.02057 -4.61395,4.04739 -3.79643,4.84388 1.22307,1.1916 8.34754,1.57035 9.62328,0.51159 1.09703,-0.91046 1.89947,-0.69264 3.70822,1.00659 2.26206,2.1251 2.35649,2.13144 4.72068,0.31699 1.32685,-1.01832 3.19995,-2.13896 4.16245,-2.49032 1.31277,-0.47922 1.75,-1.76315 1.75,-5.13883 0,-3.85671 -0.25017,-4.41082 -1.75,-3.87615 -0.9625,0.34312 -2.29279,1.04273 -2.9562,1.5547 -1.45432,1.12235 -3.2938,0.1613 -3.2938,-1.72088 0,-0.74884 1.35,-1.65804 3,-2.02044 2.1011,-0.46148 3,-1.25205 3,-2.63847 0,-1.12439 0.45233,-1.70001 1.04707,-1.33244 0.72031,0.44518 0.97143,-6.41198 0.80468,-21.97296 l -0.2424,-22.62009 -4.10881,0.61615 c -3.58025,0.53689 -4.50007,0.25156 -7.15021,-2.21802 -3.95872,-3.689 -10.51392,-6.92406 -9.69244,-4.78331 0.31122,0.81103 0.0124,2.14148 -0.66404,2.95655 -0.67644,0.81506 -0.9872,2.41003 -0.69056,3.54437 0.34309,1.31199 0.11314,1.92219 -0.63198,1.677 -1.57065,-0.51684 -2.08403,-4.52655 -0.78064,-6.09705 0.57689,-0.69511 0.77646,-2.90814 0.44593,-4.94496 -0.39406,-2.42827 -0.21226,-3.68677 0.53256,-3.68677 0.62196,0 1.13084,0.45 1.13084,1 0,0.55 0.89469,1 1.98821,1 1.45614,0 1.92446,-0.59116 1.75,-2.20901 -0.14895,-1.38123 0.38239,-2.33876 1.41791,-2.55525 1.44336,-0.30175 1.53721,0.18296 0.73057,3.77307 -0.50905,2.26561 -0.66071,4.54781 -0.33702,5.07156 1.11117,1.79791 2.33558,-0.13234 3.03269,-4.781 0.61472,-4.09926 0.4258,-4.87434 -1.58493,-6.50253 -2.069,-1.67538 -2.44326,-1.70335 -3.99551,-0.29857 -0.94642,0.85649 -2.4542,1.26541 -3.37004,0.91396 -0.91154,-0.34979 -2.39852,-0.0231 -3.3044,0.72589 -0.90587,0.74904 -2.78873,1.36188 -4.18413,1.36188 -1.87978,0 -2.69232,0.6477 -3.13626,2.5 -0.52531,2.19181 -0.68635,2.27314 -1.30637,0.65976 -0.38897,-1.01214 -0.47341,-2.21854 -0.18765,-2.6809 0.28575,-0.46237 0.10446,-1.09721 -0.40288,-1.41076 -0.50734,-0.31355 -0.66164,-1.58214 -0.3429,-2.8191 0.53066,-2.05932 0.42843,-2.12497 -1.21212,-0.77842 -1.62058,1.33016 -2.01525,1.19018 -4.13312,-1.46588 -1.28781,-1.61506 -1.93775,-3.18598 -1.44432,-3.49094 1.7276,-1.06771 2.93931,-5.69672 1.79163,-6.8444 -0.77946,-0.77946 -0.72744,-1.51494 0.1849,-2.61424 1.6852,-2.03055 0.69781,-4.30089 -2.50521,-5.76029 -1.96696,-0.89621 -2.49925,-1.75187 -2.16795,-3.48499 0.24152,-1.26343 -0.18322,-2.81365 -0.94388,-3.44493 -1.10209,-0.91466 -1.25407,-0.8118 -0.74824,0.50638 0.34913,0.9098 0.17214,2.21162 -0.3933,2.89293 -0.66831,0.80526 -1.06149,17.42472 -1.12354,47.49147 -0.082,39.75153 0.12337,46.77646 1.46142,49.97887 1.40371,3.35955 1.40486,3.8373 0.0117,4.85603 -1.3335,0.97505 -1.54526,5.19184 -1.54526,30.76965 0,25.67979 0.20041,29.63976 1.5,29.63976 0.825,0 1.5,0.46412 1.5,1.03138 0,0.56727 -0.675,1.29041 -1.5,1.60699 -0.87935,0.33744 -1.5,1.83676 -1.5,3.62361 0,3.03455 0.009,3.03959 2.10045,1.14301 1.15525,-1.04775 4.38427,-2.35499 7.1756,-2.90499 z m -4.34632,-12.44186 c 0.35265,-2.59611 0.58148,-2.9498 0.84635,-1.30814 0.39687,2.45978 1.7418,2.764 5.65014,1.27805 2.9265,-1.11265 5.57378,-0.41355 5.57378,1.47195 0,0.70731 -0.7118,1.55917 -1.58179,1.89301 -2.55178,0.97921 -3.3944,0.70853 -2.77984,-0.89301 0.31659,-0.825 0.0775,-1.5 -0.53138,-1.5 -0.60885,0 -1.10699,0.63046 -1.10699,1.40102 0,0.93523 -1.08944,1.37014 -3.2768,1.30814 -3.16623,-0.0897 -3.26049,-0.21294 -2.79347,-3.65102 z m 22.80584,3.34409 c -0.32877,-0.32877 -0.34067,-1.26774 -0.0264,-2.08661 0.4256,-1.1091 -0.0383,-1.40299 -1.8189,-1.15223 -1.59978,0.22529 -2.39897,-0.15944 -2.41666,-1.16339 -0.0145,-0.825 -0.354,-2.0227 -0.75435,-2.66155 -0.45739,-0.72985 1.13197,-2.30595 4.27643,-4.24075 2.75239,-1.69357 5.00435,-2.6248 5.00435,-2.0694 0,0.58906 1.08718,0.73694 2.60929,0.35491 2.51896,-0.63221 2.58413,-0.53767 1.8824,2.73095 -0.98379,4.58249 -1.36468,5.06093 -3.49169,4.38584 -1.00743,-0.31975 -2.17423,-0.0271 -2.59289,0.65031 -0.42288,0.68422 -0.23805,1.40604 0.41584,1.62401 1.7058,0.5686 1.444,2.90926 -0.40474,3.61869 -1.94167,0.74509 -1.94676,0.74511 -2.68264,0.009 z m 14.84738,-0.26802 c -0.43077,-0.697 -0.51316,-1.53733 -0.18309,-1.86741 0.89497,-0.89496 1.87077,0.4213 1.38739,1.87145 -0.33872,1.01617 -0.57427,1.01538 -1.2043,-0.004 z m -22.97921,-1.72445 c -0.33562,-0.87464 -0.34371,-2.02149 -0.018,-2.54856 0.89264,-1.44432 3.39498,1.02536 2.74779,2.71191 -0.7238,1.88619 -1.97201,1.81149 -2.72983,-0.16335 z m 20.18295,-6.40976 c -0.29312,-1.99715 -0.0134,-3 0.83681,-3 0.70242,0 1.67078,-0.70343 2.15192,-1.56319 0.79006,-1.41176 1.00405,-1.40746 2.20892,0.0443 1.13955,1.37308 1.01922,1.82807 -0.82511,3.1199 -1.18758,0.83181 -2.15923,2.16186 -2.15923,2.95567 0,2.70149 -1.77117,1.45576 -2.21331,-1.5567 z m -24.78669,-0.059 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 25,-7.83399 c 0,-0.49116 0.73865,-1.17646 1.64144,-1.52289 1.37248,-0.52667 1.43434,-0.38034 0.37756,0.89301 -1.44013,1.73524 -2.019,1.91584 -2.019,0.62988 z m -25.96483,-3.64937 c 1.43755,-1.73214 0.51472,-3.07444 -2.48503,-3.61459 -1.74822,-0.3148 -1.6688,-0.53526 0.76801,-2.13192 2.607,-1.70817 2.74475,-1.70801 3.37692,0.004 0.36248,0.98167 1.12398,2.09488 1.69223,2.4738 0.65498,0.43676 0.35041,1.4434 -0.83205,2.75 -2.1453,2.37053 -4.45079,2.84503 -2.52008,0.51867 z m -4.03517,-0.45762 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 10.625,0.20225 c -0.27117,-0.43876 -0.11697,-1.40622 0.34266,-2.14992 0.67132,-1.08622 1.37326,-0.92932 3.56887,0.79775 l 2.73319,2.14992 h -3.07584 c -1.69172,0 -3.29771,-0.35899 -3.56888,-0.79775 z m 0.21014,-6.94325 c -2.06432,-0.46232 -3.2882,-3.259 -1.4262,-3.259 1.33596,0 4.2361,2.7807 3.48356,3.3401 -0.21587,0.16047 -1.14169,0.12398 -2.05736,-0.0811 z m 0.63382,-6.30922 c -0.95021,-1.53748 0.35135,-2.52947 1.63484,-1.24598 0.71818,0.71818 0.73543,1.27752 0.0524,1.69964 -0.55992,0.34605 -1.31919,0.1419 -1.68727,-0.45366 z m 17.53104,-24.01717 c 0,-0.61083 -0.85192,-0.797 -1.99173,-0.43523 -1.73429,0.55044 -1.88149,0.33413 -1.13886,-1.67339 0.46908,-1.26805 0.51537,-3.48235 0.10286,-4.92068 -0.78449,-2.73536 -0.19732,-7.91439 0.89431,-7.888 1.19528,0.0289 3.63399,1.95406 2.49471,1.96938 -1.8809,0.0253 -2.73693,7.00524 -1.02517,8.35907 1.88331,1.48951 3.15867,5.65624 1.73127,5.65624 -0.58707,0 -1.06739,-0.48032 -1.06739,-1.06739 z m -34,-5.5396 c 0,-1.05452 0.5438,-1.39831 1.58179,-1 0.86998,0.33385 2.02154,0.60699 2.55901,0.60699 0.53748,0 0.69912,0.45 0.3592,1 -1.00727,1.6298 -4.5,1.15868 -4.5,-0.60699 z m 5,-3.39301 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 2,-3.5 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m 9,-3.02383 c 0,-0.96254 0.46356,-1.30771 1.16994,-0.87114 0.78205,0.48333 0.9623,0.18197 0.54367,-0.90896 -0.78293,-2.0403 1.21494,-3.42972 2.33221,-1.62193 0.99201,1.6051 0.47611,2.57616 -2.10151,3.95567 -1.54782,0.82836 -1.94431,0.71546 -1.94431,-0.55364 z m 19.88931,-1.39284 c -0.0609,-0.87083 -0.0287,-2.59583 0.0716,-3.83333 0.10025,-1.2375 -0.29994,-2.25 -0.8893,-2.25 -0.58937,0 -1.07157,0.63925 -1.07157,1.42054 0,1.40951 -5.63626,3.27653 -6.69504,2.21775 -0.30362,-0.30362 -0.25906,-1.31552 0.099,-2.24866 0.60376,-1.57338 0.74693,-1.56551 1.97089,0.10836 0.98631,1.34885 1.5133,1.49198 2.08535,0.56637 0.42104,-0.68124 0.26472,-1.73942 -0.34735,-2.35149 -2.43726,-2.43726 -1.15913,-3.57545 3.81051,-3.39331 4.23445,0.15519 4.98448,0.4943 5.35998,2.42338 0.24013,1.23362 -0.0965,3.27042 -0.74798,4.52622 -0.65151,1.2558 -1.026,2.75897 -0.8322,3.34039 0.19381,0.58141 -0.33512,1.05712 -1.1754,1.05712 -0.84028,0 -1.57759,-0.7125 -1.63847,-1.58334 z m -31.38931,-0.0833 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -6.5,-3.51357 c 0,-1.74411 2.03788,-5.65605 3.48563,-6.69107 0.5421,-0.38756 1.35725,-0.0406 1.81146,0.77103 0.45421,0.81162 1.3177,1.17168 1.91888,0.80013 0.61283,-0.37875 0.81034,-0.2181 0.44955,0.36566 -0.35392,0.57267 0.0265,1.59729 0.84549,2.27696 1.60833,1.33479 1.60113,1.3507 1.92886,-4.25914 0.25897,-4.43287 -0.37601,-5.28619 -2.10098,-2.82344 -1.68889,2.41123 -2.21162,2.48569 -4.62057,0.65823 -1.49277,-1.13243 -1.59462,-1.76217 -0.6281,-3.88345 1.24868,-2.74055 4.78337,-4.22775 6.34253,-2.66859 1.57611,1.57611 2.41694,1.10848 1.857,-1.03275 -0.29241,-1.11819 -0.0307,-2 0.59362,-2 0.61415,0 1.11663,0.6375 1.11663,1.41667 0,0.77916 0.52967,1.59322 1.17705,1.80901 0.74047,0.24683 0.85514,0.91322 0.30916,1.79664 -0.47735,0.77236 -1.01963,2.8833 -1.20508,4.69098 -0.24915,2.42874 0.0617,3.2867 1.19085,3.2867 0.88722,0 1.52802,0.8836 1.52802,2.10699 0,1.48509 -0.45392,1.9328 -1.53785,1.51686 -0.88238,-0.3386 -1.78531,0.0547 -2.11843,0.92281 -0.35281,0.9194 -1.28571,1.28914 -2.37799,0.94246 -0.98858,-0.31376 -2.08684,-0.10217 -2.44059,0.4702 -1.19342,1.931 -2.25126,1.05879 -1.76989,-1.45932 0.26285,-1.375 0.18931,-2.5 -0.16342,-2.5 -0.35273,0 -1.06906,1.125 -1.59183,2.5 -1.03162,2.71336 -4,3.44539 -4,0.98643 z m 18.47864,-2.68854 c -0.85123,-2.20913 0.38658,-4.33267 1.73785,-2.9814 0.65434,0.65434 0.63885,1.6177 -0.0456,2.83713 -0.95532,1.70198 -1.08766,1.71326 -1.69223,0.14427 z m -2.98908,-5.11511 c -0.43194,-1.03946 -0.2703,-2.30204 0.37766,-2.95 0.62303,-0.62303 1.13278,-1.86434 1.13278,-2.75847 0,-1.93631 4.35536,-6.28562 5.32419,-5.31679 1.03242,1.03242 0.80421,5.14509 -0.32419,5.84248 -0.55,0.33992 -1.02762,-0.19602 -1.06137,-1.19098 -0.0338,-0.99496 -1.1037,0.44098 -2.37765,3.19098 -1.87888,4.0558 -2.45888,4.65684 -3.07142,3.18278 z m 8.95151,-0.77813 c -0.37233,-0.60245 -0.21469,-2.06495 0.3503,-3.25 0.565,-1.18506 1.27896,-2.94215 1.58657,-3.90465 0.61345,-1.91947 4.11367,-2.3816 5.16419,-0.68183 0.3631,0.5875 1.30744,0.8198 2.09855,0.51622 1.47955,-0.56776 5.35932,1.32965 5.35932,2.62097 0,0.39835 -0.96823,1.24246 -2.15163,1.87579 -1.83271,0.98083 -2.05969,0.91194 -1.53139,-0.46482 0.39766,-1.03627 0.0932,-1.61633 -0.84836,-1.61633 -0.80774,0 -1.46862,0.675 -1.46862,1.5 0,0.825 -0.70714,1.5 -1.57143,1.5 -0.86428,0 -2.24643,0.675 -3.07143,1.5 -1.77848,1.77849 -2.98965,1.90364 -3.91607,0.40465 z m 17.55893,-3.90465 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -32.78414,-9.75 c 0.25272,-1.21995 1.19871,-1.69091 3.12329,-1.5549 2.25475,0.15935 2.65484,-0.13869 2.18277,-1.62603 -0.41177,-1.29738 0.0433,-1.9836 1.58212,-2.38603 1.59315,-0.41661 2.01886,-1.10507 1.62192,-2.62296 -0.61803,-2.36336 0.94958,-3.78454 2.48303,-2.25109 0.56909,0.56909 1.60937,0.81421 2.31171,0.54469 1.53392,-0.58862 2.62165,0.85471 1.66332,2.20706 -0.37621,0.53088 -2.03402,1.42152 -3.68402,1.9792 -1.85647,0.62747 -3.00261,1.70708 -3.00684,2.83233 -0.005,1.21954 -1.32189,2.27602 -4,3.208 -4.97487,1.73125 -4.7086,1.75181 -4.2773,-0.33027 z m 28.08757,-1.85566 c -2.18982,-2.18982 -2.74076,-2.36426 -3.45219,-1.09301 -0.4894,0.87451 -1.65844,1.30034 -2.77108,1.00938 -2.60854,-0.68215 -2.48314,-7.29939 0.13846,-7.30623 1.14261,-0.003 1.51916,0.51528 1.12351,1.54632 -0.48003,1.25095 -0.0792,1.4213 2.07336,0.88106 2.32884,-0.58451 2.81827,-0.27281 3.84572,2.4492 0.64749,1.71542 1.75361,3.11894 2.45803,3.11894 0.70442,0 1.28076,0.45 1.28076,1 0,1.76345 -2.01705,1.07386 -4.69657,-1.60566 z m -12.70343,-0.99434 c -0.35589,-0.92744 -0.42208,-1.91126 -0.14708,-2.18626 0.275,-0.275 0.79119,0.25882 1.14708,1.18626 0.35589,0.92744 0.42208,1.91126 0.14708,2.18626 -0.275,0.275 -0.79119,-0.25882 -1.14708,-1.18626 z m -13.6,-2.95902 c 0,-0.85746 0.45,-1.2809 1,-0.94098 0.55,0.33992 1,1.04148 1,1.55902 0,0.51754 -0.45,0.94098 -1,0.94098 -0.55,0 -1,-0.70156 -1,-1.55902 z m -8.65492,-1.98411 c -0.32569,-0.84872 -0.37597,-1.75931 -0.11175,-2.02354 0.8909,-0.89089 3.76667,0.76865 3.76667,2.17366 0,1.89234 -2.91714,1.77253 -3.65492,-0.15012 z m 8.28686,-4.54715 c -1.05156,-5.25782 -0.86402,-6.34722 0.84805,-4.92632 0.85798,0.71206 1.34666,2.44631 1.16273,4.12638 -0.45303,4.13822 -1.27752,4.46622 -2.01078,0.79994 z m 15.04395,1.68805 c -0.56462,-1.47138 0.0818,-2.59777 1.49078,-2.59777 0.45833,0 0.83333,0.9 0.83333,2 0,2.29292 -1.52327,2.68471 -2.32411,0.59777 z m -22.67589,-5.59777 c 0,-1.31114 0.48478,-1.7512 1.5,-1.36163 0.825,0.31659 1.5,0.92932 1.5,1.36163 0,0.43231 -0.675,1.04504 -1.5,1.36163 -1.01522,0.38957 -1.5,-0.0505 -1.5,-1.36163 z m 10.56201,-0.71876 c -1.33176,-1.82511 -1.56637,-2.77979 -0.75,-3.05191 0.65339,-0.2178 1.18799,-1.23194 1.18799,-2.25365 0,-2.74698 1.98147,-3.48401 2.10963,-0.7847 0.0603,1.26996 0.23263,3.77152 0.38298,5.55902 0.32981,3.92116 -0.3651,4.04712 -2.9306,0.53124 z m -6.56201,-3.28124 c 0,-0.55 -0.022,-1.1125 -0.0489,-1.25 -0.0269,-0.1375 -0.43514,-1.96245 -0.90719,-4.05545 -0.73778,-3.2712 -0.62562,-3.76114 0.79892,-3.48979 0.91146,0.17362 1.81282,1.43607 2.00302,2.80546 0.1902,1.36938 0.79144,3.03257 1.33609,3.69598 0.54465,0.6634 0.69997,1.6759 0.34516,2.25 -0.82304,1.33165 -3.5271,1.36523 -3.5271,0.0438 z m -5,-31.05902 c 0,-1.13246 0.43035,-1.79305 0.95633,-1.46797 0.52598,0.32507 0.70283,1.25163 0.39301,2.05902 -0.79323,2.06711 -1.34934,1.82352 -1.34934,-0.59105 z m 412.5,162.55902 c 0,-1.1 0.30781,-2.47149 0.68402,-3.04775 0.95224,-1.4586 -0.94877,-4.28879 -1.93402,-2.87931 -1.26629,1.81155 -4.42943,2.52304 -5.87675,1.32187 -1.09261,-0.90679 -1.37325,-0.69608 -1.37325,1.03102 0,1.50168 -1.00168,2.59242 -3.25,3.53897 l -3.25,1.36824 3.5,0.44593 c 1.925,0.24526 5.3,0.39533 7.5,0.33348 3.29585,-0.0927 4,-0.46452 4,-2.11245 z m 10.91821,1.89301 c 1.5928,-0.61121 2.25199,-3.39301 0.80403,-3.39301 -0.42777,0 -1.54836,0.9 -2.49021,2 -1.73772,2.02951 -1.17784,2.49204 1.68618,1.39301 z m 7.08179,-0.39301 c 1.08086,-1.74886 -0.52195,-3.22667 -2.08903,-1.92611 -0.77603,0.64405 -1.41097,1.5659 -1.41097,2.04855 0,1.20559 2.73844,1.10978 3.5,-0.12244 z m 11.30833,-0.075 c -0.19708,-0.59125 -0.78583,-1.075 -1.30833,-1.075 -0.5225,0 -1.11125,0.48375 -1.30833,1.075 -0.19709,0.59125 0.39166,1.075 1.30833,1.075 0.91667,0 1.50542,-0.48375 1.30833,-1.075 z m -277.30833,-3.62202 c 8.27262,-1.57654 15.39254,-5.30773 20.42431,-10.70336 1.33338,-1.42979 3.25625,-2.59962 4.27306,-2.59962 1.74214,0 1.75428,-0.14415 0.21067,-2.5 -1.989,-3.0356 -3.40804,-3.21921 -3.40804,-0.44098 0,1.20191 -0.44336,1.785 -1.06508,1.40076 -0.5858,-0.36204 -3.64302,1.15006 -6.79384,3.36024 -6.58597,4.61979 -14.41141,8.36555 -24.54633,11.74946 l -7.09475,2.36884 5,-0.55537 c 2.75,-0.30546 8.6,-1.24144 13,-2.07997 z m -50.5,0.19702 c 0,-0.825 -0.64844,-1.5 -1.44098,-1.5 -1.67065,0 -2.79841,1.42728 -1.86517,2.36052 1.19516,1.19516 3.30615,0.64571 3.30615,-0.86052 z m 306.36163,0 c 0.31658,-0.825 0.18787,-1.5 -0.28603,-1.5 -0.47389,0 -1.12064,0.675 -1.43723,1.5 -0.31658,0.825 -0.18787,1.5 0.28603,1.5 0.47389,0 1.12064,-0.675 1.43723,-1.5 z m -406,-1 c 0.31658,-0.825 0.18787,-1.5 -0.28603,-1.5 -0.47389,0 -1.12064,0.675 -1.43723,1.5 -0.31658,0.825 -0.18787,1.5 0.28603,1.5 0.47389,0 1.12064,-0.675 1.43723,-1.5 z m 50.80963,-0.15499 c 1.70166,-1.53998 1.95582,-1.53998 3.65748,0 1.00581,0.91025 2.18256,1.65499 2.61501,1.65499 1.00519,0 -2.16631,-5.06316 -4.31239,-6.88453 -1.48931,-1.26398 -1.4743,-1.33022 0.17235,-0.76078 1.4068,0.4865 2.22718,-0.30911 3.72804,-3.61546 1.05838,-2.33158 1.93421,-4.93863 1.94629,-5.79345 0.0121,-0.85482 1.33924,-3.63135 2.94924,-6.17007 1.80056,-2.83918 2.72295,-5.39723 2.39641,-6.64592 -0.3048,-1.16555 0.31523,-3.22242 1.45595,-4.82994 1.09276,-1.53992 2.1786,-3.69985 2.41299,-4.79985 0.23438,-1.1 1.01795,-1.86882 1.74127,-1.7085 0.92304,0.2046 1.16323,-0.50309 0.80564,-2.3737 -0.3874,-2.02651 -0.0578,-2.78332 1.37549,-3.15813 1.9564,-0.51161 2.64101,-2.25967 0.88497,-2.25967 -0.55,0 -1,-0.45 -1,-1 0,-0.55 0.70714,-1 1.57143,-1 2.02104,0 4.42857,-2.40753 4.42857,-4.42857 0,-1.99974 -1.87889,-2.0506 -2.63837,-0.0714 -0.31659,0.825 -0.94917,1.5 -1.40575,1.5 -1.4555,0 0.2844,-7.24028 2.20031,-9.15619 1.01409,-1.01409 1.84381,-2.54789 1.84381,-3.40843 0,-1.54549 2.21222,-7.44062 6.26139,-16.68538 1.14427,-2.6125 2.62978,-4.75 3.30114,-4.75 1.40222,0 2.80908,-4.58971 1.87174,-6.10635 -0.3448,-0.5579 -0.079,-2.3372 0.59073,-3.95401 0.94858,-2.29011 1.85373,-2.93967 4.09632,-2.93967 1.83976,0 2.87868,-0.52005 2.87868,-1.44098 0,-2.10996 1.8687,-2.91288 3.5438,-1.52267 1.02557,0.85115 1.4562,0.87661 1.4562,0.0861 0,-0.61735 -0.45,-1.12245 -1,-1.12245 -0.55,0 -1,-1.62378 -1,-3.60841 0,-3.30775 0.19962,-3.55831 2.39574,-3.00711 1.62194,0.40708 2.58078,0.1191 2.96862,-0.8916 0.31508,-0.82108 0.13699,-1.49288 -0.39574,-1.49288 -0.53274,0 -0.96862,-0.9 -0.96862,-2 0,-1.1 0.45,-2 1,-2 0.55,0 1.00689,0.5625 1.01531,1.25 0.0102,0.83082 0.33547,0.74698 0.97002,-0.25 0.72595,-1.14058 0.42276,-1.62891 -1.26531,-2.03798 -3.42485,-0.82994 -4.64892,-8.50894 -2.17283,-13.63089 1.01865,-2.10712 1.96005,-4.47966 2.09202,-5.27231 0.13197,-0.79265 0.48999,-2.43747 0.79561,-3.65514 0.47418,-1.88929 0.22641,-2.13459 -1.68958,-1.67277 -1.84033,0.44358 -2.01981,0.30023 -0.99524,-0.79487 1.14971,-1.22885 1.88389,-5.90326 0.74892,-4.76829 -0.47367,0.47366 -11.94778,29.86208 -24.14115,61.83225 -3.04165,7.975 -6.10069,15.85 -6.79786,17.5 -0.69718,1.65 -2.29346,5.925 -3.5473,9.5 -1.25384,3.575 -3.34461,8.83463 -4.64616,11.68807 -1.30155,2.85345 -2.36645,5.63223 -2.36645,6.17509 0,0.54285 -2.47314,7.06501 -5.49586,14.49368 -3.02272,7.42867 -5.62785,14.37159 -5.78918,15.4287 -0.16133,1.05711 -1.09739,3.14917 -2.08013,4.64903 -0.98274,1.49985 -1.54173,3.36565 -1.2422,4.14622 0.31796,0.82859 -0.0666,1.41921 -0.92401,1.41921 -0.80774,0 -1.46862,0.45 -1.46862,1 0,1.56984 3.15432,1.17032 5.17126,-0.65499 z M 518.14288,582.4042 c 0,-2.92822 2.13948,-7.04705 3.66052,-7.04705 0.73671,0 1.33948,0.45 1.33948,1 0,0.55 -0.70329,1 -1.56286,1 -0.88958,0 -1.48617,0.75389 -1.38484,1.75 0.33619,3.30502 -0.0537,5.25 -1.0523,5.25 -0.55,0 -1,-0.87883 -1,-1.95295 z m -29.77174,107.72276 c -1.24945,-0.60216 -2.53573,-2.14671 -2.8584,-3.43232 -0.6222,-2.47903 -2.36986,-3.23759 -2.36986,-1.02862 0,2.58613 3.42762,5.50989 6.5,5.5445 0.55,0.006 -0.0223,-0.48141 -1.27174,-1.08356 z m 6.26436,-2.79306 c -0.39549,-1.24608 0.0835,-2.21472 1.45932,-2.95103 1.12643,-0.60285 2.04806,-1.62025 2.04806,-2.2609 0,-0.86688 -0.30694,-0.85788 -1.2,0.0352 -1.72526,1.72526 -5.8,1.51449 -5.8,-0.3 0,-0.825 -0.46583,-1.5 -1.03518,-1.5 -0.69833,0 -0.68328,0.65755 0.0462,2.02067 0.59479,1.11136 0.81921,2.44495 0.49871,2.96352 -0.69268,1.12078 2.63988,4.88711 3.78091,4.27303 0.43487,-0.23405 0.52574,-1.26026 0.20194,-2.28047 z m 18.81148,0.96836 c 0.40155,-1.53553 -0.0957,-2.29556 -1.96728,-3.00715 -2.94981,-1.12152 -4.47511,-0.4619 -3.68616,1.59407 0.34234,0.89211 -0.0303,1.46797 -0.95005,1.46797 -1.02104,0 -1.34322,-0.65064 -0.99036,-2 0.56368,-2.1555 -1.18229,-2.81821 -1.97594,-0.75 -1.04369,2.71981 -0.68941,3.27324 2.47634,3.86836 5.70364,1.07221 6.54254,0.93346 7.09345,-1.17325 z m 139.52975,1.17874 c 1.6571,-1.05044 -0.65293,-2.12385 -4.57063,-2.12385 -2.49249,0 -2.51755,-0.0615 -0.79914,-1.96031 0.97573,-1.07817 2.28298,-1.86567 2.90499,-1.75 1.78668,0.33225 0.90113,-6.21705 -1.57016,-11.61251 -2.10241,-4.5901 -2.36428,-4.7937 -5.42678,-4.21917 -2.63065,0.49351 -3.33243,0.24243 -3.84612,-1.37607 -0.61899,-1.95027 -0.66491,-1.94794 -3.08513,0.15642 -1.55773,1.35443 -2.25205,2.78123 -1.89731,3.89891 0.70044,2.20688 -1.90967,7.4055 -4.14971,8.26509 -2.22213,0.85271 -1.17716,1.76878 2.50696,2.19774 2.26987,0.26428 3.13062,-0.12379 3.60756,-1.6265 0.34452,-1.08548 1.27107,-1.9736 2.05901,-1.9736 0.78793,0 1.43261,-0.45 1.43261,-1 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,-0.45 -1.5,-1 0,-0.55 0.45,-1 1,-1 0.55,0 1,-0.675 1,-1.5 0,-2.18482 2.30981,-1.83482 3.81686,0.57836 0.91709,1.46849 0.99022,2.44917 0.24923,3.34201 -1.2716,1.53218 -0.3947,2.57963 2.15959,2.57963 1.0408,0 1.62487,0.43281 1.29794,0.96179 -0.37437,0.60574 -1.50358,0.61613 -3.05034,0.0281 -3.84865,-1.46325 -5.43525,-0.29855 -5.25226,3.85563 0.0886,2.00999 -0.19811,4.44203 -0.637,5.40453 -0.72097,1.58107 -0.0878,1.74852 6.55899,1.73469 4.04635,-0.008 7.95722,-0.3958 8.69084,-0.86084 z m -6.33385,-16.12385 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 195.47776,11.9206 c 0.0122,-0.31867 -0.99026,-0.54367 -2.22776,-0.5 -2.92889,0.10336 -4.27275,2.24459 -2.64198,4.20956 1.11444,1.34282 1.48039,1.24676 3.05676,-0.80236 0.98491,-1.28029 1.80075,-2.58853 1.81298,-2.9072 z m -341.97776,3.0794 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m 110.72917,0.39583 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 7.27083,-0.22916 c 0,-1.30208 -1.18877,-2.16804 -2.15579,-1.57039 -1.03422,0.63919 -0.14245,2.40372 1.21481,2.40372 0.51754,0 0.94098,-0.375 0.94098,-0.83333 z m 231.12367,-1.96736 c 0.50466,-1.36695 0.47822,-2.0713 -0.0651,-1.73548 -0.50299,0.31087 -1.20225,-0.34132 -1.55391,-1.44931 -0.76137,-2.39887 -1.81265,-2.55321 -3.50461,-0.51452 -1.02502,1.23507 -0.93919,1.5 0.48596,1.5 1.36137,0 1.59258,0.55095 1.08309,2.5809 -0.5194,2.06945 -0.31553,2.51533 1.02874,2.25 0.92207,-0.18199 2.05872,-1.36621 2.52588,-2.63159 z m -256.62367,0.80069 c -0.33992,-0.55 -1.06803,-1 -1.61803,-1 -0.55,0 -0.72189,0.45 -0.38197,1 0.33992,0.55 1.06803,1 1.61803,1 0.55,0 0.72189,-0.45 0.38197,-1 z m 15.00167,-1.0027 c 0.41211,-0.66681 1.26937,-0.65502 2.55902,0.0352 1.60351,0.85817 1.93931,0.70815 1.93931,-0.86645 0,-1.41704 -0.93559,-2.05617 -3.6562,-2.49767 -4.30675,-0.69888 -5.3438,-0.23494 -5.3438,2.39066 0,2.06917 3.36879,2.77132 4.50167,0.93828 z m 15.49833,0.54975 c 0,-1.27583 -2.43359,-5.54705 -3.16052,-5.54705 -1.06538,0 -1.05322,0.30762 0.13577,3.4349 0.80924,2.12845 3.02475,3.67552 3.02475,2.11215 z m 12.6707,-3.20969 c -0.2957,-0.2957 -1.06562,-0.21132 -1.71093,0.1875 -0.86994,0.53766 -0.82251,0.94308 0.18347,1.56809 1.33344,0.82847 2.62596,-0.65708 1.52746,-1.75559 z m -40.6707,0.66264 c 0,-0.55 -0.9,-1 -2,-1 -1.1,0 -2,0.45 -2,1 0,0.55 0.9,1 2,1 1.1,0 2,-0.45 2,-1 z m -133.81667,-3.21667 c -0.71756,-0.71756 -1.18333,-0.7766 -1.18333,-0.15 0,1.33478 1.18261,2.51739 1.85,1.85 0.28417,-0.28416 -0.0158,-1.04916 -0.66667,-1.7 z m 23.81667,0.21667 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 127,-0.5 c 0,-0.825 -0.43588,-1.5 -0.96862,-1.5 -0.53273,0 -0.70959,0.675 -0.39301,1.5 0.31659,0.825 0.75246,1.5 0.96862,1.5 0.21615,0 0.39301,-0.675 0.39301,-1.5 z m 205.60417,-4.22917 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69479 0.14921,-1.53513 -0.18308,-1.86742 z m -190.60417,0.32279 c 0,-0.9114 -0.69995,-1.22334 -1.98875,-0.88631 -1.09382,0.28604 -1.74226,0.91891 -1.44099,1.40638 0.87315,1.41279 3.42974,1.02512 3.42974,-0.52007 z m -13.84565,-1.83927 c -1.14518,-1.14518 -3.44675,-0.0365 -2.63864,1.27107 0.30159,0.48798 1.23918,0.62213 2.08353,0.29812 1.00267,-0.38476 1.19522,-0.92908 0.55511,-1.56919 z m -122.10466,-3.75435 c 1.39041,0 1.95031,-0.68699 1.95031,-2.39301 0,-3.092 -2.98307,-4.38772 -3.70917,-1.61112 -0.28825,1.10227 -0.94817,2.00413 -1.46648,2.00413 -0.51831,0 -0.66427,0.45 -0.32435,1 0.33992,0.55 -0.13862,1 -1.06343,1 -1.41146,0 -1.47314,0.25101 -0.38413,1.56319 1.17649,1.41758 1.37882,1.41758 2.17214,0 0.48114,-0.85976 1.75244,-1.56319 2.82511,-1.56319 z m 136.95031,2 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 4,-1.05902 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 71.24827,-4.46591 c 3.39868,-3.58871 6.75819,-6.30283 7.46558,-6.03138 0.70738,0.27145 1.28615,-0.19948 1.28615,-1.0465 0,-1.36961 0.17492,-1.36512 1.58062,0.0406 2.0653,2.0653 3.73732,0.96516 2.99971,-1.97373 -0.43394,-1.72894 0.0878,-2.84445 2.05383,-4.3909 3.80093,-2.98981 4.84113,-2.54935 2.32484,0.98445 -2.36648,3.32342 -2.04885,4.36599 1.3443,4.41238 1.88116,0.0257 2.16493,0.53279 1.97553,3.53004 -0.12164,1.925 0.0284,2.9375 0.33333,2.25 0.77043,-1.73675 2.38784,-1.56742 2.38784,0.25 0,0.825 -0.50248,1.5 -1.11663,1.5 -0.6243,0 -0.88603,0.88181 -0.59362,2 0.56036,2.14282 -0.7157,2.73786 -1.86912,0.87158 -0.47636,-0.77077 -0.98763,-0.60978 -1.61313,0.50792 -1.499,2.67857 -0.10701,3.54004 3.95036,2.44479 4.81388,-1.29946 5.98565,-2.45353 3.3428,-3.29234 -2.54218,-0.80686 -2.65709,-1.83571 -0.4087,-3.65951 1.23412,-1.00106 1.48305,-1.02497 0.91992,-0.0884 -0.57712,0.95989 -0.0794,1.15848 1.97145,0.78659 3.67454,-0.66632 5.5869,-2.57067 2.58149,-2.57067 -1.84431,0 -2.06636,-0.31546 -1.26978,-1.80388 0.58994,-1.10232 0.60958,-2.36631 0.0505,-3.25 -1.35955,-2.14892 -1.21503,-2.40592 2.0448,-3.63637 2.60467,-0.98315 5.84425,-5.80849 4.68077,-6.97198 -0.89315,-0.89314 -3.4821,0.95197 -4.51422,3.21724 -0.61271,1.34476 -1.79866,2.445 -2.63545,2.445 -0.83679,0 -1.52144,0.675 -1.52144,1.5 0,0.825 -0.69473,1.5 -1.54384,1.5 -0.90552,0 -1.42234,-0.70857 -1.25,-1.71375 0.18063,-1.05348 -0.47671,-1.8686 -1.70616,-2.11568 -2.80589,-0.56389 -3.46713,-1.97384 -3.48469,-7.43036 -0.0114,-3.53515 0.49927,-5.20038 1.98469,-6.47224 2.84172,-2.43316 2.52144,-3.00817 -1.91099,-3.43087 -3.48221,-0.33208 -3.80725,-0.17915 -2.96481,1.39496 0.52039,0.97237 0.5902,1.76794 0.15513,1.76794 -0.43507,0 -1.79606,2.19075 -3.02443,4.86833 -2.88244,6.28314 -8.57344,12.0997 -14.80633,15.13303 -8.69348,4.23081 -24.40568,2.8725 -30.14212,-2.60577 -1.56242,-1.4921 -6.00983,-0.61094 -6.75808,1.33896 -0.48738,1.27009 0.0783,1.42087 3.36105,0.89593 4.53805,-0.72567 7.56109,1.31171 6.5717,4.429 -0.43975,1.38552 0.42558,2.4878 3.45358,4.3993 3.37337,2.12952 4.82337,2.45656 8.78381,1.98115 2.60892,-0.31318 5.0237,-1.02282 5.3662,-1.57699 0.807,-1.30576 7.91529,-2.91918 7.91529,-1.79658 0,1.00124 -4.0503,4.93364 -5.08157,4.93364 -0.38745,0 -0.96347,0.675 -1.28006,1.5 -1.34924,3.51607 2.83245,1.07555 8.6099,-5.02493 z m -5.24827,-3.47507 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 149.4138,9.13948 c 0.2925,-0.47329 0.27507,-1.11728 -0.0388,-1.4311 -0.78033,-0.78038 -3.375,0.29485 -3.375,1.39861 0,1.14261 2.71175,1.16842 3.4138,0.0325 z m -243.4138,-1.63948 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 13.72917,0.89583 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 184.77083,-0.39583 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 24.49706,-1.37244 c 0.002,-1.45315 -0.29758,-1.62304 -1.33907,-0.75868 -3.88039,3.22044 -1.14724,-4.50535 2.84201,-8.03351 1.1,-0.97286 1.46964,-1.7838 0.82143,-1.8021 -0.64822,-0.0183 -1.87509,0.66325 -2.72639,1.51455 -2.12539,2.12538 -6.402,0.12943 -4.53716,-2.11756 0.65285,-0.78664 0.89108,-1.43026 0.52938,-1.43026 -0.36169,0 -0.17596,-0.9 0.41274,-2 0.76724,-1.4336 0.76049,-2 -0.0238,-2 -0.60181,0 -0.8274,-0.4317 -0.50131,-0.95932 0.32609,-0.52763 0.0294,-1.86156 -0.65922,-2.96428 -0.92066,-1.47421 -1.89966,-1.84243 -3.6983,-1.391 -1.92412,0.48292 -2.3208,0.28719 -1.85867,-0.9171 0.46069,-1.20053 -0.46869,-1.67115 -4.30517,-2.18008 -4.11623,-0.54604 -5.2149,-0.32682 -6.92309,1.38137 -1.11673,1.11673 -2.03041,2.44291 -2.03041,2.94708 0,0.50416 -0.5625,1.11756 -1.25,1.36309 -0.6875,0.24554 -0.93191,0.78863 -0.54313,1.20687 1.19836,1.28919 3.77354,-0.3049 4.78339,-2.961 0.95468,-2.51101 2.46187,-3.05683 5.36481,-1.94287 0.87631,0.33627 1.2679,1.23618 0.92583,2.12761 -0.48472,1.26315 0.0796,1.46636 3.09448,1.11439 2.91593,-0.34042 3.5711,-0.12767 3.13185,1.017 -0.3055,0.79611 0.14983,2.2268 1.01183,3.1793 1.42532,1.57496 1.4181,1.78908 -0.0796,2.36381 -0.90581,0.3476 -1.41687,1.2315 -1.13569,1.96424 0.6898,1.79761 -1.24864,4.66192 -1.96319,2.90089 -0.93325,-2.2998 -2.34061,-1.28301 -2.34061,1.69098 0,3.36608 1.75444,4.97332 3.20614,2.93714 0.77474,-1.08667 0.87019,-1.02553 0.45133,0.28912 -0.29672,0.93132 0.10305,1.91062 0.90567,2.21862 0.79027,0.30325 1.43686,1.16176 1.43686,1.90778 0,0.8976 1.18289,1.33103 3.49706,1.28139 2.72315,-0.0584 3.4977,-0.4894 3.5,-1.94747 z M 718.9593,669.03003 c 0.21228,-1.79311 -0.15192,-2.67288 -1.10648,-2.67288 -0.93775,0 -1.3866,1.02201 -1.31642,2.99747 0.12952,3.64593 1.98224,3.39773 2.4229,-0.32459 z m -124.92822,0.75802 c 0.63414,0.39192 1.1118,0.0173 1.1118,-0.87188 0,-0.85746 0.39752,-1.55902 0.88337,-1.55902 0.48585,0 1.10992,-0.86633 1.38681,-1.92518 0.33799,-1.29245 0.08,-1.76271 -0.78482,-1.43083 -0.70855,0.2719 -1.51549,1.36323 -1.7932,2.42518 -0.6724,2.57127 -3.69216,2.5147 -3.69216,-0.0692 0,-1.1 -0.45,-2 -1,-2 -1.3254,0 -1.27115,2.62484 0.10749,5.20084 0.81675,1.52612 1.31243,1.73774 1.88819,0.80614 0.42939,-0.69476 1.28102,-0.954 1.89252,-0.57608 z m 7.1118,-1.26423 c 0,-1.30208 -1.18877,-2.16804 -2.15579,-1.57039 -1.03422,0.63919 -0.14245,2.40372 1.21481,2.40372 0.51754,0 0.94098,-0.375 0.94098,-0.83333 z m 11,-2.22569 c 0,-1.13246 -0.45,-1.7809 -1,-1.44098 -0.55,0.33992 -1,1.26648 -1,2.05902 0,0.79254 0.45,1.44098 1,1.44098 0.55,0 1,-0.92656 1,-2.05902 z m 98,1.61804 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 94.58995,-6.09402 c 0.75897,-2.18075 1.38671,-4.06338 1.39499,-4.18362 0.008,-0.12023 -0.65994,0.0404 -1.48494,0.35699 -0.825,0.31659 -1.5,1.65246 -1.5,2.96862 0,1.31615 -0.45,2.39301 -1,2.39301 -0.55,0 -1,0.7125 -1,1.58333 0,2.83443 2.17605,0.94425 3.58995,-3.11833 z m -178.61396,2.571 c 1.25562,-0.79402 1.12611,-1.40663 -0.86746,-4.10308 -1.89432,-2.56221 -2.08138,-3.33572 -0.97599,-4.03599 0.7521,-0.47647 1.70496,-0.8732 2.11746,-0.88162 1.76301,-0.036 0.51969,-3.39946 -2.2983,-6.21746 -2.83033,-2.83032 -3.00769,-3.42446 -2.48028,-8.30852 0.44829,-4.15138 0.24767,-5.38315 -0.9517,-5.84339 -0.83585,-0.32074 -1.51972,-0.14729 -1.51972,0.38544 0,0.53274 -0.46583,0.96862 -1.03518,0.96862 -0.71358,0 -0.71358,-0.60093 0,-1.93426 1.38252,-2.58328 1.30938,-3.06574 -0.46482,-3.06574 -0.825,0 -1.5,-0.45 -1.5,-1 0,-0.55 -0.7875,-1.00689 -1.75,-1.01531 -1.37805,-0.0121 -1.45842,-0.20002 -0.37812,-0.88435 2.54226,-1.61041 0.59966,-3.28042 -4.16471,-3.58031 -3.55386,-0.22369 -4.95933,0.10814 -5.64464,1.33272 -0.50189,0.89683 -1.2354,1.30771 -1.63003,0.91309 -0.39462,-0.39463 -0.14828,-1.40338 0.54744,-2.24167 0.69572,-0.8383 0.87235,-1.53848 0.3925,-1.55597 -0.47984,-0.0175 -0.03,-0.66974 0.99955,-1.44945 1.61832,-1.22553 2.06839,-1.22122 3.32143,0.0318 0.79719,0.79719 2.36978,1.44944 3.49464,1.44944 1.55287,0 1.9193,-0.48145 1.52219,-2 -0.38363,-1.46699 -0.0307,-2 1.32435,-2 1.01605,0 2.16761,-0.51817 2.55903,-1.15149 0.49689,-0.80399 1.09818,-0.62288 1.99248,0.60014 1.93995,2.65304 3.42081,1.06227 2.38223,-2.55905 -1.1637,-4.05759 -2.77195,-5.8896 -5.17024,-5.8896 -1.65421,0 -1.85506,-0.46417 -1.2981,-3 0.66439,-3.02496 0.18091,-3.40538 -4.17092,-3.28183 -0.64401,0.0183 -0.96824,-0.49492 -0.72053,-1.14046 0.24772,-0.64554 -0.65091,-2.20833 -1.99695,-3.47287 l -2.44735,-2.29916 0.54954,4.09716 c 0.44628,3.32725 0.247,4.09716 -1.06049,4.09716 -1.27053,0 -1.56873,0.94889 -1.41418,4.5 0.12588,2.89238 0.65403,4.5 1.47836,4.5 0.70539,0 1.28252,-0.7125 1.28252,-1.58333 0,-0.87084 0.5625,-1.39584 1.25,-1.16667 0.6875,0.22917 1.25,1.72917 1.25,3.33333 0,2.64811 -0.34502,2.94523 -3.74703,3.22686 -3.91143,0.3238 -5.74105,2.23513 -5.4266,5.66895 0.12305,1.34368 -0.77317,2.17485 -3.07637,2.85311 -2.49153,0.73371 -3.25,1.51407 -3.25,3.3438 0,2.80886 0.60849,3.07192 8.46345,3.65895 3.27989,0.24512 6.12989,0.94502 6.33333,1.55534 0.20344,0.61031 0.78239,1.10966 1.28655,1.10966 1.64972,0 0.96404,-2.04354 -1.51876,-4.52634 -1.36368,-1.36367 -2.00271,-2.70288 -1.45212,-3.04316 1.46267,-0.90398 3.88755,0.30057 3.88755,1.93113 0,0.78341 0.60318,1.65585 1.3404,1.93875 0.85787,0.3292 1.18216,1.59255 0.90083,3.50937 -0.33522,2.28402 -1.06633,3.11482 -3.07976,3.49971 -3.13643,0.59958 -6.16147,-0.79703 -6.16147,-2.84463 0,-1.68108 -2.56163,-1.98314 -3.53001,-0.41626 -0.44549,0.72081 -1.07538,0.6939 -2.01521,-0.0861 -1.59548,-1.32413 -3.80192,-0.33316 -2.81472,1.26415 0.43846,0.70944 -0.0721,0.89366 -1.46634,0.52906 -1.82412,-0.47702 -1.99452,-0.28935 -1.15743,1.27475 1.32135,2.46897 4.15215,3.23623 7.39343,2.00389 2.29474,-0.87245 2.63251,-0.76972 2.38208,0.72454 -0.1982,1.18261 0.26957,1.64688 1.4582,1.4473 0.9625,-0.16161 1.75,0.10623 1.75,0.59521 0,0.98978 9.51033,0.72953 12.25,-0.33522 1.85092,-0.71935 2.47341,0.96873 0.75,2.03385 -1.51136,0.93407 -1.19817,2.5 0.5,2.5 1.0792,0 1.5,1.10388 1.5,3.9349 0,2.1642 0.52479,5.2017 1.16621,6.75 1.28975,3.11334 1.52506,3.84524 1.70879,5.3151 0.15499,1.23995 1.17834,1.25183 3.10099,0.036 z m -6.97599,-22.90718 c 0,-0.71713 -1.11273,-1.08805 -2.75,-0.91667 -1.84134,0.19274 -2.75,-0.18025 -2.75,-1.12882 0,-0.77916 0.45,-1.55601 1,-1.72631 1.42678,-0.44181 6.11771,3.35861 5.23506,4.24125 -0.40428,0.40429 -0.73506,0.19303 -0.73506,-0.46945 z m -4.5,-7.12882 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -14.5,-4 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 9.5,-21 c 0.33992,-0.55 1.04148,-1 1.55902,-1 0.51754,0 0.94098,0.45 0.94098,1 0,0.55 -0.70156,1 -1.55902,1 -0.85746,0 -1.2809,-0.45 -0.94098,-1 z m 36,55 c 0.33992,-0.55 -0.11008,-1 -1,-1 -0.88992,0 -1.33992,0.45 -1,1 0.33992,0.55 0.78992,1 1,1 0.21008,0 0.66008,-0.45 1,-1 z m 96.54966,-0.52568 c 3.318,-1.71581 3.62669,-2.66811 1.45034,-4.47432 -1.07154,-0.8893 -1.5,-0.9172 -1.5,-0.0977 0,0.63095 -1.1164,1.57165 -2.4809,2.09043 -1.64901,0.62695 -2.28377,1.45695 -1.89301,2.47525 0.72371,1.88595 0.78861,1.88604 4.42357,0.006 z m -87.54784,-4.67014 c 1.50886,-3.12773 2.14372,-5.55864 1.595,-6.10736 -1.14268,-1.14268 -3.45554,2.92598 -2.73326,4.80821 0.28466,0.74181 -0.13069,1.88674 -0.923,2.5443 -1.35501,1.12456 -2.02953,3.95067 -0.94293,3.95067 0.2737,0 1.62559,-2.33812 3.00419,-5.19582 z m -65.50182,2.40262 c 0,-1.16017 1.14731,-2.13097 3.25,-2.75 2.63133,-0.77467 3.21476,-1.4327 3.06485,-3.4568 -0.10699,-1.44468 0.0295,-1.76128 0.32333,-0.75 0.54629,1.88016 2.86656,2.36037 3.83483,0.79367 0.32507,-0.52598 1.29704,-0.6854 2.15994,-0.35428 0.86289,0.33113 2.00774,-0.026 2.54411,-0.79367 0.75095,-1.07476 1.09184,-1.10827 1.4824,-0.14572 0.69513,1.71313 2.34054,1.57887 2.34054,-0.19098 0,-1.93212 2.04592,-3.10275 2.92808,-1.67539 0.77233,1.24966 7.07192,0.42332 7.07192,-0.92765 0,-1.33861 -9.24135,-2.89718 -11.14324,-1.87932 -2.45982,1.31645 -2.85676,1.17174 -2.85676,-1.04148 0,-1.64319 -2.58258,-4.03518 -4.35671,-4.03518 -0.2685,0 -1.00798,1.575 -1.64329,3.5 -1.42503,4.31787 -3.39444,4.64087 -2.78023,0.45597 0.55747,-3.79827 -0.90274,-4.8536 -2.85639,-2.06438 -1.87073,2.67084 -3.76132,2.73813 -3.07389,0.10941 0.28751,-1.09946 0.0758,-2.27524 -0.47049,-2.61286 -0.54628,-0.33762 -0.77116,-1.46307 -0.49974,-2.501 0.54984,-2.10259 -0.3489,-2.4575 -2.0119,-0.7945 -1.38321,1.38321 -5.6828,-0.67615 -4.70725,-2.25462 0.36087,-0.58389 0.0908,-1.411 -0.60011,-1.83802 -1.69278,-1.0462 -0.35181,-3 2.05902,-3 2.33172,0 2.50652,-1.57732 0.40741,-3.67642 -1.90125,-1.90126 -8.46643,-0.98116 -8.46643,1.18655 0,2.2817 -3.15795,3.33911 -8.2561,2.76447 -4.59159,-0.51754 -4.7439,-0.45026 -4.7439,2.09535 0,1.67116 0.54689,2.63005 1.5,2.63005 0.825,0 1.3875,-0.50625 1.25,-1.125 -0.55923,-2.51653 2.12013,-1.71924 5.33263,1.58681 1.87955,1.93429 4.20487,3.52169 5.16737,3.52754 0.9625,0.006 1.75,0.51313 1.75,1.12728 0,0.61558 -0.87688,0.88732 -1.95418,0.6056 -1.31536,-0.34397 -2.45951,0.2602 -3.5,1.84819 -2.52751,3.85746 -1.96193,4.63279 3.20418,4.39246 10.85658,-0.50505 13.3896,0.41202 14.60341,5.28712 0.51214,2.05696 0.31674,2.75 -0.77534,2.75 -1.91073,0 -2.7359,1.42512 -1.97433,3.40976 0.82533,2.15075 2.39626,2.01769 2.39626,-0.20296 z m -10,-17.09148 c 2.60691,-2.15941 5,-2.74904 5,-1.23195 0,0.48585 -0.7875,1.1098 -1.75,1.38655 -0.9625,0.27674 -2.65,0.82112 -3.75,1.20971 -1.62019,0.57237 -1.52524,0.31328 0.5,-1.36431 z m 60,16.88468 c 0,-1.1 -0.45,-2 -1,-2 -0.55,0 -1,0.9 -1,2 0,1.1 0.45,2 1,2 0.55,0 1,-0.9 1,-2 z m -148,0.059 c 0,-1.67643 -1.77354,-2.09154 -2.36383,-0.55328 -0.3483,0.90768 0.003,1.49428 0.89521,1.49428 0.80774,0 1.46862,-0.42344 1.46862,-0.94098 z m 182,-0.059 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -71,-2.5 c 0,-0.825 -0.17686,-1.5 -0.39301,-1.5 -0.21616,0 -0.65203,0.675 -0.96862,1.5 -0.31658,0.825 -0.13972,1.5 0.39301,1.5 0.53274,0 0.96862,-0.675 0.96862,-1.5 z m 29,0 c 1.03599,-1.2483 0.90928,-1.5 -0.75511,-1.5 -1.1,0 -2.5602,0.675 -3.24489,1.5 -1.03599,1.2483 -0.90928,1.5 0.75511,1.5 1.1,0 2.5602,-0.675 3.24489,-1.5 z m 208,0.5 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m -9.22585,-5.84383 c 0.224,-4.21288 -0.0243,-5.15617 -1.35699,-5.15617 -1.06843,0 -1.42418,0.53932 -1.03123,1.56335 0.32996,0.85984 -0.0903,2.89805 -0.93387,4.52936 -1.72465,3.33511 -1.28339,4.85162 1.30191,4.47439 1.35972,-0.1984 1.80669,-1.39557 2.02018,-5.41093 z m -243.27415,2.84383 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 29.5,0 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 19,-0.55902 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m -136.87244,-1.12821 c 1.20814,-1.48525 1.15316,-1.60496 -0.45935,-1 -1.00748,0.37798 -2.24498,0.68723 -2.75,0.68723 -0.50501,0 -0.91821,0.45 -0.91821,1 0,1.59486 2.62702,1.15747 4.12756,-0.68723 z m 342.70647,0.43723 c -0.1395,-0.6875 0.30661,-2.2625 0.99135,-3.5 1.04827,-1.89448 1.00375,-2.25 -0.28172,-2.25 -0.83969,0 -2.08877,0.9 -2.77573,2 -0.68696,1.1 -2.04078,2 -3.00848,2 -0.9677,0 -1.75945,0.50246 -1.75945,1.11658 0,0.6546 1.04422,0.91696 2.52387,0.63411 1.38812,-0.26536 2.76468,-0.0928 3.05901,0.38342 0.79161,1.28085 1.54223,1.0504 1.25115,-0.38411 z m -186.96835,-3.33287 c 0.34358,-1.80127 1.8457,-3.3673 3.263,-3.40182 0.34577,-0.008 1.18787,1.33469 1.87132,2.98469 0.68345,1.65 1.90055,3 2.70465,3 0.80411,0 1.29758,-0.3375 1.0966,-0.75 -2.44264,-5.01333 -3.31214,-6.25 -4.39438,-6.25 -0.69965,0 -1.51751,-0.7875 -1.81747,-1.75 -0.49743,-1.59618 -2.5228,-14.64811 -2.56959,-16.55902 -0.0109,-0.44496 -0.43764,-0.55078 -0.94832,-0.23517 -0.51067,0.31562 -1.10131,-0.44532 -1.31252,-1.69098 -0.21121,-1.24566 -0.38494,4.38236 -0.38608,12.5067 -10e-4,10.00121 0.34174,14.65708 1.06253,14.41713 0.58552,-0.19492 1.22914,-1.2171 1.43026,-2.27153 z m 95.13432,0.62439 c 0,-1.08175 -4.8131,-2.27506 -6.0623,-1.50302 -0.53368,0.32983 -0.75403,0.94967 -0.48967,1.3774 0.64969,1.05123 6.55197,1.1644 6.55197,0.12562 z m -245.14261,-2.71016 c -1.01354,-0.26943 -1.4614,-1.12961 -1.16944,-2.2461 0.28514,-1.09035 -0.19173,-2.0646 -1.19992,-2.45148 -1.1548,-0.44314 -1.83547,-0.0212 -2.1972,1.36209 -0.28825,1.10227 -1.03411,2.01102 -1.65746,2.01944 -0.62335,0.008 -0.45837,0.45153 0.36663,0.98469 0.825,0.53316 2.85,0.92406 4.5,0.86869 1.65,-0.0554 2.26082,-0.29718 1.35739,-0.53733 z m 16.96761,-0.50137 c -0.53029,-1.01164 3.36366,-4.82999 4.92562,-4.82999 1.51561,0 7.51208,-3.86811 8.08271,-5.21388 0.81427,-1.92035 1.77881,-0.48569 1.87148,2.78365 0.0759,2.67803 -0.24928,3.43527 -1.30181,3.03138 -1.56245,-0.59957 -1.65279,-0.41567 -0.83842,1.70655 0.33839,0.88182 1.34595,1.26695 2.51487,0.96127 1.51365,-0.39583 1.80475,-0.13076 1.30024,1.18395 -0.54463,1.41928 -0.10112,1.64151 2.73514,1.37052 3.41803,-0.32658 3.61838,-0.70122 2.31208,-4.32344 -0.56205,-1.5585 -0.44758,-1.74776 0.51855,-0.85736 1.93857,1.78662 7.9779,-1.88889 8.03923,-4.89264 0.0287,-1.40654 -3.04551,-0.75509 -3.63048,0.76932 -0.77398,2.01698 -9.85421,1.41952 -9.85421,-0.64838 0,-0.75402 1.125,-1.52656 2.5,-1.71676 1.375,-0.1902 2.95,-0.69065 3.5,-1.11211 0.55,-0.42146 2.2375,-1.06192 3.75,-1.42323 2.08142,-0.49723 2.75,-0.28763 2.75,0.86211 0,1.06233 1.02725,1.51905 3.41667,1.51905 1.87916,0 3.61756,0.5625 3.86309,1.25 0.63493,1.7778 1.37812,0.75641 2.18288,-3 l 0.69627,-3.25 h -14.07945 c -10.58874,0 -14.08326,0.30991 -14.09477,1.25 -0.0119,0.97036 -0.1881,0.97809 -0.78765,0.0346 -1.14338,-1.79934 -16.06758,-1.5569 -17.91551,0.29103 -2.04726,2.04726 -3.1582,1.76394 -3.84717,-0.98113 -0.33206,-1.32303 -1.50598,-2.64145 -2.60871,-2.92982 -1.501,-0.39252 -1.83981,-1.04467 -1.34792,-2.59449 0.80228,-2.52776 -0.28338,-2.69441 -2.08568,-0.32017 -2.00257,2.63805 -1.73334,4.4931 0.54705,3.76933 1.33829,-0.42476 2.27504,0.0123 3.02335,1.41052 2.09522,3.91493 5.87813,6.9246 8.0047,6.36849 1.12392,-0.29391 2.82861,0.0812 3.78818,0.83364 1.58006,1.23895 1.61518,1.20291 0.37223,-0.38198 -1.18543,-1.51153 -1.15136,-1.75 0.25,-1.75 1.77961,0 2.2619,3.48676 0.62244,4.5 -1.36676,0.84471 -1.29574,7.76525 0.075,7.30833 0.59125,-0.19708 0.92875,-0.63734 0.75,-0.97834 z m 10.675,0.17001 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 204.00332,-2.00538 c 0.33809,-0.54704 -0.071,-0.99462 -0.90912,-0.99462 -0.83811,0 -2.02373,0.93406 -2.63471,2.07569 -1.00995,1.88711 -0.92735,1.97747 0.90912,0.99463 1.111,-0.59459 2.29662,-1.52866 2.63471,-2.0757 z m 102.49668,1.50538 c 0,-1.68305 -0.18315,-1.75069 -2.41821,-0.89301 -2.2344,0.85742 -1.96604,2.39301 0.41821,2.39301 1.11111,0 2,-0.66667 2,-1.5 z m 10,0.0833 c 0,-0.77916 -0.5625,-1.64591 -1.25,-1.92611 -0.87045,-0.35476 -0.60221,-1.06325 0.88343,-2.33333 2.48673,-2.12593 4.32987,-9.81113 2.18158,-9.0964 -0.72325,0.24063 -1.54001,1.71417 -1.81501,3.27454 -0.55561,3.15258 -5.34335,6.47092 -8.25,5.71801 -0.9625,-0.24932 -1.75,0.0973 -1.75,0.77032 0,0.67299 0.60602,0.99107 1.34671,0.70684 0.74069,-0.28423 2.65319,0.55144 4.25,1.85704 3.371,2.75625 4.40329,2.9975 4.40329,1.02909 z m -336,-0.55195 c 0,-0.53273 -0.62948,-0.72706 -1.39885,-0.43182 -0.76937,0.29523 -1.70046,0.0488 -2.0691,-0.5477 -0.36863,-0.59647 -1.1372,-0.79589 -1.70791,-0.44317 -0.66904,0.41349 -0.55568,0.94671 0.3191,1.501 1.83824,1.16476 4.85676,1.1161 4.85676,-0.0783 z m 14,-0.0313 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 111.86667,-1.30674 c -0.89833,-0.68372 -1.80436,-2.13191 -2.01339,-3.21819 -0.23421,-1.21712 -1.23837,-2.01861 -2.61667,-2.08853 -2.82184,-0.14316 -2.91712,1.2627 -0.14519,2.14248 1.443,0.45799 1.93708,1.25398 1.59362,2.56738 -0.39839,1.52346 0.0327,1.89725 2.15858,1.8718 2.32856,-0.0279 2.45481,-0.18522 1.02305,-1.27494 z m 113.13333,-2.38182 v -2.68856 l -2,2.14675 c -1.1,1.18071 -2,2.39056 -2,2.68856 0,0.29799 0.9,0.54181 2,0.54181 1.50407,0 2,-0.66667 2,-2.68856 z m -300.8,-0.31144 c 1.49698,0 1.78047,-0.79963 1.684,-4.75 -0.0638,-2.6125 -0.3218,-3.9625 -0.57333,-3 -0.5042,1.92939 -3.80388,2.37902 -4.86452,0.66287 -0.85602,-1.38507 1.11031,-3.38613 3.34224,-3.40126 1.08054,-0.007 1.81462,-0.93336 1.99101,-2.51161 0.26894,-2.4064 0.22252,-2.42785 -1.23967,-0.573 -0.83549,1.05985 -1.80788,1.63818 -2.16088,1.28518 -1.28787,-1.28786 -4.37885,1.41075 -4.37885,3.823 0,1.35565 0.40186,2.46482 0.89301,2.46482 1.39584,0 2.29895,3.26333 1.10699,4 -0.58726,0.36294 -0.76775,1.44167 -0.40109,2.39717 0.47243,1.23112 0.97758,1.42634 1.73387,0.67005 0.58697,-0.58697 1.87722,-1.06722 2.86722,-1.06722 z m 352.01977,-1.95597 c -0.49277,-3.35748 1.23687,-4.22985 2.06998,-1.04403 0.28766,1.1 1.27046,2 2.18402,2 1.20593,0 1.48709,-0.54795 1.02623,-2 -0.51913,-1.63562 -0.1797,-2 1.86306,-2 1.79889,0 2.58725,0.60768 2.81739,2.17167 0.17575,1.19442 0.95029,2.37967 1.72119,2.63388 0.99808,0.32913 1.2462,-0.13221 0.86175,-1.60234 -0.3579,-1.36864 0.25475,-2.81107 1.81754,-4.27924 1.29659,-1.21808 2.14941,-2.55127 1.89516,-2.96266 -0.25425,-0.41138 0.58135,-1.00989 1.85687,-1.33003 1.89719,-0.47616 2.30531,-1.22282 2.24309,-4.10373 -0.0858,-3.97196 -1.41356,-4.46957 -4.07605,-1.52755 -1.85289,2.04742 -4.11294,2.80077 -3,1 1.27195,-2.05805 -1.00292,-0.90413 -2.96244,1.50269 -1.47901,1.81663 -3.20259,2.5892 -6.28756,2.81828 -4.21867,0.31327 -5.85522,-0.75483 -2.5,-1.63164 1.31691,-0.34415 1.19317,-0.48604 -0.5,-0.57333 -2.14513,-0.11059 -2.25,0.23633 -2.25,7.44302 0,4.15746 0.37497,7.32727 0.83327,7.04403 0.4583,-0.28325 0.63222,-1.88481 0.3865,-3.55902 z m -296.21977,1.45597 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 224,-1.62244 c 0,-0.48266 -0.675,-0.87756 -1.5,-0.87756 -0.86218,0 -1.5,0.90249 -1.5,2.12244 0,1.77324 0.2468,1.91763 1.5,0.87756 0.825,-0.68469 1.5,-1.63979 1.5,-2.12244 z m -227,0.0634 c 0,-0.51752 -0.675,-0.94096 -1.5,-0.94096 -1.54641,0 -1.9867,1.17996 -0.86052,2.30615 0.79893,0.79893 2.36052,-0.10419 2.36052,-1.36517 z m 241.11348,0.29719 c 1.82158,0.20039 2.45767,-0.28047 2.71085,-2.04932 0.18194,-1.27113 1.08339,-2.58831 2.00323,-2.92706 0.91984,-0.33875 1.97564,-1.06979 2.34622,-1.62455 0.45018,-0.6739 1.11391,-0.6609 2,0.0392 0.72942,0.5763 2.56372,1.34344 4.07622,1.70475 2.43278,0.58117 2.75,0.37317 2.75,-1.80309 0,-1.35302 -0.45,-2.73815 -1,-3.07807 -0.55,-0.33992 -1,-1.49148 -1,-2.55902 0,-2.60329 -0.86141,-2.44794 -4.20876,0.75902 -1.92514,1.8444 -3.88875,2.7 -6.19654,2.7 -2.89373,0 -3.5641,0.47338 -4.67317,3.3 -1.35723,3.45905 -2.44264,4.15153 -3.2132,2.05 -0.30646,-0.8358 -0.79649,-0.91864 -1.47885,-0.25 -0.64734,0.63433 -0.6894,1.8645 -0.115,3.36414 0.70746,1.84704 1.20228,2.11787 2.26223,1.23818 0.7462,-0.61929 2.42774,-1.00815 3.73677,-0.86415 z m -188.12879,-2.54717 c 0.008,-0.44496 -0.43469,-0.5309 -0.98469,-0.19098 -0.55,0.33992 -0.99311,1.37898 -0.98469,2.30902 0.0132,1.45727 0.14929,1.48367 0.98469,0.19098 0.53316,-0.825 0.97627,-1.86406 0.98469,-2.30902 z m 179.41157,1.71878 c 0.98821,-2.57525 -0.52402,-3.95552 -2.0489,-1.87012 -0.74105,1.01344 -1.34736,2.20661 -1.34736,2.65149 0,1.47537 2.77528,0.83686 3.39626,-0.78137 z m 86.20791,-1.13893 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69479 0.14921,-1.53513 -0.18308,-1.86742 z m -63.06484,0.66554 c 0.31829,-0.515 -0.57285,-0.93637 -1.98031,-0.93637 -1.40746,0 -2.55902,0.35424 -2.55902,0.7872 0,1.13474 3.85198,1.26132 4.53933,0.14917 z m 82.46067,-0.43637 c 1.04007,-1.2532 0.89568,-1.5 -0.87756,-1.5 -1.21995,0 -2.12244,0.63782 -2.12244,1.5 0,0.825 0.3949,1.5 0.87756,1.5 0.48265,0 1.43775,-0.675 2.12244,-1.5 z m 4.74986,-1.08347 c -0.95295,-0.95296 -2.86349,0.5906 -2.1533,1.7397 0.42212,0.683 0.98146,0.66575 1.69964,-0.0524 0.58876,-0.58876 0.79291,-1.34803 0.45366,-1.68727 z m -281.74986,0.58347 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m -150,-3 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 430.5,0 c -0.33992,-0.55 -1.04148,-1 -1.55902,-1 -0.51754,0 -0.94098,0.45 -0.94098,1 0,0.55 0.70156,1 1.55902,1 0.85746,0 1.2809,-0.45 0.94098,-1 z m -254.5,-4 c 0,-0.55 -0.70156,-1 -1.55902,-1 -0.85746,0 -1.2809,0.45 -0.94098,1 0.33992,0.55 1.04148,1 1.55902,1 0.51754,0 0.94098,-0.45 0.94098,-1 z m 36,-2.14359 c 0,-0.67125 -1.02923,-0.8149 -2.74795,-0.38353 -3.53287,0.88669 -4.02606,1.43072 -2.27697,2.51172 1.60458,0.99169 5.02492,-0.45692 5.02492,-2.12819 z m 114.34567,-0.30619 c 1.56512,-1.34603 3.20969,-2.58298 3.6546,-2.74878 1.36963,-0.51038 1.57598,-5.08953 0.24973,-5.54182 -0.6875,-0.23446 -1.25,0.28621 -1.25,1.15705 0,0.87083 -0.675,1.58333 -1.5,1.58333 -0.825,0 -1.5,0.46114 -1.5,1.02475 0,0.56361 -1.125,1.45248 -2.5,1.97525 -2.39463,0.91044 -3.24538,2.92129 -1.83333,4.33333 1.05156,1.05156 1.64664,0.82478 4.679,-1.78311 z m 103.03589,0.89784 c 0.34149,-0.88992 0.17385,-1.29132 -0.39301,-0.94098 -0.5437,0.33602 -0.98855,1.0344 -0.98855,1.55194 0,1.43843 0.71677,1.12146 1.38156,-0.61096 z M 632.12757,631.1072 c -0.0293,-2.39337 -1.7581,-4.05093 -3.51988,-3.37487 -1.64107,0.62974 -1.63808,0.77593 0.0541,2.64572 2.04192,2.25629 3.48825,2.56058 3.46582,0.72915 z m 206.51531,0.25 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m -109.17534,-0.65799 c 0.75703,-0.75703 -1.13576,-3.34201 -2.4471,-3.34201 -0.48266,0 -0.87756,0.9 -0.87756,2 0,1.92166 1.95562,2.71105 3.32466,1.34201 z m -160.32466,-2.09318 c 0,-0.41315 -4.52364,-11.77565 -10.05253,-25.25 -5.52889,-13.47436 -11.21379,-27.34143 -12.63311,-30.81571 -1.41933,-3.47429 -2.92326,-5.94929 -3.34207,-5.5 -0.41881,0.44928 -1.89892,3.96688 -3.28913,7.81688 -1.39021,3.85 -5.30487,14.2 -8.69923,23 -3.39436,8.8 -6.5282,17.125 -6.96408,18.5 -0.43588,1.375 -1.7371,4.8625 -2.89159,7.75 l -2.09908,5.25 h 24.98541 c 13.74198,0 24.98541,-0.33803 24.98541,-0.75117 z m -41.75,-3.01733 c -1.2375,-0.20383 -2.25,-0.78377 -2.25,-1.28876 0,-0.50498 2.87585,-8.46119 6.39078,-17.68045 3.51493,-9.21926 7.41519,-19.46229 8.66724,-22.76229 1.25206,-3.3 2.6354,-6.41169 3.07409,-6.91487 0.43869,-0.50317 1.72178,1.24111 2.85131,3.87619 1.78291,4.15936 1.86066,4.93924 0.58972,5.91487 -1.52006,1.16688 -2.49801,3.46161 -10.69253,25.08979 -2.70192,7.13129 -5.24288,13.22926 -5.64659,13.55105 -0.40371,0.32179 -1.74652,0.4183 -2.98402,0.21447 z m 34.75,-2.2315 c 0,-1.1 0.17252,-2 0.38337,-2 0.21085,0 0.61872,0.9 0.90638,2 0.28766,1.1 0.11514,2 -0.38337,2 -0.49851,0 -0.90638,-0.9 -0.90638,-2 z m -1.37646,-4.53866 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z m -3,-7 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z m 31.37646,16.07384 c 0,-1.92936 -3.63595,-3.93324 -4.5254,-2.49408 -0.80798,1.30733 1.30037,3.9589 3.14784,3.9589 0.75766,0 1.37756,-0.65917 1.37756,-1.46482 z m 217,-0.5942 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m -180.57067,0.17337 c 0.30105,-0.48711 -0.68233,-1.12072 -2.18529,-1.40803 -3.06412,-0.58574 -4.56423,-0.0334 -3.70133,1.36278 0.73176,1.18402 5.16177,1.21807 5.88662,0.0453 z m 99.76516,-2.31986 c -1.26705,-1.26705 -3.19449,-0.18117 -3.19449,1.79971 0,1.19136 0.40659,1.25857 2.10736,0.34834 1.43276,-0.76679 1.78077,-1.45441 1.08713,-2.14805 z m -131.22967,0.27125 c 0.56935,-1.06384 1.03518,-2.73897 1.03518,-3.7225 0,-1.50315 -0.25779,-1.4202 -1.61697,0.5203 -1.04176,1.48731 -2.28683,2.13337 -3.5,1.81612 -2.37104,-0.62004 -2.46039,0.88468 -0.13303,2.24024 2.48115,1.44514 3.04547,1.33078 4.21482,-0.85416 z m 161.67355,0.43426 c 0.31659,-0.825 1.26535,-1.5 2.10838,-1.5 1.91107,0 4.17922,-2.88658 4.22145,-5.37244 0.0263,-1.55183 -0.22504,-1.65929 -1.4682,-0.62756 -1.26925,1.05338 -1.5,0.83664 -1.5,-1.40894 0,-1.45961 0.675,-2.91285 1.5,-3.22943 2.37034,-0.90959 1.74807,-3.08105 -1.03541,-3.61315 -1.73789,-0.33222 -2.82775,0.0616 -3.46481,1.25194 -0.51118,0.95514 -0.78394,1.90828 -0.60614,2.1181 0.1778,0.20981 0.58368,2.06898 0.90195,4.13148 0.42162,2.73226 0.22029,3.75 -0.74183,3.75 -0.72627,0 -1.59827,0.7875 -1.93777,1.75 -0.3395,0.9625 -0.87949,2.3125 -1.19997,3 -0.33772,0.72449 0.0962,1.25 1.03203,1.25 0.8881,0 1.87374,-0.675 2.19032,-1.5 z m 47.96219,0.0985 c 0.29578,-0.7708 1.48066,-1.64802 2.63307,-1.94938 1.76678,-0.46203 1.89351,-0.79103 0.80838,-2.09855 -0.87046,-1.04879 -0.92368,-1.55057 -0.16445,-1.55057 0.61734,0 1.12244,-0.45 1.12244,-1 0,-1.4494 -3.75109,-1.23028 -4.27976,0.25 -0.24554,0.6875 -0.72829,0.99225 -1.07278,0.67723 -0.34448,-0.31503 0.15641,-1.44003 1.1131,-2.5 0.95669,-1.05998 1.8482,-3.57063 1.98113,-5.57923 0.2354,-3.5569 0.17696,-3.62199 -2.24468,-2.5 -2.37398,1.09992 -2.47979,1.52495 -2.34062,9.402 0.13403,7.58579 1.1109,10.32298 2.44417,6.84854 z m 30.87022,-1.76438 c -0.78138,-4.43529 -1.3686,-5.08685 -4.11186,-4.56244 -1.32366,0.25303 -2.64747,0.0704 -2.9418,-0.40583 -1.02056,-1.65125 -3.41712,-0.85586 -3.41712,1.13415 0,1.11111 -0.66667,2 -1.5,2 -0.825,0 -1.5,0.39754 -1.5,0.88342 0,1.19004 5.24372,2.1358 6.5,1.17235 0.55,-0.4218 2.05339,-1.02547 3.34088,-1.34148 2.07267,-0.50875 2.27099,-0.29616 1.73094,1.85557 -0.44728,1.78211 -0.20105,2.43014 0.92339,2.43014 1.17232,0 1.402,-0.74536 0.97557,-3.16584 z m -326.72092,-2.41763 c -0.95295,-0.95296 -2.86349,0.5906 -2.1533,1.7397 0.42212,0.683 0.98146,0.66575 1.69964,-0.0524 0.58876,-0.58876 0.79291,-1.34803 0.45366,-1.68727 z m 309.25014,1.1905 c 0,-1.08798 -1.963,-2.60699 -3.36898,-2.60699 -0.11298,0 -0.27321,0.9 -0.35607,2 -0.10273,1.36378 0.4658,2 1.7872,2 1.06582,0 1.93785,-0.62686 1.93785,-1.39301 z m 27,0.39301 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -226,-1.58333 c 0,-1.76593 -2.15276,-1.45839 -2.77083,0.39583 -0.21771,0.65312 0.31666,1.1875 1.1875,1.1875 0.87083,0 1.58333,-0.7125 1.58333,-1.58333 z m 6,1.19032 c 0,-0.21616 -0.675,-0.65203 -1.5,-0.96862 -0.825,-0.31658 -1.5,-0.13972 -1.5,0.39301 0,0.53274 0.675,0.96862 1.5,0.96862 0.825,0 1.5,-0.17686 1.5,-0.39301 z m -42.00518,-2.79797 c 0.003,-0.38004 -0.4356,-0.96341 -0.97434,-1.29636 -1.2372,-0.76464 0.97487,-4.51266 2.66336,-4.51266 0.66151,0 1.81231,-0.87027 2.55733,-1.93394 0.91855,-1.3114 1.80665,-1.65454 2.75896,-1.06598 1.9773,1.22204 3.33163,0.10459 1.92598,-1.58911 -0.64405,-0.77603 -2.3534,-1.39666 -3.79855,-1.37917 -2.76168,0.0334 -6.9042,2.5249 -5.88789,3.5412 0.32651,0.32652 -1.16884,2.35617 -3.323,4.51033 -2.15417,2.15417 -3.91667,4.13136 -3.91667,4.39375 0,0.2624 1.79767,0.3749 3.99482,0.25 2.19715,-0.12489 3.99715,-0.53802 4,-0.91806 z m 164.00518,-0.52879 c 0,-0.39588 -1.45191,-1.95896 -3.22648,-3.47353 -2.21822,-1.89321 -3.54632,-2.43006 -4.25,-1.71794 -0.70013,0.70853 -0.4706,1.34777 0.72648,2.02321 0.9625,0.54308 1.75,1.64005 1.75,2.43772 0,0.88033 0.98251,1.45031 2.5,1.45031 1.375,0 2.5,-0.3239 2.5,-0.71977 z m -237.33271,-2.94627 c -0.77906,-0.77906 -3.63373,0.91133 -3.07252,1.81938 0.34777,0.5627 1.16277,0.46285 2.01842,-0.24728 0.78933,-0.65508 1.26367,-1.36253 1.0541,-1.5721 z m 63.48271,1.16604 c 0,-0.5225 -0.48375,-1.11125 -1.075,-1.30833 -0.59125,-0.19709 -1.075,0.39166 -1.075,1.30833 0,0.91667 0.48375,1.50542 1.075,1.30833 0.59125,-0.19708 1.075,-0.78583 1.075,-1.30833 z m 269.85,0.5 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -119.85578,-1.25 c 1.69367,-1 2.20762,-1 2.56977,0 0.75658,2.08919 2.22997,1.45253 7.95237,-3.43628 3.30166,-2.82069 5.75373,-4.26768 6.1595,-3.63478 1.33379,2.08039 5.116,2.52206 6.83939,0.79867 1.33495,-1.33495 1.40092,-1.81868 0.33761,-2.47584 -0.72682,-0.4492 -1.9862,-0.56166 -2.79863,-0.2499 -0.94948,0.36435 -1.31479,0.0798 -1.02266,-0.79658 0.24996,-0.74987 1.84322,-1.72327 3.54059,-2.1631 2.84767,-0.7379 2.99785,-0.98676 1.94365,-3.22059 -0.84635,-1.7934 -1.4695,-2.14949 -2.40414,-1.3738 -0.88399,0.73364 -1.26167,0.72162 -1.26167,-0.0402 0,-0.598 0.9,-1.56893 2,-2.15763 1.1,-0.5887 2,-1.86453 2,-2.83518 0,-1.82546 1.79742,-4.16482 3.2,-4.16482 0.44,0 0.8,0.9 0.8,2 0,1.33333 0.66667,2 2,2 2.33766,0 2.63966,-2.22424 0.53873,-3.96786 -0.8037,-0.66701 -1.76919,-2.18289 -2.14552,-3.36861 -0.37633,-1.18572 -1.40626,-2.70577 -2.28873,-3.37789 -1.4557,-1.10871 -1.4422,-1.22498 0.14552,-1.25384 2.24364,-0.0408 2.26599,-2.93401 0.0353,-4.56516 -1.08951,-0.79667 -2.5017,-0.95465 -3.87303,-0.43327 -1.33832,0.50883 -2.58643,0.39243 -3.28526,-0.3064 -0.83596,-0.83596 -1.13518,-0.36522 -1.15877,1.82303 -0.0307,2.84589 -0.085,2.87959 -1.53949,0.95487 -1.29333,-1.71147 -1.64206,-1.78256 -2.45288,-0.5 -0.51986,0.82232 -0.9521,1.73687 -0.96052,2.03233 -0.008,0.29545 -0.92504,0.60572 -2.03692,0.68947 -1.11189,0.0838 -1.76033,-0.27048 -1.44099,-0.78719 0.31931,-0.51668 0.10404,-0.93945 -0.47842,-0.93945 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.57798 -1,-1.28439 0,-1.71452 5.44901,-4.86428 7.23165,-4.18021 0.86229,0.33089 1.86248,-0.44657 2.56879,-1.99676 0.63618,-1.39625 1.72883,-2.55361 2.42812,-2.57191 0.69929,-0.0183 0.14644,-0.97301 -1.22856,-2.12159 l -2.5,-2.08832 -0.31955,2.12159 c -0.36657,2.43372 -0.59267,2.50653 -3.29425,1.06069 -1.34946,-0.72221 -1.78807,-1.67293 -1.37386,-2.97797 0.4551,-1.4339 -0.22589,-2.43298 -2.70194,-3.96401 -1.82072,-1.12582 -4.0979,-1.85287 -5.0604,-1.61565 -0.9625,0.23721 -1.75,0.0473 -1.75,-0.42211 0,-0.46936 -1.79033,-0.782 -3.9785,-0.69474 -4.68585,0.18686 -8.55375,-3.01228 -7.53246,-6.23008 0.52239,-1.64591 0.21426,-1.8483 -2.15878,-1.41798 -1.52247,0.27607 -3.35549,0.98942 -4.07336,1.5852 -0.71788,0.59578 -1.52995,0.85852 -1.8046,0.58387 -0.94964,-0.94964 0.67268,-3.53593 2.85604,-4.55309 2.10999,-0.98297 2.11937,-1.05029 0.25163,-1.80669 -1.22888,-0.49767 -2.0842,-0.35316 -2.33333,0.39424 -0.21632,0.64895 -1.21368,1.17991 -2.21635,1.17991 -1.32823,0 -1.68167,0.54063 -1.30217,1.99183 0.35733,1.36646 -0.457,2.90531 -2.59362,4.90121 -1.71298,1.60016 -3.1145,3.17884 -3.1145,3.50817 0,1.27236 -3.68527,4.2037 -4.8125,3.82796 -1.99249,-0.66417 -1.32858,1.51556 1.33799,4.39284 2.92206,3.15295 2.77172,4.73857 -0.49457,5.21599 -1.72745,0.25249 -2.16538,-0.0452 -1.73112,-1.17689 0.95703,-2.49398 -1.73229,-3.96139 -3.49601,-1.90758 -3.58546,4.17517 -2.76697,7.3675 1.32717,5.17638 1.93332,-1.03468 2.08505,-0.95726 1.37924,0.70376 -0.43618,1.02648 -1.00549,3.10383 -1.26513,4.61633 -0.25964,1.5125 -0.87099,2.75 -1.35857,2.75 -0.48757,0 -0.8865,1.8 -0.8865,4 0,2.2 0.45,4 1,4 1.67112,0 5,-3.88215 5,-5.83102 0,-1.80781 2.36495,-3.44524 6.75,-4.67352 1.2375,-0.34663 2.28553,-1.38741 2.32895,-2.31285 0.0488,-1.04054 0.27141,-1.20562 0.58333,-0.43261 0.27741,0.6875 1.41503,1.25 2.52804,1.25 1.38796,0 1.84284,0.4712 1.44805,1.5 -0.39152,1.02029 0.054,1.5 1.39301,1.5 1.08322,0 1.96862,0.67464 1.96862,1.5 0,0.825 -0.68912,1.5 -1.53138,1.5 -0.84227,0 -1.81196,0.7875 -2.15488,1.75 -0.34291,0.9625 -1.79129,2.72633 -3.21861,3.91962 l -2.59513,2.16962 2.75,1.05563 c 3.02533,1.16132 3.64509,3.54767 1.16821,4.49814 -2.6313,1.00973 -3.25542,0.70048 -2.71982,-1.34766 0.3828,-1.46384 -0.11918,-2.11286 -1.99913,-2.5847 -1.38066,-0.34652 -2.75503,-1.56593 -3.05416,-2.7098 -0.4032,-1.54184 -0.88027,-1.81424 -1.84449,-1.05319 -0.71533,0.56461 -2.53811,1.32219 -4.05061,1.6835 -3.27763,0.78299 -3.52362,2.13444 -0.66681,3.66336 1.65395,0.88517 2.46515,0.76921 3.93698,-0.56278 2.03597,-1.84252 3.97983,-1.25153 3.97983,1.20998 0,2.6766 4.04773,5.36772 7.70334,5.12152 2.27193,-0.153 3.19234,-0.64271 2.85588,-1.5195 -0.64682,-1.68559 3.59982,-1.7347 5.27353,-0.061 0.97701,0.97701 1.35328,0.77188 1.81369,-0.98875 0.31952,-1.22183 1.00163,-1.9615 1.51581,-1.64372 0.57186,0.35343 0.54993,1.0416 -0.0565,1.77229 -0.54525,0.65698 -0.62335,1.78996 -0.17356,2.51773 0.58226,0.94211 1.01772,0.99976 1.5119,0.20015 0.75733,-1.22539 2.5559,-0.54382 2.5559,0.96857 0,0.51754 -1.35,0.94098 -3,0.94098 -3.3008,0 -3.91956,1.60712 -1.34388,3.4905 0.91087,0.66604 1.71967,2.07356 1.79734,3.12783 0.1451,1.96953 1.31169,4.38167 2.11913,4.38167 0.25,0 1.40724,-0.5625 2.57163,-1.25 z m -1.81435,-3.16724 c 0.29911,-0.77948 -0.10274,-1.66536 -0.89301,-1.96862 -2.02366,-0.77655 -1.78525,-2.36879 0.46145,-3.08187 2.10909,-0.66939 3.49391,-8.11326 1.8963,-10.19324 -0.53048,-0.69066 -0.49991,-1.40313 0.0755,-1.75873 0.53195,-0.32876 1.24774,0.67961 1.59065,2.24084 0.44995,2.04862 1.59918,3.22144 4.1295,4.21426 4.32061,1.69528 5.99695,3.48367 4.26736,4.55262 -0.69332,0.4285 -1.41244,0.2474 -1.6319,-0.41097 -0.21579,-0.64738 -0.85299,-1.17705 -1.416,-1.17705 -0.56301,0 -0.75213,0.7076 -0.42025,1.57244 0.81222,2.11663 -1.09236,5.47879 -2.74447,4.84481 -0.72849,-0.27955 -1.90173,0.18721 -2.60719,1.03724 -1.60737,1.93676 -3.43511,2.02333 -2.7079,0.12827 z m 12.84634,-9.80655 c -1.73934,-1.73934 -1.45439,-2.26008 1.3245,-2.42042 2.75564,-0.15901 3.211,0.80865 1.1755,2.49797 -0.9667,0.80229 -1.64108,0.78137 -2.5,-0.0776 z m -5.17621,-3.65818 c 0,-0.55 0.45,-1.27811 1,-1.61803 0.55,-0.33992 1,-0.16803 1,0.38197 0,0.55 -0.45,1.27811 -1,1.61803 -0.55,0.33992 -1,0.16803 -1,-0.38197 z m -17.04232,-1.66902 c -1.11096,-1.33862 -1.09346,-1.75053 0.10662,-2.50991 0.78964,-0.49966 2.04634,-0.91537 2.79269,-0.92379 0.77151,-0.009 1.11712,-0.64041 0.80103,-1.46412 -0.57524,-1.49905 2.02271,-2.85818 4.46468,-2.33571 0.7314,0.15649 1.4843,-0.72798 1.67311,-1.96548 0.26085,-1.70967 -0.14617,-2.25 -1.69487,-2.25 -1.40086,0 -1.85819,-0.46903 -1.46257,-1.5 0.36681,-0.95588 -0.0166,-1.5 -1.05706,-1.5 -1.48605,0 -1.49566,-0.26495 -0.10699,-2.95034 2.09301,-4.04744 1.91632,-5.24326 -0.72432,-4.90208 -1.2375,0.15989 -2.83221,-0.0716 -3.5438,-0.51452 -0.73105,-0.45499 -1.9272,-0.27957 -2.75,0.40329 -1.79962,1.49355 -2.00044,-0.15091 -0.38667,-3.16627 0.84267,-1.57453 1.69115,-1.86192 4,-1.35481 1.82829,0.40156 2.93047,0.23765 2.93047,-0.43581 0,-0.59371 -0.7125,-1.07946 -1.58333,-1.07946 -2.4412,0 -1.11786,-2.26627 1.91333,-3.27667 2.25131,-0.75043 3.02407,-0.50933 4.6073,1.4375 1.73766,2.13673 1.766,2.49062 0.3275,4.08917 -1.43052,1.58969 -1.4308,1.75 -0.003,1.75 0.86441,0 1.79863,-0.5625 2.07604,-1.25 0.27741,-0.6875 0.53991,-0.2375 0.58333,1 0.045,1.28265 -0.5133,2.25 -1.29861,2.25 -0.75765,0 -1.89414,0.62245 -2.52552,1.38322 -0.88702,1.06879 -0.79139,1.52004 0.42068,1.98516 1.23861,0.4753 1.34178,1.02586 0.49034,2.61678 -0.59307,1.10816 -0.94997,2.0514 -0.79312,2.09608 0.75385,0.21475 6.48369,0.91415 8.00334,0.9769 1.44609,0.0597 1.52676,0.37744 0.50946,2.00641 -1.38327,2.21495 -2.09123,2.3464 -4.80764,0.89263 -1.47808,-0.79105 -1.88472,-0.73069 -1.68425,0.25 0.14535,0.71105 0.65942,1.58001 1.14239,1.93102 1.47936,1.07517 -0.35429,2.8618 -2.93714,2.8618 -1.77431,0 -2.44098,0.54623 -2.44098,2 0,1.1 -0.52707,2 -1.17126,2 -0.64419,0 -1.92967,0.68635 -2.85662,1.52523 -1.51239,1.36869 -1.82176,1.36087 -3.01444,-0.0762 z m 23.37565,-1.44901 c 0,-3.38971 0.21971,-3.48681 3.9595,-1.75 3.16415,1.46948 3.62787,3.22403 0.646,2.44425 -1.2615,-0.32988 -2.27293,0.0128 -2.60699,0.88337 -0.92782,2.41786 -1.99851,1.57265 -1.99851,-1.57762 z m -8.76857,-0.89522 c -0.66883,-1.08219 2.23752,-2.34501 3.54179,-1.53893 0.50934,0.31479 0.66718,0.99125 0.35074,1.50325 -0.73258,1.18535 -3.1682,1.20768 -3.89253,0.0357 z m 10.43524,-3.91446 c 0,-0.53699 0.7126,-1.24979 1.58356,-1.58401 0.97391,-0.37373 1.43108,-0.15024 1.1875,0.58051 -0.49828,1.49484 -2.77106,2.31789 -2.77106,1.0035 z m 7.87906,-2.39241 c 0.90843,-2.45573 3.67536,-4.57682 4.67125,-3.58093 0.8668,0.86679 -2.72858,5.71187 -4.26809,5.7516 -0.83698,0.0216 -0.96305,-0.65717 -0.40316,-2.17067 z m -34.22968,-6.03066 c -0.82847,-3.1681 0.99762,-4.63226 2.76419,-2.21634 1.00308,1.37179 1.11523,2.31192 0.3813,3.19626 -1.52521,1.83777 -2.487,1.53814 -3.14549,-0.97992 z m 14.91425,-3.66429 c -0.3408,-0.55144 0.33314,-1.51253 1.49767,-2.13576 1.80515,-0.96609 2.06728,-0.87513 1.778,0.61696 -0.39666,2.04596 -2.38118,2.96611 -3.27567,1.5188 z m -22.97619,-4.24445 c 0.38802,-0.62782 0.87665,-3.19622 1.08586,-5.70757 0.44927,-5.39309 3.31047,-8.24159 4.68372,-4.66294 0.31405,0.81841 0.0757,1.38091 -0.52963,1.25 -0.60535,-0.1309 -1.45024,0.9995 -1.87753,2.512 -0.58462,2.06941 -0.42707,2.75 0.63662,2.75 0.77744,0 1.41352,0.45 1.41352,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,0.675 -1.5,1.5 0,0.825 -0.70156,1.5 -1.55902,1.5 -0.91352,0 -1.26692,-0.47262 -0.85354,-1.14149 z m 24.72899,-2.47629 c -0.67148,-1.74984 1.20672,-3.34322 3.96875,-3.36691 1.43922,-0.0123 1.58995,0.34949 0.77778,1.86704 -1.40061,2.61706 -4.00234,3.43919 -4.74653,1.49987 z m -29.81643,-0.38222 c 0.33992,-0.55 1.29303,-1 2.11803,-1 0.825,0 1.22189,0.45 0.88197,1 -0.33992,0.55 -1.29303,1 -2.11803,1 -0.825,0 -1.22189,-0.45 -0.88197,-1 z m -2.5,-2.94098 c 0,-1.56803 1.76692,-2.15562 4.45401,-1.48121 3.70415,0.92968 3.1163,2.42219 -0.95401,2.42219 -1.925,0 -3.5,-0.42344 -3.5,-0.94098 z m 4,-5 c 0,-0.51754 0.45,-1.2191 1,-1.55902 0.55,-0.33992 1,0.0835 1,0.94098 0,0.85746 -0.45,1.55902 -1,1.55902 -0.55,0 -1,-0.42344 -1,-0.94098 z m 150.33357,51.51409 c 0.30115,-0.78478 -0.1494,-2.0053 -1.00122,-2.71225 -1.288,-1.06894 -1.77772,-0.97226 -2.90853,0.57421 -0.74786,1.02277 -1.12261,2.24328 -0.83277,2.71225 0.85089,1.37677 4.147,0.97769 4.74252,-0.57421 z m -261.58371,-2.15658 c -0.95295,-0.95296 -2.86349,0.5906 -2.1533,1.7397 0.42212,0.683 0.98146,0.66575 1.69964,-0.0524 0.58876,-0.58876 0.79291,-1.34803 0.45366,-1.68727 z m 244.79126,1.51694 c 0.92034,-1.48915 -0.14673,-2.29879 -2.06137,-1.56407 -0.88358,0.33906 -1.32643,1.06965 -0.98412,1.62354 0.81058,1.31154 2.21511,1.28411 3.04549,-0.0595 z m 6,-1 c 1.13883,-1.84267 -0.37083,-2.24662 -2.06493,-0.55252 -1.39805,1.39806 -1.41261,1.61905 -0.10664,1.61905 0.83183,0 1.80903,-0.47994 2.17157,-1.06653 z M 714.14288,613.8572 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 37.42289,0.25622 c 0.64368,0.64369 2.52822,-1.48907 2.5618,-2.89923 0.0403,-1.69318 -3.13028,-1.53031 -5.43039,0.27896 -2.84802,2.24025 -2.55964,4.47246 0.37491,2.90194 0.9943,-0.53214 2.11646,-0.65889 2.49368,-0.28167 z M 575.07259,610.1072 c -0.0572,-2.64657 -0.21721,-2.87866 -0.86161,-1.25 -0.43523,1.1 -0.58046,2.5625 -0.32273,3.25 0.80418,2.14515 1.25744,1.37975 1.18434,-2 z m 24.07029,0.13337 c 0,-1.34882 -1.61443,-1.05288 -2.93471,0.53796 -0.9679,1.16625 -0.81041,1.32478 0.87756,0.88336 1.13143,-0.29587 2.05715,-0.93547 2.05715,-1.42132 z m 52.66228,-1.13337 c -0.27741,-0.6875 -0.50439,-0.125 -0.50439,1.25 0,1.375 0.22698,1.9375 0.50439,1.25 0.27741,-0.6875 0.27741,-1.8125 0,-2.5 z m 167.33772,2.25 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 9,0 c 0,-0.55 -0.70156,-1 -1.55902,-1 -0.85746,0 -1.2809,0.45 -0.94098,1 0.33992,0.55 1.04148,1 1.55902,1 0.51754,0 0.94098,-0.45 0.94098,-1 z m -205,-1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -40.01728,-7.75 c 0.0119,-2.2299 -0.45354,-3.25 -1.48272,-3.25 -1.73141,0 -2.00061,1.57257 -0.43486,2.54026 1.52195,0.94062 -1.88572,4.46582 -3.6591,3.78531 -1.70133,-0.65286 -1.88057,1.7999 -0.25064,3.42983 1.85649,1.85649 5.80631,-2.55293 5.82732,-6.5054 z m 126.5416,5.75 c 0.7467,0 1.61732,-0.42017 1.93471,-0.9337 0.31738,-0.51354 -0.5639,-0.81206 -1.95841,-0.66338 -1.3945,0.14867 -2.52762,0.56884 -2.51804,0.9337 0.0745,2.83827 0.18313,3.144 0.6797,1.91338 0.27741,-0.6875 1.11533,-1.25 1.86204,-1.25 z m -192.84121,-1.1875 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 78.02892,-2.52904 c -1.54699,-1.54699 -3.71203,-1.02662 -3.71203,0.89219 0,0.58169 0.9,0.82226 2,0.5346 1.38968,-0.36341 2.02409,-0.0175 2.07895,1.13337 0.0564,1.18394 0.23215,1.27184 0.61607,0.30817 0.29542,-0.74152 -0.14693,-2.03227 -0.98299,-2.86833 z m 26.10206,2.44055 c 1.46315,-1.763 -1.45368,-7.79954 -3.4066,-7.05014 -2.04492,0.78471 -1.72373,2.43067 0.59251,3.03638 2.39385,0.62601 2.59327,1.84811 0.43662,2.6757 -0.85986,0.32996 -1.2833,1.0531 -0.94099,1.60699 0.84286,1.36377 2.04424,1.26641 3.31846,-0.26893 z m 134.18591,-0.28303 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m 49,-0.56342 c 0,0.61734 0.45,1.12244 1,1.12244 0.55,0 1,-0.8524 1,-1.89421 0,-1.39216 -0.66244,-1.85599 -2.49929,-1.75 -1.72425,0.0995 -2.49952,0.72487 -2.5,2.01665 -5.9e-4,1.55104 0.25677,1.65876 1.49929,0.62756 1.03636,-0.8601 1.5,-0.89795 1.5,-0.12244 z m 10,-0.87756 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -5.5,-1 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 41.62756,-0.75 c 1.24387,-1.58606 1.2085,-1.62143 -0.37756,-0.37756 -0.9625,0.75485 -1.75,1.54235 -1.75,1.75 0,0.82304 0.82119,0.29331 2.12756,-1.37244 z m -279.12756,-0.46429 c 0,-0.43214 -0.9,-0.78571 -2,-0.78571 -1.1,0 -2,0.35357 -2,0.78571 0,0.43215 0.9,0.78572 2,0.78572 1.1,0 2,-0.35357 2,-0.78572 z m 265,0.27331 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m -78.18358,-3.38614 c 0.22658,-1.91397 -0.13724,-2.67288 -1.28138,-2.67288 -1.89368,0 -2.99542,2.3579 -2.1415,4.58316 0.90356,2.35465 3.06049,1.15089 3.42288,-1.91028 z M 519.4644,599.6072 c 0.35578,-1.76391 0.039,-3.14811 -0.88342,-3.86024 -0.79096,-0.61064 -1.4381,-1.93814 -1.4381,-2.95 0,-1.40729 -0.27571,-1.56405 -1.17287,-0.66689 -0.89717,0.89717 -0.89418,1.78455 0.0127,3.77494 0.65207,1.43113 0.9283,3.01834 0.61386,3.52713 -0.66226,1.07154 0.28112,2.92506 1.48875,2.92506 0.45342,0 1.07401,-1.2375 1.37908,-2.75 z m 286.32735,1.27737 c -0.32436,-0.84529 0.37557,-2.17572 1.64302,-3.12305 1.53247,-1.14542 1.67265,-1.46937 0.45811,-1.05875 -1.33968,0.45293 -1.75,0.0379 -1.75,-1.76997 0,-1.29889 0.675,-2.62064 1.5,-2.93723 0.825,-0.31658 1.5,-1.26472 1.5,-2.10699 0,-0.84226 -0.675,-1.53138 -1.5,-1.53138 -0.825,0 -1.49223,-0.7875 -1.48272,-1.75 0.0305,-3.08914 6.80198,-8.25 10.82469,-8.25 1.0854,0 4.26499,-1.18889 7.06574,-2.64197 5.20378,-2.69982 6.65323,-5.54506 3.45085,-6.77393 -1.25729,-0.48247 -1.39019,-0.32714 -0.56788,0.66369 0.81123,0.97746 0.40942,1.67474 -1.64427,2.8534 -2.4685,1.41672 -2.72424,1.41483 -2.78757,-0.0207 -0.0384,-0.86928 -0.40793,-2.36801 -0.82128,-3.33051 -0.52518,-1.22291 -0.29974,-1.75 0.74846,-1.75 2.1255,0 2.58473,-2.08592 1.09295,-4.96441 -1.103,-2.12831 -1.36691,-2.23059 -1.93507,-0.75 -0.90623,2.36161 -5.12728,2.17454 -6.4439,-0.28559 -1.97659,-3.6933 -2.96502,-2.10564 -2.49028,4 0.25659,3.3 0.064,6 -0.42798,6 -0.49197,0 -0.65915,-0.9 -0.37149,-2 0.42461,-1.62369 0.0307,-2 -2.09362,-2 -3.13442,0 -3.28535,-0.90509 -0.6268,-3.75871 1.37915,-1.48034 1.63949,-2.35235 0.84829,-2.84133 -0.62784,-0.38803 -1.68537,0.0382 -2.35007,0.94726 -0.66469,0.90903 -1.91987,1.65278 -2.78928,1.65278 -0.8694,0 -1.85885,0.45 -2.19877,1 -0.95402,1.54363 -2.5,1.1829 -2.5,-0.58333 0,-1.69968 -2.14262,-1.48882 -2.72839,0.26851 -0.40648,1.21944 3.24453,2.5871 6.31439,2.36535 2.84091,-0.20521 5.29839,2.67287 3.02662,3.54463 -2.07927,0.79789 -2.11145,4.40484 -0.0393,4.40484 0.96013,0 1.44198,0.68206 1.23631,1.75 -0.18536,0.9625 -0.85586,1.75 -1.48999,1.75 -0.63414,0 -1.45947,0.30649 -1.83407,0.6811 -0.37461,0.3746 -1.33037,0.43195 -2.12393,0.12743 -1.11998,-0.42977 -1.36457,0.20919 -1.09308,2.8556 0.19236,1.8751 0.66797,3.92416 1.05691,4.55347 0.38893,0.62931 0.24981,1.42686 -0.30916,1.77232 -0.55897,0.34546 -0.96411,1.61406 -0.90031,2.8191 0.0896,1.69179 0.2202,1.79226 0.57333,0.44098 0.25152,-0.9625 0.84776,-1.75 1.32498,-1.75 1.61004,0 2.1665,2.07722 0.94934,3.5438 -0.6647,0.80091 -0.90292,1.4562 -0.52939,1.4562 0.37353,0 -0.0214,1.00013 -0.87756,2.22251 -2.03145,2.9003 -1.96981,4.52288 0.1933,5.08816 3.10952,0.81261 3.47354,0.71424 2.89887,-0.7833 z m 9.5195,-26.62938 c -1.06348,-1.7029 -0.88215,-1.89799 1.76414,-1.89799 3.78248,0 4.65968,1.40915 1.71297,2.75176 -1.87149,0.85271 -2.50919,0.69613 -3.47711,-0.85377 z m 31.33163,27.10201 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -275.89583,-3.72917 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69479 0.14921,-1.53513 -0.18308,-1.86742 z m 24.05811,-2.52083 c -0.27741,-0.6875 -0.50439,-0.125 -0.50439,1.25 0,1.375 0.22698,1.9375 0.50439,1.25 0.27741,-0.6875 0.27741,-1.8125 0,-2.5 z m 22.32992,-1.06574 c 0.0202,-2.11287 -2.27459,-4.68426 -4.18039,-4.68426 h -2.11783 l 2.15301,1.8673 c 2.67161,2.31707 2.71962,3.1327 0.18439,3.1327 -1.26129,0 -1.77867,0.49497 -1.43998,1.37759 0.41813,1.08962 1.03705,1.14188 2.96081,0.25 1.3377,-0.62017 2.4357,-1.49467 2.43999,-1.94333 z m 196.81237,-0.008 c 1.26519,-2.5954 4.19543,-3.73855 4.19543,-1.63673 0,1.13281 1.62163,-0.0451 5.54695,-4.02921 1.34918,-1.36938 2.45305,-3.071 2.45305,-3.78139 0,-0.71038 0.675,-1.55062 1.5,-1.8672 1.57782,-0.60547 2.0654,-3.89416 0.70225,-4.73663 -1.7609,-1.0883 -4.78284,3.26828 -4.29934,6.19813 0.12803,0.77584 -0.53059,1.19655 -1.59228,1.01712 -0.99585,-0.1683 -2.85224,0.42405 -4.12532,1.31634 -1.27308,0.89228 -3.1348,1.40787 -4.13714,1.14575 -2.30574,-0.60296 -3.00766,0.55531 -3.44215,5.68005 -0.3951,4.66016 1.10628,4.98581 3.19855,0.69377 z m 4.19543,2.88276 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 8.5,-0.55902 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m -247.5,-1.55902 c 0,-0.85746 -0.45734,-1.27636 -1.01631,-0.9309 -0.55897,0.34546 -0.75742,1.04702 -0.44098,1.55902 0.85723,1.38704 1.45729,1.12841 1.45729,-0.62812 z m 23,-0.55901 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m 81.60417,-0.61114 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69479 0.14921,-1.53513 -0.18308,-1.86742 z m -100.60417,0.72917 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -60,-1.5 c 0,-0.825 -0.64844,-1.5 -1.44098,-1.5 -1.67065,0 -2.79841,1.42728 -1.86517,2.36052 1.19516,1.19516 3.30615,0.64571 3.30615,-0.86052 z m 324.47668,-1.69258 c 2.08735,0.95106 2.50758,0.81754 3.0774,-0.97782 0.38685,-1.21886 0.15767,-2.38971 -0.55383,-2.82945 -0.8211,-0.50746 -0.87222,-0.96125 -0.158,-1.40265 0.58067,-0.35888 0.8946,-1.92603 0.69761,-3.48256 -0.48195,-3.80813 1.37579,-12.17345 3.08244,-13.8801 0.75774,-0.75773 1.3777,-1.98305 1.3777,-2.72294 0,-0.73988 0.47451,-1.5034 1.05446,-1.69672 0.57995,-0.19332 1.15955,-1.06756 1.288,-1.94277 0.12846,-0.8752 0.93348,-2.29121 1.78895,-3.14667 1.99523,-1.99524 4.32922,-7.59844 3.50742,-8.42025 -0.34671,-0.3467 -1.75195,-0.11935 -3.12275,0.50523 -1.37081,0.62458 -3.15982,0.87948 -3.97558,0.56645 -1.2594,-0.48328 -1.16547,-1.19598 0.62248,-4.72317 1.15813,-2.2847 2.44318,-4.379 2.85567,-4.654 0.41249,-0.275 0.92289,-1.4 1.13422,-2.5 0.29249,-1.52244 1.03645,-1.92322 3.11568,-1.67843 1.84113,0.21675 2.73145,-0.14017 2.73145,-1.09502 0,-0.77911 0.9,-2.23106 2,-3.22655 2.68722,-2.4319 2.73429,-4.96335 0.0657,-3.53518 -3.36257,1.79959 -4.04555,1.21456 -2.58565,-2.21482 0.96161,-2.25888 1.93801,-3.14582 3.20172,-2.9084 1.00001,0.18789 1.96819,0.75039 2.15152,1.25 0.53094,1.44691 2.16667,1.05116 2.16667,-0.52421 0,-0.78794 -0.87015,-1.70879 -1.93366,-2.04633 -1.31226,-0.4165 -1.80311,-1.29163 -1.52741,-2.72321 0.37577,-1.95123 1.18476,-3.67598 5.88554,-12.54785 0.94711,-1.7875 2.31298,-3.25 3.03527,-3.25 1.59091,0 2.5202,5.28446 1.30968,7.44754 -0.59749,1.06773 -0.44465,1.55246 0.48955,1.55246 1.83338,0 8.07006,-11.67864 6.69163,-12.53056 -0.57548,-0.35566 -1.69978,-0.39591 -2.49845,-0.0894 -1.6635,0.63835 -2.02418,-1.90841 -0.41143,-2.90514 0.57237,-0.35374 0.77907,-1.46743 0.45932,-2.47486 -0.68226,-2.14962 1.37257,-3.82422 2.48463,-2.02487 0.59776,0.9672 1.271,0.94577 3.1382,-0.0999 l 2.37717,-1.33127 -2.25,-0.34153 c -2.22605,-0.3379 -3.23431,-2.20243 -1.19098,-2.20243 0.58246,0 0.80012,-0.41891 0.48369,-0.9309 -0.31644,-0.512 -0.11799,-1.21356 0.44098,-1.55902 0.55897,-0.34546 1.01631,0.0469 1.01631,0.87189 0,2.41044 1.77761,2.83342 3.80127,0.9045 1.03083,-0.98256 2.73474,-2.33586 3.78648,-3.00734 1.58621,-1.01271 0.54827,-1.19301 -6.08775,-1.05753 -4.4,0.0898 -8.5625,0.58182 -9.25,1.09331 -0.80993,0.60257 -1.25,0.53481 -1.25,-0.19246 0,-0.77833 -4.44549,-1.12245 -14.5,-1.12245 -12.02148,0 -14.5,0.24865 -14.5,1.45469 0,0.89948 1.43123,1.70118 3.75,2.10053 5.60701,0.96568 15.28211,4.5838 14.71427,5.50259 -0.8949,1.44798 1.73369,2.23439 2.74187,0.82031 0.76063,-1.06689 0.85539,-0.98291 0.41958,0.37188 -0.30962,0.9625 -0.12707,1.75 0.40566,1.75 1.77984,0 0.99558,3.06992 -1.35339,5.29775 -1.2771,1.21124 -7.17551,11.87725 -13.10758,23.70225 -9.78567,19.5068 -13.69807,26.04823 -15.45315,25.83733 -2.46608,-0.29634 -3.95248,0.50559 -4.93531,2.66267 -0.9032,1.98231 -0.86454,2.5 0.18667,2.5 0.72917,0 1.79693,-1.0125 2.3728,-2.25 0.9548,-2.05174 1.11149,-2.09156 1.77824,-0.45196 0.46744,1.14948 0.17107,2.23161 -0.82162,3 -0.85405,0.66108 -1.69799,2.32696 -1.87543,3.70196 -0.2685,2.08071 0.13861,2.55307 2.42739,2.81642 1.5125,0.17403 2.75,-0.16347 2.75,-0.75 0,-0.58653 -0.675,-1.06642 -1.5,-1.06642 -1.67694,0 -2.01813,-1.56174 -0.54068,-2.47486 1.11699,-0.69034 5.04068,1.53214 5.04068,2.85516 0,0.49457 0.7875,1.50393 1.75,2.24302 1.63389,1.25465 1.60072,1.38581 -0.5,1.97688 -2.36887,0.66651 -2.98074,3.26906 -1.18966,5.06014 0.74711,0.74711 0.0825,1.84454 -2.25,3.71507 -4.00428,3.21125 -4.88935,4.0291 -6.7493,6.23677 -1.34258,1.59358 -1.50352,1.5633 -2.40282,-0.4521 -1.23078,-2.75829 -3.66194,-2.8903 -2.94797,-0.16008 0.28766,1.1 0.90641,2 1.375,2 0.46859,0 0.59585,0.66747 0.2828,1.48326 -0.32503,0.84702 0.63347,2.75747 2.23456,4.45383 2.14231,2.26978 3.11665,2.71086 4.13018,1.86971 0.96533,-0.80115 1.98457,-0.80098 3.74389,6.2e-4 z m 1.02332,-35.80742 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m 27.73207,-63 c -1.05932,-1.69625 -0.99869,-2 0.39921,-2 0.90653,0 2.24603,-0.7875 2.97667,-1.75 1.2595,-1.65918 1.33009,-1.65577 1.36025,0.0657 0.0369,2.1045 -1.70308,5.68426 -2.76284,5.68426 -0.39835,0 -1.28633,-0.9 -1.97329,-2 z m -193.28254,97.0943 c 1.32086,-2.46804 -0.34192,-3.84622 -4.94953,-4.10236 -5.02525,-0.27937 -5.54118,-0.13312 -4.21365,1.19441 0.91512,0.91512 0.86566,1.54382 -0.21636,2.75 -1.25047,1.39395 -0.87233,1.58962 3.4842,1.80295 3.91621,0.19176 5.08721,-0.13498 5.89534,-1.645 z m 15.05047,-2.15332 c 0,-0.51754 -0.675,-0.94098 -1.5,-0.94098 -1.54641,0 -1.9867,1.17996 -0.86052,2.30615 0.79893,0.79893 2.36052,-0.10419 2.36052,-1.36517 z m 134.34371,-0.14731 c 0.79237,-3.03006 0.0382,-3.44925 -2.33758,-1.29922 -2.5133,2.2745 -2.55641,3.50555 -0.12276,3.50555 1.10107,0 2.12302,-0.91644 2.46034,-2.20633 z m -128.34371,0.26535 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 109,-2.05902 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m -248.25,-1.0801 c -1.18874,-0.69237 -2.31126,-0.69237 -3.5,0 -1.4277,0.83156 -1.1054,1.01928 1.75,1.01928 2.8554,0 3.1777,-0.18772 1.75,-1.01928 z m 26.75,0.0801 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 226,-2 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -247.5,-1.94098 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 40.43524,0.0458 c 0.3043,-0.49236 -0.21903,-1.19157 -1.16296,-1.55379 -1.30939,-0.50246 -1.41241,-0.84635 -0.43459,-1.45068 0.94234,-0.58239 0.60399,-1.23612 -1.27802,-2.46926 -1.40782,-0.92247 -2.55967,-1.25432 -2.55967,-0.73748 0,0.51685 0.51027,1.10981 1.13393,1.3177 0.71335,0.23778 0.43517,1.08247 -0.75,2.27738 -1.73094,1.74516 -1.73874,1.84441 -0.0961,1.22221 1.1425,-0.43274 1.9933,-0.14182 2.35699,0.80596 0.63822,1.66316 1.95447,1.94049 2.7904,0.58792 z m -18.70878,-2.71165 c -0.35211,-0.35211 -1.4345,-0.33541 -2.40531,0.0371 -1.49711,0.57449 -1.54289,0.81466 -0.30148,1.58189 1.53301,0.94746 3.8734,-0.45241 2.70679,-1.61902 z m 242.1125,-0.99289 c 1.59813,-1.11937 3.32965,-1.40359 5.76622,-0.94649 6.16252,1.1561 8.60139,-1.07443 5.91949,-5.41384 -0.75817,-1.22674 -3.21492,-0.28949 -3.89642,1.48648 -0.36634,0.95466 -0.01,1.17828 1.17268,0.73545 1.48267,-0.55526 1.52427,-0.42141 0.32663,1.05093 -1.61853,1.98976 -3.11847,2.19797 -3.1498,0.43723 -0.0122,-0.6875 -0.88747,-2.375 -1.94498,-3.75 l -1.92276,-2.5 -1.61104,3.85198 c -1.25613,3.00339 -2.03929,3.73999 -3.55501,3.34362 -1.42326,-0.37219 -1.94397,0.002 -1.94397,1.39802 0,2.32636 1.79316,2.43998 4.83896,0.30662 z M 573.14288,576.3572 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 26,-0.5 c 1.35129,-1.62821 1.02807,-1.83174 -1.41821,-0.89301 -0.86999,0.33384 -1.58179,1.00884 -1.58179,1.5 0,1.38323 1.62035,1.05539 3,-0.60699 z m 85,-2 c 0.63531,-1.925 1.77369,-3.5 2.52974,-3.5 0.9665,0 1.28056,-1.04849 1.05777,-3.53135 -0.40131,-4.47232 -0.88417,-4.91543 -3.70896,-3.40365 -1.261,0.67487 -3.79655,1.31834 -5.63455,1.42993 -3.60149,0.21865 -5.8373,1.73607 -4.86826,3.30402 0.6802,1.10057 6.46742,-0.59397 8.88728,-2.60227 1.24712,-1.03502 1.57109,-0.8448 1.95164,1.1459 0.53807,2.81472 -1.25822,5.65742 -3.5749,5.65742 -1.91912,0 -2.15982,2.07994 -0.43976,3.8 1.87579,1.87579 2.55817,1.46277 3.8,-2.3 z m -127.5,-0.5 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 39.5,0.55902 c 0,-1.05548 -1.91911,-1.49891 -2.48992,-0.57533 -0.34546,0.55897 0.0734,1.01631 0.9309,1.01631 0.85746,0 1.55902,-0.19844 1.55902,-0.44098 z m -40.61844,-5.11096 c 0.34149,-0.88992 0.17385,-1.29132 -0.39301,-0.94098 -0.5437,0.33602 -0.98855,1.0344 -0.98855,1.55194 0,1.43843 0.71677,1.12146 1.38156,-0.61096 z m 7.81844,0.35194 c -0.93333,-0.93333 -1.46667,-0.93333 -2.4,0 -0.93333,0.93333 -0.66667,1.2 1.2,1.2 1.86667,0 2.13333,-0.26667 1.2,-1.2 z m -33.7,-0.8 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m 303.78571,0.38095 c 0.34048,-0.34047 -0.0466,-1.28471 -0.8602,-2.0983 -1.02807,-1.02807 -1.28461,-2.51679 -0.84109,-4.88095 0.4148,-2.21108 0.2492,-3.4017 -0.47313,-3.4017 -0.61121,0 -1.11129,0.675 -1.11129,1.5 0,0.825 -0.49878,1.5 -1.10841,1.5 -2.09216,0 1.04342,7.82188 3.19174,7.96196 0.32084,0.0209 0.86191,-0.24053 1.20238,-0.58101 z m -172.28571,-2.93997 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m -99,-0.27431 c 0,-1.30208 -1.18877,-2.16804 -2.15579,-1.57039 -1.03422,0.63919 -0.14245,2.40372 1.21481,2.40372 0.51754,0 0.94098,-0.375 0.94098,-0.83333 z m 106,-1.16667 c 0,-1.1 -0.40787,-2 -0.90638,-2 -0.49851,0 -0.67103,0.9 -0.38337,2 0.28766,1.1 0.69553,2 0.90638,2 0.21085,0 0.38337,-0.9 0.38337,-2 z m 170.38608,0.47106 c 1.62746,-1.62745 1.09518,-4.79815 -0.70477,-4.19816 -1.30813,0.43604 -2.84753,5.7271 -1.66626,5.7271 0.46315,0 1.53012,-0.68802 2.37103,-1.52894 z M 446.3994,563.23009 c 0.30593,1.16988 1.27337,2.12706 2.14986,2.12706 2.01426,0 2.08491,-1.87424 0.0994,-2.63617 -0.82184,-0.31537 -1.24528,-0.97625 -0.94098,-1.46861 0.96451,-1.56062 2.4672,-0.97163 3.45644,1.35478 0.66853,1.57218 0.8572,-0.84029 0.62629,-8.00815 -0.18175,-5.64198 -0.62679,-10.55448 -0.98897,-10.91667 -0.36223,-0.36218 -0.65856,0.28993 -0.65856,1.44914 0,1.1592 -0.45734,2.3903 -1.01631,2.73576 -0.55897,0.34546 -0.74523,1.06673 -0.41391,1.60282 0.33132,0.53609 0.0586,1.63 -0.60613,2.4309 -0.95083,1.14568 -0.93614,1.4562 0.0689,1.4562 0.89894,0 0.78707,0.54184 -0.37755,1.82874 -0.91025,1.00581 -1.65499,2.35581 -1.65499,3 0,0.64419 -0.675,1.17126 -1.5,1.17126 -0.825,0 -1.5,-0.675 -1.5,-1.5 0,-1.90075 -1.61029,-1.95795 -2.32987,-0.0828 -0.29911,0.77948 0.11379,1.6696 0.91758,1.97804 1.0184,0.3908 1.27847,1.4011 0.8579,3.33276 l -0.60353,2.77196 1.9291,-2.37706 c 1.92375,-2.37046 1.93065,-2.37116 2.48534,-0.25 z m 246.74348,-1.45627 c 0,-1.76593 -2.15276,-1.45839 -2.77083,0.39583 -0.21771,0.65312 0.31666,1.1875 1.1875,1.1875 0.87083,0 1.58333,-0.7125 1.58333,-1.58333 z m -158.27286,-1.35209 c -0.27837,-1.06448 0.0567,-2.15139 0.7446,-2.41536 1.50868,-0.57894 2.73387,-4.64922 1.39946,-4.64922 -2.21733,0 -5.8712,3.39071 -5.8712,5.44834 0,2.58092 0.76073,3.55166 2.7833,3.55166 0.94151,0 1.27248,-0.67869 0.94384,-1.93542 z m 130.08119,0.86042 c -0.19708,-0.59125 -0.78583,-1.075 -1.30833,-1.075 -0.5225,0 -1.11125,0.48375 -1.30833,1.075 -0.19709,0.59125 0.39166,1.075 1.30833,1.075 0.91667,0 1.50542,-0.48375 1.30833,-1.075 z m 162.19167,-0.36598 c 0,-1.05548 -1.91911,-1.49891 -2.48992,-0.57533 -0.34546,0.55897 0.0734,1.01631 0.9309,1.01631 0.85746,0 1.55902,-0.19844 1.55902,-0.44098 z m -278.13367,-1.45525 c 1.03569,-0.65613 1.10355,-1.31791 0.28041,-2.73469 -1.02311,-1.76096 -1.08768,-1.74375 -1.11633,0.29759 -0.0167,1.19166 -0.59291,2.39364 -1.28041,2.67105 -0.6875,0.27741 -0.8,0.53302 -0.25,0.56802 0.55,0.035 1.61485,-0.32589 2.36633,-0.80197 z m 47.13367,-0.10377 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 93.4167,-0.875 c 0.32152,-0.89375 0.8342,-2.14971 1.13928,-2.79102 0.30509,-0.64131 -0.2577,-1.32929 -1.25064,-1.52884 -1.74195,-0.35008 -5.30534,2.99317 -5.30534,4.97759 0,1.64608 4.79748,1.06354 5.4167,-0.65773 z m 110.5833,1.43402 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -106,-1 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 112.6771,-1.15994 c 0.63132,-1.6452 -1.45445,-3.65472 -2.87935,-2.77408 -0.43876,0.27117 -0.79775,1.36648 -0.79775,2.43402 0,2.33979 2.81001,2.59966 3.6771,0.34006 z m -133.6771,-0.39908 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 138.40044,-0.39885 c -0.29523,-0.76937 -0.0561,-1.69592 0.53139,-2.05902 1.74983,-1.08145 1.21441,-2.54213 -0.93183,-2.54213 -1.1,0 -1.99386,0.3375 -1.98635,0.75 0.0366,2.00932 1.31532,5.25 2.0716,5.25 0.46859,0 0.61043,-0.62948 0.31519,-1.39885 z m 18.23525,-0.095 2.86431,-1.49384 -3.25,-0.006 c -2.22496,-0.004 -3.25,0.46694 -3.25,1.49384 0,1.84981 0.10034,1.84998 3.63569,0.006 z m -232.97904,-2.05128 c 2.33758,-3.19683 1.69038,-4.4736 -1.90665,-3.76133 -3.27458,0.64843 -5.65943,2.75377 -5.7182,5.04803 -0.0486,1.89916 6.04753,0.87042 7.62485,-1.2867 z m 84.59335,1.15307 c 0.9625,-0.73064 1.75,-2.03503 1.75,-2.89864 0,-0.86362 0.96352,-1.71401 2.14115,-1.88976 1.17764,-0.17575 2.49269,-1.27678 2.92234,-2.44672 0.72576,-1.97625 0.55611,-2.06973 -2.39115,-1.31751 -8.01018,2.0444 -9.44965,3.04868 -6.17234,4.30631 2.17963,0.8364 1.83813,2.63837 -0.5,2.63837 -1.99224,0 -2.60112,1.06554 -1.33333,2.33333 0.93063,0.93063 1.57315,0.80057 3.58333,-0.72538 z m -121.25,-0.60794 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 100.42997,0.11331 c 0.65323,-1.05695 -2.21301,-3.6636 -3.07767,-2.79894 -0.8332,0.8332 0.37204,3.68563 1.5573,3.68563 0.5348,0 1.21897,-0.39901 1.52037,-0.88669 z m 137.57003,-1.80363 c 0,-1.96839 -2.41213,-1.09701 -2.82265,1.01968 -0.225,1.16012 0.15332,1.48098 1.25,1.06014 0.86496,-0.33191 1.57265,-1.26783 1.57265,-2.07982 z m -216,0.1313 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m 236.68311,-0.62848 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 17.52305,-1.16624 c -0.16161,-0.90544 0.25089,-1.64626 0.91667,-1.64626 0.66578,0 0.92138,-0.28913 0.568,-0.6425 -0.91432,-0.91432 -3.69083,1.6045 -3.69083,3.34828 0,0.80349 0.5625,1.2642 1.25,1.02381 0.6875,-0.24039 1.11777,-1.17789 0.95616,-2.08333 z m -28.63203,-1.31369 c -0.32388,-0.84401 0.32335,-1.72902 1.61349,-2.20627 1.49079,-0.55148 1.78017,-1.02817 0.93954,-1.54771 -0.66812,-0.41292 -1.88093,-0.1979 -2.69513,0.47782 -0.8142,0.67573 -1.73955,0.96941 -2.05633,0.65262 -1.13838,-1.13838 0.66811,-2.49467 4.20702,-3.15857 2.83743,-0.53231 3.89739,-0.29034 4.97924,1.13664 1.91373,2.52424 1.76539,3.21126 -0.56196,2.60265 -1.38363,-0.36183 -2,-0.0307 -2,1.07449 0,1.30884 0.78269,1.49022 4.33148,1.0038 3.00793,-0.41228 5.28449,-0.10087 7.45034,1.01913 4.06585,2.10254 5.21818,2.03458 5.21818,-0.30771 0,-1.32085 0.93676,-2.1263 3,-2.57946 1.65,-0.3624 3,-1.29816 3,-2.07946 0,-1.6201 -2.56793,-1.92865 -3.5,-0.42054 -1.25243,2.02647 -3.19341,0.9056 -4.2191,-2.43642 -0.84195,-2.7433 -0.77191,-3.54492 0.34722,-3.97437 0.77104,-0.29588 1.834,-1.67449 2.36214,-3.06358 0.52813,-1.3891 1.64638,-2.52563 2.48499,-2.52563 1.87003,0 1.87014,0.0709 -0.007,-4.42139 -0.84238,-2.0161 -2.19238,-3.9192 -3,-4.22911 -0.80747,-0.30991 -1.46825,-1.19033 -1.46825,-1.95649 0,-0.76615 -0.39658,-1.39301 -0.88129,-1.39301 -0.4847,0 -1.39777,-2.05118 -2.02904,-4.55817 -0.97422,-3.86899 -1.44576,-4.46359 -3.11872,-3.93261 -1.38902,0.44086 -1.97095,0.16278 -1.97095,-0.94183 0,-1.72065 -1.54355,-2.11495 -2.46197,-0.62892 -0.31901,0.51616 -1.77114,0.84692 -3.22696,0.73503 -2.12381,-0.16325 -2.72478,-0.79342 -3.04073,-3.18848 -0.31633,-2.39791 -0.14562,-2.73916 0.86794,-1.73502 2.10859,2.089 4.11545,1.59261 2.88165,-0.71276 -0.59302,-1.10806 -1.67171,-1.72436 -2.47714,-1.41529 -0.78468,0.30111 -2.88366,0.62186 -4.66439,0.71276 -2.60512,0.133 -3.37785,0.69051 -3.95504,2.85352 -0.82896,3.10648 1.95399,6.45655 4.53939,5.46444 2.30044,-0.88276 1.86537,1.66132 -0.54111,3.16419 -1.60459,1.00209 -2.40243,1.02901 -3.5,0.11811 -1.12636,-0.9348 -1.42164,-0.8532 -1.42164,0.3929 0,0.86501 0.7875,2.01708 1.75,2.56016 1.33995,0.75605 1.47542,1.26487 0.57814,2.17155 -0.64452,0.65127 -0.93533,1.8005 -0.64624,2.55385 0.28908,0.75334 -0.19608,1.64665 -1.07815,1.98513 -0.88206,0.33848 -1.60375,1.26883 -1.60375,2.06745 0,0.79861 -0.47836,1.15638 -1.06301,0.79505 -1.42403,-0.8801 -4.93699,2.40062 -4.93699,4.61059 0,0.96893 -0.5625,1.98866 -1.25,2.26607 -0.7292,0.29424 -0.50099,0.53728 0.54775,0.58333 0.98876,0.0434 2.84668,-1.05287 4.12872,-2.43621 1.45935,-1.57467 2.9348,-2.28344 3.94581,-1.89548 1.08006,0.41446 1.87525,-0.0843 2.40119,-1.50602 0.70376,-1.90246 0.98928,-1.97731 2.71869,-0.71273 1.62843,1.19074 1.72588,1.66174 0.61961,2.99472 -0.722,0.86996 -2.8681,1.87353 -4.76911,2.23016 -2.09485,0.393 -4.09778,1.62734 -5.08466,3.13351 -1.31761,2.01092 -1.83216,2.22615 -2.69676,1.12804 -0.58766,-0.74637 -1.74185,-1.49427 -2.56486,-1.662 -2.48517,-0.50646 -4.13788,-3.31961 -2.85699,-4.863 0.60802,-0.73262 0.9379,-1.36647 0.73305,-1.40855 -3.50732,-0.72051 -4.80187,-0.65491 -7.12244,0.36092 -2.55574,1.11878 -3.72099,2.70549 -2,2.72339 0.89025,0.009 3.25,4.84507 3.25,6.66018 0,0.71738 -0.6522,1.01898 -1.5,0.69365 -1.9179,-0.73597 -1.88819,-0.0102 0.1612,3.93803 0.91366,1.76019 1.85116,2.63784 2.08333,1.95034 0.58434,-1.73031 2.9191,-1.56894 3.6171,0.25 0.77779,2.0269 3.62769,1.89686 5.18781,-0.23672 1.19138,-1.62932 1.38501,-1.63258 3.1308,-0.0526 3.88007,3.51141 10.11251,4.29762 8.89389,1.12194 z m 11.07365,-4.80807 c -0.31141,-0.81152 0.13739,-3.15942 0.99733,-5.21756 1.47602,-3.53262 1.64166,-3.63524 2.95922,-1.83338 1.77464,2.42698 1.75199,3.05299 -0.21934,6.06162 -1.8466,2.81827 -2.92576,3.10394 -3.73721,0.98932 z m -27.64778,-1.33418 c 0,-0.53699 0.7126,-1.24979 1.58356,-1.58401 0.97391,-0.37373 1.43108,-0.15024 1.1875,0.58051 -0.49828,1.49484 -2.77106,2.31789 -2.77106,1.0035 z m 14.55,-2.1305 c 1.27354,-1.26038 6.45,-2.14366 6.45,-1.10059 0,1.05472 -2.55203,2.04077 -5.28179,2.04077 -1.32925,0 -1.76437,-0.35018 -1.16821,-0.94018 z m 9.2,-1.48995 c -2.39081,-1.76286 -2.19602,-2.62539 0.5,-2.21395 1.2375,0.18886 2.17125,0.64729 2.075,1.01873 -0.5591,2.15764 -0.99522,2.36007 -2.575,1.19522 z m -1.75,-5.01085 c 0,-0.85746 0.45,-1.55902 1,-1.55902 0.55,0 1,0.42344 1,0.94098 0,0.51754 -0.45,1.2191 -1,1.55902 -0.55,0.33992 -1,-0.0835 -1,-0.94098 z m 7,-3.61804 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -14.8455,-21.49295 c 0.19002,-0.98026 0.95098,-1.98391 1.691,-2.23033 0.86063,-0.28658 1.221,0.19425 1,1.33427 -0.19002,0.98026 -0.95098,1.98391 -1.691,2.23033 -0.86063,0.28658 -1.221,-0.19425 -1,-1.33427 z m -361.2268,39.41687 c -0.91296,-1.70587 -1.31902,-1.85664 -2.01987,-0.75 -1.3647,2.15485 -1.07935,2.8851 1.12735,2.8851 1.76824,0 1.88531,-0.28006 0.89252,-2.1351 z m 230.8223,1.50481 c 2.78841,-0.74726 2.92106,-2.38146 0.25,-3.07996 -1.1,-0.28766 -2.00277,-1.25803 -2.00616,-2.15638 -0.004,-0.96782 -0.61486,-0.46625 -1.5,1.23094 -2.43903,4.67663 -1.86829,5.3787 3.25616,4.0054 z m 22.73804,-1.61971 c -0.3557,-1.2375 -0.86635,-3.0375 -1.13477,-4 -0.26843,-0.9625 -1.35772,-1.75 -2.42066,-1.75 -2.05337,0 -2.60126,1.46872 -0.93261,2.5 1.54499,0.95485 1.18139,3.5 -0.5,3.5 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 1.60532,1 3.56739,1 3.22447,0 3.50522,-0.21628 2.92065,-2.25 z m -147.48804,-1.45 c 0,-2.01099 -0.28907,-2.41093 -1.13278,-1.56722 -0.62303,0.62303 -0.86216,1.83803 -0.53139,2.7 0.91543,2.38558 1.66417,1.87592 1.66417,-1.13278 z m -124.22917,-0.1125 c 0.21771,-0.65313 -0.31666,-1.1875 -1.1875,-1.1875 -0.87083,0 -1.58333,0.7125 -1.58333,1.58333 0,1.76593 2.15276,1.45839 2.77083,-0.39583 z m 236.22917,0.3125 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m -5.09968,-3.25 c -0.089,-3.34672 -0.18578,-3.48115 -0.90032,-1.25 -1.14477,3.57455 -1.14477,5 0,5 0.55,0 0.95514,-1.6875 0.90032,-3.75 z m 97.09968,0.75 c 0,-1.65 -0.37206,-3 -0.82681,-3 -0.45474,0 -0.62867,1.35 -0.3865,3 0.24217,1.65 0.61423,3 0.82681,3 0.21257,0 0.3865,-1.35 0.3865,-3 z m 87,0.5 c 0,-0.76008 -0.45,-1.66008 -1,-2 -0.5694,-0.35191 -1,0.50929 -1,2 0,1.49071 0.4306,2.35191 1,2 0.55,-0.33992 1,-1.23992 1,-2 z m -409.63499,-4.99213 c 0.82067,0.82067 2.19928,1.49213 3.06356,1.49213 0.86429,0 1.57143,0.45 1.57143,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.87344 1,-1.94098 0,-1.06754 0.45165,-2.22012 1.00367,-2.56129 0.55202,-0.34116 0.74056,-1.66863 0.41897,-2.94992 -0.77531,-3.08909 1.16918,-4.17901 2.61983,-1.46846 0.82647,1.54428 0.84036,2.43782 0.0502,3.22801 -0.60095,0.60095 -1.09264,1.97238 -1.09264,3.04763 0,1.89386 0.0628,1.8982 2.00683,0.13883 1.10375,-0.99888 1.95043,-2.30613 1.88151,-2.90499 -0.38956,-3.385 0.27253,-5.58883 1.67905,-5.58883 1.11231,0 1.38308,0.58068 0.93261,2 -0.52226,1.6455 -0.1797,2 1.93261,2 2.93452,0 3.41891,-1.45795 0.81739,-2.46026 -1.66667,-0.64213 -1.66667,-0.72102 0,-1.65668 0.9625,-0.54034 1.75,-1.88047 1.75,-2.97806 0,-1.73912 -0.44988,-1.91123 -3.5,-1.33902 -2.90296,0.5446 -3.5,0.36185 -3.5,-1.07132 0,-1.23559 0.56985,-1.5789 2,-1.20491 1.55372,0.40631 2,0.0307 2,-1.68337 0,-1.21351 0.55474,-2.76112 1.23275,-3.43913 0.97701,-0.97701 0.77466,-1.35255 -0.97535,-1.81019 -3.13793,-0.82059 -4.26103,-6.9027 -1.62989,-8.82664 2.41663,-1.76709 0.8989,-3.34026 -1.67299,-1.73409 -1.74184,1.0878 -1.95452,0.95108 -1.95452,-1.25647 0,-1.79102 -0.41545,-2.31767 -1.5,-1.90149 -0.86459,0.33178 -1.5,1.8261 -1.5,3.52764 0,1.91127 -0.39197,2.70977 -1.1118,2.26489 -0.6115,-0.37792 -1.54575,-0.067 -2.07613,0.69098 -0.74577,1.06577 -1.07929,1.09481 -1.47153,0.12812 -0.80743,-1.98982 -2.34057,-1.44835 -2.34057,0.82662 0,1.76386 -0.52688,2.03122 -3.4984,1.77521 -4.07321,-0.35093 -6.29521,1.98977 -6.07372,6.39817 0.076,1.5125 -0.35233,2.75 -0.95182,2.75 -0.59949,0 -1.56111,-1.2375 -2.13695,-2.75 -0.86459,-2.27096 -1.17298,-2.45862 -1.77036,-1.07732 -0.75783,1.75232 1.23308,4.24235 5.26567,6.58579 1.91057,1.11028 2.16558,1.02891 2.16558,-0.69098 0,-1.0722 0.45,-2.22757 1,-2.56749 0.55,-0.33992 1,0.24964 1,1.31014 0,2.33523 5.75709,3.61291 9.63537,2.13839 3.17469,-1.20701 5.63004,-1.12942 2.61463,0.0826 -1.2375,0.49742 -2.25,1.60973 -2.25,2.4718 0,1.24472 -0.40189,1.35232 -1.95213,0.52266 -1.53415,-0.82105 -2.33709,-0.63188 -3.75,0.88352 -0.98883,1.06055 -3.32749,2.07735 -5.19702,2.25956 -3.59182,0.35008 -6.76597,3.66456 -4.35085,4.5432 0.6875,0.25012 1.25,1.10084 1.25,1.89049 0,1.05364 -0.70499,1.25877 -2.64915,0.77082 -1.86439,-0.46793 -2.43937,-0.32546 -1.94099,0.48095 0.3895,0.63021 1.35662,1.14584 2.14916,1.14584 0.79254,0 1.44098,0.77529 1.44098,1.72286 0,1.29172 0.73484,0.91832 2.93644,-1.49213 2.60329,-2.85023 3.10573,-3.0457 4.42857,-1.72286 z m 1.28611,-16.19008 c -0.96567,-0.96568 -0.78948,-2.52134 0.21523,-1.90039 0.4765,0.29449 1.67124,-0.35395 2.65499,-1.44098 0.98375,-1.08703 2.39389,-1.97642 3.13365,-1.97642 0.77958,0 1.34501,-1.08601 1.34501,-2.58333 0,-3.00561 2.46452,-2.84047 2.56164,0.17165 0.0339,1.05142 0.42175,2.70491 0.86188,3.67441 0.86345,1.902 -0.87178,4.79305 -2.79596,4.65832 -0.70849,-0.0496 -0.66298,-0.26641 0.12244,-0.58333 1.41702,-0.57178 1.72695,-4.33772 0.35699,-4.33772 -0.49116,0 -1.14912,0.66741 -1.46215,1.48314 -0.34942,0.91059 -1.21863,1.23391 -2.25159,0.83752 -1.01429,-0.38922 -2.16073,0.008 -2.88673,1.00132 -0.66235,0.90581 -1.49728,1.35393 -1.8554,0.99581 z m 60.34888,18.68221 c 0,-1.1 -0.40787,-2 -0.90638,-2 -0.49851,0 -0.67103,0.9 -0.38337,2 0.28766,1.1 0.69553,2 0.90638,2 0.21085,0 0.38337,-0.9 0.38337,-2 z m 92,0 c 0,-1.18717 -1.7373,-1.18717 -4.5,0 -1.67602,0.72021 -1.47353,0.87082 1.25,0.92971 1.7875,0.0387 3.25,-0.37971 3.25,-0.92971 z m -41.5,-1 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 14.93524,0.10478 c 0.3043,-0.49236 -0.0819,-1.13895 -0.85822,-1.43685 -0.77633,-0.29791 -1.65962,0.10494 -1.96288,0.89521 -0.59892,1.56077 1.89528,2.03965 2.8211,0.54164 z m 19.47231,-1.01233 c 1.81854,-1.81854 1.82319,-1.9296 0.0995,-2.38035 -2.14932,-0.56206 -7.00707,0.24722 -7.00707,1.16735 0,0.53827 0.90447,1.10909 4.75,2.99777 0.1375,0.0675 1.1084,-0.73562 2.15755,-1.78477 z m 93.71442,-2.09245 c 0.75792,0 1.37803,-0.72314 1.37803,-1.60699 0,-1.05452 -0.5438,-1.39831 -1.58179,-1 -0.86998,0.33385 -2.10748,0.61388 -2.75,0.6223 -0.64251,0.008 -1.77219,0.39812 -2.51038,0.86598 -1.12289,0.71169 -1.12289,1.20615 0,3.02652 l 1.34217,2.17584 1.37197,-2.04182 c 0.75459,-1.12301 1.99209,-2.04183 2.75,-2.04183 z m 6.37803,1.5 c 1.01957,-1.22851 0.95124,-1.5 -0.37756,-1.5 -0.89234,0 -1.62244,0.675 -1.62244,1.5 0,0.825 0.1699,1.5 0.37756,1.5 0.20765,0 0.93775,-0.675 1.62244,-1.5 z m -90.5,-0.5 c 0.33992,-0.55 -0.33508,-1 -1.5,-1 -1.16492,0 -1.83992,0.45 -1.5,1 0.33992,0.55 1.01492,1 1.5,1 0.48508,0 1.16008,-0.45 1.5,-1 z m 164.52086,-6.92254 c -0.60387,-2.2426 -1.51648,-4.07746 -2.02802,-4.07746 -0.51154,0 -0.76317,0.5625 -0.55917,1.25 0.20399,0.6875 0.97216,3.5 1.70704,6.25 0.89533,3.35045 1.44203,4.28325 1.65711,2.82746 0.17654,-1.1949 -0.17309,-4.0074 -0.77696,-6.25 z m 112.97914,6.92254 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -447.78669,-3 c 0.24217,-1.65 -0.007,-3 -0.55317,-3 -0.54641,0 -0.70435,-0.28913 -0.35097,-0.6425 0.89428,-0.89429 3.7941,1.66638 3.1208,2.75581 -1.30165,2.10612 2.24119,0.58873 3.87939,-1.66154 1.75725,-2.4138 1.75005,-2.56079 -0.25,-5.10343 -1.13265,-1.43993 -2.05936,-2.12024 -2.05936,-1.51179 0,0.60845 -1.4625,1.48598 -3.25,1.95007 -3.05998,0.79447 -3.25663,1.11772 -3.36332,5.52859 -0.12907,5.33585 2.09611,6.66214 2.82663,1.68479 z m 244.28669,2 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -127,-2.90091 c 0.55,-0.8795 1.26484,-2.49909 1.58853,-3.59909 0.32368,-1.1 1.0633,-1.90346 1.64359,-1.78547 0.58706,0.11937 0.99137,-1.20166 0.91147,-2.97811 -0.0854,-1.89815 0.36324,-3.2522 1.10641,-3.33953 0.6875,-0.0808 1.47202,-0.20314 1.74339,-0.27189 0.78353,-0.19851 -3.75821,-5.125 -4.72475,-5.125 -1.22732,0 -3.99667,6.96338 -3.39398,8.53397 0.27448,0.71528 -0.0933,1.52783 -0.81736,1.80567 -0.72403,0.27783 -2.01894,2.56695 -2.87758,5.08693 l -1.56117,4.58178 2.69073,-0.65508 c 1.47989,-0.36029 3.14072,-1.37467 3.69072,-2.25418 z m 59,1.90091 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 95.5,0 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 93,-0.5 c 0,-0.825 -0.66088,-1.5 -1.46862,-1.5 -0.89459,0 -1.24363,0.58629 -0.89301,1.5 0.31659,0.825 0.97746,1.5 1.46862,1.5 0.49115,0 0.89301,-0.675 0.89301,-1.5 z m -221,-1.94098 c 0,-1.34254 -0.4176,-2.69908 -0.928,-3.01452 -1.12795,-0.69711 -2.45125,3.03285 -1.57753,4.44655 1.13315,1.83348 2.50553,1.0491 2.50553,-1.43203 z m 273,0.88196 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m 37,-2.82324 c 0,-0.55 -0.66069,-0.12649 -1.4682,0.94113 -0.8075,1.06762 -1.46819,2.39113 -1.46819,2.94113 0,0.55 0.66069,0.12649 1.46819,-0.94113 0.80751,-1.06762 1.4682,-2.39113 1.4682,-2.94113 z M 369.74622,524.60715 c -0.26268,-1.7875 -0.0559,-3.25 0.45953,-3.25 0.51542,0 0.93713,-3.375 0.93713,-7.5 0,-5.57224 0.3417,-7.5 1.3294,-7.5 0.73117,0 1.29367,0.96696 1.25,2.14879 -0.11599,3.13907 2.24607,3.44045 3.3897,0.43249 0.60908,-1.602 1.74955,-2.58128 3.00615,-2.58128 1.11361,0 2.02475,-0.49814 2.02475,-1.10699 0,-0.66279 0.70221,-0.81713 1.75,-0.38462 2.96933,1.22568 7.25,1.50441 7.25,0.47208 0,-0.53926 -0.51974,-0.98047 -1.15499,-0.98047 -0.65863,0 -0.38444,-0.85144 0.63801,-1.98124 1.46102,-1.6144 1.56131,-2.26042 0.54169,-3.48899 -0.68823,-0.82926 -1.66132,-1.25436 -2.16242,-0.94466 -0.5011,0.30969 -2.25011,0.26898 -3.88669,-0.0905 -2.30126,-0.50544 -2.9756,-1.2021 -2.9756,-3.0741 0,-1.74933 0.55149,-2.42054 1.9888,-2.42054 1.50989,0 1.93897,-0.602 1.78189,-2.5 -0.20543,-2.48218 -0.27662,-2.5 -9.9888,-2.5 -9.11522,0 -9.78189,0.13631 -9.78189,2 0,1.11111 0.66667,2 1.5,2 0.825,0 1.5,0.675 1.5,1.5 0,1.81631 -1.63514,1.99117 -2.33772,0.25 -0.27741,-0.6875 -0.53991,0.7975 -0.58333,3.3 -0.0434,2.5025 0.48355,5.14625 1.17105,5.875 1,1.06 1,1.41667 0,1.78333 -0.6875,0.25209 -1.25,1.95834 -1.25,3.79167 0,1.83333 0.5625,3.56157 1.25,3.84054 0.95389,0.38705 0.96934,0.70733 0.0652,1.35204 -0.78372,0.55885 -1.18479,4.38657 -1.18479,11.30742 0,6.98158 0.39419,10.70776 1.18479,11.1995 1.47829,0.91947 2.97781,-6.25628 2.28812,-10.9495 z m -1.99025,-18.43298 c 0.28881,-0.4673 0.94401,-0.59075 1.45601,-0.27432 1.30838,0.80863 1.16106,1.12397 -0.52511,1.12397 -0.80081,0 -1.21971,-0.38234 -0.9309,-0.84965 z m 8.77247,-3.45644 c 0.73629,-2.31985 -1.37992,-3.85771 -4.72786,-3.43577 -1.49379,0.18826 -1.70899,-0.20831 -1.13761,-2.09632 0.92873,-3.06874 1.4089,-3.45758 5.12529,-4.15033 2.55943,-0.47709 3.24057,-0.22229 3.65638,1.36776 0.32811,1.25471 0.008,1.95408 -0.89538,1.95408 -0.77351,0 -1.40638,0.45 -1.40638,1 0,0.55 0.45,1 1,1 1.60711,0 1.15028,3.63039 -0.64425,5.11971 -1.45534,1.20783 -1.5668,1.12061 -0.97019,-0.75913 z m 192.70819,32.58925 c 2.30187,-1.23192 1.63052,-2.94983 -1.15277,-2.94983 -1.27431,0 -1.94098,0.68694 -1.94098,2 0,2.28944 0.37535,2.40467 3.09375,0.94983 z m 6.90625,0.11756 c 0,-0.51294 0.89734,-1.21742 1.99408,-1.56551 3.08901,-0.98041 4.88056,-3.26525 4.30027,-5.48429 -0.65952,-2.52202 -1.51034,-2.54139 -3.73332,-0.085 -0.96192,1.06291 -2.32252,1.71246 -3.02356,1.44344 -0.72718,-0.27904 -1.53996,0.50155 -1.89239,1.81744 -0.97134,3.62666 -0.76148,4.80653 0.85492,4.80653 0.825,0 1.5,-0.41968 1.5,-0.93261 z m 83.45729,0.002 c 0.31644,-0.512 0.11799,-1.21356 -0.44098,-1.55902 -0.55897,-0.34546 -1.01631,0.0734 -1.01631,0.9309 0,1.75653 0.60006,2.01516 1.45729,0.62812 z m 9.54271,-0.84305 c 0,-0.90254 -0.5906,-1.21368 -1.58179,-0.83333 -0.86998,0.33385 -2.21998,0.60699 -3,0.60699 -0.78001,0 -1.41821,0.375 -1.41821,0.83333 0,0.45834 1.35,0.83334 3,0.83334 1.94476,0 3,-0.50663 3,-1.44033 z m 21,-0.22634 c 0,-1.11111 -0.66667,-2 -1.5,-2 -1.52241,0 -2.05126,2.1154 -0.83333,3.33333 1.26779,1.26779 2.33333,0.65891 2.33333,-1.33333 z m -145.73097,0.34406 c -0.67703,-0.27392 -2.02703,-0.29059 -3,-0.037 -0.97297,0.25354 -0.41903,0.47766 1.23097,0.49804 1.65,0.0204 2.44606,-0.18706 1.76903,-0.46099 z m 237.50846,-0.90076 c 1.22238,-0.85619 2.22251,-2.56619 2.22251,-3.8 0,-1.23382 0.44565,-2.68895 0.99033,-3.23363 0.64855,-0.64855 0.65445,-2.16146 0.0171,-4.38377 -0.53528,-1.86639 -0.86842,-3.47244 -0.74033,-3.56899 1.26458,-0.95323 5.7329,-1.2782 5.7329,-0.41695 0,0.59294 0.47185,0.78645 1.04856,0.43003 1.48648,-0.9187 -0.99142,-3.70589 -2.70877,-3.04688 -0.74492,0.28585 -1.33979,-0.13796 -1.33979,-0.95449 0,-0.80774 0.81029,-1.46862 1.80064,-1.46862 2.81172,0 7.18292,2.35376 7.19156,3.87245 0.006,1.11149 0.29535,1.13379 1.52013,0.11732 1.22405,-1.01587 1.27402,-1.54227 0.26218,-2.76147 -0.68759,-0.82849 -1.11093,-2.56879 -0.94077,-3.86733 0.24238,-1.84961 -0.15957,-2.36097 -1.85579,-2.36097 -1.35345,0 -2.36956,-0.7815 -2.71031,-2.08454 -0.40189,-1.53684 -0.75638,-1.7427 -1.34918,-0.78353 -0.44223,0.71554 -0.35074,1.8472 0.20331,2.51479 1.15115,1.38705 -1.7633,3.38872 -4.80603,3.30083 -1.58232,-0.0457 -1.52649,-0.25422 0.43426,-1.62197 2.86025,-1.99521 2.91149,-3.73183 0.0883,-2.99355 -1.18892,0.31091 -3.04598,0.092 -4.1268,-0.48641 -1.60244,-0.8576 -2.40311,-0.57935 -4.33832,1.50769 -1.30524,1.40767 -2.37318,3.02904 -2.37318,3.60305 0,1.39263 -1.58707,1.31846 -3.9974,-0.18681 -1.63082,-1.01846 -2.26841,-0.93232 -3.70072,0.5 -1.6406,1.6406 -1.56356,1.73045 1.48383,1.73045 1.76786,0 3.21429,0.45 3.21429,1 0,0.55 0.89619,1 1.99153,1 1.09534,0 2.55358,0.9 3.24054,2 0.68696,1.1 2.04078,2 3.00848,2 1.27164,0 1.75945,0.7978 1.75945,2.87756 0,3.79093 -2.43015,5.96313 -3.84427,3.43622 -0.55315,-0.98841 -1.3286,-1.47424 -1.72323,-1.07962 -0.39462,0.39463 -0.12937,1.42616 0.58945,2.29229 1.11285,1.34089 0.98549,1.65884 -0.8575,2.1408 -2.5781,0.67419 -2.65416,1.18858 -0.60775,4.11024 1.84992,2.64113 2.3158,2.70054 5.22079,0.66581 z m -0.27749,-22.4433 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -224.5,19.89301 c 0,-0.49115 -0.675,-0.89301 -1.5,-0.89301 -0.825,0 -1.5,0.66088 -1.5,1.46862 0,0.89459 0.58629,1.24363 1.5,0.89301 0.825,-0.31659 1.5,-0.97746 1.5,-1.46862 z m 239.79308,-0.0571 c 0.24739,-1.28459 -0.44901,-1.6194 -3.20571,-1.54126 -3.34431,0.0948 -3.43524,0.18841 -1.80456,1.858 2.06084,2.11003 4.57351,1.95118 5.01027,-0.31674 z m -233.39609,-0.003 c -0.28326,-0.45791 -0.93847,-0.83291 -1.45601,-0.83291 -0.51754,0 -0.94098,0.375 -0.94098,0.83333 0,0.45834 0.65521,0.83334 1.45601,0.83334 0.80081,0 1.22425,-0.375 0.94098,-0.83334 z m -15.39699,-0.83291 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 114,0.55902 c 0,-1.05548 -1.91911,-1.49891 -2.48992,-0.57533 -0.34546,0.55897 0.0734,1.01631 0.9309,1.01631 0.85746,0 1.55902,-0.19844 1.55902,-0.44098 z m 6.4555,-0.48702 c 0.74772,-1.20984 -3.0821,-2.42081 -4.63017,-1.46404 -0.82677,0.51097 -0.59947,0.96931 0.74105,1.49426 2.66576,1.04392 3.22797,1.03955 3.88912,-0.0302 z m 119.5445,-0.63102 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m -103,-0.57193 c 0,-0.38631 -0.5625,-0.93062 -1.25,-1.20959 -1.88956,-0.76671 1.31062,-2.79107 3.55823,-2.25086 1.26818,0.30481 1.71274,-0.0612 1.48851,-1.22551 -0.43688,-2.26855 -3.8889,-2.76979 -5.03021,-0.73039 -0.51038,0.912 -2.12914,2.11685 -3.59725,2.67744 -2.38118,0.90926 -2.4914,1.14998 -1.0212,2.23028 1.77643,1.30533 5.85192,1.65955 5.85192,0.50863 z m -266.20326,-2.05214 c 0.2384,-1.23787 -0.2038,-1.52322 -1.73851,-1.12189 -1.13203,0.29604 -2.05823,1.19375 -2.05823,1.99494 0,1.99924 3.39389,1.21882 3.79674,-0.87305 z m 152.79493,-2.55858 c -0.82313,-0.82313 -3.55308,2.99509 -2.89859,4.05409 0.28366,0.45895 1.18965,-0.12768 2.01333,-1.30364 0.82367,-1.17597 1.22204,-2.41366 0.88526,-2.75045 z m 86.89315,-0.18923 c 0.81519,-3.71153 3.03156,-5.77178 3.86701,-3.59462 0.32197,0.83903 1.13371,1.52552 1.80388,1.52552 0.67016,0 -0.0311,-1.30424 -1.55829,-2.89832 -2.70227,-2.82056 -2.73103,-2.96813 -1.07209,-5.5 1.95393,-2.98207 3.00613,-3.26506 3.86062,-1.0383 0.32996,0.85986 1.0531,1.28331 1.60699,0.94099 1.51724,-0.93771 1.20888,-2.50437 -0.49294,-2.50437 -5.57703,0 4.95996,-13.59869 14.23503,-18.37127 2.29609,-1.18147 3.16682,-2.28045 3,-3.78644 -0.12927,-1.167 0.39918,-2.34533 1.17432,-2.61851 0.9655,-0.34026 1.21546,0.009 0.79367,1.10774 -0.83829,2.18457 0.77972,2.99667 2.30612,1.15747 0.67966,-0.81895 2.02555,-1.48899 2.99086,-1.48899 2.17118,0 4.50748,-2.56833 3.11766,-3.42728 -0.53871,-0.33294 -1.26212,-0.148 -1.60758,0.41097 -0.94248,1.52496 -2.51008,1.22289 -2.51008,-0.48369 0,-2.04608 -0.35353,-1.96157 -7.32131,1.75 -7.28579,3.88097 -17.67869,13.20336 -17.67869,15.85771 0,1.04076 -0.63055,1.89229 -1.40122,1.89229 -1.62785,0 -4.98745,5.375 -7.76655,12.42565 -1.78431,4.52682 -1.8093,5.00768 -0.30405,5.85006 1.12673,0.63055 1.45127,1.67003 1.03689,3.32106 -0.33175,1.32178 -0.18036,2.40323 0.33642,2.40323 0.51678,0 1.22928,-1.31891 1.58333,-2.9309 z m 134.51518,2.48992 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 3.5,-1.55902 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 79.48469,-6.75 c 0.008,-1.7875 0.41283,-3.25 0.89868,-3.25 0.48585,0 1.11169,-0.87311 1.39075,-1.94025 0.43001,-1.64434 0.23679,-1.77126 -1.26688,-0.8322 -1.95338,1.21991 -5.00724,5.92761 -5.00724,7.71895 0,0.62585 0.5625,1.74412 1.25,2.48504 1.64693,1.77491 2.71431,0.14281 2.73469,-4.18154 z m -202.48469,2.75 c -0.33992,-0.55 -1.37898,-0.99311 -2.30902,-0.98469 -1.45727,0.0132 -1.48367,0.14929 -0.19098,0.98469 1.95837,1.2656 3.28218,1.2656 2.5,0 z m 76.5,-1.5 c 0,-2.12183 -0.46273,-2.5 -3.05902,-2.5 -1.7847,0 -2.80156,0.41658 -2.44098,1 0.33992,0.55 1.49148,1 2.55902,1 1.06754,0 1.94098,0.675 1.94098,1.5 0,0.825 0.225,1.5 0.5,1.5 0.275,0 0.5,-1.125 0.5,-2.5 z M 419.2171,517.88071 c 1.454,0.46148 1.92578,0.13096 1.92578,-1.34918 0,-1.07822 0.70352,-2.23037 1.56338,-2.56033 1.88756,-0.72432 0.95992,-2.61405 -1.2832,-2.61405 -1.49686,0 -7.28018,5.57142 -7.28018,7.01344 0,1.59447 1.46934,1.89928 2.26883,0.47067 0.55327,-0.98864 1.59408,-1.34501 2.80539,-0.96055 z m 356.00078,1.20144 c -0.12369,-1.1957 -1.49529,-0.96414 -1.925,0.325 -0.22,0.66 0.14,1.02 0.8,0.8 0.66,-0.22 1.16625,-0.72625 1.125,-1.125 z m 19.425,0.275 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -220.13837,-1.5 c -0.31659,-0.825 -1.28847,-1.5 -2.15975,-1.5 -1.28342,0 -1.21565,0.27871 0.35699,1.4682 2.44339,1.84809 2.50011,1.84909 1.80276,0.0318 z m 111.13837,-0.5 c 1.37691,-1.52147 1.47381,-1.99634 0.40499,-1.98469 -2.24279,0.0244 -4.22265,1.66168 -3.47409,2.87289 0.90231,1.45996 0.95885,1.4436 3.0691,-0.8882 z m -136.72917,-0.1875 c -0.2177,-0.65313 -0.93051,-1.36573 -1.58401,-1.58356 -0.73075,-0.24358 -0.95424,0.21359 -0.58051,1.1875 0.69752,1.81771 2.76448,2.19592 2.16452,0.39606 z m -135.35754,-2.44714 c 0.58935,-1.53583 -0.98167,-2.75015 -2.41329,-1.86536 -0.55,0.33992 -1,-0.0354 -1,-0.83399 0,-2.04381 -2.2674,-2.67487 -4.29189,-1.19452 -1.74031,1.27254 -2.47488,5.12043 -0.77721,4.07121 0.512,-0.31643 1.1672,-0.19298 1.45601,0.27432 0.83325,1.34822 6.47487,0.98557 7.02638,-0.45166 z m 128.31588,0.0305 c -0.33229,-0.33229 -1.1948,-0.36782 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19292 1.3125,-0.52522 z m -56.04606,-3.58333 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 262.39868,1.1875 c 1.37896,0 1.10479,-2.75805 -0.33179,-3.33772 -0.74674,-0.30132 -0.54544,-0.53617 0.5,-0.58333 1.3645,-0.0616 1.75,-0.96784 1.75,-4.11413 0,-2.21935 0.72675,-5.14435 1.61501,-6.5 1.161,-1.77191 1.26446,-2.46482 0.36803,-2.46482 -0.96151,0 -6.33879,2.79752 -8.80884,4.58279 -0.77488,0.56006 -0.80715,7.30839 -0.0327,6.82973 0.77493,-0.47893 1.26889,1.91472 1.11565,5.40623 -0.0335,0.76359 0.56605,1.07932 1.42425,0.75 0.81521,-0.31281 1.89537,-0.56875 2.40039,-0.56875 z m -204.99842,-2 c 2.21789,0 2.96033,-3.11557 1.42574,-5.98297 -1.38571,-2.58923 -1.86233,-2.10164 -4.07446,4.16819 -1.04509,2.96209 -1.13051,3.91064 -0.27514,3.05527 0.68227,-0.68227 1.99801,-1.24049 2.92386,-1.24049 z m 144.02913,-1.2875 c -0.81667,-0.81667 -1.1125,-0.70476 -1.1125,0.42083 0,1.98786 1.3447,3.33256 1.84167,1.84167 0.21083,-0.6325 -0.1173,-1.65063 -0.72917,-2.2625 z m -269.1125,-0.27152 c 0,-0.88922 0.47766,-1.2638 1.1118,-0.87188 1.19936,0.74124 3.05984,-1.48236 2.28682,-2.73314 -0.25818,-0.41775 -1.47788,-0.37612 -2.71045,0.0925 -1.65026,0.62742 -2.87443,0.33913 -4.64383,-1.09364 -2.18826,-1.77195 -2.48468,-1.79937 -3.31978,-0.30711 -0.66566,1.18946 -0.29468,2.30097 1.35354,4.05542 2.56181,2.72692 5.9219,3.21366 5.9219,0.85785 z m 10,1.16601 c 0,-0.21616 -0.69837,-0.661 -1.55194,-0.98855 -0.88992,-0.34149 -1.29132,-0.17385 -0.94098,0.39301 0.58726,0.95021 2.49292,1.40545 2.49292,0.59554 z m 125,-2.24916 c 0,-1.1249 -0.43068,-1.1977 -2.02801,-0.34284 -1.1154,0.59695 -1.77599,1.49313 -1.46797,1.99151 0.80779,1.30704 3.49598,0.0393 3.49598,-1.64867 z m 8.80833,1.56717 c -0.19708,-0.59125 -0.78583,-1.075 -1.30833,-1.075 -0.5225,0 -1.11125,0.48375 -1.30833,1.075 -0.19709,0.59125 0.39166,1.075 1.30833,1.075 0.91667,0 1.50542,-0.48375 1.30833,-1.075 z m -131.79302,-3.675 c 0.0115,-2.06337 0.24494,-2.38701 0.93497,-1.29621 0.78035,1.23358 1.29795,1.25132 3.41722,0.11712 1.37367,-0.73516 3.20294,-1.06599 4.06504,-0.73517 0.8621,0.33082 1.56746,0.22071 1.56746,-0.24468 0,-1.1566 -2.55985,-3.19788 -3.20332,-2.55441 -1.16323,1.16323 -5.87921,-1.5716 -5.59222,-3.24296 0.16255,-0.94665 -0.39629,-1.86457 -1.24186,-2.03982 -2.40718,-0.4989 -4.24515,5.63717 -2.87006,9.58174 1.35786,3.89517 2.90217,4.11412 2.92277,0.41439 z m -28.01531,-0.75 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 51.80963,-0.25 c -0.40593,-2.10784 -2.18068,-1.97493 -2.63295,0.19718 -0.18865,0.90598 0.36259,1.55282 1.32332,1.55282 1.02996,0 1.52043,-0.6554 1.30963,-1.75 z m 18.17506,0.5 c -0.008,-0.6875 -0.45153,-1.925 -0.98469,-2.75 -0.75538,-1.16888 -0.97275,-0.89294 -0.98469,1.25 -0.008,1.5125 0.43469,2.75 0.98469,2.75 0.55,0 0.99311,-0.5625 0.98469,-1.25 z m 16.61948,-1.47917 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69478 0.14921,-1.53512 -0.18308,-1.86741 z m 201.93631,-1.53213 c 0.51954,-2.10351 0.35774,-2.63626 -0.67923,-2.23637 -0.74869,0.28872 -1.41052,1.89558 -1.47074,3.5708 -0.12625,3.51206 1.14834,2.72096 2.14997,-1.33443 z m 113.45952,2.65431 c 0,-0.21616 -0.92656,-0.39301 -2.05902,-0.39301 -1.13246,0 -1.79305,0.43035 -1.46797,0.95633 0.53361,0.8634 3.52699,0.38531 3.52699,-0.56332 z m -253,-0.89301 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 135,-0.12245 c 0,-1.32879 -0.27149,-1.39712 -1.5,-0.37755 -0.825,0.68469 -1.5,1.41479 -1.5,1.62245 0,0.20765 0.675,0.37755 1.5,0.37755 0.825,0 1.5,-0.7301 1.5,-1.62245 z m 130.65492,-1.83442 c -0.32568,-0.84872 -1.06009,-1.54313 -1.63201,-1.54313 -0.65816,0 -0.5918,0.71745 0.18076,1.95452 1.37978,2.20937 2.35126,1.93398 1.45125,-0.41139 z m -39.65492,0.45687 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m -362.58292,-1.64451 c 0.25115,-0.65449 -0.18995,-1.43809 -0.98022,-1.74135 -0.79027,-0.30325 -1.43686,-1.28864 -1.43686,-2.18974 0,-1.09965 0.53286,-1.4339 1.62052,-1.01653 1.24615,0.4782 1.49879,0.15639 1.09362,-1.39301 -0.46933,-1.79469 -0.0454,-2.01486 3.87948,-2.01486 5.03473,0 6.01442,1.71363 1.25011,2.18664 -2.38654,0.23694 -3.23856,0.86207 -3.49372,2.56336 -0.37857,2.52409 0.74586,2.82074 3.96573,1.04623 1.20134,-0.66207 2.85926,-1.22457 3.68426,-1.25 1.08972,-0.0336 1.54881,-1.34278 1.67845,-4.78645 l 0.17845,-4.74021 -13.80895,0.0441 -13.80894,0.0441 1.13049,2.43833 c 0.93764,2.02237 1.85554,2.43967 5.3805,2.44614 3.11458,0.006 4.25,-0.39293 4.25,-1.49219 0,-2.06565 1.72374,-1.88472 2.89504,0.30388 1.25698,2.34869 0.21777,3.90849 -2.89504,4.3453 -1.95356,0.27414 -2.56479,1.01152 -2.79641,3.37354 -0.28557,2.91226 -0.14924,3.02273 3.73023,3.02273 2.21464,0 4.23211,-0.53548 4.48326,-1.18997 z m 133.94455,0.14451 c 0.31658,-0.825 0.32993,-2.14021 0.0297,-2.92268 -0.79112,-2.06163 -3.13383,-2.69065 -3.77716,-1.01418 -0.30328,0.79027 -0.089,1.43686 0.47623,1.43686 0.5652,0 0.74952,0.45 0.4096,1 -0.70251,1.13668 0.19936,3 1.45203,3 0.4587,0 1.09301,-0.675 1.4096,-1.5 z m 149.63837,-0.61803 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m -234.5,0.11803 c -0.33992,-0.55 -1.06803,-1 -1.61803,-1 -0.55,0 -0.72189,0.45 -0.38197,1 0.33992,0.55 1.06803,1 1.61803,1 0.55,0 0.72189,-0.45 0.38197,-1 z m 325.07169,-1.76164 c -0.84749,-0.84749 -8.57169,-0.89597 -8.57169,-0.0538 0,0.44849 1.35,0.81543 3,0.81543 1.65,0 3,0.5051 3,1.12245 0,0.76759 0.48185,0.72254 1.52417,-0.14251 0.83829,-0.69572 1.30968,-1.47943 1.04752,-1.74158 z m 5.15006,-0.23836 c 1.44729,0 2.42445,-2.79161 1.23458,-3.52699 -0.52598,-0.32508 -0.95633,-0.11449 -0.95633,0.46797 0,0.58246 -0.65917,1.05902 -1.46482,1.05902 -0.80565,0 -1.93065,0.87042 -2.5,1.93426 -1.55631,2.90799 -1.25067,3.57073 0.79356,1.72073 1.00581,-0.91025 2.30766,-1.65499 2.89301,-1.65499 z m 8.27825,2 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -332.31689,-2.1875 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.33229 0.36781,-1.1948 0.0789,-1.91667 z m 213.31689,1.1875 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 116,0 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m -355,-1.5 c 1.05209,-1.2677 0.84361,-1.5 -1.34617,-1.5 -1.89232,0 -2.43584,0.40451 -2.01546,1.5 0.31659,0.825 0.92236,1.5 1.34617,1.5 0.42382,0 1.33077,-0.675 2.01546,-1.5 z m -46,-0.46482 c 0,-0.53065 -0.94831,-1.47233 -2.10736,-2.09264 -1.59916,-0.85584 -2.38291,-0.82883 -3.25,0.112 -0.88479,0.96003 -0.73919,1.09758 0.64521,0.6095 1.11294,-0.39238 2.00271,-0.0704 2.35699,0.85282 0.63268,1.64872 2.35516,2.0278 2.35516,0.51832 z m 40,0.52384 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 22.80833,-0.63402 c -0.19708,-0.59125 -0.78583,-1.075 -1.30833,-1.075 -0.5225,0 -1.11125,0.48375 -1.30833,1.075 -0.19709,0.59125 0.39166,1.075 1.30833,1.075 0.91667,0 1.50542,-0.48375 1.30833,-1.075 z m 226.19167,-0.925 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -299.55279,-2.08541 c -0.32197,-0.52097 -1.01165,-0.68378 -1.53262,-0.3618 -0.52097,0.32197 -0.68378,1.01165 -0.3618,1.53262 0.32197,0.52097 1.01165,0.68378 1.53262,0.3618 0.52097,-0.32197 0.68378,-1.01165 0.3618,-1.53262 z m 306.02728,-1.5569 c -1.00567,-0.73536 -2.01923,-1.14628 -2.25237,-0.91314 -0.7431,0.7431 2.24021,3.36841 3.17937,2.79785 0.49582,-0.30123 0.0787,-1.14935 -0.927,-1.88471 z m -236.01065,0.5838 c 1.08161,1.75009 3.2289,-1.09799 2.74324,-3.63855 -0.45683,-2.38978 -3.14715,-3.25184 -3.28603,-1.05294 -0.0632,1 -0.17982,1 -0.58333,0 -0.75643,-1.87463 -14.00439,-1.72859 -14.00439,0.15439 0,1.07173 0.40289,1.15278 1.70087,0.34218 1.87036,-1.16806 4.9658,-0.40629 4.9658,1.22204 0,0.56727 -0.675,1.03139 -1.5,1.03139 -0.825,0 -1.5,0.40718 -1.5,0.90484 0,0.49767 1.8,0.66342 4,0.36833 2.82553,-0.37898 4,-0.16828 4,0.71761 0,0.96621 0.32391,0.98529 1.41097,0.0831 0.95416,-0.79188 1.61879,-0.83475 2.05287,-0.1324 z m 29.53616,-1.93836 c 0,-0.48336 -0.9,-0.81104 -2,-0.72818 -2.23587,0.16843 -2.66605,1.31946 -0.75,2.00677 1.48552,0.53287 2.75,-0.055 2.75,-1.27859 z m 216,0.99687 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -311.34409,-2.4922 c -1.78623,-3.85118 -3.57168,-3.05784 -2.04892,0.91041 0.33384,0.86999 1.1915,1.58179 1.90591,1.58179 1.02698,0 1.05692,-0.52177 0.14301,-2.4922 z m 41.70572,0.9922 c 0.31658,-0.825 1.26472,-1.5 2.10699,-1.5 0.84226,0 1.53138,0.675 1.53138,1.5 0,1.65669 2.53932,2.05441 3.47285,0.54393 0.94006,-1.52105 -3.65917,-3.94277 -7.28287,-3.83479 -1.99059,0.0593 -2.81346,0.40553 -2.06431,0.86853 0.98763,0.61039 0.9747,1.09646 -0.0624,2.34611 -1.09305,1.31703 -1.05896,1.57622 0.2073,1.57622 0.8335,0 1.77447,-0.675 2.09106,-1.5 z m 31.99948,-0.78832 c -0.0764,-0.94142 0.33611,-1.71168 0.91667,-1.71168 0.58055,0 0.79937,-0.25618 0.48627,-0.56929 -0.87809,-0.87809 -4.76405,1.8815 -4.76405,3.38316 0,0.74041 0.7778,1.17205 1.75,0.97114 0.9625,-0.1989 1.6875,-1.1319 1.61111,-2.07333 z m 251.63889,-0.80217 c 0,-1.00565 -3.05799,-2.19544 -6.31331,-2.45635 -2.15068,-0.17238 -2.67656,0.13084 -2.23274,1.28742 0.3193,0.83211 0.13436,2.05055 -0.41099,2.70766 -0.76478,0.9215 0.1461,0.9617 3.98274,0.17577 2.73587,-0.56043 4.9743,-1.33196 4.9743,-1.7145 z M 475.9604,489.06615 c 0.46843,-2.43233 -4.95087,-2.32637 -6.48287,0.12675 -1.03744,1.66121 -0.79939,1.82371 2.50365,1.70901 2.58316,-0.0897 3.74631,-0.62631 3.97922,-1.83576 z m 316.49984,0.541 c 1.44751,-1.28271 2.09159,-1.41622 2.41207,-0.5 0.24048,0.6875 1.10463,1.25 1.92033,1.25 1.02795,0 1.38598,-0.84392 1.16666,-2.75 -0.30095,-2.61554 -0.5609,-2.74243 -5.31642,-2.59514 -9.47525,0.29347 -11.5,0.5479 -11.5,1.44514 0,0.495 -0.70156,0.9 -1.55902,0.9 -0.85746,0 -1.2809,-0.45 -0.94098,-1 0.33992,-0.55 0.029,-0.99968 -0.69098,-0.99929 -0.71996,3.8e-4 -1.37392,1.12538 -1.45323,2.5 -0.18205,3.15502 2.73235,3.39443 5.47568,0.44981 1.88139,-2.01944 1.91692,-2.02068 2.42318,-0.0847 0.28259,1.08061 1.5784,2.1666 2.87957,2.4133 1.30118,0.24669 2.55535,0.50982 2.78704,0.58472 0.23169,0.0749 1.30994,-0.65132 2.3961,-1.61382 z m -395.56689,-1 c 0.24412,-0.73318 -0.44516,-1.25 -1.66714,-1.25 -1.22833,0 -2.08333,0.64569 -2.08333,1.57332 0,1.83788 3.12044,1.56887 3.75047,-0.32332 z m 324.24953,0.75 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m 10.41655,-0.64313 c 0.8294,-2.16139 0.55039,-2.30005 -2.39248,-1.18896 -2.01845,0.76207 -2.20322,1.10724 -1,1.86813 2.07889,1.31463 2.67303,1.19568 3.39248,-0.67917 z m 27.03561,0.23181 c -1.96248,-1.43501 -3.45216,-1.23204 -3.45216,0.47034 0,0.51754 1.21101,0.94098 2.69113,0.94098 2.56202,0 2.59853,-0.0677 0.76103,-1.41132 z m 10.51266,-0.52294 c 1.54467,-2.88625 1.37454,-3.06574 -2.9058,-3.06574 -4.41246,0 -5.80557,1.24482 -3.86024,3.44934 1.85348,2.10042 5.54875,1.89092 6.76604,-0.3836 z m 4.47294,0.35364 c 0.86934,-0.86934 1.32493,-1.99434 1.01241,-2.5 -1.01397,-1.64064 -2.45017,-0.97263 -2.45017,1.13964 0,1.13246 -0.45,1.7809 -1,1.44098 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,1.54199 1.61997,1.2962 3.43776,-0.5216 z m -67.04475,-1.00117 c 0.85418,-2.22596 0.78788,-2.41821 -0.83399,-2.41821 -1.76659,0 -2.89606,1.64564 -2.05902,3 0.91226,1.47607 2.20294,1.21651 2.89301,-0.58179 z m 48.60699,-0.41821 2.5,-1.95553 -3.71482,-0.0222 c -2.70597,-0.0162 -4.0055,0.52092 -4.78518,1.97777 -0.92608,1.73041 -0.76233,1.997 1.21482,1.97776 1.25685,-0.0122 3.41018,-0.90222 4.78518,-1.97776 z m 56.14383,0.3267 c 1.33302,-1.60619 0.24217,-3.3267 -2.10923,-3.3267 -1.35503,0 -1.70798,0.53301 -1.32435,2 0.39573,1.51327 0.0307,2 -1.5,2 -1.47139,0 -1.89193,-0.50127 -1.54227,-1.83836 0.36988,-1.41442 -0.0421,-1.79984 -1.78651,-1.67133 -1.24699,0.0919 -2.44314,0.69469 -2.65811,1.33961 -0.89003,2.67009 8.83991,4.0037 10.92047,1.49678 z m -64.41466,0.0691 c -0.33229,-0.33229 -1.1948,-0.36782 -1.91667,-0.079 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19292 1.3125,-0.52522 z m -196.14077,-4.14078 c -1.0924,-1.0924 -1.84148,0.64486 -1.05718,2.45181 0.74368,1.71337 0.79759,1.7118 1.21194,-0.0351 0.2385,-1.00555 0.16886,-2.09305 -0.15476,-2.41667 z m 188.9116,2.74494 c -0.33992,-0.55 -1.51803,-1 -2.61803,-1 -1.1,0 -1.72189,0.45 -1.38197,1 0.33992,0.55 1.51803,1 2.61803,1 1.1,0 1.72189,-0.45 1.38197,-1 z m 112,0 c 0.33992,-0.55 -0.28197,-1 -1.38197,-1 -1.1,0 -2.27811,0.45 -2.61803,1 -0.33992,0.55 0.28197,1 1.38197,1 1.1,0 2.27811,-0.45 2.61803,-1 z m -303.7177,-1.8455 c 0.28658,-0.86063 -0.19425,-1.221 -1.33427,-1 -0.98026,0.19002 -1.98391,0.95098 -2.23033,1.691 -0.28658,0.86063 0.19425,1.221 1.33427,1 0.98026,-0.19002 1.98391,-0.95098 2.23033,-1.691 z m 297.94687,1.24133 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31923 -0.56078,0.55619 0.60417,0.60417 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z M 556.59009,483.2717 c -0.32197,-0.52097 -1.01165,-0.68378 -1.53262,-0.3618 -0.52097,0.32197 -0.68378,1.01165 -0.3618,1.53262 0.32197,0.52097 1.01165,0.68378 1.53262,0.3618 0.52097,-0.32197 0.68378,-1.01165 0.3618,-1.53262 z m 145.55279,-0.41459 c 0,-0.69676 1.2375,-1.51388 2.75,-1.81581 2.02901,-0.40504 3.17265,-0.005 4.36206,1.52628 1.29427,1.66615 2.72816,2.07524 7.27381,2.07524 6.05424,0 7.64456,-0.65528 5.8779,-2.42194 -1.45298,-1.45298 -9.67404,-2.94965 -10.07991,-1.83508 -0.17388,0.47749 -1.37627,0.38513 -2.67199,-0.20523 -2.59953,-1.18443 -13.51187,-0.24218 -13.51187,1.16671 0,0.46544 0.24755,1.49135 0.5501,2.27979 0.67455,1.75786 5.4499,1.08319 5.4499,-0.76996 z m -161,-1.5 c 0,-0.55 -0.70156,-1 -1.55902,-1 -0.85746,0 -1.2809,0.45 -0.94098,1 0.33992,0.55 1.04148,1 1.55902,1 0.51754,0 0.94098,-0.45 0.94098,-1 z m 6.28975,-1 c 0.62602,-2.39393 2.97386,-2.59354 5.13115,-0.43624 1.69239,1.69239 3.5791,1.14445 3.5791,-1.03944 0,-0.74671 0.5625,-1.58463 1.25,-1.86204 0.6875,-0.27741 -2.0125,-0.53991 -6,-0.58333 -6.95113,-0.0757 -7.25,0.0172 -7.25,2.25438 0,3.89485 2.39038,5.10587 3.28975,1.66667 z m 15.12846,1.39301 c 2.43449,-0.9342 1.87474,-2.39301 -0.91821,-2.39301 -2.42787,0 -3.19294,0.97373 -1.83333,2.33333 0.81166,0.81167 0.79296,0.81126 2.75154,0.0597 z m -26.89328,-1.12568 c -1.08628,-0.27537 -2.47877,-1.18952 -3.09441,-2.03146 -0.7722,-1.05605 -1.9415,-1.32444 -3.77043,-0.86541 -3.29943,0.82811 -4.23601,0.69926 -3.88859,-0.53496 0.16633,-0.59087 -1.57687,-0.69619 -4.5,-0.27187 -6.10648,0.88642 -6.33208,1.16013 -1.62368,1.97 2.1187,0.36443 5.20218,1.02787 6.85218,1.4743 1.65,0.44643 5.025,0.80008 7.5,0.78588 2.475,-0.0142 3.61122,-0.25111 2.52493,-0.52648 z m 38.47507,-2.26733 c 0.90739,-1.69548 0.76049,-2 -0.96482,-2 -1.36851,0 -2.03518,0.65514 -2.03518,2 0,1.1 0.43417,2 0.96482,2 0.53065,0 1.44648,-0.9 2.03518,-2 z m -34,-1 c 0,-0.55 -1.0125,-0.99311 -2.25,-0.98469 -1.81944,0.0124 -1.96296,0.20082 -0.75,0.98469 1.93876,1.25292 3,1.25292 3,0 z m -28.27083,-0.60417 c -0.33229,-0.33229 -1.1948,-0.36782 -1.91667,-0.0789 -0.79773,0.31923 -0.56078,0.55619 0.60417,0.60417 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m -516.0625,223.9375 c -0.366667,-0.36666 -0.66668,-47.95416 -0.666696,-105.75 l -3e-5,-105.08333 -3.495271,-2.78888 c -5.713663,-4.55894 -18.083267,-10.78709 -27.329427,-13.76049 -9.664936,-3.10807 -11.835532,-5.08374 -10.228667,-9.31011 l 1.003922,-2.64052 h 37.860503 c 20.823277,0 58.755339,-0.29694 84.293469,-0.65986 43.217057,-0.61415 46.552867,-0.53994 48.164247,1.07143 1.52871,1.52872 1.73128,4.12154 1.73128,22.15986 v 20.42857 h 22.97695 c 22.74759,0 22.99088,0.0225 24.37312,2.25 0.76789,1.2375 12.36577,29.4123 25.77305,62.61067 l 24.37688,60.36066 0.5,-65.86066 0.5,-65.86067 9.56969,-0.28404 9.56968,-0.28403 37.93032,43.67285 c 20.86167,24.02006 41.53031,47.89264 45.93031,53.05016 l 8,9.37731 0.2611,-41.67512 c 0.23293,-37.17841 0.087,-41.86748 -1.35231,-43.45792 -2.36608,-2.61448 -16.00804,-9.45714 -22.72476,-11.39848 -6.18772,-1.78845 -7.27578,-3.00689 -6.2686,-7.0198 l 0.63112,-2.5146 25.72673,0.26684 25.72672,0.26683 0.6511,5.5 c 0.35811,3.025 0.69561,47.6324 0.75,99.12756 0.0853,80.71185 -0.10139,93.79378 -1.35306,94.83257 -3.35806,2.78694 0.36458,6.52603 -75.40782,-75.741 -18.34788,-19.92052 -33.53538,-36.21913 -33.75,-36.21913 -0.21462,0 -0.39022,14.38617 -0.39022,31.96927 v 31.96927 l 5.32888,3.40885 c 2.93089,1.87486 9.26297,4.90322 14.07129,6.72968 9.23596,3.50831 11.41208,5.5367 9.59084,8.93972 -1.04527,1.9531 -1.89117,2.00837 -26.78518,1.75 l -25.70583,-0.26679 -0.30226,-5.25 -0.30226,-5.25 -33.69774,-0.0153 c -18.53376,-0.008 -34.18056,-0.34592 -34.77068,-0.75 -3.58491,-2.45474 -1.87619,-7.74025 2.78499,-8.61469 3.90417,-0.73243 17.24859,-6.93829 18.18808,-8.45841 0.35004,-0.56637 -0.0957,-2.85942 -0.99043,-5.09567 l -1.62686,-4.06593 H 150.75 126.57428 l -1.72583,4.65653 c -0.94921,2.5611 -1.60878,4.76572 -1.4657,4.89917 0.93825,0.87513 12.9716,6.45618 16.26013,7.54142 2.2,0.72601 4.5625,1.73127 5.25,2.2339 1.83681,1.34289 1.52191,5.45422 -0.5,6.52789 -2.19657,1.16642 -46.302097,1.93098 -47.999997,0.83207 -1.83357,-1.18671 -1.70351,-1.73621 3.679357,-15.54531 2.71115,-6.95512 7.7014,-19.84567 11.08945,-28.64567 3.38805,-8.8 8.33805,-21.625 11,-28.5 2.66195,-6.875 7.59538,-19.7 10.96318,-28.5 3.36779,-8.8 7.86931,-20.39696 10.00337,-25.77102 l 3.88011,-9.77102 -2.18273,-1.42716 c -2.76828,-1.81 -11.10325,-5.50422 -14.83067,-6.57323 l -2.85207,-0.81796 v 14.7302 c 0,10.12348 -0.37529,15.10548 -1.2,15.93019 -1.35561,1.35561 -6.41771,1.62757 -7.18504,0.38602 -0.27668,-0.44769 -1.39166,-5.06019 -2.47771,-10.25 -2.41598,-11.54496 -6.27284,-23.21273 -10.54437,-31.89878 l -3.21481,-6.53724 -20.189037,-0.27071 -20.18903,-0.2707 v 31.0207 31.02071 h 24.3 c 17.566667,0 24.632507,0.33251 25.499997,1.2 1.26365,1.26365 1.77159,27.14687 0.59301,30.21821 -0.531,1.38377 -3.72332,1.58179 -25.499997,1.58179 h -24.89301 v 40.8751 40.8751 l 7.44247,5.14498 c 7.95,5.49583 17.3389,9.8721 27.05753,12.61183 8.376077,2.36125 10.512127,5.48086 6.499997,9.49299 -1.94904,1.94904 -3.333327,2 -54.333327,2 -28.783337,0 -52.633337,-0.3 -53.000003,-0.66667 z m 4.333333,-5.33333 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 95.25,-1.66228 c -0.6875,-0.27741 -1.8125,-0.27741 -2.5,0 -0.6875,0.27741 -0.125,0.50439 1.25,0.50439 1.375,0 1.9375,-0.22698 1.25,-0.50439 z m -93.75,-1.33772 c 0.339919,-0.55 0.141476,-1 -0.440983,-1 -0.582459,0 -1.059017,0.45 -1.059017,1 0,0.55 0.198442,1 0.440983,1 0.242541,0 0.719098,-0.45 1.059017,-1 z m 81.575,-0.275 c -0.12369,-1.1957 -1.49529,-0.96414 -1.925,0.325 -0.22,0.66 0.14,1.02 0.8,0.8 0.66,-0.22 1.16625,-0.72625 1.125,-1.125 z m -5.075,-1.225 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -0.825,0 -1.5,0.675 -1.5,1.5 0,0.825 0.675,1.5 1.5,1.5 0.825,0 1.5,-0.675 1.5,-1.5 z m -23.60884,-2.37973 c 1.62853,-1.79951 1.56047,-1.90056 -1.59502,-2.36782 -4.6343,-0.68625 -6.00355,-0.009 -4.74264,2.34751 1.29748,2.42438 4.15372,2.43353 6.33766,0.0203 z m -51.39116,-3.12027 c 0,-1.65 -0.239501,-3 -0.532224,-3 -0.800838,0 -2.298368,4.3889 -1.791346,5.25 1.03906,1.76469 2.32357,0.52085 2.32357,-2.25 z m 52.5691,-3.1118 c 0.97568,-1.5787 -1.73116,-2.99859 -3.27455,-1.71769 -0.69989,0.58086 -1.02593,1.45512 -0.72452,1.9428 0.76733,1.24156 3.17642,1.10595 3.99907,-0.22511 z m -3.83993,-7.49237 c -0.3323,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 299.265857,-6.14583 c 0.003,-0.6875 -0.33253,-1.24311 -0.74503,-1.23469 -1.94536,0.0397 -3.337,1.93568 -3.7136,5.05935 l -0.41296,3.42534 2.43331,-3 c 1.33833,-1.65 2.43555,-3.5625 2.43828,-4.25 z m -8.07398,-4.19113 c -0.0481,-1.55992 -0.30056,-1.97329 -0.64663,-1.05887 -0.31223,0.825 -1.13485,1.83644 -1.82805,2.24764 -0.7153,0.42432 -1.01719,1.67753 -0.69807,2.89786 0.5379,2.05692 0.62064,2.07042 1.907,0.31123 0.73958,-1.01144 1.30917,-2.99048 1.26575,-4.39786 z m 2.57895,4.94113 c -0.33992,-0.55 -1.04148,-1 -1.55902,-1 -0.51754,0 -0.94098,0.45 -0.94098,1 0,0.55 0.70156,1 1.55902,1 0.85746,0 1.2809,-0.45 0.94098,-1 z m -7.68045,-5.82833 c 0.23249,-1.58001 -0.19888,-2.17167 -1.58333,-2.17167 -2.68644,0 -3.32799,0.96 -2.13333,3.19225 1.28919,2.40887 3.293,1.85863 3.71666,-1.02058 z m 9.18045,1.82833 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -110.93555,-4.116 c 1.59941,-0.0762 1.85379,-0.26934 0.74098,-0.56265 -0.93202,-0.24566 -1.46384,-1.04794 -1.18183,-1.78285 0.73143,-1.90607 -1.43991,-2.93583 -3.1674,-1.50215 -1.20373,0.99901 -1.46839,0.79721 -1.52649,-1.16391 -0.0657,-2.21831 -0.12612,-2.2425 -0.92971,-0.37244 -0.47269,1.1 -0.89106,3.76594 -0.92971,5.92431 l -0.0703,3.92432 2.31445,-2.17432 c 1.27295,-1.19587 3.41045,-2.22651 4.75,-2.29031 z m 28.39105,2.188 c 0.77612,-1.25578 -3.03248,-2.41731 -8.2047,-2.50223 -5.63795,-0.0926 -5.39609,0.97518 0.4992,2.20383 6.45003,1.34428 7.04488,1.36731 7.7055,0.2984 z M 48.142883,661.29813 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 201.999997,-1.44098 c -0.68469,-0.825 -1.62567,-1.5 -2.09106,-1.5 -0.46539,0 -0.58715,0.675 -0.27057,1.5 0.31659,0.825 1.25756,1.5 2.09106,1.5 1.23369,0 1.284,-0.27889 0.27057,-1.5 z m 93.0319,-1.08392 c 1.2313,-3.23854 0.53184,-4.41608 -2.62314,-4.41608 -1.53457,0 -2.74562,-0.7364 -3.19098,-1.94033 -0.39478,-1.06719 -1.05528,-1.96719 -1.46778,-2 -0.4125,-0.0328 -0.72556,-0.39717 -0.6957,-0.80967 0.0299,-0.4125 1.16512,-0.66388 2.52279,-0.55862 1.35767,0.10527 2.22589,-0.20114 1.92939,-0.6809 -0.29651,-0.47975 -0.11286,-1.13572 0.40811,-1.45769 0.52097,-0.32198 1.24118,-0.10977 1.60047,0.47158 1.59433,2.57968 8.88387,-2.1921 7.93169,-5.19215 -0.31984,-1.00772 -0.1012,-1.83222 0.48586,-1.83222 1.56526,0 1.40386,-19.48423 -0.18261,-22.04408 -0.96128,-1.55109 -0.97495,-2.18831 -0.0592,-2.75887 0.81748,-0.50933 1.17227,-4.43548 1.13166,-12.52305 -0.0537,-10.68938 -0.19614,-11.58554 -1.53737,-9.67066 -2.12147,3.02882 -5.49225,2.26066 -5.86949,-1.3376 -0.22308,-2.12777 0.062,-2.69644 1.14362,-2.28138 1.56997,0.60245 1.71205,-0.13341 1.45948,-7.55908 -0.14381,-4.22799 0.0335,-4.6244 1.85494,-4.14807 1.10768,0.28967 2.20296,1.49329 2.43397,2.67473 0.231,1.18143 0.48129,0.41178 0.55619,-1.71035 0.12845,-3.63927 -0.006,-3.82277 -2.36382,-3.23095 -2.25317,0.56551 -2.5,0.32939 -2.5,-2.39159 0,-3.21352 0.85201,-3.76704 2.8,-1.81905 0.93333,0.93333 1.2,0.8404 1.2,-0.41821 0,-2.96946 -1.21665,-4.84247 -4.12118,-6.34446 -1.58333,-0.81878 -2.8788,-2.15213 -2.8788,-2.96301 0,-0.81088 -0.45318,-1.47432 -1.00708,-1.47432 -1.4544,0 -1.06532,41.23373 0.39939,42.32613 0.7935,0.5918 0.75313,0.97 -0.14231,1.33333 -0.6875,0.27897 -1.25,2.09378 -1.25,4.03293 0,2.27221 -0.78143,4.33762 -2.19791,5.80933 -2.28104,2.37 -4.80209,2.31293 -4.80209,-0.10871 0,-1.73166 -2.17406,-1.81199 -3.87076,-0.14301 -1.02424,1.00751 -1.14563,0.74291 -0.62574,-1.36395 0.51367,-2.08165 0.2358,-2.72096 -1.36453,-3.13946 -1.46907,-0.38417 -1.86111,-1.09314 -1.45763,-2.63605 0.6167,-2.35824 -0.59479,-2.75823 -2.60634,-0.86054 -1.06,1 -1.41667,1 -1.78333,0 -0.60256,-1.64332 -3.55659,-1.58398 -7.71872,0.15507 -2.45503,1.02578 -3.66112,1.10676 -4.46788,0.3 -1.66089,-1.66089 -1.34054,0.51374 0.45286,3.07418 1.80802,2.5813 1.02542,4.94978 -1.06286,3.21666 -1.016,-0.84321 -1.47951,-0.6203 -1.97836,0.95144 -0.36099,1.13739 -1.51322,2.05265 -2.5841,2.05265 -1.06293,0 -1.93261,0.45 -1.93261,1 0,0.55 1.575,1 3.5,1 1.925,0 3.5,-0.45 3.5,-1 0,-0.55 0.37206,-1 0.82681,-1 0.45474,0 0.62867,1.35 0.3865,3 -0.49389,3.36505 1.15037,4.05749 2.7109,1.14162 1.58163,-2.95531 5.42802,-4.98811 8.37306,-4.42513 2.93785,0.56161 2.71369,2.28351 -0.29727,2.28351 -2.71739,0 -3.60183,2.08677 -1.52735,3.60366 1.11578,0.81588 1.533,1.93922 1.11999,3.01551 -0.50167,1.30733 -0.9358,1.43767 -1.82542,0.54805 -1.35885,-1.35885 -6.76722,-1.5857 -6.76722,-0.28385 0,0.48585 0.9,1.11872 2,1.40638 3.10678,0.81244 2.35542,2.37692 -1.14155,2.37692 -1.90724,0 -3.67527,0.72992 -4.5,1.85779 -1.7526,2.39683 -1.72063,3.47554 0.10301,3.47554 0.85885,0 1.90557,1.64933 2.53854,4 0.5924,2.2 1.49153,4 1.99808,4 0.50654,0 2.086,-1.2375 3.5099,-2.75 2.38966,-2.53834 2.68793,-2.61798 3.87527,-1.0348 0.92852,1.23808 1.58961,1.41194 2.37655,0.625 0.59961,-0.59961 2.24895,-1.0902 3.6652,-1.0902 1.41625,0 2.575,-0.34561 2.575,-0.76801 0,-1.0905 -2.68743,-1.98199 -5.9748,-1.98199 -1.68521,0 -3.06378,-0.65814 -3.44175,-1.64313 -0.87477,-2.2796 -0.12704,-2.7133 2.18671,-1.26834 2.65247,1.6565 5.21462,0.56927 4.55976,-1.9349 -0.64584,-2.46969 3.18217,-6.72642 4.37695,-4.86716 1.11364,1.733 1.10972,6.09843 -0.006,6.84788 -0.51948,0.34889 -0.75706,1.19665 -0.52797,1.88392 0.30345,0.91036 0.87948,0.78663 2.12188,-0.45577 0.93795,-0.93795 1.70536,-1.37847 1.70536,-0.97894 0,0.39953 0.87164,-0.0624 1.93699,-1.02653 2.23044,-2.01852 4.06301,-1.32691 4.06301,1.53337 0,2.1681 -1.77525,3.15445 -5.95493,3.30867 -1.7669,0.0652 -2.70189,0.63211 -2.64035,1.60093 0.0534,0.8411 -0.78325,1.53554 -1.90472,1.58091 -1.1,0.0445 -3.75343,0.83659 -5.89651,1.7602 -2.14309,0.9236 -4.5714,1.56219 -5.39626,1.41908 -2.14299,-0.37179 -2.49104,1.49128 -0.70622,3.78025 0.84037,1.07776 1.46815,1.50956 1.39505,0.95956 -0.31502,-2.37031 0.20268,-3.5 1.60394,-3.5 1.73449,0 2.01026,3.08974 0.4179,4.6821 -0.77614,0.77614 -0.70812,1.68094 0.24054,3.2 1.54898,2.4803 4.08364,2.73296 6.1987,0.6179 1.71369,-1.71382 3.64272,-1.97859 3.64272,-0.5 0,0.55 0.84752,1 1.88337,1 2.07673,0 3.54652,3.61628 1.88672,4.64209 -1.17009,0.72316 2.95864,4.29998 5.00466,4.33567 0.70111,0.0122 1.71683,-1.14052 2.25715,-2.56168 z m -0.0319,-29.33429 c 0,-3.01578 1.08387,-5.08179 2.66601,-5.08179 0.79861,0 1.19633,0.41372 0.88382,0.91938 -0.31252,0.50566 0.0834,1.57098 0.87978,2.36737 1.26398,1.26399 1.1321,1.59192 -1.03786,2.58062 -3.2664,1.48827 -3.39175,1.45924 -3.39175,-0.78558 z m -4.91408,-2.02869 c -0.87677,-0.54187 -1.01979,-1.34886 -0.42682,-2.40843 0.79186,-1.41497 1.02666,-1.37749 2.09585,0.33456 1.33682,2.14058 0.37422,3.33667 -1.66903,2.07387 z m 3.91408,-4.97131 c 0,-0.50502 -0.25045,-1.57088 -0.55656,-2.36858 -0.346,-0.90167 0.20832,-1.65039 1.46522,-1.97907 2.46729,-0.64521 4.09677,3.01409 1.94835,4.37539 -1.77444,1.12434 -2.85701,1.11383 -2.85701,-0.0277 z m -28.23593,-10.53562 c -0.27272,-1.42665 -0.1386,-2.8147 0.29804,-3.08456 1.20279,-0.74336 2.27872,3.59756 1.16719,4.70909 -0.62583,0.62583 -1.1451,0.0501 -1.46523,-1.62453 z m 5.24272,-1.03799 c -1.74677,-2.10472 0.28627,-4.61512 2.19321,-2.70818 0.66,0.66 2.0475,1.2 3.08333,1.2 2.76911,0 1.50568,2.44689 -1.44604,2.80056 -1.39456,0.16709 -3.09554,-0.40681 -3.8305,-1.29238 z m 26.99321,-1.50818 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -0.55726,-8.37213 c -0.75752,-3.01821 0.10649,-4.73808 2.01279,-4.00656 1.61957,0.62149 1.39731,5.59441 -0.27496,6.15183 -0.60874,0.20292 -1.39077,-0.76245 -1.73783,-2.14527 z m -2.44274,-24.62787 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -305.542707,81.0691 c 0.31644,-0.512 0.11799,-1.21356 -0.44098,-1.55902 -0.55897,-0.34546 -1.01631,0.0734 -1.01631,0.9309 0,1.75653 0.60006,2.01516 1.45729,0.62812 z m -32.95729,-1.90243 c 0,-1.80866 -1.957297,-1.47847 -2.345503,0.39568 -0.215987,1.04271 0.158879,1.49986 1,1.21948 0.740026,-0.24667 1.345503,-0.9735 1.345503,-1.61516 z m 102.001767,-7.0534 c 9.7e-4,-0.87341 1.26351,-2.19275 2.80563,-2.93187 3.19569,-1.53166 5.36151,-5.91249 3.72976,-7.54424 -0.71621,-0.71621 -1.4085,-0.66582 -2.23716,0.16284 -1.80762,1.80762 -3.81472,1.46547 -3.22643,-0.55 0.28093,-0.9625 -0.6291,0.5 -2.02231,3.25 -1.3932,2.75 -2.43067,6.22633 -2.30547,7.72517 0.1252,1.49884 -0.16608,2.69791 -0.64728,2.66459 -0.4812,-0.0333 -1.25582,0.54035 -1.72139,1.27483 -1.770787,2.79357 -0.75601,2.91115 2.37288,0.27495 1.7875,-1.50604 3.2508,-3.45286 3.25177,-4.32627 z m 3.49823,-8.11327 c 0,-0.55 0.70156,-1 1.55902,-1 0.85746,0 1.2809,0.45 0.94098,1 -0.33992,0.55 -1.04148,1 -1.55902,1 -0.51754,0 -0.94098,-0.45 -0.94098,-1 z m 220.72917,14.39583 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z M -1.174003,652.16965 c -0.319226,-0.79773 -0.556183,-0.56078 -0.604167,0.60417 -0.04342,1.05416 0.192928,1.64479 0.52522,1.3125 0.332291,-0.3323 0.367818,-1.1948 0.07895,-1.91667 z m 39.010836,1.57187 c 2.17794,-0.58403 2.17976,-0.60355 0.24895,-2.67604 -1.91801,-2.05873 -1.96537,-2.06079 -3.41215,-0.14802 -2.55384,3.37639 -1.70907,4.13059 3.1632,2.82406 z M 164.5536,653.50161 c 0.29082,-0.47055 -0.58263,-0.64309 -1.94098,-0.38343 -1.35836,0.25967 -2.46974,0.64466 -2.46974,0.85555 0,0.77375 3.89864,0.35644 4.41072,-0.47212 z m 5.08928,-1.14446 c 0.33992,-0.55 -0.30852,-1 -1.44098,-1 -1.13246,0 -2.05902,0.45 -2.05902,1 0,0.55 0.64844,1 1.44098,1 0.79254,0 1.7191,-0.45 2.05902,-1 z m 65.89301,-0.58179 c 0.90463,-2.35742 0.7352,-3.61548 -0.39301,-2.91821 -0.57494,0.35533 -1.00651,-0.57598 -1.01531,-2.19098 -0.0217,-3.98311 -1.5287,-6.16501 -3.14305,-4.55066 -0.6829,0.6829 -0.81414,1.24853 -0.29164,1.25695 0.5225,0.008 0.4288,0.34696 -0.20822,0.75229 -0.63702,0.40534 -1.46766,2.3865 -1.84588,4.40258 -0.61988,3.30423 -0.45641,3.70955 1.65821,4.11152 4.22236,0.80264 4.62502,0.73627 5.2389,-0.86349 z m -55.14301,-1.13677 c 2.0625,-0.27033 3.75,-0.97131 3.75,-1.55773 0,-1.85321 3.12917,-4.61137 4.59396,-4.04928 1.58038,0.60645 1.805,-0.49645 0.51557,-2.53144 -1.26996,-2.00427 -6.56092,0.20521 -17.95967,7.49988 -0.19257,0.12324 -0.0293,0.74321 0.36286,1.37772 0.42113,0.6814 1.58783,0.86684 2.85014,0.45301 1.17543,-0.38535 3.82464,-0.92182 5.88714,-1.19216 z m 163.75,0.71856 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -148,-2 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 154.41655,-0.64313 c 0.34679,-0.90372 0.42487,-1.84878 0.17352,-2.10013 -0.79473,-0.79474 -2.59007,0.80111 -2.59007,2.30228 0,1.96152 1.63888,1.82443 2.41655,-0.20215 z M 52.458733,645.10715 c -0.23864,-0.4125 -1.08233,-0.75 -1.87487,-0.75 -1.76245,0 -1.88292,2.15806 -0.21365,3.82733 0.96977,0.96977 1.36321,0.85435 1.87487,-0.55 0.35614,-0.97753 0.45229,-2.11483 0.21365,-2.52733 z M 222.14288,647.834 c 0,-0.67883 -1.28742,-1.14408 -2.99772,-1.08333 -3.91491,0.13906 -3.91705,2.27315 -0.002,2.27315 1.6524,0 3,-0.53447 3,-1.18982 z M 30.581673,647.45619 c 0.30625,-0.49553 -1.01719,-0.85634 -2.940983,-0.80181 -1.923794,0.0545 -3.497807,0.45996 -3.497807,0.90096 0,1.10441 5.74967,1.01588 6.43879,-0.0992 z m 84.561207,-1.15806 c 0,-0.51754 -0.675,-0.94098 -1.5,-0.94098 -1.54641,0 -1.9867,1.17996 -0.86052,2.30615 0.79893,0.79893 2.36052,-0.10419 2.36052,-1.36517 z m 83.72976,-0.63027 c 0.19512,-0.58536 -0.33925,-1.33062 -1.1875,-1.65612 -1.08089,-0.41478 -1.54226,0.022 -1.54226,1.46013 0,2.05736 2.06001,2.20526 2.72976,0.19599 z m 5.27024,0.18929 c 0,-0.825 -0.40186,-1.5 -0.89301,-1.5 -0.49116,0 -1.15203,0.675 -1.46862,1.5 -0.35062,0.91371 -0.002,1.5 0.89301,1.5 0.80774,0 1.46862,-0.675 1.46862,-1.5 z M 40.723723,643.48796 c -0.35469,-0.57391 -1.31696,-0.78556 -2.13839,-0.47035 -1.17234,0.44987 -1.23908,0.87966 -0.31036,1.9987 1.32352,1.59475 3.52842,0.21858 2.44875,-1.52835 z m 152.919157,1.86919 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 19.42963,-0.86852 c 0.55,-1.02768 0.7609,-2.10762 0.46866,-2.39986 -0.29225,-0.29224 -0.0514,-0.82797 0.53518,-1.1905 0.59001,-0.36465 1.06653,0.0746 1.06653,0.9832 0,0.90329 0.5625,1.4571 1.25,1.23069 1.51706,-0.49962 2.18574,-4.2736 1.16545,-6.57774 -0.79042,-1.78499 -1.08933,-2.70181 -1.29045,-3.95803 -0.0688,-0.42942 -1.51376,-1.30496 -3.21113,-1.94565 -2.75211,-1.0388 -3.01467,-0.98136 -2.42591,0.53076 1.13453,2.9138 1.06087,3.35 -0.76643,4.53871 -2.31188,1.50394 -3.42127,-0.14778 -3.26488,-4.86096 0.16639,-5.01481 -1.60058,-2.5662 -2.02375,2.80445 -0.19379,2.45949 -0.48297,5.08433 -0.64262,5.83299 -0.15966,0.74865 1.16248,2.04052 2.93808,2.87082 1.77559,0.8303 3.23809,2.07214 3.25,2.75964 0.0325,1.87719 1.81561,1.50349 2.95127,-0.61852 z m -2.42963,-3.13148 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z M 0.74705,642.62798 c -1.016516,-1.01651 -1.855248,0.51389 -1.021218,1.86338 0.630035,1.01942 0.865577,1.02021 1.204302,0.004 0.231595,-0.69479 0.149207,-1.53513 -0.183084,-1.86742 z m 18.395833,0.72917 c 0,-0.55 -0.7875,-0.99311 -1.75,-0.98469 -1.495547,0.0131 -1.531897,0.15626 -0.25,0.98469 1.887213,1.21961 2,1.21961 2,0 z m 7,0 c 0,-0.55 -0.198442,-1 -0.440983,-1 -0.242541,0 -0.719098,0.45 -1.059017,1 -0.339919,0.55 -0.141476,1 0.440983,1 0.582459,0 1.059017,-0.45 1.059017,-1 z m 175.499997,-2 c 0.33992,-0.55 -0.30852,-1 -1.44098,-1 -1.13246,0 -2.05902,0.45 -2.05902,1 0,0.55 0.64844,1 1.44098,1 0.79254,0 1.7191,-0.45 2.05902,-1 z m 36.33233,-1.46864 c -0.61863,-1.35776 -1.5383,-2.21308 -2.0437,-1.90073 -0.5054,0.31236 -0.14486,1.42325 0.80121,2.46865 2.29245,2.53312 2.59286,2.39581 1.24249,-0.56792 z m -215.832327,0.46864 c 0,-0.55 -0.198442,-1 -0.440983,-1 -0.242541,0 -0.719098,0.45 -1.059017,1 -0.339919,0.55 -0.141476,1 0.440983,1 0.582459,0 1.059017,-0.45 1.059017,-1 z m 171.999997,-1 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 0.33992,-0.55 -0.057,-1 -0.88197,-1 -2.13563,0 -3.13134,2.06077 -1.49615,3.09649 1.86173,1.1792 3.87812,1.12903 3.87812,-0.0965 z m -191.499997,-1 c -0.339919,-0.55 -1.068034,-1 -1.618034,-1 -0.55,0 -0.721885,0.45 -0.381966,1 0.339919,0.55 1.068034,1 1.618034,1 0.55,0 0.721885,-0.45 0.381966,-1 z m 230.152877,-4 c 1.58093,0 2.34918,-0.46387 2.07022,-1.25 -0.24396,-0.6875 -1.51896,-1.13887 -2.83333,-1.00304 l -2.38977,0.24695 2.31787,-1.80245 c 1.78374,-1.38709 2.16834,-2.39823 1.66897,-4.38786 -0.65415,-2.60637 0.83735,-4.7061 2.00308,-2.81991 0.34546,0.55897 1.00943,1.01631 1.47548,1.01631 1.42649,0 -0.19048,-4.41848 -2.12154,-5.79726 -1.11306,-0.79472 -1.65721,-2.15056 -1.40468,-3.5 0.22671,-1.21151 0.44564,-2.59272 0.48651,-3.06937 0.0409,-0.47665 1.08681,-0.61247 2.32431,-0.30182 l 2.25,0.56481 -2.36078,-1.94818 c -2.20485,-1.8195 -2.22945,-1.94818 -0.37245,-1.94818 2.64001,0 4.63765,-2.53076 3.73934,-4.73727 -0.64549,-1.58553 -0.82289,-1.53655 -1.76469,0.48727 -0.57587,1.2375 -1.87828,2.25 -2.89423,2.25 -1.42308,0 -1.84719,-0.75767 -1.84719,-3.3 0,-1.815 -0.50975,-3.80975 -1.13278,-4.43278 -1.28616,-1.28616 -0.36779,-4.69463 1.03184,-3.82961 0.50225,0.31041 0.67619,1.47062 0.38654,2.57825 -0.40492,1.54841 -0.15209,1.87014 1.09388,1.39201 1.83284,-0.70332 2.1072,-1.98905 0.62052,-2.90787 -0.55,-0.33992 -1,-1.91492 -1,-3.5 0,-3.66681 -1.27382,-4.45991 -3.3963,-2.11458 -1.89349,2.09228 -2.09459,12.65882 -0.28436,14.9408 0.74993,0.94536 0.69667,1.54585 -0.18549,2.09105 -0.83035,0.51319 -1.13822,2.87357 -0.93569,7.17379 0.24679,5.24 0.59617,6.36105 1.91557,6.1464 1.21432,-0.19757 1.4982,0.34176 1.14698,2.17908 -0.30198,1.57966 -0.95993,2.25238 -1.86373,1.90555 -1.12506,-0.43172 -1.37047,0.89595 -1.2608,6.82092 0.0749,4.04635 0.3312,6.34449 0.56955,5.10699 0.31235,-1.62169 1.13534,-2.25 2.94715,-2.25 z m -2.15288,-18 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -45.81689,17.8125 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 54.51689,-1.0125 c -0.93333,-0.93333 -1.2,-0.66667 -1.2,1.2 0,1.86667 0.26667,2.13333 1.2,1.2 0.93333,-0.93333 0.93333,-1.46667 0,-2.4 z m -189.699997,1.2 c 0.33992,-0.55 0.16803,-1 -0.38197,-1 -0.55,0 -1.27811,0.45 -1.61803,1 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 z m 63.749997,-2.60969 c 0.4125,-0.0772 1.425,-0.19656 2.25,-0.26531 0.825,-0.0687 1.5,-0.60351 1.5,-1.18836 0,-0.59691 -1.42204,-0.9259 -3.24181,-0.75 -2.22232,0.21481 -3.35324,0.90095 -3.59613,2.18179 -0.25818,1.36144 0.011,1.63694 0.99181,1.01531 0.74037,-0.46921 1.68363,-0.91626 2.09613,-0.99343 z m -89.249997,-0.39031 c 0,-0.55 -0.423442,-1 -0.940983,-1 -0.517541,0 -1.219098,0.45 -1.559017,1 -0.339919,0.55 0.08352,1 0.940983,1 0.857459,0 1.559017,-0.45 1.559017,-1 z M 0.49222,626.82512 c -0.793226,-2.06711 -1.349337,-1.82352 -1.349337,0.59105 0,1.13246 0.430347,1.79305 0.956326,1.46797 0.525979,-0.32507 0.702834,-1.25163 0.393011,-2.05902 z m 198.15066,1.53203 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -194.999997,-3 c 0.339919,-0.55 0.141476,-1 -0.440983,-1 -0.582459,0 -1.059017,0.45 -1.059017,1 0,0.55 0.198442,1 0.440983,1 0.242541,0 0.719098,-0.45 1.059017,-1 z m 112.999997,-1 c 0.34913,-1.1 0.34913,-2.9 0,-4 -0.43697,-1.37678 -0.1797,-2 0.82562,-2 1.67253,0 3.27698,-3.29913 1.83777,-3.77887 -0.52309,-0.17436 -0.73464,-1.14466 -0.47011,-2.15622 0.26452,-1.01155 0.0254,-2.12076 -0.53147,-2.4649 -1.43263,-0.88542 -4.86004,11.66905 -4.2725,15.64999 0.22594,1.53086 1.99726,0.68275 2.61069,-1.25 z m 66.95729,-0.9309 c 0.31644,-0.512 0.11799,-1.21356 -0.44098,-1.55902 -0.55897,-0.34546 -1.01631,0.0734 -1.01631,0.9309 0,1.75653 0.60006,2.01516 1.45729,0.62812 z m 11.75591,-0.70396 c -2.23326,-1.69663 -4.2132,-1.71157 -4.2132,-0.0318 0,0.81114 1.16053,1.33334 2.9632,1.33334 2.64399,0 2.77865,-0.14021 1.25,-1.30153 z m -46.47739,-1.05362 c 0.50981,-1.55422 -4.38724,-1.06759 -6.02472,0.59869 -0.95632,0.97313 -0.49102,1.16479 2.2119,0.91109 1.88264,-0.17672 3.59841,-0.85612 3.81282,-1.50978 z m 29.26419,0.68848 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 28.39369,-0.58356 c 0.37373,-0.97391 0.15024,-1.43108 -0.58051,-1.1875 -1.49484,0.49828 -2.31789,2.77106 -1.0035,2.77106 0.53699,0 1.24979,-0.7126 1.58401,-1.58356 z M 32.955383,620.41965 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.72187,0.24062 -1.50938,1.02812 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.72187,-0.24063 1.50938,-1.02813 1.75,-1.75 z m 108.320837,-5.38712 c 1.34014,-0.35045 1.86666,0.0496 1.86666,1.41824 0,1.04851 0.3375,1.95571 0.75,2.01601 5.12885,0.74968 7.3457,0.4421 8.85804,-1.22901 2.22491,-2.4585 4.39196,-2.3996 4.39196,0.11938 0,1.1 0.3375,1.99386 0.75,1.98635 2.16152,-0.0394 5.25,-1.34511 5.25,-2.21961 0,-0.55 -0.94974,-0.75164 -2.11054,-0.44808 -1.52434,0.39862 -2.25111,0.0144 -2.61663,-1.38337 -0.45509,-1.74027 -1.45168,-1.93529 -9.88946,-1.93529 -5.58891,0 -9.38337,0.40438 -9.38337,1 0,0.55 -0.87344,1 -1.94098,1 -1.06754,0 -2.2191,-0.45 -2.55902,-1 -0.96068,-1.55442 -4.49486,-1.17696 -5.1579,0.55088 -0.33933,0.88429 0.34696,2.55369 1.5967,3.88398 l 2.19183,2.33309 3.06803,-2.80221 c 1.68741,-1.54122 3.90802,-3.02188 4.93468,-3.29036 z m -131.133337,3.32462 c 0,-0.55 -0.476558,-1 -1.059017,-1 -0.582459,0 -0.780902,0.45 -0.440983,1 0.339919,0.55 0.816476,1 1.059017,1 0.242541,0 0.440983,-0.45 0.440983,-1 z m 167.299697,-3.36276 c -0.14375,-2.0189 0.18578,-2.66492 1.16724,-2.2883 0.75215,0.28863 1.62229,-0.13908 1.93365,-0.95047 0.7808,-2.03474 -3.59162,-3.68757 -4.70028,-1.77676 -1.20885,2.08349 -3.39531,1.65261 -4.03544,-0.79525 -0.67795,-2.59246 -0.0671,-3.82646 1.89415,-3.82646 0.87038,0 1.44098,-0.98995 1.44098,-2.5 0,-3.08947 -0.75117,-3.09602 -4.2262,-0.0368 -2.58538,2.27599 -2.65027,2.54555 -1.25616,5.21839 2.41737,4.63467 1.96514,5.31841 -3.51764,5.31841 -2.75,0 -5,0.45 -5,1 0,0.55 0.3375,0.9044 0.75,0.78755 0.4125,-0.11685 1.81973,0.37961 3.12717,1.10324 1.97599,1.09365 2.52757,1.08732 3.2683,-0.0375 0.73745,-1.11989 1.04486,-1.09458 1.78261,0.14675 0.51468,0.86599 2.3033,1.4895 4.2317,1.47515 3.0377,-0.0226 3.32208,-0.27962 3.13992,-2.83791 z m 14.7003,0.36276 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -167.999997,-1 c 0,-0.55 -0.198442,-1 -0.440983,-1 -0.242541,0 -0.719098,0.45 -1.059017,1 -0.339919,0.55 -0.141476,1 0.440983,1 0.582459,0 1.059017,-0.45 1.059017,-1 z m 270.499997,-1 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m -291.499997,-3 c 0,-1.1161 -0.666667,-2 -1.508474,-2 -1.258147,0 -1.301203,0.33189 -0.259453,2 0.686961,1.1 1.365775,2 1.508474,2 0.142699,0 0.259453,-0.9 0.259453,-2 z m 119.035167,-2.45762 c -1.26225,-1.52092 -1.17407,-1.67035 1.1315,-1.91738 2.1701,-0.23251 1.93053,-2.36632 -0.33211,-2.95801 -2.64293,-0.69114 -2.58181,-0.73056 -2.84194,1.83301 -0.32962,3.24833 1.12074,6.78664 2.29891,5.60847 0.69828,-0.69828 0.61678,-1.51402 -0.25636,-2.56609 z m -105.035167,1.45762 c 0,-0.55 -0.476558,-1 -1.059017,-1 -0.582459,0 -0.780902,0.45 -0.440983,1 0.339919,0.55 0.816476,1 1.059017,1 0.242541,0 0.440983,-0.45 0.440983,-1 z m 147.091207,-3.75 c -9.15807,-23.14357 -13.39684,-33.24938 -13.94462,-33.24593 -0.35563,0.002 -3.79659,8.16617 -7.64659,18.14205 -3.85,9.97589 -7.15,18.52405 -7.33333,18.99593 -0.18334,0.47187 6.6726,0.85795 15.2354,0.85795 h 15.56875 z m -23.09121,-0.55567 c 0,-0.71813 1.62597,-5.33063 3.61327,-10.25 1.9873,-4.91938 4.04569,-10.06933 4.5742,-11.44433 0.90156,-2.34555 1.14169,-2.07686 3.88673,4.34896 2.94184,6.88651 3.73929,9.65214 1.8457,6.40104 -0.5606,-0.9625 -1.3881,-1.75 -1.83888,-1.75 -0.67876,0 -6.08102,11.16331 -6.08102,12.56591 0,0.23875 2.29213,0.43409 5.09362,0.43409 4.32147,0 5.17625,-0.316 5.63874,-2.08453 0.41445,-1.58486 0.74789,-1.76464 1.39106,-0.75 2.12004,3.34447 1.01796,3.83453 -8.62342,3.83453 -7.14938,0 -9.5,-0.32307 -9.5,-1.30567 z m 60,2.30567 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -168.499997,-2 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z M 3.647624,604.34948 c 0.342526,-0.55422 -0.106796,-1.73724 -0.998494,-2.62894 -0.891697,-0.8917 -1.393305,-2.21533 -1.114685,-2.9414 0.338954,-0.8833 -0.02611,-1.11572 -1.103229,-0.70239 -1.260184,0.48358 -1.486642,0.14674 -1.042692,-1.55093 0.311916,-1.19277 0.159249,-2.16867 -0.339261,-2.16867 -1.178835,0 -1.166168,3.54051 0.02062,5.76357 0.509851,0.95504 1.170728,2.52393 1.468615,3.48643 0.598679,1.93439 2.144317,2.30342 3.109124,0.74233 z m 283.678586,-2.209 c -0.71756,-0.71756 -1.18333,-0.7766 -1.18333,-0.15 0,1.33478 1.18261,2.51739 1.85,1.85 0.28417,-0.28416 -0.0158,-1.04916 -0.66667,-1.7 z m 21.21293,0.62643 c 0.75081,-1.95658 -0.0573,-3.40976 -1.89626,-3.40976 -0.76008,0 -1.63498,0.40939 -1.94423,0.90976 -0.83524,1.35144 0.46661,4.09024 1.94423,4.09024 0.70731,0 1.56063,-0.71561 1.89626,-1.59024 z M 11.142883,602.41617 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 167.093777,-3.36524 c -1.30594,-1.30594 -1.48759,0.14136 -0.37332,2.97443 0.69488,1.76676 0.7337,1.7659 1.09378,-0.0244 0.20532,-1.02092 -0.11888,-2.34842 -0.72046,-2.95 z m 103.98801,2.30622 c 0.50501,0 0.91821,-0.675 0.91821,-1.5 0,-0.93333 -0.94444,-1.5 -2.5,-1.5 -1.87565,0 -2.5,0.5262 -2.5,2.10699 0,1.51045 0.44784,1.93514 1.58179,1.5 0.86998,-0.33385 1.99498,-0.60699 2.5,-0.60699 z m 38.43975,-0.79205 c 1.97802,-1.14688 1.65572,-1.41463 -1.93322,-1.60601 -2.34584,-0.12509 -3.40498,-2.60194 -1.11264,-2.60194 0.9033,0 1.399,-0.39375 1.10157,-0.875 -0.29742,-0.48125 -1.70865,-0.875 -3.13605,-0.875 -2.23252,0 -2.51195,0.33196 -1.99918,2.375 0.33537,1.33623 0.15037,2.375 -0.42297,2.375 -0.56048,0 -1.01905,-0.675 -1.01905,-1.5 0,-1.67379 -1.56112,-2.01914 -2.47116,-0.54667 -0.32405,0.52433 0.1165,1.7775 0.97899,2.78483 1.76213,2.05801 6.86187,2.29726 10.01371,0.46979 z m -194.13887,-1.56326 c 0.64095,-2.45102 -1.86094,-5.61214 -3.24642,-4.10183 -0.48292,0.52643 -1.14121,2.08214 -1.46288,3.45714 -0.4925,2.1053 -0.21095,2.52191 1.78335,2.63876 1.64294,0.0963 2.53901,-0.51441 2.92595,-1.99407 z m 43.61733,-3.02192 c 0,-0.51301 -0.9,-0.11826 -2,0.87723 -1.1,0.99549 -2,2.18583 -2,2.6452 0,0.45937 0.9,0.0646 2,-0.87723 1.1,-0.94185 2,-2.13219 2,-2.6452 z m 16,3.37723 c 2.23115,-0.71454 2.09672,-0.81136 -1.25,-0.90032 -2.0625,-0.0548 -3.75,0.35032 -3.75,0.90032 0,1.14477 1.42545,1.14477 5,0 z m 111.72917,0.39583 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m -123.72917,-4.92721 c 0,-2.41152 -2.39182,-4.41013 -3.70557,-3.09638 -0.85339,0.85338 1.42373,5.62776 2.68413,5.62776 0.56179,0 1.02144,-1.13912 1.02144,-2.53138 z m 6,1.53138 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 111.55931,-0.096 c 0.8816,-1.42646 -2.03689,-4.34495 -3.46335,-3.46335 -0.60278,0.37254 -1.09596,1.55079 -1.09596,2.61833 0,2.12401 3.38151,2.75074 4.55931,0.84502 z m 8.89798,0.16506 c 0.73955,-1.1966 -1.14162,-2.38223 -2.4736,-1.55902 -1.11836,0.69122 -0.38417,2.48996 1.01631,2.48996 0.48508,0 1.14086,-0.41891 1.45729,-0.9309 z m -283.0342,-7.06906 c -3.286912,-0.59587 -4.522319,-3 -1.541604,-3 1.126482,0 2.558878,-0.9543 3.183101,-2.12068 0.850094,-1.58841 0.84793,-1.94328 -0.0086,-1.41391 -0.628965,0.38872 -1.747042,0.20594 -2.484614,-0.4062 -1.042535,-0.86522 -1.468683,-0.60614 -1.914469,1.16391 -0.315385,1.25229 -1.575592,2.72688 -2.800461,3.27688 -3.221943,1.44674 -3.495061,3.34474 -0.396054,2.75233 1.888505,-0.36102 2.539614,-0.063 2.539614,1.16248 0,0.90638 -0.675,1.90698 -1.5,2.22356 -0.825,0.31659 -1.5,1.19319 -1.5,1.94801 0,0.89353 1.601816,0.24556 4.590589,-1.85699 l 4.590589,-3.22939 z m 171.30337,4.39313 c -0.35211,-0.35211 -1.4345,-0.33541 -2.40531,0.0371 -1.49711,0.57449 -1.54289,0.81466 -0.30148,1.58189 1.53301,0.94746 3.8734,-0.45241 2.70679,-1.61902 z M 2.114979,591.82353 c -1.398895,-1.68557 -2.972096,-1.93243 -2.972096,-0.46638 0,0.55 0.675,1 1.5,1 0.825,0 1.446711,0.3375 1.381579,0.75 -0.257612,1.63154 0.306211,2.67557 0.791909,1.46638 0.283576,-0.70599 -0.03205,-1.94349 -0.701392,-2.75 z m 128.319811,-2.36622 c 1.48945,-3.24491 2.70809,-6.40904 2.70809,-7.03139 0,-0.62234 0.64659,-1.37966 1.43686,-1.68291 0.79027,-0.30326 1.21228,-1.13661 0.9378,-1.85189 -0.27448,-0.71528 0.13709,-2.82301 0.9146,-4.68385 1.95685,-4.6834 3.10539,-12.85012 1.8072,-12.85012 -1.5933,0 -3.59646,4.17735 -3.59646,7.5 0,1.86667 -0.47222,2.90556 -1.25,2.75 -1.15814,-0.23163 -1.70448,1.04594 -1.33096,3.11237 0.0857,0.4743 -0.47685,1.3743 -1.25018,2 -0.77332,0.6257 -2.22936,3.50094 -3.23565,6.38944 -1.42149,4.08034 -1.56233,5.51907 -0.6314,6.45 1.78827,1.78827 1.45469,2.79819 -0.92425,2.79819 -1.77324,0 -1.91763,0.2468 -0.87756,1.5 0.68469,0.825 1.54615,1.5 1.91436,1.5 0.36821,0 1.88811,-2.65493 3.37755,-5.89984 z m 149.70809,3.89984 c 0,-1.11111 -0.66667,-2 -1.5,-2 -0.825,0 -1.5,0.1882 -1.5,0.41821 0,0.23002 -0.27314,1.13002 -0.60699,2 -0.43514,1.13395 -0.0104,1.58179 1.5,1.58179 1.44032,0 2.10699,-0.63281 2.10699,-2 z m 32.12711,-0.192 2.52584,-1.19201 -2.07648,-3.26567 c -2.14195,-3.36866 -4.57647,-4.40987 -4.57647,-1.95731 0,0.76616 0.675,1.65203 1.5,1.96862 2.03349,0.78032 1.8948,3.30904 -0.25,4.55827 -2.44427,1.42366 -0.19102,1.33602 2.87711,-0.1119 z m -27.444,-1.9955 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m -44.91228,-0.625 c 0.21771,-0.65313 -0.31666,-1.1875 -1.1875,-1.1875 -0.87083,0 -1.58333,0.7125 -1.58333,1.58333 0,1.76593 2.15276,1.45839 2.77083,-0.39583 z m 36.68975,-1.53512 c -0.0217,-1.45881 0.31582,-2.65238 0.75,-2.65238 0.43418,0 0.77445,-1.0125 0.75615,-2.25 l -0.0333,-2.25 -1.96673,2.36078 c -2.20727,2.64952 -2.74654,8.57474 -0.71673,7.87494 0.6875,-0.23703 1.23226,-1.62453 1.21058,-3.08334 z M 45.255383,588.06965 c -0.81667,-0.81667 -1.1125,-0.70476 -1.1125,0.42083 0,1.98786 1.3447,3.33256 1.84167,1.84167 0.21083,-0.6325 -0.1173,-1.65063 -0.72917,-2.2625 z m 141.887497,0.7875 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 7,0.5 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 104.15827,-3.22749 c 0.68563,-1.33381 0.54089,-1.5943 -0.63513,-1.14302 -0.86583,0.33225 -1.48907,1.72507 -1.44419,3.2275 0.0463,1.55154 0.30863,2.02357 0.63512,1.14301 0.3059,-0.825 0.95579,-2.27737 1.4442,-3.22749 z M 2.614558,586.60715 c -0.408266,-0.9625 -0.686451,-2.7625 -0.61819,-4 0.167896,-3.04375 -1.079321,-2.82474 -2.603485,0.45717 -1.696014,3.65194 -1.601377,4.08605 1,4.5871 1.2375,0.23835 2.410645,0.49465 2.606989,0.56955 0.196344,0.0749 0.02295,-0.65132 -0.385314,-1.61382 z m 227.640822,-1.5375 c -0.81667,-0.81667 -1.1125,-0.70476 -1.1125,0.42083 0,1.98786 1.3447,3.33256 1.84167,1.84167 0.21083,-0.6325 -0.1173,-1.65063 -0.72917,-2.2625 z m 54.41421,0.37166 c -0.33444,-1.05372 -0.13242,-2.20981 0.44892,-2.5691 1.36,-0.84052 0.33822,-2.51506 -1.53465,-2.51506 -0.98017,0 -1.44098,1.11926 -1.44098,3.5 0,2.51132 0.44275,3.5 1.56739,3.5 1.08936,0 1.38194,-0.5843 0.95932,-1.91584 z m -15.52671,-0.0842 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z M 52.568673,581.02437 c -0.35187,-0.91697 -1.08977,-1.66722 -1.63977,-1.66722 -0.55,0 -0.72685,0.7118 -0.39301,1.58179 0.33385,0.86998 0.60699,2.08498 0.60699,2.7 0,0.76914 0.32241,0.7958 1.03278,0.0854 0.56803,-0.56803 0.74489,-1.78303 0.39301,-2.7 z m 236.500667,1.18134 c 1.10241,-1.1833 1.76838,-2.5333 1.47994,-3 -0.49298,-0.79767 1.87755,-1.31627 4.0936,-0.89555 0.55,0.10441 0.47125,-0.34855 -0.175,-1.00658 -1.6839,-1.71461 -6.22481,-1.47519 -8.12857,0.42857 -1.20532,1.20532 -1.28128,1.625 -0.29414,1.625 0.88036,0 1.16909,0.84626 0.85296,2.5 -0.5828,3.04873 -0.3754,3.08202 2.17121,0.34856 z m 19.07354,1.21046 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m -115,-0.45203 c 0,-0.21616 -0.675,-0.65203 -1.5,-0.96862 -0.825,-0.31658 -1.5,-0.13972 -1.5,0.39301 0,0.53274 0.675,0.96862 1.5,0.96862 0.825,0 1.5,-0.17686 1.5,-0.39301 z m 105.60417,-2.33616 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69479 0.14921,-1.53513 -0.18308,-1.86742 z m -198.26733,1.059 c 0.3686,-0.3686 -0.001,-1.69502 -0.822047,-2.94761 -0.82073,-1.25258 -1.23741,-2.94149 -0.92595,-3.75313 0.79781,-2.07906 -3.37582,-4.27019 -4.9462,-2.59673 -0.85948,0.91589 -0.83287,1.33122 0.10736,1.67597 2.07725,0.76166 1.41226,2.27755 -1.5,3.4194 -2.73438,1.07211 -2.73722,1.08315 -0.5,1.94303 1.2375,0.47563 2.25,1.32929 2.25,1.89702 0,1.13439 5.26376,1.43513 6.336837,0.36205 z m 75.66316,-0.20739 c 0,-0.48265 -0.63494,-1.4045 -1.41097,-2.04855 -1.56708,-1.30056 -3.16989,0.17725 -2.08903,1.92611 0.76156,1.23222 3.5,1.32803 3.5,0.12244 z m 85.45729,-0.0533 c 0.31644,-0.512 0.11799,-1.21356 -0.44098,-1.55902 -0.55897,-0.34546 -1.01631,0.0734 -1.01631,0.9309 0,1.75653 0.60006,2.01516 1.45729,0.62812 z m -28.06428,-1.65089 c 0.93873,-2.44628 0.7352,-2.7695 -0.89301,-1.41821 -1.66238,1.37965 -1.99022,3 -0.60699,3 0.49116,0 1.16616,-0.7118 1.5,-1.58179 z M 28.142883,578.35715 c 0,-1.11111 -0.666667,-2 -1.5,-2 -2.724641,0 -1.779638,2.96432 1.25,3.92105 0.1375,0.0434 0.25,-0.82105 0.25,-1.92105 z m 152.294347,-5.99613 c -2.22898,-2.17155 -3.64986,-1.53666 -2.2818,1.01958 0.60961,1.13906 1.63135,1.66669 2.54705,1.3153 1.32741,-0.50937 1.29242,-0.81735 -0.26525,-2.33488 z m 51.28631,-4.69189 -2.58066,-2.39292 v 4.59949 c 0,2.52972 0.35899,4.37762 0.79775,4.10645 0.43876,-0.27117 1.45126,-0.0845 2.25,0.41478 1.1121,0.69518 1.5297,0.29383 1.78291,-1.71353 0.22895,-1.81504 -0.46313,-3.35738 -2.25,-5.01427 z M 8.773484,571.8369 c -0.339061,-0.88358 -1.091505,-1.31293 -1.672096,-0.9541 -0.724945,0.44804 -0.682518,1.10197 0.135437,2.08754 1.453033,1.7508 2.380837,1.06645 1.536659,-1.13344 z m 154.369396,-0.47975 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 77,-1 c 0,-1.1 -0.42344,-2 -0.94098,-2 -1.34235,0 -2.28822,1.82013 -1.55902,3 1.04512,1.69104 2.5,1.10908 2.5,-1 z m 53.5,1 c 0.33992,-0.55 -0.11008,-1 -1,-1 -0.88992,0 -1.33992,0.45 -1,1 0.33992,0.55 0.78992,1 1,1 0.21008,0 0.66008,-0.45 1,-1 z m -244.691667,-1.075 c -0.19708,-0.59125 -0.78583,-1.075 -1.30833,-1.075 -0.5225,0 -1.11125,0.48375 -1.30833,1.075 -0.19709,0.59125 0.39166,1.075 1.30833,1.075 0.91667,0 1.50542,-0.48375 1.30833,-1.075 z m 237.295467,-2.2212 c -1.28349,-1.28349 -2.58505,-0.2915 -1.63484,1.24598 0.36808,0.59556 1.12735,0.79971 1.68727,0.45366 0.683,-0.42212 0.66575,-0.98146 -0.0524,-1.69964 z M 2.944191,563.98047 c -0.358435,-4.90509 -2.749699,-5.64782 -3.933418,-1.22173 -0.940027,3.51489 0.537415,6.76385 2.698672,5.93449 1.112697,-0.42698 1.453009,-1.72588 1.234746,-4.71276 z m 27.015222,2.91722 c -1.10151,-0.90196 -5.81653,-1.41196 -5.81653,-0.62914 0,1.00882 3.942486,1.96524 5.31653,1.28974 0.44909,-0.22077 0.67409,-0.51805 0.5,-0.6606 z m 39.57987,-2.94993 c -0.36804,-0.9591 -1.79883,-2.17332 -3.17953,-2.69826 -2.03099,-0.77218 -2.88347,-0.55396 -4.46417,1.14272 -2.31318,2.4829 -2.35137,2.4318 2.7473,3.67609 4.46609,1.0899 5.89148,0.47259 4.8964,-2.12055 z m 167.603597,2.60939 c 0,-0.44 -0.5325,-1.3325 -1.18333,-1.98333 -1.66823,-1.66823 -0.18917,-2.7707 1.65916,-1.23673 1.82711,1.51637 2.05276,0.39925 0.27417,-1.35732 -1.88001,-1.85674 -4.80691,-2.73933 -6.89088,-2.07791 -1.88076,0.59693 -2.64721,3.45529 -0.92651,3.45529 0.51294,0 1.21826,0.9 1.56739,2 0.61451,1.93615 5.5,3.00208 5.5,1.2 z m -143.799997,-3.4 c -0.93333,-0.93333 -1.2,-0.66667 -1.2,1.2 0,1.86667 0.26667,2.13333 1.2,1.2 0.93333,-0.93333 0.93333,-1.46667 0,-2.4 z m 68.299997,2.2 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m 128.01216,-2.82118 c -0.79461,-0.79461 -2.51396,1.00926 -1.90347,1.99704 0.41524,0.67187 0.93059,0.56959 1.46194,-0.29014 0.45134,-0.73029 0.65003,-1.49839 0.44153,-1.7069 z m -201.512157,0.21419 c 0,-1.05452 -0.5438,-1.39831 -1.58179,-1 -0.86998,0.33385 -2.02154,0.60699 -2.55901,0.60699 -0.53748,0 -0.69912,0.45 -0.3592,1 1.00727,1.6298 4.5,1.15868 4.5,-0.60699 z m 165.856757,0.71668 c 0.94581,-0.5993 1.02153,-1.06688 0.25,-1.54371 -1.26842,-0.78393 -3.10676,0.0995 -3.10676,1.49304 0,1.16275 1.07167,1.18176 2.85676,0.0507 z m 96.59411,-3.9181 c -0.39505,-0.93038 -0.62661,-3.33877 -0.51457,-5.35199 0.15736,-2.82777 -0.22925,-3.7978 -1.69963,-4.26449 -1.86486,-0.59188 -2.73629,-3.57511 -1.04432,-3.57511 0.47245,0 0.14643,-1.37798 -0.72451,-3.06219 -2.33422,-4.51389 -4.88533,-3.57003 -5.28185,1.95419 -0.28673,3.99456 -0.13465,4.32784 1.75,3.83499 2.47853,-0.64815 2.60817,0.0142 0.46605,2.38126 -1.90361,2.10346 -0.91854,4.26008 1.64023,3.59095 1.30999,-0.34257 1.77689,0.0514 1.67433,1.41288 -0.0782,1.03836 -0.49992,1.88792 -0.93712,1.88792 -0.4372,0 0.44606,1.3956 1.96281,3.10133 2.19238,2.46556 2.8263,2.76109 3.09228,1.44159 0.18402,-0.91286 0.0113,-2.42096 -0.3837,-3.35133 z m -268.450867,1.74939 c 0,-0.51754 -0.9,-0.94098 -2,-0.94098 -2.20605,0 -2.72337,1.57385 -0.75,2.28172 1.5126,0.54259 2.75,-0.0607 2.75,-1.34074 z m -6.5,0.059 c -0.33992,-0.55 -1.26648,-1 -2.05902,-1 -0.79254,0 -1.44098,0.45 -1.44098,1 0,0.55 0.92656,1 2.05902,1 1.13246,0 1.7809,-0.45 1.44098,-1 z m 90.499997,0.55902 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -152.999997,-2.6725 c 0,-1.02418 -2.126981,-1.15874 -4.418213,-0.27951 -2.674837,1.02643 -1.752048,2.07161 1.418213,1.60632 1.65,-0.24217 3,-0.83923 3,-1.32681 z m 157.683107,-0.074 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19292,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 77.31689,1.1875 c 0,-0.55 -0.70156,-1 -1.55902,-1 -0.85746,0 -1.2809,0.45 -0.94098,1 0.33992,0.55 1.04148,1 1.55902,1 0.51754,0 0.94098,-0.45 0.94098,-1 z m -8.45888,-2.93347 c -0.36254,-0.58659 -1.1377,-1.06653 -1.72258,-1.06653 -0.6631,0 -0.58723,0.57378 0.20152,1.52417 1.37154,1.6526 2.59733,1.2838 1.52106,-0.45764 z m 103.45888,0.93347 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -111.20091,-2.20704 c 0.1645,-0.84772 -0.398,-1.8088 -1.25,-2.13575 -1.1494,-0.44106 -1.54909,0.064 -1.54909,1.95751 0,2.7499 2.27198,2.89457 2.79909,0.17824 z m -202.799087,0.20704 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -24,-1.59026 c 0,-0.64067 -0.675,-1.72505 -1.5,-2.40974 -1.201344,-0.99703 -1.848432,-0.97819 -3.25,0.0946 -0.9625,0.73671 -1.907561,1.43687 -2.100136,1.55591 -0.192574,0.11904 -0.05049,0.70127 0.315739,1.29384 0.879946,1.42378 6.534397,0.96116 6.534397,-0.53461 z m 136.999997,1.14928 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 28,0 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 5.06574,-0.5942 c 1.06384,-0.56935 1.93426,-1.55935 1.93426,-2.2 0,-0.86688 -0.30694,-0.85788 -1.2,0.0352 -0.66,0.66 -2.01,1.2 -3,1.2 -0.99,0 -1.8,0.45 -1.8,1 0,1.28775 1.62002,1.27373 4.06574,-0.0352 z m 86.93426,-0.96482 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -27.78586,-3.00569 c 0.55913,-3.80955 -0.0737,-4.43137 -2.38299,-2.3415 -1.34863,1.22049 -1.83115,1.3089 -1.83115,0.33551 0,-0.72691 -0.28596,-1.0357 -0.63546,-0.68619 -0.76076,0.76076 2.31093,5.69787 3.54501,5.69787 0.4749,0 1.06197,-1.35256 1.30459,-3.00569 z m -88.24958,-3.68216 c 0.0195,-0.65332 -0.83338,-1.12241 -1.89528,-1.04242 -1.0619,0.08 -1.72956,0.47093 -1.48369,0.86876 0.24587,0.39782 -0.0115,1.00672 -0.57198,1.3531 -0.68215,0.42159 -0.64622,1.32636 0.10869,2.73692 1.12725,2.10629 1.12824,2.10617 2.46726,-0.31069 0.73677,-1.3298 1.35552,-2.95235 1.375,-3.60567 z m 95.03544,4.18785 c 0,-0.825 -0.375,-1.5 -0.83333,-1.5 -0.45834,0 -0.83334,0.675 -0.83334,1.5 0,0.825 0.375,1.5 0.83334,1.5 0.45833,0 0.83333,-0.675 0.83333,-1.5 z m 39.80833,0.425 c -0.19708,-0.59125 -0.78583,-1.075 -1.30833,-1.075 -0.5225,0 -1.11125,0.48375 -1.30833,1.075 -0.19709,0.59125 0.39166,1.075 1.30833,1.075 0.91667,0 1.50542,-0.48375 1.30833,-1.075 z m -248.808327,-2.425 c 0,-1.62882 -0.91477,-1.85367 -3.50206,-0.86084 -1.328688,0.50987 -1.395805,0.81021 -0.33179,1.48469 2.0727,1.31388 3.83385,1.0273 3.83385,-0.62385 z M 12.55668,549.49663 c 0.292506,-0.47329 0.293007,-1.09934 0.0011,-1.39124 -0.784309,-0.78432 -4.414897,0.34097 -4.414897,1.36839 0,1.13664 3.713556,1.15586 4.413797,0.0229 z m 13.086203,-0.13948 c 0.339919,-0.55 -0.110081,-1 -1,-1 -0.889919,0 -1.339919,0.45 -1,1 0.339919,0.55 0.789919,1 1,1 0.210081,0 0.660081,-0.45 1,-1 z m 20.05385,-0.0871 c 1.03052,-1.66742 -1.28721,-3.57951 -2.66672,-2.2 -1.15392,1.15389 -0.43172,3.2871 1.11287,3.2871 0.48508,0 1.18431,-0.48921 1.55385,-1.08713 z m 226.912437,-1.87562 c 0.97695,-1.07952 1.51082,-2.65452 1.18638,-3.5 -0.85327,-2.2236 -2.65267,-1.88841 -2.65267,0.4941 0,1.11727 -0.67242,2.28942 -1.49426,2.60479 -0.82184,0.31537 -1.24528,0.97625 -0.94098,1.46861 0.85284,1.37993 1.96102,1.07671 3.90153,-1.06753 z M 0.158196,547.10715 c 0.01146,-0.93594 0.22775,-0.91487 0.860836,0.0839 0.674482,1.06402 0.974822,0.9969 1.484688,-0.33179 1.1417,-2.97527 0.680183,-4.50211 -1.360837,-4.50211 -2.472303,0 -2.662303,-2.81841 -0.25,-3.70844 0.9625,-0.35512 2.006864,-1.02459 2.320809,-1.4877 0.313945,-0.46311 1.159125,0.25726 1.878179,1.60082 0.719053,1.34357 2.487189,2.75763 3.929191,3.14238 1.442001,0.38474 2.059321,0.90654 1.371821,1.15957 -2.49313,0.91755 -1.168128,2.09309 2.25,1.9962 2.392788,-0.0678 3.5,-0.57149 3.5,-1.59215 0,-1.13508 0.330032,-1.04159 1.376845,0.39001 1.252171,1.71244 1.369917,1.52601 1.300331,-2.05887 -0.04208,-2.168 0.24691,-5.17932 0.642207,-6.69182 0.883794,-3.38161 0.02019,-3.4252 -3.664053,-0.18493 -2.031063,1.7863 -2.556611,2.8498 -1.83751,3.7184 0.748325,0.90389 0.232049,1.27252 -2.008889,1.4344 -3.145072,0.22719 -4.944474,-0.96044 -6.107822,-4.03125 -0.377841,-0.99736 -1.140162,-1.5333 -1.694046,-1.19099 -0.589905,0.36459 -1.007063,-0.61022 -1.007063,-2.35328 0,-1.63663 -0.5625,-3.20392 -1.25,-3.48289 -0.940676,-0.38169 -0.878811,-0.76971 0.25,-1.56802 2.054364,-1.45287 4.038519,-1.36219 3.469608,0.15856 -0.257192,0.6875 0.410945,2.57899 1.484749,4.20332 1.674247,2.5326 2.047519,2.70537 2.620288,1.21275 0.393542,-1.02555 0.0019,-2.47649 -0.953364,-3.53206 -1.857907,-2.05296 -2.08426,-4.27103 -0.588498,-5.76679 1.080676,-1.08068 0.315089,-4.36722 -1.017327,-4.36722 -0.423812,0 -1.388167,0.74535 -2.143011,1.65634 -1.236919,1.49277 -1.422454,1.36934 -1.878876,-1.25 -0.619309,-3.55414 -4.993569,-4.91998 -4.993569,-1.55922 0,1.09242 0.5625,2.19246 1.25,2.44455 1,0.36666 1,0.72333 0,1.78333 -1.563998,1.65784 -1.627741,8.35067 -0.106602,11.19294 0.857865,1.60294 0.857865,2.23164 0,2.51759 -1.424247,0.47475 -1.562072,12.21447 -0.143398,12.21447 0.55,0 1.006891,-0.5625 1.015313,-1.25 z m 38.735157,-0.5 c 0.24412,-0.73318 -0.44516,-1.25 -1.66714,-1.25 -1.22833,0 -2.08333,0.64569 -2.08333,1.57332 0,1.83788 3.12044,1.56887 3.75047,-0.32332 z m 207.249527,-0.14301 c 0,-1.12404 -2.60112,-2.17254 -3.40223,-1.37142 -1.20377,1.20376 -0.54696,2.26443 1.40223,2.26443 1.1,0 2,-0.40186 2,-0.89301 z m -97.31545,-3.85101 c -1.29369,-1.29369 -1.23118,-1.70935 0.52046,-3.46099 1.27974,-1.27974 1.8257,-2.85402 1.52866,-4.40789 -0.36588,-1.91396 0.0425,-2.54381 1.96177,-3.02551 1.59274,-0.39975 2.23195,-1.10842 1.8642,-2.06676 -0.3078,-0.80212 -0.55964,-1.8716 -0.55964,-2.37662 0,-1.74638 -1.76868,-0.91077 -2.28975,1.08179 -0.28766,1.1 -1.1641,2 -1.94765,2 -0.78355,0 -2.00318,1.2375 -2.71029,2.75 -0.70711,1.5125 -1.68315,3.53139 -2.16898,4.48643 -1.2885,2.5329 -1.0796,6.53087 0.36667,7.01748 0.6875,0.23132 2.07233,0.20722 3.07741,-0.0535 1.60794,-0.41718 1.65083,-0.6507 0.35714,-1.94439 z M 43.825993,542.16965 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19292,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z M 27.74705,540.62798 c -1.016516,-1.01651 -1.855248,0.51389 -1.021218,1.86338 0.630035,1.01942 0.865577,1.02021 1.204302,0.004 0.231599,-0.69479 0.149207,-1.53512 -0.183084,-1.86742 z m 144.39583,1.72917 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 61.15305,-6.68026 c 0.67568,-0.81702 0.36092,-1.50949 -1.02274,-2.25 -2.65072,-1.41862 -3.13031,-1.3527 -3.13031,0.43026 0,0.825 0.68537,1.5 1.52305,1.5 1.32,0 1.29721,0.34469 -0.17093,2.58534 -1.44155,2.20009 -1.48224,2.71774 -0.27305,3.4738 1.07817,0.67413 1.50258,0.2314 1.75942,-1.83535 0.18616,-1.49808 0.77772,-3.25491 1.31456,-3.90405 z m -68.92224,2.42926 c -0.51021,-1.97347 -5.65642,-7.749 -6.90466,-7.749 -0.25429,0 0.4683,1.30697 1.60576,2.90437 1.13745,1.5974 2.06809,3.5324 2.06809,4.3 0,1.71321 2.04614,3.88515 3.0662,3.25472 0.41032,-0.2536 0.48439,-1.47313 0.16461,-2.71009 z m 105.13082,1.751 c -0.31659,-0.825 -0.97746,-1.5 -1.46862,-1.5 -0.49115,0 -0.89301,0.675 -0.89301,1.5 0,0.825 0.66088,1.5 1.46862,1.5 0.89459,0 1.24363,-0.58629 0.89301,-1.5 z m -30.86163,-1.5 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 107.79157,-2.68257 c -0.51734,-1.34817 -0.70368,-1.33242 -1.52128,0.12856 -0.73288,1.30959 -1.23464,1.41353 -2.35101,0.48702 -1.12183,-0.93104 -1.41928,-0.85323 -1.41928,0.37122 0,1.81693 2.97492,2.73271 4.69056,1.4439 0.65481,-0.49189 0.92526,-1.58571 0.60101,-2.4307 z m -305.208237,-0.2341 c -2.59521,-2.59521 -4.08333,-2.6597 -4.08333,-0.17695 0,1.37605 0.52498,1.7691 1.88714,1.41288 1.03793,-0.27142 2.20799,0.0256 2.60014,0.66015 0.39214,0.63451 0.93043,0.93621 1.19619,0.67045 0.26576,-0.26575 -0.4543,-1.42069 -1.60014,-2.56653 z m -8.48333,-1.68333 c -0.48405,-1.26141 -0.96557,-1.43443 -1.76557,-0.63443 -0.605,0.605 -0.80049,1.88049 -0.43443,2.83443 0.48405,1.26141 0.96557,1.43443 1.76557,0.63443 0.605,-0.605 0.80049,-1.88049 0.43443,-2.83443 z m 217.749337,1.13203 c 0.30982,-0.80739 0.13297,-1.73395 -0.39301,-2.05902 -0.52598,-0.32508 -0.95633,0.33551 -0.95633,1.46797 0,2.41457 0.55611,2.65816 1.34934,0.59105 z M 15.0386,534.44276 c 0.767645,-0.48607 1.119268,-1.60418 0.781385,-2.48469 -0.915698,-2.38626 -2.37995,-1.9357 -2.921853,0.89908 -0.510481,2.67041 -0.07832,2.99054 2.140468,1.58561 z m 12.104283,-3.20062 c 0,-0.80352 -0.388495,-0.92586 -2.75,-0.86597 -0.4125,0.0105 -1.043678,1.11712 -1.402617,2.45924 -0.634784,2.37355 -0.586965,2.39721 1.75,0.86598 1.321439,-0.86585 2.402617,-1.97251 2.402617,-2.45925 z m 21.72917,3.51084 c -0.3323,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19292 1.3125,-0.52522 z m 3.66384,-1.97762 c 1.7597,-4.58569 -1.3192,-8.20291 -3.98826,-4.68558 -1.79678,2.36781 -1.73081,3.29937 0.34525,4.87532 2.29708,1.74374 2.91339,1.71164 3.64301,-0.18974 z m 208.606987,0.0228 c 0,-0.85746 -0.45734,-1.27636 -1.01631,-0.9309 -0.55897,0.34546 -0.75742,1.04702 -0.44098,1.55902 0.85723,1.38704 1.45729,1.12841 1.45729,-0.62812 z m 85,-0.38196 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -1.71765,-1.06156 -1.10117,-2.25779 1.5,-2.91064 1.375,-0.34511 2.5,-1.05477 2.5,-1.57703 0,-0.52226 -0.74695,-0.66293 -1.6599,-0.3126 -1.11623,0.42834 -2.42472,-0.31887 -3.99503,-2.28138 l -2.33514,-2.91835 -0.005,6.25 c -0.005,6.00132 0.0945,6.25 2.49503,6.25 1.375,0 2.5,-0.42344 2.5,-0.94098 z m 4,-1.05902 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -116.22917,-1.8125 c 0.21771,-0.65313 -0.22094,-1.1875 -0.97479,-1.1875 -0.80545,0 -1.46488,-1.23704 -1.59922,-3 -0.21156,-2.77652 1.20887,-4.24181 1.96985,-2.03205 0.18948,0.55022 0.91256,0.60806 1.6755,0.13402 0.99268,-0.61678 1.072,-1.32452 0.30463,-2.71795 -0.57064,-1.03621 -1.30601,-3.56354 -1.63415,-5.61627 -0.54205,-3.39088 -0.77337,-3.62188 -2.52905,-2.52544 -1.62579,1.01533 -1.69847,1.33775 -0.45801,2.03195 1.91122,1.06957 1.89623,3.62664 -0.0256,4.36411 -2.96892,1.13929 -1.062,13.04896 1.92968,12.05174 0.51992,-0.17331 1.12345,-0.84948 1.34115,-1.50261 z m 23.04167,-0.125 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.72188,0.24062 -1.50937,1.02813 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.72187,-0.24062 1.50937,-1.02813 1.75,-1.75 z m -213.812497,-1.5625 c 0,-0.825 -0.17686,-1.5 -0.39301,-1.5 -0.21616,0 -0.65203,0.675 -0.96862,1.5 -0.31658,0.825 -0.13972,1.5 0.39301,1.5 0.53274,0 0.96862,-0.675 0.96862,-1.5 z m -28,-0.5 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 25.27802,-6 c -0.3035,-0.275 -0.75272,0.0625 -0.99826,0.75 -0.24553,0.6875 -1.30893,1.25 -2.36309,1.25 -2.10828,0 -2.18505,0.13705 -1.32789,2.37076 0.47446,1.23641 1.04046,1.00958 2.91493,-1.16821 1.27938,-1.4864 2.07782,-2.92755 1.77431,-3.20255 z m 114.072157,0.83445 c -1.71187,-1.8916 -1.83105,-1.89737 -3.10938,-0.15072 -1.16895,1.59719 -1.05255,1.88774 0.96496,2.40874 3.34368,0.86349 4.1761,-0.013 2.14442,-2.25802 z m 89.64982,1.22457 c 0,-1.17986 -1.95035,-2.442 -2.66667,-1.72569 -0.71631,0.71632 0.54583,2.66667 1.72569,2.66667 0.51754,0 0.94098,-0.42344 0.94098,-0.94098 z m 106,-0.5 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z M 52.999003,512.65834 c 0.0809,-5.93437 -0.27467,-8.94856 -1.11879,-9.48469 -0.9793,-0.62199 -0.97666,-0.78907 0.0127,-0.80119 1.86947,-0.0229 1.5083,-4.70221 -0.42005,-5.44219 -0.92065,-0.35329 -2.0356,-0.0648 -2.48469,0.64301 -0.61702,0.97243 -0.81835,0.89829 -0.82995,-0.30562 -0.008,-0.87421 1.10969,-2.10206 2.48469,-2.72856 1.375,-0.62649 2.5,-1.59872 2.5,-2.16051 0,-1.25586 -0.23984,-1.26095 -3.36826,-0.0715 -1.77738,0.67576 -2.62109,0.60361 -2.92336,-0.25 -0.3054,-0.86244 -1.45081,-0.66254 -4.07262,0.71077 -4.31123,2.25825 -5.65078,1.60433 -2.71909,-1.32735 1.1458,-1.14583 2.0833,-2.53333 2.0833,-3.08333 0,-0.55 0.87344,-1 1.94098,-1 2.17625,0 3.66148,-1.63251 1.99163,-2.18913 -0.59392,-0.19797 0.0972,-1.63 1.53581,-3.18229 1.81315,-1.95642 2.31403,-3.18579 1.63255,-4.00692 -0.6931,-0.83514 -0.10671,-1.7653 1.98778,-3.15312 1.63399,-1.0827 3.24469,-3.09354 3.57933,-4.46854 0.86137,-3.53929 1.21946,-3.98039 2.75344,-3.39174 0.82178,0.31535 1.15008,1.38331 0.83193,2.70632 -0.4304,1.78979 -0.28367,1.95913 0.81051,0.93542 0.73482,-0.6875 3.27104,-1.25 5.63604,-1.25 3.15556,0 4.3,-0.39923 4.3,-1.5 0,-2.21403 1.35198,-1.80824 2.52482,0.7578 1.33187,2.91399 0.7376,5.7422 -1.20655,5.7422 -1.1344,0 -1.37277,0.64673 -0.91323,2.47769 0.57973,2.3098 0.41768,2.43685 -2.39159,1.875 -3.40078,-0.68016 -3.98269,0.94034 -1.76345,4.91088 0.6875,1.23004 1.33256,2.39399 1.43347,2.58657 0.10091,0.19257 0.66686,0.0514 1.25767,-0.31376 0.71577,-0.44237 0.54968,-1.18842 -0.49775,-2.23585 -0.92773,-0.92773 -1.20432,-1.9396 -0.67489,-2.46903 1.21698,-1.21698 4.2315,0.0479 4.2315,1.77549 0,1.71081 1.19952,1.79349 2.8,0.19301 1.59039,-1.59039 1.5207,-2.8 -0.16133,-2.8 -1.96048,0 -0.79787,-5.16493 1.53481,-6.81842 1.02299,-0.72513 1.60089,-1.73763 1.28423,-2.25 -0.31666,-0.51237 0.53368,-0.93158 1.88965,-0.93158 1.96805,0 2.36053,0.40101 1.94557,1.98785 -0.33348,1.2752 0.074,2.21574 1.13674,2.62354 2.37672,0.91203 3.19929,-0.37461 1.73674,-2.71653 -1.14762,-1.83764 -1.08433,-1.9213 0.72212,-0.95452 2.52177,1.34961 3.40717,1.34712 2.57013,-0.007 -0.36265,-0.58678 -0.0517,-0.97097 0.69099,-0.85375 3.03494,0.479 9.85035,-1.39408 9.85035,-2.7072 0,-0.7547 0.675,-1.37219 1.5,-1.37219 0.825,0 1.499997,-0.45 1.499997,-1 0,-1.5012 -7.983947,-1.25414 -8.078947,0.25 -0.0632,1 -0.17982,1 -0.58333,0 -0.27741,-0.6875 -1.77476,-1.25 -3.32743,-1.25 -2.38976,0 -2.7374,0.32751 -2.26503,2.13388 0.40334,1.54238 0.1695,1.99871 -0.84362,1.64626 -0.7709,-0.2682 -1.25659,-1.2843 -1.0793,-2.258 0.27464,-1.50841 -0.16927,-1.66932 -3,-1.08745 -1.82729,0.37561 -4.22234,0.63786 -5.32234,0.58277 -1.1,-0.0551 -6.1625,-0.33849 -11.25,-0.62978 -6.23832,-0.35718 -9.25,-0.18093 -9.25,0.54135 0,0.58903 -0.94878,1.07097 -2.10841,1.07097 -1.78424,0 -2.01275,0.42281 -1.48626,2.75 0.50388,2.22722 0.41999,2.41732 -0.44128,1 -0.58489,-0.9625 -1.74639,-1.75 -2.58113,-1.75 -1.08698,0 -1.32844,-0.5963 -0.85081,-2.10116 0.66096,-2.08252 0.54844,-2.09596 -12.68261,-1.51464 -7.342227,0.32258 -23.137,0.63227 -35.0995,0.68819 -20.718055,0.0969 -21.75,0.19244 -21.75,2.01464 0,1.05213 0.675,1.91297 1.5,1.91297 0.825,0 1.5,-0.45 1.5,-1 0,-0.55 0.9,-1 2,-1 1.1,0 2,0.45 2,1 0,0.55 -0.765,1 -1.7,1 -1.034401,0 -1.328048,0.34612 -0.75,0.88402 0.5225,0.48621 2.975,0.57698 5.45,0.20171 3.777441,-0.57275 4.138721,-0.8058 2.25,-1.4514 -1.2375,-0.42301 -2.25,-1.18878 -2.25,-1.70172 0,-1.59974 2.837778,-1.02178 4.711045,0.95948 0.983925,1.04064 2.688955,2.06153 3.788955,2.26862 1.361499,0.25633 2,1.16872 2,2.85792 0,2.14629 0.405118,2.44742 3,2.22993 1.65,-0.13829 3.9,-0.29665 5,-0.35192 1.1,-0.0553 1.4375,-0.31712 0.75,-0.58189 -0.6875,-0.26478 -1.25,-1.12749 -1.25,-1.91713 0,-1.01463 -0.701257,-1.25972 -2.390906,-0.83565 -1.314998,0.33005 -2.691555,0.11362 -3.059017,-0.48094 -0.400907,-0.64869 0.255355,-1.11657 1.640906,-1.16989 3.855404,-0.14837 12.287994,0.24011 12.632753,0.58198 0.178055,0.17656 -0.396001,1.71284 -1.27568,3.41395 -0.879679,1.70111 -1.447383,3.09293 -1.261566,3.09293 0.185818,0 2.222374,-0.9105 4.525681,-2.02334 4.262768,-2.05954 5.181649,-3.40898 2.937829,-4.31438 -0.6875,-0.27741 0.640139,-0.53991 2.95031,-0.58333 2.5706,-0.0483 4.510588,0.45222 5,1.29006 1.36804,2.34197 5.03069,2.93409 6.11909,0.98922 0.65525,-1.17086 2.7544,-1.92607 6.4994,-2.33829 5.0553,-0.55644 5.45085,-0.45804 4.59412,1.14277 -0.5156,0.9634 -1.67429,2.164 -2.57489,2.66799 -1.02582,0.57408 -1.43815,1.67842 -1.10391,2.95658 0.36515,1.39634 -0.0192,2.18477 -1.21798,2.49825 -1.94437,0.50846 -3.39678,6.80853 -1.80413,7.82573 0.52638,0.3362 -0.0394,0.87185 -1.25736,1.19035 -1.494,0.39069 -2.0197,1.08648 -1.61592,2.13873 0.96913,2.52551 -0.37134,4.55966 -3.00474,4.55966 -1.44303,0 -2.18751,-0.42799 -1.80922,-1.04008 0.76413,-1.23639 -4.373025,-0.19639 -6.226782,1.26059 -0.661107,0.5196 -2.123607,0.65222 -3.25,0.29472 -2.646982,-0.84012 -2.661672,1.14972 -0.03311,4.48477 1.595854,2.02478 2.144306,2.2321 2.885244,1.09068 0.503161,-0.77512 0.663239,-2.06497 0.355729,-2.86633 -0.456806,-1.19042 -0.178665,-1.25341 1.520078,-0.34427 1.143553,0.61201 2.786782,0.84122 3.651632,0.50934 0.90196,-0.34611 1.57244,-0.0817 1.57244,0.62022 0,0.73129 0.80471,1.01319 2,0.70061 1.28388,-0.33574 2,-0.0307 2,0.85198 0,0.79383 0.61631,1.1385 1.45813,0.81546 0.97254,-0.3732 1.67468,0.30329 2.10841,2.03139 0.510919,2.03567 1.265879,2.59092 3.522819,2.59092 2.23005,0 3.01288,0.55916 3.5,2.5 0.3451,1.375 1.00756,2.5 1.47213,2.5 1.34097,0 4.21897,6.82674 3.57999,8.4919 -0.33801,0.88085 -0.0225,1.5081 0.75869,1.5081 1.00495,0 1.36687,-2.16234 1.45595,-8.69881 z m -10.10612,-8.60061 c -3.46301,-1.36841 -3.4978,-2.20248 -0.10357,-2.48339 2.863,-0.23695 5.66968,1.46231 4.78354,2.89612 -0.64924,1.0505 -1.07115,1.01329 -4.67997,-0.41273 z m -3.30385,-4.78771 c -1.03052,-1.66742 1.28721,-3.57951 2.66672,-2.2 1.15392,1.15392 0.43172,3.28713 -1.11287,3.28713 -0.48508,0 -1.18431,-0.48921 -1.55385,-1.08713 z m 3.22052,-17.57954 c -0.29088,-0.29087 -0.28673,-1.15987 0.009,-1.9311 0.69741,-1.81683 3.32433,-1.82412 3.32433,-0.009 0,1.45318 -2.41482,2.85884 -3.33333,1.94032 z m 19.87604,-14.26423 c -0.31644,-0.512 -0.16515,-1.18441 0.33619,-1.49426 0.50134,-0.30984 1.16956,0.10906 1.48493,0.9309 0.6217,1.62012 -0.88076,2.0849 -1.82112,0.56336 z m 282.702037,51.4309 c -0.50022,-2.61675 -1.67465,-3.23146 -2.77435,-1.45211 -0.92943,1.50385 0.22252,3.95211 1.85954,3.95211 0.94634,0 1.23954,-0.80127 0.91481,-2.5 z m -307.515577,0.89583 c -0.3323,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19292 1.3125,-0.52522 z m 202.270827,-1.95485 c 0,-0.79254 -0.45,-1.44098 -1,-1.44098 -0.55,0 -1,0.92656 -1,2.05902 0,1.13246 0.45,1.7809 1,1.44098 0.55,-0.33992 1,-1.26648 1,-2.05902 z M 34.142883,517.35715 c 0,-1.92166 -1.95562,-2.71105 -3.32466,-1.34201 -0.75703,0.75703 1.13576,3.34201 2.4471,3.34201 0.48266,0 0.87756,-0.9 0.87756,-2 z M 20.579935,515.2553 c -0.29751,-0.48138 0.04494,-0.69298 0.76101,-0.47022 4.777985,1.4864 6.801938,1.5353 6.801938,0.16436 0,-2.00507 -5.20554,-4.43032 -7.604466,-3.5429 -1.302253,0.48173 -2.035445,1.80793 -2.201047,3.98127 -0.214175,2.81079 -0.03988,3.08591 1.267586,2.00082 0.833748,-0.69195 1.272489,-1.65195 0.974979,-2.13333 z m 17.562948,2.10185 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -34,-2.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 40,-0.55902 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -33.191667,-1.075 c -0.197083,-0.59125 -0.785833,-1.075 -1.308333,-1.075 -0.5225,0 -1.11125,0.48375 -1.308333,1.075 -0.197084,0.59125 0.391666,1.075 1.308333,1.075 0.916667,0 1.505417,-0.48375 1.308333,-1.075 z m 25.191667,0.13402 c 0,-0.51754 -0.47155,-1.23242 -1.04789,-1.58862 -1.46771,-0.90709 -4.21119,0.30138 -3.45648,1.52254 0.78657,1.27268 4.50437,1.32722 4.50437,0.0661 z M 150.0973,510.80863 c -2.17553,-2.31574 -2.453,-2.38425 -3.03782,-0.75 -0.71941,2.01031 0.61595,3.2602 3.50771,3.28321 1.77426,0.0141 1.73762,-0.18343 -0.46989,-2.53321 z m 13.04558,1.63031 c 0,-2.17898 -1.33606,-4.08065 -2.85699,-4.06648 -1.42616,0.0133 -1.44503,0.14326 -0.14301,0.98469 1.44833,0.93598 1.10272,1.18943 -1.91808,1.40656 -0.77994,0.0561 -1.60494,0.66251 -1.83333,1.34768 -0.27995,0.83983 0.75236,1.24576 3.16808,1.24576 1.97083,0 3.58333,-0.4132 3.58333,-0.91821 z m 185,-0.0818 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z M 1.103928,510.16859 c 1.121425,-1.20371 2.038955,-3.44334 2.038955,-4.97695 0,-1.87079 0.82269,-3.32743 2.5,-4.42645 2.706447,-1.77333 3.446659,-4.00509 1,-3.01503 -0.825,0.33384 -2.072066,0.84063 -2.771257,1.1262 -0.965674,0.39441 -1.200552,-0.98777 -0.977116,-5.75 0.161778,-3.44807 0.519436,-6.89612 0.794796,-7.66234 0.606906,-1.68878 1.923112,-0.58498 1.940823,1.62762 0.007,0.87633 0.643493,1.80482 1.414396,2.0633 1.004898,0.33694 1.246253,-0.12424 0.852674,-1.62928 -0.627097,-2.39803 2.082929,-6.08178 3.99409,-5.42919 0.917054,0.31314 1.016459,-0.19289 0.374517,-1.90652 -0.743498,-1.98473 -1.452002,-2.28353 -4.748407,-2.00262 -4.714021,0.40173 -8.285786,3.36688 -6.560219,5.44606 0.891434,1.07411 0.704473,1.86318 -0.832304,3.51271 -1.63532,1.75531 -1.981993,3.53403 -1.981993,10.16924 0,7.66313 0.10595,8.04338 2.25,8.07508 l 2.25,0.0333 -2.25,1.87702 c -1.2375,1.03236 -2.25,2.59239 -2.25,3.46673 0,2.11513 0.533022,2.00732 2.961045,-0.59885 z m 29.004625,1.20693 c 1.64219,-0.87887 1.70819,-1.4083 0.63058,-5.05796 -0.66198,-2.24199 -1.51695,-4.05026 -1.89993,-4.01838 -0.38297,0.0319 -1.14632,0.058 -1.69632,0.058 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.675,1.5 1.5,1.5 2.28199,0 1.78989,1.94793 -0.75,2.96884 -1.2375,0.49741 -1.6875,0.93291 -1,0.96777 0.6875,0.0349 1.25,0.73839 1.25,1.56339 0,1.75992 0.486818,1.84501 2.96567,0.51837 z m 112.763497,-0.62254 c -0.3323,-0.33229 -1.1948,-0.36782 -1.91667,-0.0789 -0.79773,0.31923 -0.56078,0.55619 0.60417,0.60417 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m -99.729167,-1.39583 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -20.674017,-3.25 c -1.365828,-2.57273 -1.805582,-2.87315 -2.110254,-1.44159 -0.551169,2.58978 0.469621,4.69159 2.278566,4.69159 1.374895,0 1.355203,-0.38024 -0.168312,-3.25 z m 108.943044,2.59406 c -0.67703,-0.27392 -2.02703,-0.29059 -3,-0.0371 -0.97297,0.25355 -0.41903,0.47767 1.23097,0.49804 1.65,0.0204 2.44606,-0.18706 1.76903,-0.46098 z M 12.732039,507.10715 c 2.900702,-2.40963 6.410844,-6.23676 6.410844,-6.98978 0,-1.62391 -2.707655,-0.62558 -6.272156,2.31258 -2.050314,1.69005 -3.727844,3.71505 -3.727844,4.5 0,1.76054 1.588714,1.83898 3.589156,0.1772 z m 333.964411,-0.16071 c 0.77589,-0.7759 1.80927,-1.5634 2.29639,-1.75 0.48712,-0.18661 1.20048,-1.35179 1.58524,-2.58929 0.66132,-2.12696 0.42568,-2.25 -4.3088,-2.25 -2.7546,0 -5.2875,0.45165 -5.62867,1.00367 -0.34116,0.55202 -1.67581,0.73875 -2.96587,0.41497 -2.65486,-0.66633 -7.19945,1.33197 -5.88922,2.58954 0.92141,0.88438 9.99702,3.80717 12.17879,3.92217 0.72678,0.0383 1.95625,-0.56517 2.73214,-1.34106 z m -109.62892,-1.95782 c 2.40095,-0.24075 3.66172,-0.98429 4.21777,-2.48743 0.71342,-1.92857 0.44962,-2.14404 -2.62495,-2.14404 -2.18878,0 -3.79561,0.62939 -4.46778,1.75 -0.9997,1.66667 -1.09968,1.66667 -2.09938,0 -1.59233,-2.65467 -2.82645,-2.09856 -2.73179,1.23099 0.0711,2.50064 0.42289,2.90146 2.18312,2.48744 1.1541,-0.27145 3.63945,-0.64808 5.52301,-0.83696 z m 92.84328,-2.63147 c 1.08375,-1.73536 0.99869,-2 -0.64282,-2 -1.05084,0 -2.12435,0.88908 -2.41486,2 -0.30214,1.1554 -0.0307,2 0.64282,2 0.64121,0 1.7279,-0.9 2.41486,-2 z m -320.767927,0 c 0,-0.55 -0.198442,-1 -0.440983,-1 -0.242541,0 -0.719098,0.45 -1.059017,1 -0.339919,0.55 -0.141476,1 0.440983,1 0.582459,0 1.059017,-0.45 1.059017,-1 z m 315.281087,-0.5 c 0.1204,-0.55 -1.91859,-1.13716 -4.53109,-1.30479 -2.6588,-0.17061 -4.75,0.12896 -4.75,0.68045 0,1.92476 8.86585,2.52117 9.28109,0.62434 z m -312.823792,-4.4309 c 0.316431,-0.512 0.165142,-1.18441 -0.336198,-1.49426 -0.50134,-0.30984 -1.169557,0.10906 -1.484927,0.9309 -0.6217,1.62012 0.880759,2.0849 1.821125,0.56336 z m 102.815562,-1.00452 c 0.60098,-2.29814 -1.66741,-3.49902 -3.17595,-1.68135 -0.73911,0.89058 -0.7016,1.61208 0.12688,2.44056 1.66546,1.66546 2.46721,1.46582 3.04907,-0.75921 z m 3.54183,-10.01959 c -0.24333,-2.31265 -0.64024,-2.7875 -1.75039,-2.09412 -1.1713,0.73156 -1.20148,1.17891 -0.16391,2.42911 0.69949,0.84283 0.979,2.00615 0.62115,2.58516 -0.35785,0.57902 -0.29433,2.06123 0.14115,3.29381 0.76276,2.1589 0.80416,2.1409 1.12924,-0.49104 0.1856,-1.50265 0.19585,-4.07796 0.0228,-5.72292 z m -94.662187,5.70751 c -0.67106,-0.67106 -2.471282,-1.28304 -4.000493,-1.35994 -1.529211,-0.0769 -3.763998,-0.45202 -4.966195,-0.83359 -1.714607,-0.54419 -2.185812,-0.29154 -2.185812,1.172 0,1.59968 0.882208,1.89255 6.186306,2.05369 4.868219,0.14791 5.926342,-0.072 4.966194,-1.03216 z m 33.15245,-5.53697 c 1.49217,-1.64883 1.47245,-1.87345 -0.25946,-2.95505 -1.57852,-0.9858 -2.12465,-0.78861 -3.45994,1.24929 -0.87205,1.33093 -1.58555,2.6607 -1.58555,2.95505 0,1.27949 3.83341,0.37674 5.30495,-1.24929 z m 5.98774,-2.20428 c -0.28604,-1.09382 -0.88782,-1.76148 -1.33728,-1.48369 -0.44947,0.27778 -1.09987,0.0477 -1.44533,-0.51125 -0.34546,-0.55897 -1.38906,-1.01335 -2.3191,-1.00972 -1.20063,0.005 -0.89121,0.53396 1.06708,1.82527 1.51693,1.00028 2.45443,2.12232 2.08333,2.49341 -0.3711,0.3711 0.0332,0.67473 0.89832,0.67473 1.07776,0 1.4093,-0.62619 1.05298,-1.98875 z m 30.70731,0.98875 c 0,-0.55 -1.09844,-1 -2.44098,-1 -1.34254,0 -2.7191,0.45 -3.05902,1 -0.36058,0.58342 0.65628,1 2.44098,1 1.68246,0 3.05902,-0.45 3.05902,-1 z m -73.283644,-2.75 c 0.128925,-2.32377 0.02713,-2.44001 -0.65676,-0.75 -0.682607,1.68684 -0.536875,3.5 0.281313,3.5 0.122581,0 0.291533,-1.2375 0.375447,-2.75 z m 81.556471,0.81469 c 0.52774,-2.01809 -1.693847,-6.06469 -3.329527,-6.06469 -1.61801,0 -1.03166,2.84915 0.8067,3.9199 0.97121,0.56568 1.193717,1.03281 0.5,1.04969 -1.72023,0.0419 -1.58871,3.03041 0.13337,3.03041 0.760847,0 1.611107,-0.87089 1.889457,-1.93531 z m 10.72717,-3.14029 c 0,-0.4739 -0.675,-0.60261 -1.5,-0.28603 -0.825,0.31659 -1.5,0.96334 -1.5,1.43723 0,0.4739 0.675,0.60261 1.5,0.28603 0.825,-0.31659 1.5,-0.96334 1.5,-1.43723 z m -22.405497,-1.4244 c -3.10953,-2.88181 -3.90384,-3.03712 -5.52751,-1.08072 -1.49048,1.79592 1.07583,3.50565 5.32903,3.55031 l 2.89603,0.0304 z m -93.470412,-0.76667 c -0.987616,-0.98026 -1.10248,-0.8654 -0.559795,0.5598 0.375531,0.98622 0.934692,1.54122 1.242579,1.23333 0.307887,-0.30789 6.34e-4,-1.11479 -0.682784,-1.79313 z m 32.643842,-0.73333 c -0.68696,-1.1 -2.067335,-2 -3.067494,-2 -1.000158,0 -1.540355,0.45 -1.200436,1 0.339919,0.55 1.293034,1 2.118034,1 0.825,0 1.221885,0.45 0.881966,1 -0.339919,0.55 0.08734,1 0.94946,1 1.31716,0 1.36802,-0.3194 0.31847,-2 z m 87.335867,-1.2962 c -1.28349,-1.28349 -2.58505,-0.2915 -1.63484,1.24598 0.36808,0.59556 1.12735,0.79971 1.68727,0.45366 0.683,-0.42211 0.66575,-0.98146 -0.0524,-1.69964 z m -18.471997,-3.51153 c -1.02751,-0.21145 -2.6021,0.34946 -3.4991,1.24646 -1.50788,1.50788 -1.36695,1.53688 1.8682,0.38444 2.59436,-0.92417 3.01605,-1.34586 1.6309,-1.6309 z m -107.6318,0.30773 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -1.561574,0 -1.983967,1.1827 -0.833333,2.33333 1.150633,1.15064 2.333333,0.72824 2.333333,-0.83333 z m 113.999997,0 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 15.97727,-6.09575 2.47728,-2.40425 h -5.62029 c -4.07332,0 -5.77872,0.41287 -6.19589,1.5 -0.31658,0.825 -1.08787,1.5 -1.71397,1.5 -0.62611,0 -0.87936,-0.675 -0.56277,-1.5 0.41585,-1.08369 -0.10953,-1.5 -1.89301,-1.5 -1.35774,0 -2.46862,0.45 -2.46862,1 0,0.55 0.47656,1 1.05902,1 0.58246,0 0.76739,0.47185 0.41097,1.04856 -0.44171,0.7147 -1.10499,0.66933 -2.08318,-0.1425 -1.93926,-1.60945 -2.84779,-0.5099 -1.05775,1.28014 1.04482,1.04483 3.2555,1.31746 8.29761,1.02329 5.5782,-0.32544 7.34012,-0.85403 9.3506,-2.80524 z m -4.16477,-1.08736 c 0.72187,-0.28888 1.58437,-0.25335 1.91667,0.079 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28495 -0.60417,-0.60417 z m -141.056283,0.93311 c 0.307358,-0.93603 -1.787306,-1.25 -8.339547,-1.25 -4.8125,0 -8.533285,0.21672 -8.26841,0.48159 0.726175,0.72617 11.00923,2.34779 13.774624,2.17223 1.332585,-0.0846 2.607585,-0.71632 2.833333,-1.40382 z M -9.857117,595.36831 V 492.37947 l -7.75,-3.89288 c -4.2625,-2.14109 -11.35,-5.13607 -15.75,-6.65552 -5.127486,-1.77067 -9.071781,-3.85878 -10.984929,-5.81542 -1.64171,-1.67903 -2.31671,-2.80013 -1.5,-2.49135 0.816711,0.30879 4.164505,1.33684 7.439543,2.28456 7.011035,2.02883 18.113501,7.33177 24.793453,11.84226 l 4.748067,3.20603 0.0019,103.75 c 0.0011,57.0625 -0.223034,103.75 -0.498034,103.75 -0.275,0 -0.5,-46.34498 -0.5,-102.98884 z M 1036.8929,683.78518 c -3.2042,-1.73829 -3.4586,-4.28212 -0.9429,-9.42803 l 1.711,-3.5 34.2093,-0.26309 34.2093,-0.26309 1.6317,2.49029 c 2.6202,3.99893 2.3728,8.46427 -0.5684,10.25732 l -2.5,1.5241 2.3553,-1.95652 c 1.3829,-1.14872 2.2031,-2.7477 1.9867,-3.87277 -0.3527,-1.83279 -1.74,-1.92842 -31.8554,-2.1959 -17.3176,-0.15381 -32.4421,-0.047 -33.61,0.23728 -2.2823,0.55562 -4.9926,5.7367 -3.9139,7.48202 0.8291,1.34145 0.6359,1.30502 -2.7127,-0.51161 z m -956.308887,-3.9832 c -1.83031,-1.46637 -1.7984,-1.48719 0.55887,-0.36454 3.06103,1.45781 3.62834,1.91971 2.3578,1.91971 -0.53655,0 -1.84905,-0.69982 -2.91667,-1.55517 z m 154.058867,0.0637 c -0.55,-0.18347 -2.20762,-0.59901 -3.68361,-0.92344 -1.47598,-0.32442 -3.68121,-1.99086 -4.9005,-3.7032 -2.1723,-3.05072 -2.17496,-3.0909 -0.13213,-1.99761 2.85005,1.5253 48.21268,1.53011 51.55892,0.005 2.4256,-1.10518 4.65732,-4.66877 4.65732,-7.43678 0,-2.29838 1.56927,-1.69371 2.83948,1.0941 2.84901,6.25289 0.15764,11.14753 -6.87577,12.50459 -4.16386,0.8034 -41.25608,1.19331 -43.46371,0.45688 z M 1269.1126,679.6123 c 3.0083,-0.20619 6.0458,-0.85305 6.75,-1.43746 0.9716,-0.8064 1.2803,-6.53851 1.2803,-23.77665 v -22.71407 l -8.25,-4.04084 c -4.5375,-2.22247 -11.2877,-5.0328 -15.0005,-6.24519 -3.859,-1.26013 -7.383,-3.10727 -8.227,-4.3123 -0.8121,-1.15938 -1.3267,-2.25774 -1.1437,-2.44079 0.719,-0.71902 18.058,5.76571 23.4295,8.76255 10.9367,6.10178 10.1917,3.79862 10.1917,31.50729 v 24.20906 l -2.25,0.60297 c -1.2375,0.33164 -4.5,0.52588 -7.25,0.43165 l -5,-0.17132 z m -759.23759,-3.7912 c -2.05267,-1.39483 -3.73213,-2.77391 -3.73213,-3.06462 0,-0.29071 0.95541,-2.74949 2.12314,-5.46395 l 2.12315,-4.93538 h 34.36343 34.36344 l 1.39433,3.3371 c 2.70598,6.47632 2.73426,7.12071 0.37503,8.54463 -1.77262,1.06988 -1.9806,1.0774 -0.99252,0.0359 0.6875,-0.7247 1.25,-2.35263 1.25,-3.61763 v -2.3 h -32.42857 c -27.54872,0 -32.65518,0.22661 -33.93449,1.50592 -2.24283,2.24282 -2.95909,5.40099 -1.59711,7.04207 1.71051,2.06105 0.95757,1.81428 -3.3077,-1.08404 z m 743.18989,-4.33405 c -10.6839,-11.11594 -20.3183,-32.39471 -24.0557,-53.1299 -1.7571,-9.74829 -1.7821,-41.03923 -0.041,-51 3.3395,-19.10213 12.767,-42.1232 21.909,-53.5 5.6366,-7.01443 13.2678,-12.5 17.3893,-12.5 4.7921,0 12.0463,4.06022 17.8761,10.00542 4.8543,4.95032 11.0518,13.99458 9.5897,13.99458 -0.2961,0 -1.2333,-1.34393 -2.0827,-2.9865 -5.8328,-11.27928 -19.1093,-17.85613 -27.3956,-13.5711 -5.504,2.84622 -13.7107,13.10766 -19.3771,24.22849 -11.4021,22.37767 -15.2811,41.12518 -14.4395,69.7874 0.3302,11.24851 1.1562,20.86567 2.1937,25.54171 4.2323,19.07654 11.8665,35.35499 20.7438,44.23228 3.1722,3.17225 5.4358,5.76772 5.0302,5.76772 -0.4056,0 -3.7089,-3.09155 -7.3405,-6.8701 z m -461.35773,4.57697 c 0.37553,-0.98622 0.93469,-1.54122 1.24258,-1.23333 0.30789,0.30789 6.4e-4,1.11479 -0.68278,1.79313 -0.98762,0.98026 -1.10248,0.8654 -0.5598,-0.5598 z M 69.642883,673.1105 c -1.65,-1.20081 -3.33061,-2.64906 -3.73469,-3.21832 -0.8796,-1.23919 -1.03041,-71.68062 -0.15832,-73.95324 0.52786,-1.37559 3.45478,-1.58179 22.45295,-1.58179 23.509907,0 26.222927,-0.47808 27.737927,-4.88784 0.49359,-1.43669 0.67866,-8.90649 0.41128,-16.59955 -0.44547,-12.81689 -0.35047,-13.87478 1.13523,-12.64176 1.92742,1.59962 3.63626,7.25439 3.66536,12.12915 0.0164,2.74619 0.24936,3.17694 1.0817,2 1.35969,-1.9226 1.33122,-1.83668 -4.58263,13.83026 -2.74515,7.27244 -5.10711,12.87322 -5.24881,12.44618 -0.40312,-1.21494 -39.444457,-0.36824 -40.958467,0.88827 -1.02275,0.84881 -1.30153,8.48032 -1.30153,35.62899 0,30.74472 0.18223,34.75018 1.65499,36.37756 2.16223,2.38923 1.53513,2.26762 -2.15499,-0.41791 z m 395.475247,-1.31845 c -0.60171,-1.58262 -0.97525,-30.85611 -0.97525,-76.42857 0,-65.81528 0.17122,-74.0347 1.57143,-75.4349 3.11935,-3.11935 8.57715,-1.58009 10.78051,3.04041 1.80562,3.78642 2.19336,5.92879 0.56796,3.13816 -1.21539,-2.08671 -5.21288,-2.30684 -6.81589,-0.37533 -0.83258,1.0032 -1.12566,21.00916 -1.08455,74.03418 0.031,39.96273 -0.21228,73.09413 -0.54058,73.62533 -1.05114,1.70078 -2.50048,1.03921 -3.50363,-1.59928 z m 957.63177,-0.0167 c -0.3339,-0.86998 -0.607,-15.17998 -0.607,-31.8 0,-22.16972 0.3196,-30.53782 1.2,-31.41821 0.856,-0.856 7.1309,-1.2 21.8892,-1.2 27.3141,0 25.4108,1.48057 25.4108,-19.76707 v -15.94378 l 2.2097,2.99503 c 2.8328,3.83966 3.6196,9.30944 3.1218,21.70289 -0.4501,11.20555 -2.1986,15.00129 -7.4372,16.14462 -1.5919,0.34742 -11.0168,0.68492 -20.9443,0.75 -12.5644,0.0824 -18.4147,0.483 -19.25,1.31831 -1.7621,1.76213 -1.7143,57.42583 0.05,58.13772 0.6875,0.27741 -0.1644,0.53991 -1.893,0.58333 -1.9979,0.0502 -3.3642,-0.49733 -3.75,-1.50284 z m 43.143,0.55063 c 1.2375,-0.49742 2.25,-1.44389 2.25,-2.10328 0,-0.65939 0.2891,-0.90977 0.6425,-0.55639 0.9749,0.97488 -1.6652,3.69948 -3.5149,3.62744 -1.1014,-0.0429 -0.9002,-0.35576 0.6224,-0.96777 z M 221.50451,669.85715 c -0.49256,-1.28358 -4.70821,-1.50633 -29.21862,-1.54389 -22.33478,-0.0342 -29.52396,-0.36127 -32.64301,-1.48495 -4.56354,-1.64407 -8.13029,-1.87838 -8.92869,-0.58655 -0.30069,0.48654 -2.46475,1.15016 -4.80901,1.47471 -6.3448,0.8784 -42.92591,1.10087 -45.42284,0.27623 -1.188297,-0.39245 -2.810687,-1.70849 -3.605317,-2.92454 l -1.44477,-2.21101 24.605307,-0.33872 c 26.53834,-0.36533 28.27035,-0.69837 29.51969,-5.67613 0.38142,-1.51968 0.0962,-3.75997 -0.67582,-5.30742 -1.28324,-2.57231 -1.22953,-2.67773 1.3642,-2.67773 2.22143,0 2.54025,0.29855 1.79864,1.68426 -1.61548,3.01854 -1.00712,7.63932 1.28717,9.77678 2.10588,1.96193 3.38092,2.03954 33.75,2.05427 17.35879,0.008 32.02948,0.34592 32.60153,0.75 1.05781,0.7472 3.6355,8.23469 2.83492,8.23469 -0.24078,0 -0.6968,-0.675 -1.01338,-1.5 z m 463.63837,-15.5 c -1.97958,-0.63397 -2.08367,-0.80064 -0.5,-0.80064 1.1,0 3.125,0.36029 4.5,0.80064 1.97958,0.63397 2.08367,0.80064 0.5,0.80064 -1.1,0 -3.125,-0.36029 -4.5,-0.80064 z m 7.75,-0.66228 c 0.6875,-0.27741 1.8125,-0.27741 2.5,0 0.6875,0.27741 0.125,0.50439 -1.25,0.50439 -1.375,0 -1.9375,-0.22698 -1.25,-0.50439 z m -16.69402,-4.16968 c -6.40857,-6.09634 -13.4982,-23.35366 -16.46536,-40.07944 l -0.60518,-3.41141 2.01599,2.32446 c 1.10879,1.27845 2.42893,3.93858 2.93364,5.9114 0.50471,1.97282 1.86583,7.38919 3.02471,12.03637 2.89354,11.60327 6.60731,19.42675 11.18496,23.56238 2.12356,1.91851 3.42867,3.4882 2.90025,3.4882 -0.52843,0 -2.77348,-1.72438 -4.98901,-3.83196 z m 28.94402,-1.66804 c 1.29175,-1.375 2.57363,-2.5 2.84863,-2.5 0.275,0 -0.55688,1.125 -1.84863,2.5 -1.29175,1.375 -2.57363,2.5 -2.84863,2.5 -0.275,0 0.55688,-1.125 1.84863,-2.5 z m 236.8624,0.98986 c -3.6506,-0.72722 -8.1506,-2.09821 -10,-3.04666 -8.27532,-4.24408 -18.31083,-12.36174 -22.06338,-17.84695 -1.8914,-2.76472 -1.64605,-2.65782 2.29139,0.99839 12.79282,11.87908 24.22629,16.13897 40.69349,15.16156 19.4626,-1.1552 36.2814,-13.32786 43.877,-31.7562 2.137,-5.18473 2.7698,-8.60105 3.1275,-16.88329 0.57372,-13.28663 -1.4942,-20.68186 -8.979,-32.11062 -2.6161,-3.99461 -2.6577,-4.16556 -0.3664,-1.50609 4.9639,5.76149 11.03002,16.93209 12.72922,23.4405 7.553,28.93043 -11.74492,58.83293 -41.25412,63.92396 -8.0595,1.39046 -11.5194,1.32584 -20.0557,-0.3746 z m -808.90051,-5.73986 c -3.04522,-1.53562 -4.46189,-2.88501 -4.46189,-4.25 0,-1.93099 0.75667,-2.00932 21.92862,-2.27 21.43559,-0.26393 23.4771,-0.0195 23.55607,2.82073 0.008,0.30291 -2.02173,1.54041 -4.51144,2.75 -4.64397,2.25622 -7.14725,2.92734 -4.47325,1.19927 1.00197,-0.64753 -3.81228,-0.96269 -14.5,-0.94925 -14.37505,0.0181 -15.7461,0.16526 -13.5,1.44925 4.02618,2.30157 0.83973,1.70975 -4.03811,-0.75 z m 808.03811,-2.68634 c -13.1341,-1.57638 -28.24815,-13.05266 -34.98944,-26.56788 -3.33912,-6.6944 -3.50374,-7.53428 -3.82125,-19.49578 l -0.3318,-12.5 4.25752,-8.5 c 5.34333,-10.66776 12.03763,-17.54096 21.94267,-22.52907 23.9908,-12.08156 52.3122,-2.00554 64.4334,22.92369 3.7736,7.76109 3.8392,8.09332 3.8793,19.64179 0.04,11.65909 0.012,11.80608 -3.8351,19.60538 -7.8479,15.91197 -22.7883,26.61618 -38.5353,27.60909 -4.125,0.2601 -9.975,0.17585 -13,-0.18722 z m 19,-12.64193 c 1.925,-0.31389 5.3801,-1.66219 7.6781,-2.99622 2.2979,-1.33403 4.8854,-2.42551 5.75,-2.42551 0.887,0 1.5719,-0.8421 1.5719,-1.93261 0,-1.06294 0.8177,-2.19213 1.817,-2.50931 0.9994,-0.31718 2.4333,-2.14751 3.1867,-4.06739 0.7533,-1.91988 1.6392,-3.49069 1.9687,-3.49069 0.7192,0 0.8542,-0.92388 1.8263,-12.5 0.7545,-8.98443 0.5318,-13.50169 -0.6653,-13.4981 -0.3484,10e-4 -0.6334,3.93855 -0.6334,8.75 0,7.33612 -0.4187,9.63582 -2.5943,14.2481 -5.5132,11.68802 -16.3972,18.94686 -29.6882,19.79982 -4.0749,0.26151 -6.8314,0.82079 -6.1428,1.24636 1.2472,0.7708 9.3067,0.45478 15.9253,-0.62445 z m -19,-0.31474 c 0,-0.49116 -0.675,-1.15203 -1.5,-1.46862 -1.5243,-0.58492 -2.048,0.4803 -0.8333,1.69496 0.9557,0.9557 2.3333,0.82206 2.3333,-0.22634 z m -5.2847,-1.73378 c 0.2031,-0.61974 -0.3301,-1.39516 -1.1849,-1.72317 -1.9289,-0.74018 -6.67287,1.31043 -5.9052,2.55255 0.7722,1.24945 6.6335,0.56381 7.0901,-0.82938 z m 29.029,-11.54423 c 1.3962,-1.13167 1.5149,-1.10628 0.7998,0.17102 -0.4619,0.825 0.5629,-0.028 2.2772,-1.89549 1.7143,-1.86753 2.8792,-3.78003 2.5888,-4.25 -0.2905,-0.46998 -0.1473,-0.85451 0.3181,-0.85451 0.4654,0 0.9121,-0.87441 0.9926,-1.94312 0.098,-1.30733 -0.3227,-1.76313 -1.2872,-1.39301 -0.8939,0.343 -1.4336,-0.0818 -1.4336,-1.12831 0,-2.33759 -1.9322,-4.02804 -6.2223,-5.44392 -3.1326,-1.03385 -4.0475,-0.96094 -6.2776,0.50027 -1.4358,0.94077 -2.865,2.98237 -3.1759,4.53687 -0.3109,1.5545 -1.186,3.34156 -1.9447,3.97124 -0.7587,0.62968 -1.3795,2.26723 -1.3795,3.639 0,2.12747 0.371,2.42321 2.5239,2.01167 1.3881,-0.26536 2.7692,-0.0855 3.0691,0.39973 0.2998,0.48521 1.035,0.5795 1.6336,0.20952 0.714,-0.44126 0.8902,0.0854 0.5122,1.53092 -0.5156,1.97156 -0.2634,2.1543 2.3948,1.73536 1.6341,-0.25754 3.7089,-1.06629 4.6107,-1.79724 z m -45.2443,-0.82898 c 0.57827,-0.93566 -0.84029,-1.45542 -2.90836,-1.06563 -0.4996,0.0942 -1.23812,-0.36237 -1.64117,-1.01451 -0.5418,-0.87665 -1.34767,-0.74554 -3.09164,0.50297 l -2.35883,1.6887 2.64091,-0.63679 c 1.50678,-0.36333 2.92782,-0.17255 3.30901,0.44423 0.83897,1.35748 3.23161,1.40534 4.05008,0.081 z m -5.34489,-4 c 1.3626,0 1.88165,-0.55266 1.64356,-1.75 -0.23893,-1.20165 -1.08842,-1.64466 -2.71104,-1.41381 -1.29968,0.1849 -2.70078,-0.21025 -3.11354,-0.87812 -0.41277,-0.66786 -1.23383,-0.91558 -1.82458,-0.55047 -1.61622,0.99888 0.83299,5.81309 2.6104,5.13104 0.77201,-0.29625 2.29986,-0.53864 3.3952,-0.53864 z m -6.15511,-11.89301 c 0,-0.49116 -0.65208,-1.14324 -1.44907,-1.44907 -0.96852,-0.37166 -1.26467,-0.0755 -0.89301,0.89301 0.60696,1.58173 2.34208,1.99368 2.34208,0.55606 z m 57.3247,-2.76498 c 0.9043,-0.90433 -1.3369,-3.45253 -2.438,-2.77198 -1.3787,0.85211 -1.0431,3.42997 0.4466,3.42997 0.7334,0 1.6295,-0.2961 1.9914,-0.65799 z m -58.97536,-1.80998 c 0.30982,-0.80739 0.13297,-1.73395 -0.39301,-2.05902 -0.52598,-0.32508 -0.95633,0.33551 -0.95633,1.46797 0,2.41457 0.55611,2.65816 1.34934,0.59105 z m 4.44851,-4.46902 c -0.34592,-2.04385 2.02635,-7.00841 4.20215,-8.79401 1.31768,-1.08137 1.32109,-1.34831 0.028,-2.1962 -1.26391,-0.82878 -1.22858,-1.05861 0.25,-1.62599 0.94708,-0.36343 1.72197,-1.31169 1.72197,-2.10723 0,-1.96181 5.18609,-8.33951 6.78138,-8.33955 0.70477,-2e-5 1.56444,-0.73766 1.9104,-1.63921 0.34596,-0.90154 3.84822,-3.12653 7.78282,-4.94441 5.0239,-2.32122 7.5184,-4.10563 8.3786,-5.99364 1.2171,-2.67126 1.204,-2.68421 -2.0641,-2.03163 -5.9376,1.18564 -15.64534,6.39424 -20.66024,11.0851 -8.78708,8.21928 -15.61326,24.98664 -11.42048,28.05247 2.14158,1.56596 3.49399,0.92435 3.08947,-1.4657 z m 9.17152,-9.56301 c 0,-0.55 -0.43621,-0.325 -0.96937,0.5 -0.53316,0.825 -0.96937,1.95 -0.96937,2.5 0,0.55 0.43621,0.325 0.96937,-0.5 0.53316,-0.825 0.96937,-1.95 0.96937,-2.5 z m 19.07593,-0.0545 c 1.0776,-1.29849 0.9421,-1.90256 -0.8231,-3.66769 -1.7651,-1.76513 -2.3692,-1.90069 -3.6677,-0.82303 -1.5974,1.32571 -2.0711,4.19536 -0.8878,5.37858 1.1832,1.18323 4.0528,0.70953 5.3786,-0.88786 z m -5.5453,-14.20972 c 1.1,-0.69532 0.5446,-0.57495 -1.2342,0.26749 -3.5114,1.66302 -9.54704,7.2852 -11.26296,10.49143 -0.58949,1.10147 1.53122,-0.58424 4.71268,-3.74602 3.18148,-3.16177 6.68448,-6.31758 7.78448,-7.0129 z m 11.75,-3.89806 c -0.6875,-0.27741 -1.8125,-0.27741 -2.5,0 -0.6875,0.27741 -0.125,0.50439 1.25,0.50439 1.375,0 1.9375,-0.22698 1.25,-0.50439 z m 2.5455,-10.45136 c -0.3117,-0.93506 -1.2532,-0.51955 -3.1732,1.40043 -1.5015,1.50149 -2.4253,3.223 -2.0529,3.82558 0.9061,1.46601 5.8191,-3.44696 5.2261,-5.22601 z m 4.2045,3.11364 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m 14,0 c 0,-0.55 -0.7875,-0.99311 -1.75,-0.98469 -1.4955,0.0131 -1.5319,0.15626 -0.25,0.98469 1.8872,1.21961 2,1.21961 2,0 z m -7.75,-2.66228 c -0.6875,-0.27741 -1.8125,-0.27741 -2.5,0 -0.6875,0.27741 -0.125,0.50439 1.25,0.50439 1.375,0 1.9375,-0.22698 1.25,-0.50439 z m -247.11382,85.98901 c -0.19577,-4.56175 -3.96754,-8.45876 -13.91889,-14.38107 -13.28965,-7.90902 -22.80477,-15.55755 -30.96241,-24.88845 -4.07337,-4.65922 -7.84694,-9.39063 -8.38571,-10.51426 -0.53877,-1.12362 0.0451,-0.69295 1.2976,0.95705 7.88899,10.39309 19.34279,20.10598 33.74792,28.61843 13.23901,7.82334 19.899,15.27428 18.80348,21.03663 -0.35268,1.85512 -0.47425,1.68209 -0.58199,-0.82833 z m 301.89444,-0.82673 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -370.93978,-13.75 c -0.47282,-1.2375 -3.10496,-7.65 -5.8492,-14.25 -4.74879,-11.421 -21.77425,-53.36663 -44.61421,-109.91602 -6.87158,-17.01332 -9.65661,-24.91431 -8.10732,-23 2.68435,3.31677 4.36493,7.25555 27.48466,64.41602 25.16363,62.21372 30.16921,74.45428 30.65823,74.97104 0.24516,0.25907 0.86439,-0.19093 1.37606,-1 0.63215,-0.99958 0.93522,0.53206 0.94563,4.77896 0.0162,6.61423 -0.48808,7.67933 -1.89385,4 z m 264.29042,1 c -0.40522,-0.6875 -1.37925,-2.375 -2.1645,-3.75 -1.37076,-2.40022 -1.36074,-2.42018 0.25102,-0.5 2.03116,2.41982 3.78205,5.5 3.12642,5.5 -0.26189,0 -0.80771,-0.5625 -1.21294,-1.25 z m -5.237,-9.5 c -1.0912,-2.55004 -1.06651,-2.60886 0.33949,-0.80887 0.83394,1.06762 1.51625,2.30512 1.51625,2.75 0,1.51991 -0.67833,0.81036 -1.85574,-1.94113 z m -681.43816,-5.5 c -0.27933,-0.6875 -4.61159,-11.375 -9.62725,-23.75 -5.01565,-12.375 -9.55618,-23.4 -10.09007,-24.5 -2.65708,-5.4745 -20.92605,-51.89607 -20.56537,-52.25674 0.22923,-0.22924 1.12547,0.6648 1.99164,1.98674 1.33044,2.03051 29.53614,70.43178 35.05854,85.02 0.98897,2.6125 2.18271,4.75 2.65276,4.75 0.47004,0 0.97579,-21.9375 1.12387,-48.75 l 0.26925,-48.75 0.24027,53.75 c 0.13214,29.5625 0.0634,53.75 -0.15275,53.75 -0.21616,0 -0.62156,-0.5625 -0.90089,-1.25 z m 937.48202,-8.5 c -0.5542,-1.5125 -3.992,-9.95 -7.6397,-18.75 -6.1483,-14.83292 -38.1323,-94.12338 -39.3293,-97.5 -0.2925,-0.825 0.4599,-0.27697 1.6719,1.21784 1.7419,2.14849 23.9496,55.66368 41.9262,101.03216 1.471,3.7125 3.2389,6.75 3.9287,6.75 0.8383,0 1.2541,1.65791 1.2541,5 0,2.75 -0.181,5 -0.4022,5 -0.2212,0 -0.8555,-1.2375 -1.4097,-2.75 z m -259.85191,-6.25 c 0,-4.125 0.17651,-5.8125 0.39226,-3.75 0.21574,2.0625 0.21574,5.4375 0,7.5 -0.21575,2.0625 -0.39226,0.375 -0.39226,-3.75 z m -566.33621,-1.95241 c -0.825,-1.03278 -5.55,-6.49231 -10.5,-12.13227 -4.95,-5.63997 -10.50388,-12.09067 -12.34196,-14.3349 -3.1393,-3.83298 -3.08567,-3.80754 0.88442,0.41958 2.32451,2.475 8.04059,8.91657 12.7024,14.31461 5.3428,6.18658 8.98967,9.6175 9.86558,9.28139 0.95482,-0.36641 1.38956,0.2391 1.38956,1.93538 0,2.92507 -0.0628,2.94128 -2,0.51621 z m 978.71132,-8.04768 c -4.0413,-3.8386 -4.083,-3.93803 -1.0336,-2.46281 3.5571,1.72079 7.3664,1.17661 9.6831,-1.38328 0.8294,-0.91647 3.7526,-11.1135 6.496,-22.66006 11.7059,-49.26811 13.3361,-55.49376 14.5312,-55.49376 2.3625,0 10.612,5.96868 10.612,7.67798 0,1.33935 -0.2667,1.45535 -1.2,0.52202 -2.2151,-2.21508 -5.7666,-1.41716 -6.8991,1.55 -0.5772,1.5125 -4.7988,18.48413 -9.3813,37.71473 -8.9877,37.7176 -9.3202,38.53527 -15.6691,38.53527 -2.0474,0 -4.1944,-1.20296 -7.1392,-4.00009 z m -519.50972,-7.52185 c -1.19658,-2.46293 -1.9656,-4.47806 -1.70893,-4.47806 0.67743,0 4.71808,8.12258 4.2657,8.57497 -0.20964,0.20963 -1.36018,-1.63398 -2.55677,-4.09691 z m -137.63731,1.81507 c -0.54268,-1.4252 -0.42782,-1.54006 0.5598,-0.5598 0.68342,0.67834 0.99067,1.48524 0.68278,1.79313 -0.30789,0.30789 -0.86705,-0.24711 -1.24258,-1.23333 z m 382.46633,1.20687 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -133.53062,-6.5 c 0.85325,-1.65 1.77636,-3 2.05136,-3 0.275,0 -0.19811,1.35 -1.05136,3 -0.85325,1.65 -1.77636,3 -2.05136,3 -0.275,0 0.19811,-1.35 1.05136,-3 z m -149.09501,-2.25 -1.90499,-2.25 2.25,1.90499 c 1.2375,1.04774 2.25,2.06024 2.25,2.25 0,0.80025 -0.80479,0.20945 -2.59501,-1.90499 z m -257.64273,-1.82324 c -0.95575,-0.55683 -2.18512,-1.84837 -2.73194,-2.8701 -0.88434,-1.65241 -0.60686,-1.8467 2.51111,-1.75832 2.38477,0.0676 4.2171,-0.61209 5.73194,-2.12621 2.21013,-2.20908 2.22875,-2.49737 2.51286,-38.90421 0.27187,-34.83997 0.19004,-36.80874 -1.63246,-39.2738 -1.66792,-2.25599 -1.738,-2.84223 -0.53622,-4.48576 1.31018,-1.79178 1.38245,-1.75804 1.38245,0.64552 0,3.34097 2.4021,5.26441 8.5,6.80623 6.73569,1.70308 25.50383,10.76701 25.48469,12.30764 -0.008,0.67774 -0.45153,1.90725 -0.98469,2.73225 -0.84497,1.30749 -0.97134,1.29259 -0.98469,-0.11611 -0.0272,-2.86956 -20.63164,-11.01257 -24.30177,-9.60421 -1.40909,0.54072 -1.63123,4.66598 -1.90713,35.41616 -0.33463,37.29774 -0.55474,38.9572 -5.46373,41.19389 -2.98221,1.35878 -5.29237,1.37007 -7.58042,0.037 z m 980.87266,-0.99934 c -3.6323,-2.85713 -3.3025,-3.92742 1.2101,-3.92742 2.6387,0 4.4427,-0.66033 5.75,-2.10465 1.806,-1.9953 1.905,-4.16808 1.905,-41.81658 0,-38.96077 0.035,-39.667 1.8685,-37.33701 1.0276,1.3062 2.2544,4.03616 2.7261,6.06658 1.1554,4.97325 1.0984,67.64925 -0.066,72.69166 -1.0445,4.52276 -4.9981,8.5 -8.4494,8.5 -1.2702,0 -3.4951,-0.93266 -4.9442,-2.07258 z m -727.76248,-0.67742 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37756 1.66575,1.30637 2.19548,2.12756 1.37244,2.12756 -0.20765,0 -0.99515,-0.7875 -1.75,-1.75 z m 674.73458,-0.83179 c -0.3339,-0.86998 -0.607,-11.85818 -0.607,-24.41821 0,-12.56003 0.2731,-23.54823 0.607,-24.41821 0.5179,-1.34959 2.9152,-1.58179 16.331,-1.58179 h 15.724 l 1.3719,2.75 c 0.7545,1.5125 1.4636,2.975 1.5757,3.25 0.1122,0.275 -6.0914,0.36334 -13.7857,0.1963 -9.6605,-0.20972 -14.4281,0.0603 -15.4067,0.87244 -1.142,0.94772 -1.4172,5.32348 -1.4172,22.53009 v 21.35394 l 17.25,0.29884 17.25,0.29883 -19.143,0.22478 c -16.6681,0.19572 -19.2215,0.0203 -19.75,-1.35701 z m -640.10702,-4.41821 c -1.39353,-2.75 -2.30869,-5 -2.03369,-5 0.275,0 1.64016,2.25 3.03369,5 1.39353,2.75 2.30869,5 2.03369,5 -0.275,0 -1.64016,-2.25 -3.03369,-5 z m -135.42105,0.41667 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 106.68331,-0.4642 c -0.95575,-0.57097 -2.15856,-1.82444 -2.6729,-2.7855 -0.81439,-1.52171 -0.52088,-1.699 2.27283,-1.37285 2.14651,0.25059 4.02359,-0.28518 5.6729,-1.61921 2.3805,-1.92545 2.48203,-2.51903 2.96491,-17.33432 l 0.5,-15.34059 2.62319,4.5 c 3.7583,6.44722 6.99893,13 6.42907,13 -0.26861,0 -1.14306,-1.2375 -1.94321,-2.75 -1.92716,-3.64284 -2.37948,-2.13479 -2.85074,9.50462 -0.29799,7.35989 -0.79259,9.81669 -2.41585,12 -2.22354,2.99071 -7.43934,4.0742 -10.5802,2.19785 z m -17.32113,-1.50764 c -1.86402,-1.49339 -1.85176,-1.51185 0.30887,-0.46481 1.2375,0.59969 2.25,1.29951 2.25,1.55516 0,0.76522 -0.51861,0.54424 -2.55887,-1.09035 z m -435.98818,-3.69483 -3.95295,-4.25 4.25,3.95295 c 3.95246,3.6762 4.70953,4.54705 3.95295,4.54705 -0.16338,0 -2.07588,-1.9125 -4.25,-4.25 z m 612.04705,0.25 c 0.99549,-1.1 2.03498,-2 2.30998,-2 0.275,0 -0.31449,0.9 -1.30998,2 -0.99549,1.1 -2.03498,2 -2.30998,2 -0.275,0 0.31449,-0.9 1.30998,-2 z m 70.3724,-1.75 c -1.2438,-1.58606 -1.2085,-1.62143 0.3776,-0.37756 0.9625,0.75485 1.75,1.54235 1.75,1.75 0,0.82304 -0.8212,0.29331 -2.1276,-1.37244 z m -860.44273,-1.20716 c -1.13868,-0.465 -2.83027,-2.00529 -3.7591,-3.42286 l -1.68878,-2.5774 2.5785,0.98034 c 1.41818,0.53919 3.68278,0.70319 5.03244,0.36445 4.44888,-1.1166 5.40116,-3.87386 5.47756,-15.85988 0.0958,-15.02406 0.13026,-15.08626 6.68444,-12.04967 5.47825,2.53811 5.64238,2.77093 4.24527,6.02218 -0.7727,1.79817 -0.86652,1.81638 -0.92971,0.18045 -0.0502,-1.30031 -0.71237,-1.72836 -2.32029,-1.5 -2.05837,0.29233 -2.27253,0.91573 -2.51449,7.31955 -0.19853,5.25437 0.007,6.62594 0.82613,5.5 1.29763,-1.78471 1.23449,-1.56967 -2.37254,8.07977 -2.66173,7.1206 -2.98014,7.52732 -6,7.6641 -1.754,0.0794 -4.12075,-0.23602 -5.25943,-0.70103 z m -56.822677,-1.62463 c -0.33385,-0.86998 -0.60699,-12.77915 -0.60699,-26.46481 0,-24.12822 0.0627,-24.91659 2.06695,-25.98923 1.33066,-0.71215 7.41859,-0.99184 17.09062,-0.78518 14.3951,0.30758 15.10358,0.41978 16.933057,2.68179 1.05015,1.29843 1.91004,2.64843 1.91087,3 8.2e-4,0.35157 -6.787907,0.50376 -15.086067,0.3382 -10.47798,-0.20905 -15.51955,0.0575 -16.5015,0.87245 -1.1431,0.94869 -1.41393,5.55123 -1.41393,24.02895 v 22.85549 l 18.75,0.29551 18.749997,0.2955 -20.643007,0.22656 c -18.03668,0.19796 -20.71965,0.0268 -21.25,-1.35523 z m 656.834137,0.0266 c -1.86402,-1.49339 -1.85176,-1.51185 0.30887,-0.46481 1.2375,0.59969 2.25,1.29951 2.25,1.55516 0,0.76522 -0.51861,0.54424 -2.55887,-1.09035 z m 256.43127,-0.19481 c -1.2438,-1.58606 -1.2085,-1.62143 0.3776,-0.37756 1.6657,1.30637 2.1955,2.12756 1.3724,2.12756 -0.2076,0 -0.9951,-0.7875 -1.75,-1.75 z m 66.15822,1.25 c 0,-0.55 0.4362,-1.675 0.9694,-2.5 0.5332,-0.825 0.9694,-1.05 0.9694,-0.5 0,0.55 -0.4362,1.675 -0.9694,2.5 -0.5332,0.825 -0.9694,1.05 -0.9694,0.5 z m -559.95167,-2.08333 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m -194.74858,-6.16667 c -13.15296,-14.89436 -19.65342,-22.56769 -18.53003,-21.87339 0.65041,0.40197 5.12391,5.28299 9.94111,10.84671 4.8172,5.56371 10.25612,11.83953 12.08647,13.94626 1.83036,2.10673 3.13338,3.83042 2.8956,3.83042 -0.23779,0 -3.1147,-3.0375 -6.39315,-6.75 z m 485.16963,3.75 c -0.85325,-1.65 -1.32636,-3 -1.05136,-3 0.275,0 1.19811,1.35 2.05136,3 0.85325,1.65 1.32636,3 1.05136,3 -0.275,0 -1.19811,-1.35 -2.05136,-3 z m -59.5,-1.12206 c -3.48506,-3.05516 -3.48625,-3.05912 -0.28024,-0.92654 1.77087,1.17795 3.48492,2.57077 3.80902,3.09516 0.96465,1.56085 0.16463,1.06919 -3.52878,-2.16862 z m 750.07892,1.53873 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m -720.92103,-1.41667 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 179.84211,0.55136 c 0,-0.275 1.35,-1.19811 3,-2.05136 1.65,-0.85325 3,-1.32636 3,-1.05136 0,0.275 -1.35,1.19811 -3,2.05136 -1.65,0.85325 -3,1.32636 -3,1.05136 z m -217.30086,-7.80136 c -5.02019,-6.21173 -5.69914,-7.96586 -5.69914,-14.7241 0,-7.11876 2.32378,-12.55727 7.80897,-18.2759 3.26367,-3.40256 4.08447,-3.75 8.85918,-3.75 4.46565,0 5.80004,0.47218 8.81472,3.1191 3.27628,2.87662 11.25019,15.48118 10.35808,16.37329 -0.21395,0.21394 -1.70171,-2.11824 -3.30613,-5.18264 -6.39364,-12.2117 -16.97346,-12.32542 -24.28482,-0.26102 -2.86414,4.72609 -3.25,6.21225 -3.25,12.51749 0,5.95933 0.41265,7.76276 2.46986,10.79423 3.32935,4.90607 2.43976,4.59938 -1.77072,-0.61045 z m 235.11336,1.56689 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.3323 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m 11,0 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.3323 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m -210.73355,-2.90022 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m -631,-4 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.3323,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 734.04502,-4.93113 c -1.16818,-1.97992 -2.12397,-3.77503 -2.12397,-3.98912 0,-0.2141 -1.50696,-3.00088 -3.3488,-6.19284 -8.87638,-15.38303 -21.1645,-39.23145 -18.48698,-35.87901 2.23306,2.79596 15.30139,26.08618 22.09589,39.37902 2.43001,4.75412 3.65011,6.19165 4.9636,5.84816 1.49038,-0.38974 1.58031,-0.14504 0.62349,1.69641 -0.61496,1.18351 -1.22637,2.28355 -1.35869,2.44454 -0.13231,0.16098 -1.19636,-1.32724 -2.36454,-3.30716 z m 450.49955,-1.0242 c -0.9649,-2.51469 -0.6803,-3.16355 0.4986,-1.13634 0.5837,1.00375 0.8506,2.03566 0.5931,2.29313 -0.2575,0.25747 -0.7487,-0.26309 -1.0917,-1.15679 z m -963.62352,-4.27783 c 0,-1.39713 -8.05142,-5.61615 -17.38146,-9.10803 -3.8181,-1.42898 -7.51793,-3.53636 -8.31121,-4.73398 -1.39159,-2.10087 -1.34137,-2.13739 1.88145,-1.36794 10.15504,2.4245 23.20639,9.60557 24.17254,13.30013 0.30764,1.17643 0.3522,2.34612 0.099,2.59931 -0.25317,0.25318 -0.46032,-0.0571 -0.46032,-0.68949 z m -65.56291,-6.43351 -2.93709,-3.25 3.25,2.93709 c 1.7875,1.6154 3.25,3.0779 3.25,3.25 0,0.77256 -0.82513,0.0924 -3.56291,-2.93709 z m -6.98414,-8 -3.95295,-4.25 4.25,3.95295 c 2.3375,2.17412 4.25,4.08662 4.25,4.25 0,0.75658 -0.87085,-4.9e-4 -4.54705,-3.95295 z m -155.82941,0.71134 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z m 754.81772,0.28866 c 0.30731,-0.9625 0.81799,-2.38879 1.13485,-3.16954 0.64414,-1.58716 -3.76847,-3.81752 -14.84573,-7.50379 -3.79739,-1.2637 -7.37498,-3.15888 -8.2079,-4.34804 -0.81206,-1.15938 -1.33666,-2.24778 -1.16577,-2.41867 0.97889,-0.9789 21.33896,7.08021 25.00894,9.89926 1.81234,1.39213 1.80351,1.54533 -0.30874,5.36193 -1.19591,2.16087 -1.92295,3.14135 -1.61565,2.17885 z m 201.69546,-3.08526 c -1.0555,-1.27177 -7.9025,-4.20395 -20.294,-8.69066 -5.068,-1.83505 -7.8157,-4.33444 -6.3625,-5.78765 0.7764,-0.77633 17.1849,5.57048 23.2698,9.00075 3.4926,1.96887 5.25,3.60454 5.25,4.88621 0,2.27561 -0.3684,2.39253 -1.8633,0.59135 z m -807.69963,-5.91474 -2.93709,-3.25 3.25,2.93709 c 3.02946,2.73778 3.70965,3.56291 2.93709,3.56291 -0.1721,0 -1.6346,-1.4625 -3.25,-3.25 z m -122.99243,-3.03362 c -0.27091,-0.70599 -0.36929,-9.36849 -0.21862,-19.25 l 0.27396,-17.96638 2,2.95492 c 1.75365,2.59095 2.04345,4.96209 2.35277,19.25 0.34812,16.08006 0.32461,16.29508 -1.78138,16.29508 -1.17379,0 -2.35582,-0.57763 -2.62673,-1.28362 z m 1066.55536,-2.21638 c 1.2917,-1.375 2.5736,-2.5 2.8486,-2.5 0.275,0 -0.5569,1.125 -1.8486,2.5 -1.2917,1.375 -2.5736,2.5 -2.8486,2.5 -0.275,0 0.5569,-1.125 1.8486,-2.5 z m -540.00002,0.12245 c 0,-0.20766 0.7875,-0.99516 1.75,-1.75 1.58606,-1.24388 1.62143,-1.20851 0.37756,0.37755 -1.30637,1.66575 -2.12756,2.19548 -2.12756,1.37245 z m -424.25,-4.34585 c 1.7875,-0.22182 4.7125,-0.22182 6.5,0 1.7875,0.22183 0.325,0.40333 -3.25,0.40333 -3.575,0 -5.0375,-0.1815 -3.25,-0.40333 z M 333.04314,492.385 c 22.21886,-0.5012 23.4396,-0.62882 24.17971,-2.52785 0.67533,-1.73282 0.78885,-1.63262 0.84974,0.75 l 0.0703,2.75 -24.25,-0.22215 -24.25,-0.22215 z m 697.97216,-0.77785 c -1.2438,-1.58606 -1.2085,-1.62143 0.3776,-0.37755 1.6657,1.30636 2.1955,2.12755 1.3724,2.12755 -0.2076,0 -0.9951,-0.7875 -1.75,-1.75 z m 173.1276,-0.62755 c 0,-0.20766 0.7875,-0.99516 1.75,-1.75 1.5861,-1.24388 1.6214,-1.20851 0.3776,0.37755 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37245 z m -536.00002,-5 c 0,-0.20766 0.7875,-0.99516 1.75,-1.75 1.58606,-1.24388 1.62143,-1.20851 0.37756,0.37755 -1.30637,1.66575 -2.12756,2.19548 -2.12756,1.37245 z m 61.343,-9.38776 c -1.04962,-0.6665 43.23787,-0.63142 71.657,0.0568 6.325,0.15316 -6.95,0.36835 -29.5,0.4782 -22.55,0.10984 -41.52065,-0.13089 -42.157,-0.53497 z m 126.407,0.0173 c 8.3875,-0.16726 22.1125,-0.16726 30.5,0 8.3875,0.16726 1.525,0.3041 -15.25,0.3041 -16.775,0 -23.6375,-0.13684 -15.25,-0.3041 z m 198.06302,-5.3e-4 c 8.9721,-0.1659 23.3721,-0.16557 32,7.3e-4 8.6278,0.1663 1.287,0.30204 -16.313,0.30164 -17.6,-4e-4 -24.6592,-0.13647 -15.687,-0.30237 z m 263.5294,-2.0168 c -1.0526,-0.66804 37.4431,-0.62754 60.6576,0.0638 5.225,0.1556 -6.025,0.37021 -25,0.47689 -18.975,0.10669 -35.0209,-0.13663 -35.6576,-0.54071 z m -622.52992,-1.9178 c 0.72187,-0.28888 1.58438,-0.25335 1.91667,0.079 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28495 -0.60417,-0.60417 z m 24,0 c 0.72187,-0.28888 1.58438,-0.25335 1.91667,0.079 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28495 -0.60417,-0.60417 z m -19.0625,-0.97917 c 0.6875,-0.27741 1.8125,-0.27741 2.5,0 0.6875,0.27741 0.125,0.50438 -1.25,0.50438 -1.375,0 -1.9375,-0.22697 -1.25,-0.50438 z m 13,0 c 0.6875,-0.27741 1.8125,-0.27741 2.5,0 0.6875,0.27741 0.125,0.50438 -1.25,0.50438 -1.375,0 -1.9375,-0.22697 -1.25,-0.50438 z m -6.48097,-1.03071 c 0.97297,-0.25354 2.32297,-0.23687 3,0.0371 0.67703,0.27392 -0.11903,0.48137 -1.76903,0.46099 -1.65,-0.0204 -2.20394,-0.2445 -1.23097,-0.49805 z m -179.95552,-2.0556 c 9.24743,-0.16519 24.09743,-0.16488 33,6.9e-4 8.90257,0.16557 1.33649,0.30072 -16.81351,0.30034 -18.15,-3.8e-4 -25.43392,-0.13584 -16.18649,-0.30103 z m 722.49901,0.0655 c 0.7219,-0.28887 1.5844,-0.25334 1.9167,0.079 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60417 z m 51,0 c 0.7219,-0.28887 1.5844,-0.25334 1.9167,0.079 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60417 z\"\n         id=\"path82\"\n         inkscape:connector-curvature=\"0\" />\n      <path\n         style=\"fill:#8c8c8c;fill-opacity:1\"\n         d=\"m 1257.3113,716.7253 c -20.1957,-4.38095 -37.3325,-13.05446 -52.9822,-26.81611 -3.4725,-3.05362 -6.7491,-5.55204 -7.2813,-5.55204 -2.2573,0 -1.9285,3.4991 1.015,10.8012 4.3176,10.7111 4.7667,14.12912 2.2629,17.2219 l -2.0052,2.4769 -55.3211,0.27508 c -56.9632,0.28324 -59.7732,0.11671 -61.7964,-3.66223 -0.7905,-1.47646 3.9301,-1.58971 55.8242,-1.33916 56.069,0.27071 56.7119,0.25119 58.9017,-1.78895 3.2962,-3.07092 2.7972,-6.3546 -3.286,-21.61972 -3.025,-7.59095 -5.5,-13.96497 -5.5,-14.16447 0,-0.1995 3.0375,2.64619 6.75,6.32375 17.2209,17.05881 33.9145,26.51805 56.4224,31.97104 15.1817,3.67807 32.8316,3.53499 54.9412,-0.44536 9.0125,-1.62252 21.3364,-3.44729 27.3864,-4.05505 13.0539,-1.31134 15.1449,-2.38714 15.9887,-8.22597 0.9226,-6.38333 0.1471,-93.99136 -0.85,-96.0303 -0.677,-1.38433 -0.5165,-1.62899 0.75,-1.14301 1.4525,0.55738 1.6113,5.62261 1.6113,51.38634 0,27.9224 0.2663,52.09926 0.5917,53.72634 0.4128,2.06393 0.186,3.0112 -0.75,3.13319 -0.7379,0.0962 -7.4167,1.02509 -14.8417,2.06427 -13.5053,1.89015 -18.0857,2.63341 -34,5.51713 -10.5365,1.90924 -34.9182,1.87878 -43.8316,-0.0548 z m 99.5816,-0.61815 -2.25,-2.25 69.8309,-0.5 c 67.666,-0.4845 69.8749,-0.56018 71.25,-2.44113 1.1686,-1.59843 1.4203,-8.92513 1.4257,-41.5 l 0.01,-39.55887 1.9868,3 c 1.8964,2.86351 1.9871,4.76506 1.9934,41.79545 l 0.01,38.79546 -2.4545,2.45454 -2.4546,2.45455 h -68.5454 -68.5455 l -2.25,-2.25 z m -362.48092,-2.34825 -3.0302,-2.90175 34.63062,-0.35002 c 23.3011,-0.2355 35.4381,-0.72623 37.0991,-1.5 1.5883,-0.73989 2.8533,-2.52176 3.5473,-4.99674 0.9762,-3.48145 1.2118,-3.68625 2.4814,-2.15655 2.4331,2.93171 1.762,8.45345 -1.3531,11.1329 -2.6609,2.28886 -3.33,2.37052 -19.45,2.37347 -9.1818,0.002 -24.3893,0.29497 -33.7945,0.65175 l -17.10032,0.64869 z m -229.7691,-2.3704 c -1.1,-0.46303 -2.68703,-1.67201 -3.52674,-2.68661 -1.48084,-1.78928 -0.0678,-1.83612 47,-1.55809 26.68971,0.15765 49.46209,0.0559 50.6053,-0.22603 4.3168,-1.06472 4.42144,-2.63117 4.42144,-66.18558 v -60.53086 l 23.92479,-47.7973 c 17.06554,-34.09378 24.23305,-47.48904 25,-46.72209 2.94815,2.94815 0.87012,8.01918 -21.67479,52.89309 l -22.75,45.28212 -0.5,62.339 -0.5,62.339 -2.36078,1.911 c -2.25286,1.82363 -4.53877,1.9081 -50,1.84761 -26.20157,-0.0349 -48.53922,-0.44223 -49.63922,-0.90526 z m -766.36021,-3.62329 -3.245575,-2.90806 53.743278,-0.25973 c 59.525237,-0.28768 57.678437,-0.0769 58.925427,-6.72395 0.71743,-3.82424 2.02089,-3.74118 3.52878,0.22486 1.33054,3.49959 -0.5115,8.67344 -3.58688,10.07467 -1.61887,0.73761 -19.845627,1.34386 -54.278387,1.8054 l -51.841067,0.69488 z m 1261.50563,1.56003 c -42.5255,-6.69922 -77.8679,-37.9979 -91.4291,-80.96809 -4.4694,-14.1619 -5.7008,-22.78924 -5.6377,-39.5 0.1286,-34.04562 11.8141,-62.87603 34.8904,-86.08151 30.9457,-31.11879 75.7028,-41.32575 114.9191,-26.20752 l 7.8882,3.04094 78.2103,-0.74226 c 58.3318,-0.5536 78.7571,-0.44959 80.3618,0.40923 2.1453,1.14813 2.1516,1.26465 2.1516,39.9163 0,40.8835 -0.031,41.16482 -4.5776,41.16482 -3.156,0 -3.9911,-1.54151 -5.8388,-10.77831 -2.0115,-10.05575 -6.1399,-22.39626 -10.5285,-31.47169 l -3.2641,-6.75 h -18.8955 -18.8955 v 29.9819 29.9819 l 23.75,0.2681 23.75,0.2681 0.2774,14.86454 c 0.1887,10.1102 -0.09,15.30766 -0.8725,16.25 -0.9185,1.10673 -5.7523,1.38546 -24.0273,1.38546 h -22.8776 v 36.5 36.5 h 25.0147 25.0147 l 1.9942,-3.25 c 3.3416,-5.4461 8.0924,-18.67762 10.6818,-29.75 3.107,-13.28597 4.1267,-15.41491 7.5757,-15.81638 2.1795,-0.25369 2.9229,0.22284 3.7528,2.40543 0.6654,1.75031 0.9333,16.06442 0.7504,40.10355 -0.2428,31.92799 -0.5031,37.51999 -1.7843,38.32926 -2.3766,1.50125 -135.2925,1.28568 -136.8,-0.22186 -0.9175,-0.91745 -1.2,-24.92202 -1.2,-101.94911 V 506.45893 l -3.25,-2.45219 c -4.466,-3.36965 -13.9023,-8.83065 -14.3996,-8.33334 -0.3573,0.35734 -3.3776,12.65829 -16.4957,67.18375 -1.7201,7.15 -3.5713,13.5625 -4.1136,14.25 -1.4465,1.83385 -5.5299,1.52322 -6.5726,-0.5 -0.4961,-0.9625 -1.172,-7.825 -1.5021,-15.25 -1.0382,-23.35457 -7.4386,-40.99671 -19.0586,-52.53382 -13.5594,-13.46254 -25.2968,-13.98969 -36.835,-1.65435 -19.676,21.03519 -31.2014,62.16591 -27.7823,99.14659 2.5809,27.91511 12.1052,52.5187 26.1374,67.51914 7.8825,8.42639 13.1222,10.99025 20.8172,10.18597 3.1702,-0.33136 6.9545,-1.05507 8.4095,-1.60825 l 2.6454,-1.00578 v -26.48749 -26.48749 l -6.1128,-4.15112 c -7.2105,-4.89656 -16.0966,-9.06519 -24.4043,-11.44849 -3.2906,-0.94399 -6.5454,-2.16713 -7.2329,-2.71807 -1.588,-1.27258 -1.6163,-4.99051 -0.05,-6.55684 1.7289,-1.72889 97.8711,-1.72889 99.6,0 0.8995,0.89946 1.2,13.02857 1.2,48.42857 0,39.39775 -0.2347,47.46331 -1.4157,48.64428 -0.8861,0.88605 -4.7208,1.65585 -10.25,2.0576 -4.8589,0.35304 -16.4843,2.02671 -25.8343,3.71925 -18.4247,3.33526 -37.7336,4.5128 -47.8546,2.91839 z m 107.8723,-7.96809 c 2.4004,0 4.6613,-0.48068 5.0244,-1.06817 0.3631,-0.5875 1.3262,-0.81259 2.1403,-0.50021 0.8141,0.31238 2.3959,-0.0735 3.5151,-0.85741 1.5512,-1.08646 2.5944,-1.17053 4.3874,-0.35357 1.2938,0.5895 2.1149,1.45601 1.8247,1.92559 -0.2902,0.46957 3.4489,0.85377 8.3091,0.85377 7.5993,0 9.0766,-0.28008 10.5493,-2 0.9418,-1.1 1.4918,-2.05625 1.2222,-2.125 -1.9479,-0.4967 -3.1582,-0.37222 -4.2402,0.43609 -0.7993,0.59711 -1.7641,0.50715 -2.6758,-0.24952 -0.7842,-0.65082 -2.2467,-1.04342 -3.25,-0.87244 -1.2574,0.21427 -1.7762,-0.26191 -1.6698,-1.5325 0.1316,-1.57006 -0.348,-1.74909 -3.2349,-1.20751 -2.7263,0.51147 -3.2794,0.34925 -2.8271,-0.82932 0.3092,-0.80584 1.16,-1.69455 1.8906,-1.97491 1.421,-0.54529 3.1006,-6.39458 2.1183,-7.37693 -0.324,-0.32397 -1.5681,0.27071 -2.7647,1.3215 -2.0317,1.7841 -2.1318,1.79039 -1.5125,0.0952 0.546,-1.49438 0.2899,-1.69686 -1.4487,-1.14506 -1.5244,0.48383 -1.9881,0.29335 -1.6666,-0.68461 0.245,-0.74522 1.6482,-1.49733 3.1183,-1.67136 1.4701,-0.17403 2.6729,-0.79163 2.6729,-1.37245 0,-0.73657 0.3883,-0.73378 1.2835,0.009 0.8137,0.67529 1.8204,0.72572 2.75,0.13776 1.1753,-0.74329 1.0527,-0.93053 -0.6168,-0.9428 -1.1459,-0.008 -2.3675,-0.29948 -2.7148,-0.64679 -1.1395,-1.13947 1.3244,-4.36852 3.3333,-4.36852 1.2981,0 1.9648,-0.6786 1.9648,-2 0,-1.1 0.45,-2 1,-2 0.55,0 1,0.70532 1,1.56739 0,2.47457 4.0292,0.81257 7.606,-3.13736 1.7083,-1.88652 3.6208,-3.43003 4.25,-3.43003 0.7079,0 1.144,-1.92841 1.144,-5.05902 0,-5.14749 -1.3314,-5.92264 -2.8981,-1.68733 -0.5435,1.46919 -1.8616,2.16221 -4.658,2.44909 -2.145,0.22005 -4.6418,1.07139 -5.5484,1.89185 -1.4654,1.32619 -1.7176,1.31141 -2.2719,-0.13321 -0.9507,-2.47745 -0.7439,-4.65378 0.3764,-3.96138 0.55,0.33992 1,-0.0835 1,-0.94098 0,-1.07319 0.9559,-1.55902 3.0674,-1.55902 2.5479,0 2.9662,-0.31862 2.4702,-1.88158 -0.6613,-2.08367 1.484,-3.43108 3.954,-2.48328 0.8504,0.32633 1.7551,-0.11454 2.1048,-1.02564 0.3372,-0.87891 1.016,-1.34904 1.5084,-1.04474 0.4987,0.30819 0.8952,-3.01658 0.8952,-7.50574 0,-5.73844 -0.3599,-8.08175 -1.25,-8.13797 -1,-0.0632 -1,-0.17982 0,-0.58333 0.6995,-0.28225 1.25,-2.21844 1.25,-4.3963 0,-3.73818 -0.099,-3.85437 -2.5,-2.94142 -1.375,0.52277 -2.5,0.56674 -2.5,0.0977 0,-1.42572 2.8436,-3.31236 3.9562,-2.62476 0.7013,0.43342 1.0438,-3.02159 1.0438,-10.52892 v -11.17403 l -2.4648,1.61501 c -3.1239,2.04687 -4.5352,2.04892 -4.5352,0.007 0,-1.62227 -0.1379,-1.61784 -6.75,0.21722 -1.8129,0.50313 -2.25,0.21992 -2.25,-1.4577 0,-4.14596 10.0875,-11.38848 11.2027,-8.04314 0.2629,0.78876 1.4301,0.81131 4.0827,0.0789 2.1773,-0.60119 3.7146,-0.6457 3.7146,-0.10756 0,0.53187 9.4227,0.89335 22.3991,0.85929 25.7123,-0.0675 23.5617,0.89587 23.5872,-10.56615 0.01,-4.21337 0.4823,-6.51644 1.5137,-7.37244 0.825,-0.68469 1.5,-1.63979 1.5,-2.12244 0,-0.48291 -10.2982,-0.87781 -22.885,-0.87781 h -22.885 l -1.5352,2.34302 c -1.499,2.2878 -1.4206,2.39976 3.3263,4.75 4.9073,2.42966 7.6638,6.16036 3.8064,5.15162 -1.161,-0.30361 -2.4808,0.24021 -3.3414,1.37677 -1.3706,1.81011 -1.4237,1.79955 -1.4543,-0.28962 -0.05,-3.39936 -1.1006,-5.33314 -2.8888,-5.31648 -1.3603,0.0127 -1.3985,0.17008 -0.2221,0.91466 2.0911,1.32349 -1.2132,6.0808 -4.194,6.03823 -2.0643,-0.0295 -2.0991,-0.12883 -0.4769,-1.36025 2.1449,-1.62823 2.2821,-3.60795 0.25,-3.60795 -0.825,0 -1.3875,-0.3375 -1.25,-0.75 0.3439,-1.03163 -1.3801,-1.34348 -3.5754,-0.64673 -2.5601,0.81254 -2.8089,0.2095 -1.1962,-2.89893 0.7716,-1.48739 1.0165,-2.70434 0.5441,-2.70434 -0.4724,0 -1.5707,-0.27314 -2.4407,-0.60699 -1.1287,-0.43313 -1.5818,-0.0136 -1.5818,1.46482 0,2.84433 -3.597,4.72154 -5.7011,2.9753 -1.331,-1.10464 -1.8018,-0.96136 -3.058,0.9306 -0.8167,1.22995 -2.105,2.23627 -2.8629,2.23627 -1.7202,0 -1.8246,-2.67385 -0.128,-3.27976 0.6875,-0.24554 0.8935,-0.82705 0.4578,-1.29224 -0.8155,-0.87055 -12.3671,-0.75661 -13.8117,0.13623 -1.4627,0.90399 0.2889,3.51183 1.9951,2.97032 1.3497,-0.4284 1.6543,0.20702 1.6543,3.4516 0,3.447 -0.3693,4.10539 -2.7728,4.94323 -3.3098,1.15383 -3.5412,2.58898 -0.6653,4.12808 1.524,0.81563 2.4098,0.82537 3.2,0.0352 1.5861,-1.58616 3.0011,-1.33889 2.331,0.40736 -0.3507,0.91371 0,1.5 0.893,1.5 1.6986,0 1.8365,0.88328 0.4686,3 -0.5661,0.8759 -0.9757,1.01043 -0.9847,0.32332 -0.023,-1.79937 -3.3072,-2.1459 -5.2023,-0.54898 -1.7009,1.4333 -4.3017,0.82542 -3.313,-0.77434 0.2929,-0.47399 0.075,-1.14446 -0.4837,-1.48992 -1.506,-0.93075 -1.2429,3.79775 0.3311,5.95028 0.9335,1.27675 1.5659,1.489 2.059,0.69113 1.4939,-2.41729 3.4314,-1.07131 4.0927,2.84338 0.4989,2.95287 1.4295,4.44057 3.5676,5.70358 3.4072,2.01269 2.0274,3.63287 -2.3167,2.72032 -2.0831,-0.43759 -2.75,-0.19464 -2.75,1.00177 0,1.69193 1.3323,1.89602 4.4386,0.67992 1.1532,-0.45146 3.0954,-0.18191 4.7936,0.66528 2.2792,1.13699 2.6217,1.70541 1.6981,2.81824 -0.6363,0.7667 -1.6324,1.10013 -2.2135,0.74096 -0.6543,-0.40437 -0.8181,-0.0312 -0.43,0.98008 1.4331,3.73462 -4.0362,9.58079 -9.0368,9.65954 -2.0326,0.032 -2.8277,1.49272 -2.3549,4.32595 0.072,0.43478 -0.3226,1.63968 -0.878,2.67756 -1.3101,2.44788 -0.2967,5.07646 1.6666,4.32307 0.835,-0.32042 1.8983,0.0325 2.3629,0.78418 0.4645,0.75172 1.1582,1.05317 1.5415,0.66989 0.3833,-0.38328 0.07,-1.49525 -0.6956,-2.47104 -1.2239,-1.55931 -1.2068,-1.62972 0.141,-0.58137 0.9859,0.7668 2.0573,0.86424 3,0.27283 0.8066,-0.50599 2.229,-0.68287 3.1609,-0.39307 1.0896,0.33883 2.2923,-0.38579 3.3698,-2.03017 1.1387,-1.73796 2.9255,-2.75697 5.5778,-3.18108 2.1463,-0.34321 4.1439,-1.01491 4.4392,-1.49266 0.2952,-0.47776 1.6666,-0.86865 3.0474,-0.86865 2.0315,0 2.4495,0.42929 2.191,2.25 -0.3686,2.59536 -4.0992,3.59276 -6.3746,1.70432 -1.1781,-0.97768 -1.445,-0.82974 -1.445,0.80079 0,1.1 -0.6834,2.56721 -1.5188,3.26046 -1.2408,1.02977 -1.8668,0.94548 -3.4204,-0.46052 -1.8051,-1.63361 -1.9555,-1.62031 -2.9629,0.26202 -0.8468,1.58228 -0.7113,2.12594 0.6704,2.6903 1.5749,0.64325 1.5506,0.77552 -0.2683,1.46062 -2.9047,1.09408 -12.3651,0.38886 -14.1001,-1.05108 -1.0627,-0.88191 -1.7915,-0.9253 -2.5641,-0.15267 -0.5937,0.59371 -1.6997,0.84149 -2.4577,0.55063 -0.7809,-0.29967 -1.3781,0.10039 -1.3781,0.92315 0,1.60725 -3.9398,5.61007 -4.1013,4.16697 -0.056,-0.49775 10e-5,-2.47999 0.1242,-4.40499 0.124,-1.925 0.2821,-4.85 0.3513,-6.5 0.1099,-2.62064 0.4955,-3 3.0498,-3 2.3271,0 3.0714,-0.54843 3.6466,-2.68674 0.3974,-1.4777 0.4991,-2.91026 0.2259,-3.18346 -1.3678,-1.36772 0.9938,-2.40694 3.7035,-1.6298 3.2999,0.94639 5.2191,-0.47829 2.0145,-1.49539 -1.108,-0.35166 -2.0145,-1.31062 -2.0145,-2.13101 0,-0.8204 -0.4697,-1.20134 -1.0438,-0.84653 -0.5741,0.35481 -1.71,0.0922 -2.5242,-0.58348 -0.8142,-0.67573 -1.7939,-0.915 -2.1772,-0.53172 -0.3833,0.38328 -0.035,1.11552 0.7742,1.62719 1.2338,0.78028 1.1888,0.93278 -0.279,0.94563 -3.1501,0.0276 -5.8839,-3.78541 -5.9538,-8.30423 -0.1945,-12.56613 0.1229,-14.68048 2.2038,-14.68048 1.1,0 1.8875,0.50625 1.75,1.125 -0.1375,0.61875 0.2675,1.31625 0.9,1.55 0.7322,0.2706 1.15,-0.88101 1.15,-3.17 0,-3.16473 -0.3462,-3.66424 -2.8924,-4.17348 -2.7707,-0.55413 -2.8873,-0.80009 -2.7711,-5.84189 0.067,-2.89487 -0.115,-5.6518 -0.4039,-6.12652 -0.2888,-0.47471 -0.1342,-3.31917 0.3437,-6.32102 0.5323,-3.34347 0.5033,-5.68385 -0.075,-6.04111 -1.1371,-0.70273 -0.107,-8.00098 1.1292,-8.00098 0.4781,0 0.8692,-0.47656 0.8692,-1.05902 0,-0.58246 -0.45,-0.7809 -1,-0.44098 -0.55,0.33992 -1,0.12735 -1,-0.47237 0,-0.59972 0.6379,-1.33517 1.4175,-1.63434 1.2233,-0.46944 1.2233,-1.00866 0,-3.9365 -0.7796,-1.8659 -1.4175,-5.19663 -1.4175,-7.40162 0,-4.3773 1.8298,-6.20762 7.5,-7.50214 2.7572,-0.62949 2.846,-0.57047 1.0972,0.72933 -1.0468,0.77807 -1.5826,1.9323 -1.191,2.56594 1.024,1.65673 2.6778,1.41902 4.1518,-0.59673 0.7032,-0.96163 1.5154,-1.5115 1.805,-1.22192 1.2163,1.21627 -1.2744,7.7499 -4.1577,10.90674 -1.7113,1.87359 -2.9125,3.72836 -2.6694,4.1217 0.4144,0.67057 2.0444,1.05685 10.3049,2.44216 1.8374,0.30814 3.8061,0.65914 4.375,0.78 0.5688,0.12086 1.2562,-0.38997 1.5275,-1.13519 0.3588,-0.98546 -0.084,-1.1716 -1.625,-0.68261 -1.3475,0.4277 -2.1183,0.2394 -2.1183,-0.51751 0,-0.8953 -0.3713,-0.88168 -1.5,0.0551 -1.2138,1.00734 -1.5,0.97346 -1.5,-0.17756 0,-0.78234 0.5444,-1.96686 1.2098,-2.63225 0.9464,-0.94642 0.8137,-1.88046 -0.6098,-4.29019 -1.3331,-2.25678 -1.5229,-3.37711 -0.7098,-4.19019 0.6104,-0.61039 1.1098,-2.32167 1.1098,-3.80282 0,-2.6098 2.5304,-4.81576 3.2045,-2.79358 0.4879,1.46392 3.7955,-0.0749 3.7955,-1.76585 0,-0.79116 1.0958,-2.53431 2.4352,-3.87367 1.3394,-1.33936 2.5769,-3.9064 2.75,-5.70454 0.1731,-1.79814 0.7145,-3.11842 1.203,-2.93394 0.4885,0.18448 1.2134,-0.19075 1.6108,-0.83385 0.5126,-0.82929 0.8962,-0.71716 1.3193,0.38566 0.3282,0.85519 -0.059,2.21078 -0.8608,3.01241 -0.8016,0.80163 -1.4575,2.09895 -1.4575,2.88292 0,0.78397 -1.1035,2.61611 -2.4523,4.07143 -1.3487,1.45531 -2.0133,2.64602 -1.4769,2.64602 0.5364,0 0.2382,1.125 -0.6628,2.5 -0.9009,1.375 -2.2131,2.5 -2.916,2.5 -1.9048,0 -2.5747,2.68651 -0.9965,3.99628 0.9455,0.78468 1.9578,0.8315 3.2321,0.14948 1.0206,-0.54616 2.5118,-0.91489 3.314,-0.81939 1.8057,0.21498 2.5604,-1.6257 0.8942,-2.1811 -0.7573,-0.25245 -0.9458,0.11441 -0.5008,0.975 0.3923,0.75885 0,0.50392 -0.8646,-0.56652 -1.9182,-2.36595 -0.8709,-3.66468 3.3517,-4.15632 3.4214,-0.39836 3.5865,-0.18473 1.9201,2.48367 -1.9247,3.08195 -0.348,5.3889 3.157,4.61908 1.8592,-0.40836 3.0008,-0.2565 3.0008,0.3992 0,0.61577 1.4532,0.33538 3.4754,-0.67054 2.8095,-1.39757 3.4758,-2.30369 3.4778,-4.72884 v -3 l -1.8572,2.41596 c -1.2864,1.67334 -2.9256,2.45141 -5.3328,2.53128 -3.2248,0.107 -3.428,-0.0626 -2.816,-2.3508 0.3627,-1.35637 1.2447,-2.66118 1.96,-2.89959 0.9186,-0.30622 1.1038,0.18597 0.6307,1.67657 -0.5936,1.87004 -0.4064,2.01101 1.645,1.23936 1.6484,-0.62003 2.302,-1.64336 2.2705,-3.55457 -0.035,-2.09907 0.3467,-2.58165 1.75,-2.21467 1.1457,0.29961 1.7943,-0.0813 1.7943,-1.05379 0,-1.03043 -0.6465,-1.35394 -1.999,-1.00026 -1.0995,0.28751 -2.2518,0.11378 -2.5607,-0.38607 -0.329,-0.53237 -1.365,-0.47891 -2.501,0.12906 -3.1777,1.70064 -2.2103,-0.58843 1.4184,-3.35612 2.5173,-1.92008 3.6435,-2.27513 4.5,-1.41869 0.8564,0.85644 1.1423,0.84201 1.1423,-0.0577 0,-0.66 -0.3937,-1.2 -0.875,-1.2 -0.4812,0 -1.145,-1.35 -1.475,-3 -0.5858,-2.92901 -2.8896,-4.0393 -4.15,-2 -0.3399,0.55 0.083,1 0.941,1 1.6898,0 1.9489,0.85661 0.7937,2.62411 -0.4913,0.75176 -1.5361,0.82447 -3.1542,0.21951 -1.8468,-0.69047 -2.1427,-1.18142 -1.25,-2.0741 0.6432,-0.64324 1.1695,-1.95716 1.1695,-2.91983 0,-2.6708 3.144,-4.03506 4.6265,-2.00757 0.6655,0.91011 1.5359,1.32882 1.9342,0.93047 0.3984,-0.39834 0.1189,-1.45368 -0.621,-2.3452 -1.1432,-1.37756 -1.0896,-1.76402 0.3575,-2.57386 1.9888,-1.11294 2.2745,-5.88181 0.4612,-7.69517 -0.8899,-0.88985 -0.9281,-1.44234 -0.1348,-1.95 1.1379,-0.72821 2.9184,-5.14927 2.5865,-6.42237 -0.1023,-0.39271 0.399,-0.48947 1.1142,-0.21504 0.7152,0.27444 1.8905,-0.60385 2.6119,-1.95176 1.2913,-2.41274 5.0638,-4.2943 5.0638,-2.52557 0,0.49851 -0.54,0.90638 -1.2,0.90638 -0.9117,0 -0.902,0.29799 0.04,1.24027 0.6821,0.68215 3.5846,1.35156 6.45,1.48756 19.6817,0.93422 20.0315,0.91916 21.6154,-0.93066 1.9574,-2.28613 3.0943,-2.28898 3.0943,-0.008 0,1.49202 0.987,1.8284 5.9387,2.02395 4.8354,0.19096 6.2836,-0.13564 7.795,-1.75791 1.0209,-1.09585 3.2985,-2.10235 5.0613,-2.23667 1.7627,-0.13431 3.205,-0.45056 3.205,-0.70276 0,-1.5602 -3.7201,-4.10356 -5.905,-4.03709 -1.4272,0.0434 -2.0325,0.30592 -1.345,0.58334 2.9317,1.18296 0.4899,4.68294 -2.5,3.58342 -0.6846,-0.25288 -1.2471,-1.08659 -1.2471,-1.85275 0,-0.76615 -0.6225,-1.39301 -1.3834,-1.39301 -0.7608,0 -1.6175,-0.89533 -1.9036,-1.98963 -0.4981,-1.90444 -0.7064,-1.92419 -4.8667,-0.46123 -2.3905,0.84062 -5.7952,3.15237 -7.566,5.13722 -2.6483,2.96842 -3.4807,3.39219 -4.6906,2.38805 -0.8091,-0.67142 -1.6102,-2.39063 -1.7803,-3.82047 -0.1702,-1.42984 -0.9844,-2.82009 -1.8094,-3.08944 -1.3,-0.42445 -1.3123,-0.26244 -0.092,1.21526 1.059,1.28275 1.1235,1.98918 0.2602,2.85247 -0.8633,0.86329 -2.0787,0.63619 -4.9076,-0.91699 -2.0681,-1.13544 -4.3227,-1.85837 -5.0102,-1.60651 -0.6875,0.25187 -1.25,-0.20642 -1.25,-1.01841 0,-0.81199 0.7217,-1.75328 1.6038,-2.09176 0.9156,-0.35138 1.3581,-1.25538 1.0313,-2.10699 -0.381,-0.99292 0.05,-1.49157 1.2893,-1.49157 2.0534,0 3.5462,2.59114 2.0319,3.52699 -1.6425,1.01513 -1.0469,2.47301 1.0104,2.47301 1.0816,0 3.5497,-1.58311 5.4847,-3.51803 3.1038,-3.10385 3.7553,-3.36986 5.5333,-2.25945 1.6129,1.00729 2.4146,1.0092 4.0153,0.01 1.1855,-0.74037 2,-0.83833 2,-0.24055 0,0.55466 -0.4019,1.00847 -0.893,1.00847 -0.4912,0 -1.1633,0.70443 -1.4937,1.56539 -0.4747,1.23712 -0.1302,1.42273 1.643,0.88507 1.234,-0.37418 3.1437,-1.49931 4.2437,-2.50028 1.587,-1.4441 3.6271,-1.81307 9.8788,-1.78663 7.173,0.0303 8.1117,-0.19946 10.4773,-2.56511 l 2.598,-2.59848 h -8.1958 c -6.8744,0 -8.1031,0.24186 -7.6203,1.5 0.3645,0.94984 -0.014,1.5 -1.0314,1.5 -0.8839,0 -1.607,-0.6832 -1.607,-1.51823 0,-1.34603 -8.1382,-1.48781 -71.75,-1.25 -70.9939,0.2654 -71.75,0.2893 -71.75,2.26823 0,1.1 -0.225,2.225 -0.5,2.5 -5.0949,5.09494 -4.2386,7.20567 1.3757,3.39068 2.0404,-1.38648 4.478,-2.3374 5.417,-2.11316 1.314,0.31378 1.0738,0.66862 -1.0427,1.54034 -2.8634,1.17935 -3.5061,2.59684 -1.687,3.72108 0.5847,0.36134 1.9347,-0.13184 3,-1.09597 1.6602,-1.50245 1.937,-1.53174 1.937,-0.20495 0,0.8514 -0.675,1.80702 -1.5,2.12361 -0.825,0.31658 -1.5,1.03972 -1.5,1.60698 0,0.56727 0.675,1.03139 1.5,1.03139 0.825,0 1.5,-0.43588 1.5,-0.96862 0,-0.53273 0.6405,-0.72283 1.4233,-0.42244 1.7127,0.65721 4.1105,-3.16099 2.5794,-4.10727 -1.9079,-1.17916 -1.064,-4.44818 1.3016,-5.04191 1.2674,-0.31809 7.0049,0.16409 12.75,1.07151 5.7451,0.90743 11.9082,1.72161 13.6957,1.8093 3.9683,0.19467 4.2395,1.40309 0.5,2.22785 -4.5064,0.99391 -4.9002,1.26948 -1.9326,1.35263 2.3485,0.0658 2.7117,0.41179 2.1826,2.07895 -0.6188,1.94965 0.1979,2.47098 3.25,2.07465 0.6875,-0.0893 1.25,0.54354 1.25,1.40626 0,0.86273 1.1983,2.02418 2.6628,2.581 3.1186,1.18567 2.1195,2.81298 -1.9329,3.14837 -2.6419,0.21865 -4.2476,2.14299 -3.2011,3.83629 0.2944,0.47634 1.1958,0.61259 2.0032,0.30277 0.8074,-0.30983 1.468,-0.11766 1.468,0.42704 0,0.5447 -0.8837,1.22144 -1.9637,1.50388 -1.7112,0.44749 -1.9571,1.37206 -1.9125,7.19003 0.041,5.3263 0.3369,6.5669 1.4637,6.1345 1.756,-0.67385 1.7613,0.35177 0.014,2.65436 -1.9052,2.51016 -1.4657,25.57306 0.5115,26.84704 1.1762,0.75787 1.1779,1.02873 0.011,1.78091 -2.0015,1.29003 -2.4568,40.45469 -0.4614,39.68899 0.7357,-0.28233 1.3377,-0.11494 1.3377,0.37196 0,0.48691 -0.5076,1.05447 -1.1279,1.26125 -1.4085,0.46951 -2.1677,83.48995 -0.7714,84.35293 0.4987,0.30819 0.6404,1.62127 0.3149,2.91797 -0.482,1.92052 -0.1582,2.42123 1.7463,2.70073 2.2206,0.32586 7.8183,-2.01318 7.8318,-3.27252 0,-0.32538 -1.0062,-1.67279 -2.2437,-2.99426 l -2.25,-2.40266 2.4727,-2.75575 c 2.4693,-2.75232 5.027,-3.64557 5.027,-1.75574 0,0.55 1.35,1 3,1 3.0522,0 3.7373,-0.84117 2.0769,-2.55 -0.5077,-0.5225 -0.6993,-2.08785 -0.4257,-3.47855 0.3562,-1.81117 1.4692,-2.83275 3.923,-3.60079 4.0038,-1.25315 4.9764,0.63183 1.1963,2.31853 l -2.2294,0.99482 2.2455,1.20176 c 1.9591,1.04852 2.346,0.92994 3.034,-0.92992 0.6352,-1.7169 0.9998,-1.87135 1.8742,-0.79376 1.9969,2.46106 0.8431,5.42861 -3.9448,10.1462 -5.8925,5.80598 -6.3735,9.18449 -1.5,10.53542 2.8187,0.78133 2.9846,0.9939 1.25,1.60159 -1.1,0.38538 -2.7298,1.0856 -3.6217,1.55603 -0.984,0.519 -2.0524,0.42454 -2.7172,-0.24022 -0.7941,-0.79406 -1.2716,-0.63674 -1.7353,0.57167 -0.3519,0.91697 -1.2666,1.66722 -2.0328,1.66722 -0.7661,0 -1.393,0.61042 -1.393,1.35648 0,0.86399 -1.0884,1.31782 -2.9977,1.25 -3.4271,-0.12173 -3.9567,-1.12365 -1.0023,-1.89623 3.5053,-0.91666 2.1882,-2.61384 -1.75,-2.25492 -2.0625,0.18797 -4.5375,0.38742 -5.5,0.44322 -1.4925,0.0865 -1.75,1.14433 -1.75,7.19034 v 7.0889 l 3.0767,-2.5889 c 2.2815,-1.91973 4.2048,-2.58889 7.441,-2.58889 z m 8.4823,-6.89059 c 0,-1.07694 6.9407,-2.01444 7.555,-1.02048 0.2384,0.38582 -0.2757,0.97365 -1.1425,1.30629 -2.3659,0.90787 -6.4125,0.72751 -6.4125,-0.28581 z m -12.4388,-23.01045 c -1.0736,-1.73709 -0.1374,-9.09594 1.1574,-9.09749 0.6726,-8.1e-4 0.9607,0.67064 0.643,1.49853 -0.3166,0.825 -0.1262,1.5 0.423,1.5 0.5492,0 1.2633,-1.0125 1.5868,-2.25 0.3236,-1.2375 2.1661,-3.2625 4.0944,-4.5 4.2822,-2.74803 4.5342,-2.76193 4.5342,-0.25 0,1.11111 0.6667,2 1.5,2 1.479,0 2.063,2.10362 0.9055,3.26117 -0.327,0.32697 -1.9827,-0.24971 -3.6793,-1.28151 -3.559,-2.16433 -4.7262,-1.80308 -4.7262,1.46273 0,1.52345 -0.7753,2.58056 -2.25,3.06793 l -2.25,0.74358 2.3076,0.45015 c 1.2692,0.24759 2.113,0.97796 1.875,1.62305 -0.2379,0.6451 -0.9862,1.04461 -1.6629,0.88781 -0.6766,-0.15679 -1.8178,0.20256 -2.5359,0.79856 -0.8545,0.70913 -1.5189,0.73868 -1.9226,0.0855 z m 27.9388,-0.099 c -0.3399,-0.55 -0.168,-1 0.382,-1 0.55,0 1.2781,0.45 1.618,1 0.3399,0.55 0.168,1 -0.382,1 -0.55,0 -1.2781,-0.45 -1.618,-1 z m -1,-10 c 0.3399,-0.55 1.0415,-1 1.559,-1 0.5176,0 0.941,0.45 0.941,1 0,0.55 -0.7016,1 -1.559,1 -0.8575,0 -1.2809,-0.45 -0.941,-1 z m -27.5,-2.41667 c 0,-1.82098 0.5312,-2.58333 1.8,-2.58333 0.99,0 2.4132,-0.5625 3.1626,-1.25 0.7494,-0.6875 0.4978,0.28887 -0.5592,2.16972 -2.4472,4.3548 -4.4034,5.09386 -4.4034,1.66361 z m 21.5,0.41667 c -0.3505,-0.56716 0.4896,-1 1.941,-1 1.4074,0 2.559,0.45 2.559,1 0,0.55 -0.8734,1 -1.941,1 -1.0675,0 -2.2191,-0.45 -2.559,-1 z m -5.8333,-4.27402 c -1.0084,-1.04095 -1.5709,-2.15515 -1.25,-2.47598 0.3208,-0.32083 0.5833,-0.25119 0.5833,0.15476 0,0.40595 0.7071,0.0309 1.5714,-0.83333 1.722,-1.72197 8.4286,-2.17665 8.4286,-0.57143 0,0.55 -0.6225,1 -1.3834,1 -0.7608,0 -1.6009,0.83184 -1.8667,1.84853 -0.6895,2.63663 -3.9269,3.10359 -6.0832,0.87745 z m -8.6667,-0.66696 c 0,-0.51754 0.4448,-1.21592 0.9885,-1.55194 0.5669,-0.35034 0.7346,0.0511 0.3931,0.94098 -0.6648,1.73242 -1.3816,2.04939 -1.3816,0.61096 z m 26,-0.45203 c 0,-0.94863 2.9934,-1.42672 3.527,-0.56332 0.3251,0.52598 -0.3355,0.95633 -1.468,0.95633 -1.1324,0 -2.059,-0.17686 -2.059,-0.39301 z m -23.5,-3.60699 c -0.3399,-0.55 -0.1415,-1 0.441,-1 0.5824,0 1.059,0.45 1.059,1 0,0.55 -0.1984,1 -0.441,1 -0.2425,0 -0.7191,-0.45 -1.059,-1 z m 18.5,-3 c 0,-1.94919 1.0607,-2.606 2.2644,-1.40223 0.8011,0.80111 -0.2473,3.40223 -1.3714,3.40223 -0.4911,0 -0.893,-0.9 -0.893,-2 z m -12.7573,-12.24321 c 0.2277,-0.69124 1.4413,-1.40716 2.697,-1.59094 1.4776,-0.21625 2.1369,0.10425 1.8689,0.90841 -0.2278,0.68341 -1.4415,1.39933 -2.697,1.59094 -1.4925,0.22778 -2.1395,-0.0867 -1.8689,-0.90841 z m 12.2808,-1.56662 c -1.2042,-1.20419 -0.3887,-2.38819 1.3345,-1.93756 1.0218,0.26722 2.5898,0.0763 3.4843,-0.42428 1.2222,-0.68397 1.4893,-0.553 1.0748,0.52702 -0.5557,1.44817 -4.9212,2.80724 -5.8936,1.83482 z m -25.5235,-1.19017 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m 21.6295,-29.47686 c 0.3215,-0.83773 1.5113,-1.52314 2.6442,-1.52314 2.3088,0 2.1871,0.22933 -1.0012,1.88768 -1.8722,0.97379 -2.1343,0.91564 -1.643,-0.36454 z m 3.466,-5.46412 c -0.9945,-0.61466 -1.0222,-0.98628 -0.1151,-1.54689 0.6566,-0.40582 1.6439,-0.28787 2.1939,0.26213 1.3032,1.30322 -0.3729,2.33908 -2.0788,1.28476 z m -6.8786,-4.22487 c 0.2419,-0.73378 1.4671,-1.48452 2.7228,-1.6683 1.5513,-0.22704 2.1421,0.0935 1.8434,1 -0.2419,0.73378 -1.4671,1.48452 -2.7228,1.6683 -1.5513,0.22704 -2.1421,-0.0935 -1.8434,-1 z m 52.4406,0.49004 c -0.3717,-0.3717 0.1613,-1.6092 1.1843,-2.75 2.3999,-2.67602 3.3272,-5.3517 2.1145,-6.10118 -0.526,-0.32508 -0.9563,-1.29195 -0.9563,-2.1486 0,-1.15847 0.7019,-1.42339 2.7394,-1.0339 1.5066,0.28801 3.5316,0.0996 4.5,-0.41861 1.1538,-0.6175 1.7606,-0.58548 1.7606,0.0929 0,0.56935 0.9,1.03518 2,1.03518 4.1866,0 1.0358,5.88877 -3.1933,5.9682 -0.9313,0.0175 -2.2813,0.86039 -3,1.8731 -1.1299,1.59219 -4.8786,4.1587 -6.0743,4.1587 -0.2195,0 -0.7032,-0.30412 -1.0749,-0.67581 z m 8.497,-0.87616 c 0.4518,-2.33065 2.7644,-3.10107 2.428,-0.80885 -0.1415,0.96382 -0.8234,1.94112 -1.5154,2.17178 -0.7675,0.25585 -1.1234,-0.27561 -0.9126,-1.36293 z m -27.6118,-0.37893 c -1.0762,-1.74136 1.6418,-2.31317 3.2675,-0.68742 1.4911,1.49109 1.4489,1.61832 -0.5369,1.61832 -1.1854,0 -2.4142,-0.41891 -2.7306,-0.9309 z m -14.0326,-2.08541 c 0.3454,-0.55897 1.047,-0.75742 1.559,-0.44098 1.387,0.85723 1.1284,1.45729 -0.6281,1.45729 -0.8575,0 -1.2764,-0.45734 -0.9309,-1.01631 z m 30.7349,-2.23369 c 0.2264,-0.6875 1.4799,-1.40572 2.7855,-1.59604 2.0725,-0.30212 2.2057,-0.14347 1.0492,1.25 -1.5661,1.88703 -4.4272,2.14522 -3.8347,0.34604 z m -50.495,-5.41228 c 0.6875,-0.27741 1.8125,-0.27741 2.5,0 0.6875,0.27741 0.125,0.50439 -1.25,0.50439 -1.375,0 -1.9375,-0.22698 -1.25,-0.50439 z m -19.75,-39.06541 c 0,-0.98893 0.9834,-2.24226 2.1853,-2.78518 1.2019,-0.54292 2.379,-1.59333 2.6157,-2.33424 0.3377,-1.05695 0,-1.11454 -1.5871,-0.26734 -1.751,0.93709 -1.9491,0.81779 -1.4991,-0.9029 0.3035,-1.16077 0.023,-1.98265 -0.6776,-1.98265 -0.8326,0 -0.9741,-0.98772 -0.4658,-3.25 0.4017,-1.7875 0.7375,-3.8125 0.7462,-4.5 0.01,-0.6875 0.3907,-1.25 0.8491,-1.25 0.4583,0 0.8333,-0.45 0.8333,-1 0,-0.55 -0.675,-1 -1.5,-1 -2.6465,0 -1.5606,-2.45172 1.7716,-4 2.4011,-1.1156 3.1674,-2.07661 2.9902,-3.75 -0.2125,-2.00749 0.2054,-2.25 3.8778,-2.25 h 4.116 l -0.6736,4.21246 c -0.7744,4.84268 -1.0232,5.2509 -2.6053,4.27315 -0.7362,-0.45501 -0.9184,-1.98277 -0.5015,-4.20513 0.4966,-2.64706 0.3371,-3.3839 -0.6602,-3.0494 -0.7232,0.2426 -1.336,1.30236 -1.3617,2.35501 -0.026,1.05265 -0.5882,1.80141 -1.25,1.66391 -1.8119,-0.37644 -1.4461,2.44286 0.4093,3.15484 1.2821,0.49198 1.3672,0.91454 0.4154,2.06147 -1.0212,1.23037 -0.7406,1.31166 1.9066,0.55244 1.7072,-0.48961 2.8729,-0.51628 2.5904,-0.0593 -0.2824,0.45702 0.1589,1.08897 0.9807,1.40434 1.934,0.74213 1.9303,3.53165 -0.01,4.27454 -2.6109,1.0019 -1.6617,2.61904 1.1265,1.91924 2.1584,-0.54172 2.5148,-0.36825 2,0.97338 -0.3446,0.89792 -0.6265,2.04578 -0.6265,2.5508 0,1.3907 -3.7675,1.0992 -4.2881,-0.33179 -0.6405,-1.76056 -4.0967,0.37738 -4.5786,2.83225 -0.3624,1.84609 -1.9795,3.48919 -5.3833,5.46982 -1.3954,0.81195 -1.75,0.65393 -1.75,-0.77976 z m 8.5,-12.80331 3,-2.45907 -2.55,-0.005 c -2.7646,-0.005 -4.95,1.62595 -4.95,3.69503 0,1.86337 1.0881,1.56572 4.5,-1.231 z m 6.5,11.64903 c 0,-0.55 0.45,-1.27811 1,-1.61803 0.55,-0.33992 1,-0.16803 1,0.38197 0,0.55 -0.45,1.27811 -1,1.61803 -0.55,0.33992 -1,0.16803 -1,-0.38197 z m 5.5974,-12.27555 c 0.4901,-0.79309 0.036,-0.97999 -1.441,-0.59362 -1.4536,0.38013 -2.1564,0.10557 -2.1564,-0.84248 0,-0.77351 0.3375,-1.46381 0.75,-1.534 3.3062,-0.5626 5.25,-0.46479 5.25,0.26416 0,0.4749 0.4766,0.86346 1.059,0.86346 0.5825,0 0.7379,-0.51953 0.3455,-1.15451 -0.4735,-0.76609 -0.2705,-0.8807 0.6033,-0.34066 1.0141,0.62675 0.7943,1.23703 -0.9563,2.65451 -2.5433,2.05946 -4.55,2.45634 -3.4541,0.68314 z m -6.5974,-5.99352 c 0,-0.56991 0.9,-1.27155 2,-1.55921 1.1,-0.28766 2,-0.94709 2,-1.4654 0,-0.51831 -0.4532,-0.6623 -1.0071,-0.31998 -0.5538,0.34231 -1.2944,-0.12654 -1.6457,-1.04191 -0.3512,-0.91537 -0.085,-2.0067 0.5925,-2.42519 0.6771,-0.41848 1.1695,-1.07756 1.0942,-1.46461 -0.2639,-1.35596 5.0398,-4.75835 6.5275,-4.18747 0.9834,0.37735 1.8286,-0.28073 2.4459,-1.90429 1.3111,-3.44869 2.2895,-3.10848 1.4927,0.5191 -0.5957,2.71204 -0.4178,3 1.8532,3 1.6338,0 2.734,-0.69923 3.1468,-2 0.3491,-1.1 1.337,-2 2.1952,-2 1.2549,0 1.4378,0.76688 0.934,3.91714 -0.4217,2.6377 -0.2356,4.04738 0.5698,4.31587 0.9147,0.3049 0.8891,1.14011 -0.109,3.5496 -1.5475,3.73618 -4.8992,5.19874 -6.596,2.87827 -1.0138,-1.38647 -1.4126,-1.40617 -3.1949,-0.15786 -2.8722,2.01177 -3.8807,0.45176 -1.0942,-1.6925 l 2.2951,-1.76605 -2.75,-0.0222 c -1.7306,-0.014 -2.75,0.5088 -2.75,1.41037 0,0.78794 -0.8641,1.70685 -1.9201,2.04204 -3.9332,1.24835 -6.0799,1.38051 -6.0799,0.37431 z m 15.2165,-8.03247 c -1.3468,-1.34677 -2.4176,0.4958 -1.5708,2.70273 0.6133,1.59803 0.7094,1.59766 1.6069,-0.006 0.6131,-1.09544 0.6001,-2.06035 -0.036,-2.69659 z m -5.5193,1.3918 c 0.7201,-0.45775 0.8643,-1.2998 0.3618,-2.1128 -0.9861,-1.5955 -3.059,-0.60375 -3.059,1.46353 0,1.59333 0.8792,1.80498 2.6972,0.64927 z m -23.5265,-0.85599 c 0.1937,-1.00614 1.1755,-1.98787 2.1816,-2.18163 1.3211,-0.25442 1.7314,0.15595 1.477,1.47703 -0.1937,1.00613 -1.1755,1.98787 -2.1816,2.18163 -1.3211,0.25442 -1.7314,-0.15595 -1.477,-1.47703 z m 38.372,0.7168 c -0.3164,-0.512 -0.118,-1.21356 0.441,-1.55902 0.559,-0.34546 1.0163,0.0734 1.0163,0.9309 0,1.75653 -0.6001,2.01516 -1.4573,0.62812 z m -38.5427,-5.62812 c 0,-0.85746 0.4573,-1.27636 1.0163,-0.9309 0.559,0.34546 0.7574,1.04702 0.441,1.55902 -0.8572,1.38704 -1.4573,1.12841 -1.4573,-0.62812 z m 5.5,-0.15405 c -2.5964,-0.62451 -4.393,-2.29157 -2.45,-2.27327 2.6182,0.0246 5.95,1.20224 5.95,2.10297 0,0.92989 -0.2845,0.94373 -3.5,0.1703 z m 33.6518,-0.8319 c 0.9085,-0.92795 2.197,-1.50543 2.8634,-1.28329 0.6664,0.22213 -0.077,0.98136 -1.6518,1.68717 -2.6805,1.20131 -2.7579,1.1755 -1.2116,-0.40388 z m -21.4018,-3.27298 c -3.1403,-3.08736 -3.5579,-5.2185 -1,-5.1031 1.0454,0.0472 1.2467,0.28201 0.5,0.58333 -1.9697,0.79478 -1.4583,2.33772 0.7748,2.33772 2.2692,0 4.3962,-4.28227 3.6135,-7.27521 -0.4495,-1.71877 2.5095,-3.72479 5.4942,-3.72479 1.414,0 0.027,4.11587 -2.1527,6.38794 -1.4521,1.51355 -1.6005,2.35046 -0.7485,4.22038 0.7885,1.7305 0.7351,2.72721 -0.2067,3.86207 -1.7591,2.11959 -3.0852,1.84733 -6.2746,-1.28834 z m -17.75,-0.0846 c 0,-1.09305 1.769,-2.3939 5.3208,-3.91282 2.6814,-1.14664 2.7865,-1.0945 2.1258,1.05454 -0.8418,2.73813 -0.3211,2.3545 -4.1966,3.09219 -1.7875,0.34026 -3.25,0.23499 -3.25,-0.23391 z m 9.6939,0.26307 c -1.0664,-1.06635 0.2974,-2.36052 2.4876,-2.36052 1.7207,0 1.8567,0.24909 0.8185,1.5 -1.3443,1.61973 -2.2986,1.86811 -3.3061,0.86052 z m 24.2264,-1.76447 c 1.5661,-1.88703 4.4272,-2.14522 3.8347,-0.34605 -0.2264,0.6875 -1.4799,1.40572 -2.7855,1.59605 -2.0725,0.30212 -2.2057,0.14346 -1.0492,-1.25 z m -5.6498,-1.53277 c -0.7275,-1.16598 -0.8474,-2.20671 -0.2937,-2.54894 0.5147,-0.31811 0.6998,-1.19346 0.4114,-1.94521 -0.2885,-0.75175 -0.044,-1.6639 0.5436,-2.02699 1.6595,-1.02559 1.3075,-5.54214 -0.4318,-5.54214 -0.825,0 -1.5,-0.43588 -1.5,-0.96862 0,-0.53273 -0.7241,-0.69075 -1.6091,-0.35114 -2.3428,0.89902 -6.3909,4.8537 -6.3909,6.24345 0,0.65689 -0.4189,0.93545 -0.9309,0.61902 -0.512,-0.31642 -2.1527,0.55702 -3.646,1.94099 -3.2296,2.99304 -3.3292,3.00821 -5.0311,0.7663 -1.9398,-2.55546 -1.6963,-3.25 1.1394,-3.25 2.6064,0 4.0588,-1.95663 3.1302,-4.21701 -0.3318,-0.80779 -0.7803,-0.44962 -1.2109,0.96701 -0.734,2.41457 -3.0196,3.04319 -3.6953,1.01629 -0.2726,-0.81801 -1.5059,-0.3126 -3.66,1.5 -1.7869,1.50354 -4.0018,2.71874 -4.9221,2.70044 -1.4083,-0.028 -1.3403,-0.31168 0.4299,-1.7914 1.9543,-1.63367 4.3968,-5.30545 4.3968,-6.60959 0,-0.31116 -0.8734,-0.56574 -1.941,-0.56574 -1.0675,0 -2.1803,-0.38718 -2.4727,-0.86039 -0.2925,-0.47322 2.2685,-1.15396 5.691,-1.51277 5.2544,-0.55086 6.4351,-0.37807 7.5875,1.1104 0.9766,1.26143 1.498,1.40726 1.8333,0.51276 0.9478,-2.5283 3.0344,-1.30932 2.5677,1.5 l -0.4569,2.75 2.3523,-2.81378 c 1.8697,-2.23658 3.4277,-2.92034 7.595,-3.33323 4.1631,-0.41248 5.3664,-0.1972 5.8432,1.04547 0.4235,1.10359 1.0869,1.30461 2.2506,0.68192 3.142,-1.68142 11.0862,-2.37826 12.6181,-1.10683 0.8832,0.73299 2.6382,0.94237 4.49,0.53566 2.511,-0.55151 2.9345,-0.39291 2.4339,0.91155 -0.3333,0.86858 -1.2328,1.57924 -1.999,1.57924 -0.7661,0 -1.393,0.49878 -1.393,1.10841 0,0.69202 0.9689,0.86524 2.5791,0.46109 2.4332,-0.61069 2.3833,-0.47539 -0.882,2.39159 -3.8421,3.37342 -4.9194,3.7819 -4.0587,1.53891 0.3166,-0.825 0.1096,-1.5 -0.46,-1.5 -1.4465,0 -4.1784,2.88394 -4.1784,4.41091 0,1.04816 -3.9271,3.58909 -5.5471,3.58909 -1.4728,0 -0.04,-2.16714 2.2971,-3.47374 l 2.75,-1.53761 -3.5,0.25567 c -2.9969,0.21893 -3.455,0.57912 -3.1871,2.50568 0.2683,1.93009 -0.1425,2.25 -2.8898,2.25 -1.7614,0 -3.7022,0.68261 -4.3129,1.51691 -0.9701,1.32555 -1.2653,1.26832 -2.3397,-0.45363 z m 5.7295,-4.06328 c 0,-0.55 -0.6484,-1 -1.441,-1 -0.7925,0 -1.7191,0.45 -2.059,1 -0.3399,0.55 0.3085,1 1.441,1 1.1324,0 2.059,-0.45 2.059,-1 z m 8,-5.60699 c 0,-0.21616 -0.675,-0.39301 -1.5,-0.39301 -0.825,0 -1.5,0.43588 -1.5,0.96861 0,0.53274 0.675,0.7096 1.5,0.39302 0.825,-0.31659 1.5,-0.75246 1.5,-0.96862 z m -9.5,-0.39301 c -0.3399,-0.55 -0.1556,-1 0.4096,-1 0.5652,0 0.7686,-0.675 0.452,-1.5 -0.3166,-0.825 -0.9774,-1.5 -1.4686,-1.5 -1.0363,0 -1.2112,3.3485 -0.2263,4.33333 1.0082,1.00826 1.5328,0.79844 0.8333,-0.33333 z m 14.886,-0.39306 c 1.1627,-0.0588 2.114,-0.72776 2.114,-1.48654 0,-0.94417 -1.657,-1.51244 -5.25,-1.80048 -2.9688,-0.238 -5.25,-0.005 -5.25,0.53598 0,0.52627 0.9,0.7215 2,0.43385 1.5474,-0.40466 2,-0.0307 2,1.65264 0,1.36941 0.421,1.91547 1.136,1.47357 0.6248,-0.38614 2.0873,-0.7502 3.25,-0.80902 z m 40.614,4.4901 c 0,-1.66814 2.7906,-4.34451 3.8483,-3.6908 1.7554,1.08491 1.382,1.9797 -1.3561,3.24967 -1.3707,0.63576 -2.4922,0.83427 -2.4922,0.44113 z m -29.5589,-8.62884 c 1.0677,-0.80751 2.6162,-1.4682 3.4412,-1.4682 1.133,0 1.0251,0.35919 -0.4412,1.4682 -1.0676,0.8075 -2.6161,1.46819 -3.4411,1.46819 -1.133,0 -1.0251,-0.35919 0.4411,-1.46819 z m -106.4411,-5.4682 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -45,216 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 24.4321,-2.34946 c 2.8671,-2.65722 4.5679,-3.34622 4.5679,-1.85054 0,0.44 -0.4851,1.28505 -1.0779,1.8779 -0.7705,0.77053 -0.1289,0.97102 2.25,0.7031 5.2819,-0.59486 8.6863,-2.37928 9.0217,-4.72882 0.1898,-1.32983 0.9715,-2.0998 2.0459,-2.01508 0.9563,0.0754 1.4736,-0.29204 1.1494,-0.81654 -0.3242,-0.5245 0.1713,-1.50986 1.1011,-2.18971 1.4491,-1.05966 1.4871,-1.40479 0.266,-2.41824 -1.1335,-0.9407 -2.5817,-0.48529 -7.0903,2.22966 -3.1163,1.8765 -5.6659,3.25645 -5.6659,3.06656 0,-0.18989 -0.2361,-0.96046 -0.5246,-1.71238 -0.3341,-0.87073 0.2516,-1.4256 1.613,-1.52816 2.5975,-0.19566 3.8795,-1.37499 2.1616,-1.98853 -2.1253,-0.75903 -1.3959,-1.84921 2.1744,-3.25011 1.8835,-0.739 3.6547,-2.22411 3.9361,-3.30025 0.507,-1.93875 0.5374,-1.93888 3.3256,-0.0134 2.3216,1.60328 3.2065,1.73874 5.058,0.77434 1.2342,-0.64288 1.9467,-1.46621 1.5833,-1.82962 -0.3634,-0.36341 -0.1623,-0.66074 0.4469,-0.66074 0.6092,0 1.4067,0.48384 1.7722,1.07521 0.4251,0.68793 1.527,0.26496 3.059,-1.17432 1.317,-1.23723 2.3945,-1.72108 2.3945,-1.0752 0,0.64587 0.45,1.17431 1,1.17431 1.4035,0 1.2526,-2.74912 -0.1771,-3.22568 -0.6897,-0.22992 -0.845,-0.92962 -0.375,-1.6901 0.6545,-1.059 0.9531,-1.05347 1.6227,0.0301 0.4514,0.73029 1.1498,0.99868 1.552,0.59643 0.4023,-0.40226 -0.1358,-1.38741 -1.1956,-2.18924 -1.5236,-1.15264 -1.613,-1.49641 -0.427,-1.64198 0.825,-0.10127 1.95,-0.28867 2.5,-0.41645 0.55,-0.12779 1.5625,-0.28425 2.25,-0.34769 0.6875,-0.0634 1.25,-0.77623 1.25,-1.58397 0,-0.89459 -0.5863,-1.24363 -1.5,-0.89301 -0.825,0.31659 -1.5,0.0775 -1.5,-0.53138 0,-0.60885 0.6227,-1.10699 1.3839,-1.10699 1.0808,0 1.4071,-2.22841 1.4903,-10.17784 0.094,-8.97047 -0.06,-9.94993 -1.2985,-8.25657 -1.3598,1.85967 -1.4741,1.8333 -3.5629,-0.82215 -2.6411,-3.35765 -3.1064,-3.37697 -6.7849,-0.28177 -2.3708,1.99494 -3.6224,2.34857 -6.6013,1.86516 -3.1853,-0.51691 -3.5864,-0.8782 -3.0057,-2.70782 0.3686,-1.16124 1.3922,-2.7176 2.2746,-3.45858 0.8825,-0.74099 -0.1377,-0.38812 -2.2671,0.78416 -3.4798,1.91573 -3.7943,1.95048 -3.1085,0.34341 0.4196,-0.9834 0.9754,-3.0255 1.235,-4.538 0.5133,-2.9902 2.6687,-3.69457 3.631,-1.18662 0.33,0.85986 1.0532,1.2833 1.607,0.94099 1.5173,-0.93771 1.2089,-2.50437 -0.4929,-2.50437 -0.825,0 -1.5513,-0.3375 -1.614,-0.75 -0.7659,-5.03777 -0.6352,-6.25 0.6739,-6.25 0.7921,0 1.4401,-0.675 1.4401,-1.5 0,-1.88313 -1.3961,-1.93259 -2.9143,-0.10323 -1.1771,1.4183 -5.0857,1.06192 -5.0857,-0.46371 0,-0.45852 0.7781,-1.26915 1.7292,-1.80138 1.6273,-0.91072 1.6202,-1.08812 -0.1213,-3.01245 -2.0567,-2.27266 -1.5407,-5.11923 0.9281,-5.11923 1.1688,0 1.4196,0.56447 0.9327,2.09872 -0.5688,1.79218 -0.3559,2.00026 1.4577,1.42464 1.4723,-0.46729 2.0394,-0.27477 1.8487,0.62754 -0.1513,0.71589 0.7374,1.4561 1.9749,1.64491 2.3819,0.36341 3.1488,-1.51366 0.9615,-2.35304 -1.4792,-0.56759 -2.0934,-8.44277 -0.6585,-8.44277 0.5208,0 0.947,0.41786 0.947,0.92857 0,2.07539 3.3332,4.20461 5.6657,3.61919 1.619,-0.40633 2.565,-0.11018 2.9632,0.92768 0.6468,1.68551 3.3711,2.10943 3.3711,0.52456 0,-0.55 -0.7301,-1 -1.6224,-1 -1.2755,0 -1.3746,-0.29869 -0.4633,-1.39677 0.6376,-0.76822 2.0474,-1.16451 3.1329,-0.88064 1.5221,0.39804 2.2224,-0.19756 3.061,-2.60324 0.5981,-1.71564 1.4453,-3.11935 1.8826,-3.11935 0.4374,0 1.0542,-0.675 1.3708,-1.5 0.5066,-1.32007 -4.9984,-1.5 -45.893,-1.5 -42.9338,0 -55.1507,0.71756 -40.7186,2.39161 3.1625,0.36683 9.2501,1.37209 13.528,2.23392 4.2779,0.86183 8.5041,1.28835 9.3914,0.94782 1.2723,-0.48822 1.374,-0.33054 0.4807,0.74577 -0.623,0.75069 -0.8367,1.66099 -0.4748,2.02289 1.1429,1.14283 2.3247,0.71476 2.3247,-0.84201 0,-0.83333 0.8889,-1.5 2,-1.5 1.1,0 2,0.66088 2,1.46862 0,0.83315 0.5932,1.24098 1.371,0.94252 0.754,-0.28934 1.6228,0.13044 1.9308,0.93285 0.3546,0.92416 -0.2178,1.66228 -1.5615,2.01368 -2.0582,0.53823 -2.0404,0.61844 0.6,2.69538 2.0008,1.5738 3.0623,1.85773 4.0087,1.07226 1.9968,-1.65716 7.8558,-1.84551 8.4105,-0.27037 0.3469,0.98518 -0.1046,1.1703 -1.6546,0.67836 -1.6248,-0.5157 -3.0945,0.23214 -6.1808,3.14506 l -4.0491,3.82164 0.1597,23 c 0.088,12.65 0.116,25.32633 0.062,28.16963 l -0.097,5.16964 -4.8197,1.60085 c -4.9456,1.64266 -15.3738,2.26803 -18.9409,1.13586 -1.3167,-0.4179 -2.2036,-0.11165 -2.5896,0.89422 -0.7445,1.94014 -4.6498,2.01474 -4.6498,0.0888 0,-0.79254 0.4719,-1.73261 1.0486,-2.08903 0.7092,-0.43836 0.6454,-1.1338 -0.1974,-2.14932 -1.0984,-1.32343 -1.4007,-1.28964 -2.5523,0.28528 -1.0138,1.38644 -1.5743,1.51864 -2.5026,0.5903 -0.658,-0.65794 -2.4866,-1.19625 -4.0637,-1.19625 -2.3322,0 -2.7581,-0.34442 -2.2817,-1.84534 0.3835,-1.20822 -0.3308,-2.76188 -2.069,-4.5 -3.0918,-3.09182 -4.3819,-3.35494 -4.3819,-0.89368 0,0.96853 -1.3236,2.85427 -2.9413,4.19051 -1.6177,1.33625 -2.685,2.84412 -2.3719,3.35083 0.7827,1.2664 -1.6675,2.66524 -4.6868,2.67578 -2.4974,0.009 -2.4969,0.007 0.5,-1.9781 2.5933,-1.71744 2.3808,-2.49947 -0.59,-2.17176 -0.3245,0.0358 -0.6507,-1.54961 -0.7248,-3.52312 -0.074,-1.9735 -0.3673,-3.8206 -0.6514,-4.10465 -0.6887,-0.68867 1.4433,-3.20047 2.7165,-3.20047 0.6128,0 0.7556,1.56163 0.3657,4 -0.8051,5.03485 1.3311,5.52737 3.253,0.75 0.719,-1.7875 1.529,-2.6911 1.7999,-2.00799 0.3595,0.90666 1.0141,0.96282 2.4245,0.20801 1.5501,-0.82961 1.7249,-1.42103 0.8841,-2.99201 -1.1794,-2.20381 -3.5804,-2.60311 -4.2573,-0.70801 -0.2455,0.6875 -0.7544,0.96607 -1.1309,0.61905 -0.3765,-0.34703 0.012,-1.32738 0.8631,-2.17857 1.7664,-1.76643 2.039,-3.69048 0.5228,-3.69048 -0.5636,0 -1.5552,-1.2375 -2.2037,-2.75 l -1.179,-2.75 -0.3639,3.30734 c -0.4259,3.87085 -2.6983,5.15154 -5.0204,2.8294 -1.5157,-1.51565 -1.4952,-1.63674 0.2775,-1.63674 1.3293,0 1.5954,-0.31887 0.8709,-1.04338 -1.265,-1.26499 -7.3406,1.87052 -7.3503,3.79338 0,0.6875 -0.4563,1.25 -1.0063,1.25 -0.55,0 -1,-0.91037 -1,-2.02305 0,-1.93489 -0.1104,-1.95075 -2.532,-0.36405 -2.2153,1.45154 -2.357,1.86083 -1.1328,3.27305 2.0846,2.40484 1.6347,4.90479 -1.0019,5.56652 -2.4312,0.6102 -2.8075,1.34645 -1.568,3.06788 1.2474,1.73242 6.6093,3.8199 9.1263,3.55301 1.804,-0.19129 2.2451,0.12805 1.7955,1.29973 -0.3737,0.97388 0.4069,2.34229 2.0926,3.66828 3.5542,2.79573 7.7026,1.95852 11.416,-2.3039 l 2.8205,-3.23747 -0.6281,3 c -0.3454,1.65 -1.176,3.45 -1.8458,4 -1.5038,1.23477 -0.8621,3.5 0.9913,3.5 0.7519,0 1.7363,0.65983 2.1876,1.46629 0.8356,1.49307 5.2788,1.08122 5.2788,-0.4893 0,-0.43436 -0.9,-0.5544 -2,-0.26674 -2.4072,0.62951 -2.539,-0.0283 -0.4286,-2.13882 0.8643,-0.86429 2.7341,-1.57143 4.155,-1.57143 2.4161,0 2.4789,0.11569 0.9689,1.78417 -3.6599,4.0442 5.866,10.03656 16.1697,10.1717 3.3226,0.0436 3.3452,0.0139 1.7956,-2.35115 -1.4776,-2.25499 -1.4448,-2.4279 0.5598,-2.95209 1.3217,-0.34565 2.5742,0.0518 3.3027,1.04806 1.3001,1.77803 3.4769,0.98937 3.4769,-1.25971 0,-0.79254 0.675,-1.44098 1.5,-1.44098 0.825,0 1.5,0.67758 1.5,1.50573 0,1.21671 0.9378,1.39151 4.8858,0.91066 3.2097,-0.39094 5.1308,-0.19856 5.6001,0.5608 0.9949,1.60984 0.6521,1.77563 -4.8483,2.34465 -2.6744,0.27667 -5.3744,1.0447 -6,1.70676 -0.884,0.93533 0.9887,1.0999 8.3984,0.7381 8.5961,-0.41973 9.818,-0.72689 12.3961,-3.11616 z m -37.9732,0.28293 c -0.3626,-0.58659 -0.4085,-1.31719 -0.1022,-1.62354 0.8227,-0.82264 3.6433,0.46152 3.6433,1.65869 0,1.35725 -2.6971,1.33048 -3.5411,-0.0351 z m -4.4589,-4.05664 c 0,-0.59994 -0.675,-0.83179 -1.5,-0.5152 -1.6015,0.61456 -1.8722,-0.22806 -0.893,-2.77984 0.6485,-1.68989 3.393,-2.21174 3.393,-0.64515 0,0.51515 1.425,1.07765 3.1668,1.25 l 3.1667,0.31336 -3.6667,1.73382 c -2.2551,1.06629 -3.6668,1.31385 -3.6668,0.64301 z m 24.9983,-0.8779 c -1.0478,-0.64755 -0.7124,-1.03258 1.3504,-1.55032 3.3457,-0.83972 4.524,0.014 1.9331,1.40059 -1.0956,0.58634 -2.4753,0.64925 -3.2835,0.14973 z m 11.0017,-2.99893 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m -28.5,-2 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 35.5,-3 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m -55,-3.94098 c 0,-0.51754 0.45,-1.2191 1,-1.55902 0.55,-0.33992 1,0.0835 1,0.94098 0,0.85746 -0.45,1.55902 -1,1.55902 -0.55,0 -1,-0.42344 -1,-0.94098 z m 55,-0.47347 c 0,-1.68683 2.2606,-2.66053 3.8691,-1.66647 0.7911,0.48896 0.3435,1.11865 -1.3407,1.88604 -2.0355,0.92743 -2.5284,0.88463 -2.5284,-0.21957 z m 5.0398,-3.03756 c -2.1114,-2.54414 -0.3098,-5.54799 3.3276,-5.54799 3.6253,0 5.7425,-1.54993 4.9475,-3.62186 -0.3794,-0.98862 0.3493,-1.37814 2.5781,-1.37814 2.4563,0 3.107,-0.42541 3.107,-2.03138 0,-1.11727 -0.7546,-2.32096 -1.6769,-2.67487 -1.506,-0.5779 -1.4842,-0.71107 0.2137,-1.30664 1.3904,-0.48776 0.7867,-0.83966 -2.2825,-1.33045 -3.8845,-0.62115 -4.1585,-0.87419 -3.9636,-3.65999 0.1151,-1.64598 0.5468,-2.99359 0.9593,-2.99468 1.7755,-0.005 0.5036,-2.85979 -2.5,-5.61186 -1.7875,-1.63783 -3.786,-3.85813 -4.4412,-4.934 -0.9822,-1.61294 -1.2015,-1.66955 -1.25,-0.32271 -0.1252,3.47638 -8.0588,2.35861 -8.0588,-1.1354 0,-0.70482 1.3693,-2.68021 3.0428,-4.38976 5.686,-5.80825 5.8915,-6.14345 5.2563,-8.57265 -0.5131,-1.96203 -0.3188,-2.25716 1.1219,-1.70428 0.9584,0.36777 1.9035,0.66867 2.1002,0.66867 0.1967,0 0.6681,3.15 1.0475,7 0.3793,3.85 0.9195,7 1.2003,7 0.2808,0 1.0544,-0.74375 1.7191,-1.65278 0.6646,-0.90902 1.6845,-1.35857 2.2663,-0.999 1.1328,0.70012 0.5636,4.3744 -0.9849,6.35798 -1.5274,1.95649 0.185,3.52204 3.0624,2.79984 2.5916,-0.65044 2.5978,-0.63836 0.7304,1.42511 -2.3743,2.62353 -1.4341,3.59381 3.1034,3.20288 2.6177,-0.22553 3.44,0.0467 3.1103,1.0297 -0.2465,0.73495 -1.1652,1.34201 -2.0415,1.34902 -0.8763,0.007 -1.9093,0.32869 -2.2954,0.71482 -0.3861,0.38613 -1.5156,0.26668 -2.5099,-0.26546 -1.2221,-0.65407 -2.031,-0.60645 -2.4966,0.14699 -0.937,1.51601 1.5622,2.92077 4.3174,2.42677 1.3987,-0.25079 2.25,0.0949 2.25,0.91372 0,0.72443 0.9453,1.56434 2.1006,1.86647 1.2744,0.33327 1.8178,1.00692 1.3816,1.71276 -0.4636,0.75009 -0.093,1.04047 1.0422,0.81731 1.8867,-0.37079 2.7376,-1.66297 4.1087,-6.23989 0.7137,-2.38228 1.7048,-3.10573 5.6073,-4.09297 2.6072,-0.65956 4.9658,-0.97377 5.2413,-0.69824 0.9089,0.9089 -1.6897,3.18497 -3.6364,3.18497 -1.0503,0 -2.2474,0.7875 -2.6601,1.75 -1.7084,3.98438 -4.7876,8.28826 -6.2735,8.76863 -1.058,0.34206 -1.5268,1.54601 -1.4043,3.60627 0.2089,3.51085 -3.5986,8.16108 -5.9448,7.26073 -1.0447,-0.40086 -0.5822,-1.28979 1.7594,-3.38207 3.7193,-3.32313 3.3057,-4.44423 -1.035,-2.8058 -1.8124,0.68413 -3.6382,2.40246 -4.434,4.17326 -1.6673,3.70947 -3.9424,4.7528 -3.1317,1.43608 0.5495,-2.24797 0.4884,-2.23661 -2.3834,0.4429 -3.4071,3.17894 -3.6813,3.24612 -5.2981,1.29799 z m -8.0599,-3.07216 c -1.4853,-1.78969 -1.3309,-1.99066 2.1736,-2.82998 2.5273,-0.60528 2.5986,-0.51724 1.5,1.85152 -1.3438,2.89728 -1.9476,3.05811 -3.6736,0.97846 z m 30.0201,-1.47583 c 0,-0.55 0.9,-1 2,-1 1.1,0 2,0.45 2,1 0,0.55 -0.9,1 -2,1 -1.1,0 -2,-0.45 -2,-1 z m -30.865,-9.44298 c 0.083,-3.59225 0.5912,-5.62171 1.4952,-5.96862 0.7534,-0.28909 1.3698,-1.20063 1.3698,-2.02563 0,-0.92249 -0.5775,-1.27839 -1.5,-0.9244 -0.9498,0.36449 -1.5,-0.0138 -1.5,-1.03138 0,-0.88385 0.5625,-1.49449 1.25,-1.35699 0.703,0.14061 1.3885,-0.95331 1.5664,-2.5 0.299,-2.59875 2.1836,-4.01306 2.1836,-1.63871 0,0.72845 1.2058,0.88509 3.5,0.45469 3.4836,-0.65352 4.9328,0.67022 1.976,1.80487 -0.8382,0.32165 -1.9347,1.60729 -2.4366,2.85698 -0.502,1.2497 -0.9412,1.70967 -0.976,1.02217 -0.035,-0.6875 -0.5615,-1.25 -1.1704,-1.25 -0.6088,0 -0.8338,0.675 -0.5,1.5 0.3339,0.825 0.8733,2.15711 1.1987,2.96025 0.4308,1.06292 0.023,1.35064 -1.5,1.05742 -1.6613,-0.31995 -2.0917,0.0997 -2.0917,2.03975 0,1.34342 -0.45,2.44258 -1,2.44258 -0.55,0 -1,0.9 -1,2 0,1.14476 0.6667,2 1.559,2 0.8575,0 1.2809,0.45 0.941,1 -0.3399,0.55 -1.2643,1 -2.0543,1 -1.0878,0 -1.4058,-1.32058 -1.3107,-5.44298 z m 7.865,-6.4451 c 0,-1.41683 4.1289,-5.1503 5.0596,-4.57508 1.6774,1.03669 1.0029,2.28549 -2.0596,3.81327 -1.65,0.82313 -3,1.16594 -3,0.76181 z m 26.5,-7.11192 c 0.3399,-0.55 1.068,-1 1.618,-1 0.55,0 0.7219,0.45 0.382,1 -0.3399,0.55 -1.068,1 -1.618,1 -0.55,0 -0.7219,-0.45 -0.382,-1 z m -18.5,-14.03138 c 0,-0.56727 0.675,-1.29041 1.5,-1.60699 1.8162,-0.69693 1.9917,-3.99655 0.25,-4.69935 -0.6875,-0.27741 -0.29,-0.53991 0.8834,-0.58333 3.0784,-0.11392 3.7411,3.49422 1.0946,5.95986 -2.3213,2.16263 -3.728,2.51347 -3.728,0.92981 z m -15.5,-4.96862 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 13.5,-1.05902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -14,-3.44098 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m 14,-2 c 0.6847,-0.825 1.6398,-1.5 2.1224,-1.5 0.4827,0 0.8776,0.675 0.8776,1.5 0,0.86218 -0.9025,1.5 -2.1224,1.5 -1.7733,0 -1.9177,-0.2468 -0.8776,-1.5 z m -6.5,-2.031 c 1.65,-1.35248 3.3234,-2.4613 3.7186,-2.46403 0.3953,-0.003 0.4577,-0.68507 0.1387,-1.51631 -0.3945,-1.02808 -0.1192,-1.33451 0.8612,-0.95832 1.5342,0.58873 1.7148,3.15046 0.3751,5.31827 -0.4982,0.80597 -1.7356,1.08159 -3.2027,0.71337 -1.3496,-0.33874 -2.3909,-0.15628 -2.3909,0.41897 0,0.56048 -0.5625,1.00287 -1.25,0.98309 -0.6875,-0.0198 0.1,-1.14255 1.75,-2.49504 z m -10.9022,-10.20457 c -1.0731,-1.07302 -0.6294,-2.26443 0.8432,-2.26443 0.7925,0 1.6899,0.40285 1.9942,0.89522 0.6363,1.02941 -1.936,2.27065 -2.8374,1.36921 z m 33.9022,-0.26443 c -0.3399,-0.55 0.1101,-1 1,-1 0.8899,0 1.3399,0.45 1,1 -0.3399,0.55 -0.7899,1 -1,1 -0.2101,0 -0.6601,-0.45 -1,-1 z m 5.5,0 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m 94.5533,87.16778 c -0.359,-1.13094 0.1803,-2.52171 1.409,-3.63365 1.0948,-0.99078 1.7646,-2.16698 1.4885,-2.61377 -0.6385,-1.03308 -8.4508,-0.76302 -8.4508,0.29213 0,0.43313 0.5625,0.80182 1.25,0.81931 0.8256,0.021 0.711,0.44537 -0.3378,1.25 -0.8732,0.67001 -1.3981,1.78101 -1.1664,2.46888 0.497,1.47539 -2.8412,0.50242 -3.9414,-1.14878 -0.846,-1.26964 -1.343,-0.79465 -2.2476,2.1481 -0.6691,2.17675 -0.4756,2.25 5.9432,2.25 5.9772,0 6.5771,-0.1816 6.0533,-1.83222 z m 11.6321,1.1484 c -0.7231,-0.28926 -1.7244,-1.60374 -2.2253,-2.92105 -0.5008,-1.31732 -1.3983,-2.39513 -1.9944,-2.39513 -0.596,0 -0.8248,0.41891 -0.5084,0.9309 0.3164,0.512 0.118,1.21356 -0.441,1.55902 -0.559,0.34546 -1.0163,0.16568 -1.0163,-0.39952 0,-0.5652 -0.6668,-0.77177 -1.4817,-0.45905 -1.1217,0.43043 -1.2346,1.03021 -0.4648,2.46861 0.7647,1.4289 2.062,1.88046 5.2317,1.82109 2.3181,-0.0434 3.6232,-0.31561 2.9002,-0.60487 z m 5.3146,-0.31618 c 0.3399,-0.55 -0.3085,-1 -1.441,-1 -1.1324,0 -2.059,0.45 -2.059,1 0,0.55 0.6484,1 1.441,1 0.7925,0 1.7191,-0.45 2.059,-1 z m 15.5,0.58179 c 0,-0.23002 0.2932,-1.18237 0.6516,-2.11634 0.5391,-1.40489 0.3233,-1.52827 -1.25,-0.71452 -1.0459,0.54098 -3.4258,1.01498 -5.2886,1.05334 -1.8629,0.0384 -3.8654,0.5481 -4.45,1.13274 -0.7507,0.75065 0.6118,1.06299 4.637,1.06299 3.135,0 5.7,-0.1882 5.7,-0.41821 z m 4.7292,-0.18596 c -0.3323,-0.33229 -1.1948,-0.36781 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60416 1.0541,0.0434 1.6448,-0.19293 1.3125,-0.52522 z m 13.9962,-1.14583 c 1.3027,-3.44025 2.984,-4.39777 4.7032,-2.67857 0.8643,0.86428 1.5714,2.21428 1.5714,3 0,0.90271 1.0453,1.42857 2.8397,1.42857 2.8223,0 2.8391,-0.0378 2.75,-6.16691 -0.058,-3.97638 -0.5337,-6.31483 -1.3397,-6.58334 -1.7701,-0.58967 -1.5491,-2.3 0.5,-3.8705 1.5295,-1.17222 1.561,-1.46678 0.25,-2.33742 -0.825,-0.54789 -2.4,-0.78608 -3.5,-0.52931 -1.1,0.25678 -0.5775,-0.18844 1.161,-0.98938 3.0963,-1.42644 3.1569,-1.58486 2.958,-7.73969 -0.1116,-3.4559 0.3792,-9.20845 1.0908,-12.78345 1.3434,-6.74943 3.5146,-27.10889 2.9511,-27.67242 -0.1769,-0.17688 -1.1034,3.31649 -2.0589,7.76305 -2.2477,10.45965 -5.9166,21.34562 -10.6703,31.65937 l -3.8025,8.25 h -27.8438 c -26.6967,0 -27.9033,0.0824 -29.2854,2 -1.5178,2.1059 -4.4707,2.6654 -5.4767,1.03771 -0.6773,-1.09588 -5.5233,0.76662 -5.5233,2.12281 0,0.8393 5.6121,1.38476 7.5,0.72894 2.0038,-0.69606 31.5,-0.49646 31.5,0.21316 0,0.40189 -0.5625,0.92003 -1.25,1.15143 -0.9745,0.32799 -0.9475,0.78714 0.1224,2.08333 1.9031,2.30547 6.8147,2.13648 8.3279,-0.28654 0.8656,-1.38594 1.5702,-1.65624 2.4388,-0.93543 0.8734,0.72493 1.5362,0.42556 2.3263,-1.05084 0.6078,-1.13552 1.9891,-2.06457 3.0698,-2.06457 2.4771,0 2.4654,0.49944 -0.072,3.03647 -2.456,2.45602 -1.621,4.32237 1.6537,3.69637 2.8688,-0.54841 3.3108,2.19633 0.7638,4.74335 -1.9772,1.9772 -1.0325,3.30939 1.0948,1.54387 1.2842,-1.06574 1.5242,-0.9307 1.5242,0.8575 0,1.851 0.5795,2.12244 4.5314,2.12244 3.3965,0 4.6973,-0.43829 5.194,-1.75 z m -5.7148,-2.73727 c -1.5071,-1.8159 -0.6358,-4.51273 1.458,-4.51273 0.8423,0 1.5314,-0.675 1.5314,-1.5 0,-0.825 -0.4641,-1.5 -1.0314,-1.5 -0.5672,0 -1.2904,0.675 -1.607,1.5 -0.3166,0.825 -1.2024,1.5 -1.9686,1.5 -1.6985,0 -1.7962,-1.19682 -0.2258,-2.76722 0.8896,-0.88962 0.7113,-1.35009 -0.75,-1.93615 -1.5697,-0.62958 -1.2829,-0.87261 1.5828,-1.34093 1.925,-0.31459 4.3418,-0.16342 5.3707,0.33593 1.2,0.58243 1.6523,0.55464 1.2616,-0.0775 -0.779,-1.26058 4.5666,-2.35241 5.7753,-1.17958 1.1062,1.07341 -1.0807,3.96546 -2.9987,3.96546 -0.7404,0 -1.1344,0.5625 -0.8757,1.25 0.3821,1.01531 -4.7984,7.75 -5.9614,7.75 -0.1798,0 -0.8824,-0.66927 -1.5612,-1.48727 z m -22.5106,-10.51273 c 0.3399,-0.55 1.068,-1 1.618,-1 0.55,0 0.7219,0.45 0.382,1 -0.3399,0.55 -1.068,1 -1.618,1 -0.55,0 -0.7219,-0.45 -0.382,-1 z m -8.9979,11.36084 c 1.3286,-0.50987 1.3958,-0.81021 0.3317,-1.48469 -1.9711,-1.24951 -2.8338,-1.0596 -2.8338,0.62385 0,1.6934 0.1753,1.75371 2.5021,0.86084 z m -112.5021,-3.4372 c 0,-0.508 -0.4827,-0.92364 -1.0726,-0.92364 -0.5899,0 -0.1399,-1.18569 1,-2.63486 3.3429,-4.24982 2.6392,-5.39454 -1.9274,-3.13518 -2.2,1.08848 -4,2.57488 -4,3.30311 0,0.72824 -0.5974,1.92148 -1.3276,2.65165 -1.1034,1.10345 -0.5969,1.35586 3,1.49507 2.3802,0.0921 4.3276,-0.24815 4.3276,-0.75615 z m 3,-0.92364 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 8.25,0.15652 c 1.3936,-0.12464 1.75,-1.10448 1.75,-4.81151 0,-4.53398 -0.05,-4.60962 -1.9283,-2.90986 -1.3065,1.18229 -2.6771,1.52143 -4.25,1.05156 -2.2717,-0.67863 -2.2786,-0.6601 -0.3217,0.86038 1.9889,1.54533 1.9875,1.56283 -0.25,3.16013 -4.0245,2.87294 -3.0823,3.3722 5,2.6493 z m 75.1665,-1.79965 c 0.8372,-2.18165 -0.2743,-3.1957 -1.4556,-1.32791 -1.1825,1.86986 -1.2077,2.97104 -0.068,2.97104 0.4912,0 1.1768,-0.73941 1.5235,-1.64313 z m -37.4165,-1.41589 c 0,-0.51754 -0.6609,-0.94098 -1.4686,-0.94098 -0.8921,0 -1.2435,0.5866 -0.8952,1.49426 0.5903,1.53826 2.3638,1.12315 2.3638,-0.55328 z m 34,-0.94098 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 14,-2 c 0,-0.55 -0.6484,-1 -1.441,-1 -0.7925,0 -1.7191,0.45 -2.059,1 -0.3399,0.55 0.3085,1 1.441,1 1.1324,0 2.059,-0.45 2.059,-1 z m -101.8962,-2.2962 c -1.2835,-1.28349 -2.5851,-0.2915 -1.6348,1.24598 0.368,0.59556 1.1273,0.79971 1.6872,0.45366 0.683,-0.42212 0.6658,-0.98146 -0.052,-1.69964 z m 56.3962,1.2962 c 0.3505,-0.56716 -0.4896,-1 -1.941,-1 -1.4074,0 -2.559,0.45 -2.559,1 0,0.55 0.8734,1 1.941,1 1.0675,0 2.2191,-0.45 2.559,-1 z m -42,-4 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 42.5833,-3 c 1.0542,0 1.9167,-0.45 1.9167,-1 0,-0.55 -0.9,-1 -2,-1 -1.1,0 -2,0.1882 -2,0.41821 0,0.23002 -0.1512,1.01752 -0.3361,1.75 -0.1849,0.73249 -0.1474,0.99429 0.083,0.58179 0.2307,-0.4125 1.282,-0.75 2.3361,-0.75 z m 25.3352,-0.35175 c -0.332,-0.86516 -1.4805,-1.16789 -3.1906,-0.84098 -2.4117,0.46102 -2.4799,0.58586 -0.6999,1.28147 3.0617,1.19655 4.458,1.03846 3.8905,-0.44049 z m -64.4185,-2.20727 c 0,-0.85746 -0.4573,-1.27636 -1.0163,-0.9309 -0.559,0.34546 -0.7574,1.04702 -0.441,1.55902 0.8572,1.38704 1.4573,1.12841 1.4573,-0.62812 z m 32.8857,-0.51161 c -1.6047,-0.99179 -2.3352,-0.46569 -1.4167,1.02041 0.368,0.59556 1.1361,0.79425 1.7069,0.44153 0.6718,-0.41524 0.5696,-0.93059 -0.2902,-1.46194 z m 35.1143,-1.37035 c 0,-1.05548 -1.9191,-1.49891 -2.4899,-0.57533 -0.3455,0.55897 0.073,1.01631 0.9309,1.01631 0.8574,0 1.559,-0.19844 1.559,-0.44098 z m 5.7708,-1.37152 c 0.2211,-0.66333 -0.5237,-1.1875 -1.6875,-1.1875 -2.0773,0 -2.6999,1.05007 -1.3958,2.35417 0.9265,0.92647 2.5962,0.29467 3.0833,-1.16667 z m -202.6901,-0.59025 c -0.894,-1.07718 -0.8644,-1.52306 0.1276,-1.92106 0.8214,-0.3296 0.6546,-0.54704 -0.4583,-0.59724 -2.0346,-0.0918 -2.258,1.01309 -0.55,2.72105 1.6588,1.65882 2.3027,1.5106 0.8807,-0.20275 z m 202.9193,-4.09725 c 0,-0.825 -0.6609,-1.5 -1.4686,-1.5 -0.8946,0 -1.2437,0.58629 -0.893,1.5 0.3166,0.825 0.9774,1.5 1.4686,1.5 0.4911,0 0.893,-0.675 0.893,-1.5 z m -206.2,-0.7 c 0.66,-0.66 1.2,-1.86985 1.2,-2.68856 0,-1.09869 -0.5238,-0.9263 -2,0.65819 -1.1,1.18071 -2,2.39056 -2,2.68856 0,0.94954 1.5587,0.58315 2.8,-0.65819 z m 4.6472,-5.88541 c -0.322,-0.52097 -1.0116,-0.68378 -1.5326,-0.3618 -0.521,0.32197 -0.6838,1.01165 -0.3618,1.53262 0.322,0.52097 1.0116,0.68378 1.5326,0.3618 0.521,-0.32197 0.6838,-1.01165 0.3618,-1.53262 z m 194.0798,-3.87092 c -0.3251,-0.52598 -1.2516,-0.70283 -2.059,-0.39301 -2.0671,0.79323 -1.8235,1.34934 0.591,1.34934 1.1325,0 1.7931,-0.43035 1.468,-0.95633 z m -185.7033,-2.36684 c 0.3057,-1.58748 0.1003,-1.64632 -1.7385,-0.49797 -2.5332,1.58204 -2.7321,3.09237 -0.3467,2.63298 0.9562,-0.18414 1.8945,-1.1449 2.0852,-2.13501 z m -20.3237,-0.69053 c 0,-2.1435 -2.9057,-1.8339 -3.3271,0.35451 -0.2574,1.3364 0.1499,1.74367 1.4863,1.48631 1.0124,-0.19498 1.8408,-1.02335 1.8408,-1.84082 z m 29.5,-2.9863 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m -27.5,-2 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -14,-2 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 21.8816,-0.55194 c 0.3552,-0.9258 0.179,-1.29452 -0.4369,-0.91391 -0.5678,0.35092 -1.6475,0.12744 -2.3995,-0.49662 -0.9398,-0.77999 -1.5697,-0.8069 -2.0152,-0.0861 -0.3564,0.57671 0.053,1.04856 0.911,1.04856 0.8574,0 1.559,0.45 1.559,1 0,1.5685 1.7209,1.16967 2.3816,-0.55194 z m -18.8278,-2.53518 c 0.3696,-0.59791 1.5211,-0.86504 2.5591,-0.59362 1.0379,0.27143 1.9434,0.0856 2.0121,-0.41288 0.2644,-1.91744 0.4269,-2.43965 1.0743,-3.45413 0.854,-1.33805 -0.1956,-2.91201 -2.5127,-3.76813 -2.3476,-0.86738 -1.0534,-3.0133 1.4263,-2.36486 1.0379,0.27143 1.8871,0.13441 1.8871,-0.30447 0,-0.43889 -1.125,-1.08033 -2.5,-1.42543 -1.375,-0.34511 -2.5,-1.33139 -2.5,-2.19175 0,-0.86035 -0.5625,-1.36584 -1.25,-1.12331 -1.3335,0.47042 -1.4186,2.13761 -0.2541,4.9757 0.548,1.33545 0.2261,1.75 -1.359,1.75 -1.1424,0 -3.0621,1.33233 -4.266,2.96073 -1.2039,1.62841 -2.5674,2.72685 -3.0299,2.44099 -0.4626,-0.28587 -0.841,0.15525 -0.841,0.98025 0,2.06265 1.936,3.08207 3.2871,1.7309 1.5937,-1.59371 3.7129,-1.37275 3.7129,0.38713 0,1.74241 1.5748,1.99701 2.5538,0.41288 z m 17.1962,-4.13902 c -3.4611,-1.18372 -3.6768,-3.2233 -0.25,-2.36322 2.0298,0.50944 2.5,0.25879 2.5,-1.33257 0,-1.07802 0.45,-2.23815 1,-2.57807 0.55,-0.33992 1,-0.14148 1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.87344 1,-1.94098 0,-1.06754 0.45,-2.2191 1,-2.55902 1.6553,-1.023 1.1277,-2.5 -0.893,-2.5 -1.0412,0 -2.152,0.675 -2.4686,1.5 -0.9374,2.44273 -5.1343,1.81052 -6.6384,-1 -1.6076,-3.00375 -2.5854,-3.14328 -3.9648,-0.56574 -1.3994,2.61481 -1.3052,3.1066 0.4648,2.42737 1.0814,-0.41499 1.5,0.10707 1.5,1.87087 0,1.69309 -0.8468,2.83914 -2.75,3.72159 -2.7427,1.27175 -2.7441,1.27738 -0.5,2.12829 1.2375,0.46925 2.25,1.28947 2.25,1.82272 0,0.53325 1.9125,0.93348 4.25,0.88941 3.9733,-0.0749 4.071,-0.14136 1.5,-1.02065 z m 164.25,0.78516 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -148.2289,-2.3722 c 0.2435,-0.73075 -0.2136,-0.95424 -1.1875,-0.58051 -0.871,0.33422 -1.5836,1.04702 -1.5836,1.58401 0,1.31439 2.2728,0.49134 2.7711,-1.0035 z m 194.2289,-1.87714 c 0,-1.96569 -2.2593,-1.15034 -2.564,0.92529 -0.1517,1.03374 0.272,1.43056 1.1626,1.0888 0.7708,-0.29576 1.4014,-1.2021 1.4014,-2.01409 z m -197,-3.30968 c 0,-0.55 -0.7016,-1 -1.559,-1 -0.8575,0 -1.2809,0.45 -0.941,1 0.3399,0.55 1.0415,1 1.559,1 0.5176,0 0.941,-0.45 0.941,-1 z m 115,-1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -150.6753,-1.65799 c 1.179,-1.17902 -1.3465,-3.14907 -3.3615,-2.62214 -2.7599,0.72174 -2.4713,3.28013 0.3701,3.28013 1.2834,0 2.6295,-0.2961 2.9914,-0.65799 z m 142.4253,-1.57993 c 0.6875,-0.55383 1.25,-1.47161 1.25,-2.03951 0,-0.5679 -0.8355,-0.27645 -1.8566,0.64767 -1.5733,1.4238 -2.033,1.4677 -3.0123,0.28767 -0.8902,-1.07253 -0.8082,-1.681 0.3566,-2.64768 1.7286,-1.43464 2.0378,-3.35207 0.4555,-2.82463 -0.5812,0.19375 -1.9246,2.29054 -2.9852,4.65955 l -1.9285,4.30727 3.2353,-0.69168 c 1.7793,-0.38043 3.7977,-1.14482 4.4852,-1.69866 z m 10.8542,-2.49125 c -1.0165,-1.01651 -1.8553,0.51389 -1.0213,1.86338 0.6301,1.01942 0.8656,1.02021 1.2044,0.004 0.2315,-0.69479 0.1492,-1.53513 -0.1831,-1.86742 z m -118.5811,-5.71011 c -0.9931,-2.61195 -1.1939,-2.6917 -3.2904,-1.30663 -1.228,0.81131 -2.3842,2.4946 -2.5693,3.74065 -0.2932,1.97309 -0.011,2.18373 2.1887,1.63173 1.5606,-0.39167 2.8263,-0.15487 3.3132,0.61986 1.2976,2.065 1.5697,-1.49796 0.3578,-4.68561 z m 166.3109,3.18928 c -0.4313,-0.6875 -0.6462,-2.08669 -0.4777,-3.10931 0.1862,-1.12964 -0.1179,-1.59703 -0.7749,-1.19098 -1.7097,1.05661 -1.323,5.55029 0.4776,5.55029 0.9987,0 1.2772,-0.44925 0.775,-1.25 z m -186.334,-1.25 c 0,-1.50892 1.0187,-1.88099 4.25,-1.5523 0.9625,0.0979 1.75,-0.35879 1.75,-1.01489 0,-1.57865 -8.4089,-0.66828 -10.5964,1.1472 -1.4508,1.20406 -1.4279,1.39254 0.2495,2.05261 2.9753,1.17087 4.3469,0.97126 4.3469,-0.63262 z m 11,0.66667 c 0,-1.40725 -1.1257,-2.05565 -2.592,-1.49298 -0.7681,0.29473 -1.1475,0.93873 -0.8432,1.43109 0.6979,1.12934 3.4352,1.17865 3.4352,0.0619 z m -33.3333,-1.52947 c 0,-0.82917 -0.7179,-1.17506 -1.8334,-0.88336 -1.0083,0.26368 -1.8333,0.87694 -1.8333,1.36279 0,0.48585 0.825,0.88337 1.8333,0.88337 1.0084,0 1.8334,-0.61326 1.8334,-1.3628 z m 203.2875,-1.72285 c -0.6139,-1.1471 -1.3604,-1.84151 -1.6588,-1.54312 -0.8242,0.82426 0.4961,3.62877 1.7084,3.62877 0.7396,0 0.7243,-0.63946 -0.05,-2.08565 z m -195.4885,-1.76449 c -0.5635,-0.59314 -2.4657,0.91014 -2.4657,1.94858 0,0.53923 0.6296,0.40017 1.3991,-0.30901 0.7696,-0.70919 1.2495,-1.44699 1.0666,-1.63957 z m 5.0343,1.85014 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 15.5,-4.5 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 11.25,0.26307 c 0.9625,-0.1054 1.75,-0.80054 1.75,-1.54474 0,-0.96568 -0.6442,-1.13169 -2.25,-0.57979 -1.2375,0.42532 -3.5767,0.83568 -5.1982,0.9119 -1.6215,0.0762 -3.1401,0.71434 -3.3746,1.41803 -0.3208,0.9624 0.5337,1.11922 3.4481,0.63285 2.1311,-0.35563 4.6622,-0.73284 5.6247,-0.83825 z m -22.25,-1.76307 c 1.375,-1.07554 1.9187,-1.96553 1.2082,-1.97776 -0.7105,-0.0122 -2.2579,0.87776 -3.4386,1.97776 -2.7556,2.56725 -1.0516,2.56725 2.2304,0 z m 177,-0.5 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -0.825,0 -1.5,0.675 -1.5,1.5 0,0.825 0.675,1.5 1.5,1.5 0.825,0 1.5,-0.675 1.5,-1.5 z m -171,-2.07946 c 0,-2.36759 0.2561,-2.5232 3.1185,-1.89451 2.3915,0.52526 3.0084,0.36895 2.6463,-0.67055 -0.2598,-0.74551 -1.1792,-1.23105 -2.0431,-1.07896 -0.864,0.15209 -1.8459,-0.16844 -2.182,-0.71229 -0.3961,-0.64094 -1.4781,-0.5938 -3.0754,0.13399 -2.7699,1.26206 -3.1704,2.59359 -1.0274,3.41592 0.7902,0.30326 1.1921,1.18914 0.893,1.96862 -0.2991,0.77948 -0.046,1.41724 0.5631,1.41724 0.6089,0 1.107,-1.16075 1.107,-2.57946 z m -12.2666,-2.30963 c -0.1309,-1.73755 -0.3265,-1.76843 -2.4378,-0.38499 -2.9055,1.90375 -2.8824,2.27408 0.1423,2.27408 1.7736,0 2.399,-0.51466 2.2955,-1.88909 z m 28.8077,0.82256 c 1.0763,-1.74144 -0.1495,-2.11024 -1.521,-0.45764 -0.7888,0.95039 -0.8647,1.52417 -0.2016,1.52417 0.5849,0 1.3601,-0.47994 1.7226,-1.06653 z m -43.5564,-0.68347 c -0.01,-0.4125 -0.4397,-1.42124 -0.9584,-2.24164 -0.7128,-1.12751 -1.2248,-1.20981 -2.0975,-0.33713 -0.635,0.63498 -0.8522,1.64371 -0.4827,2.24164 0.7571,1.22495 3.5622,1.4922 3.5386,0.33713 z m 9.8153,-2.45 c 1.6227,-1.62267 1.5113,-2.8 -0.2648,-2.8 -0.8057,0 -1.9465,0.9 -2.5352,2 -0.822,1.53583 -0.7605,2 0.2648,2 0.7344,0 1.8752,-0.54 2.5352,-1.2 z m -5.3,-2.8 c 0,-0.83289 -0.8895,-1.50059 -2,-1.50132 -1.1,-7.2e-4 -2.0562,-0.56322 -2.125,-1.25 -0.069,-0.68677 -0.1972,-2.03618 -0.2854,-2.99868 -0.1275,-1.39033 -0.4511,-1.23618 -1.5748,0.75 -1.224,2.16362 -1.2192,2.64939 0.036,3.61024 0.7973,0.61064 1.4497,1.56169 1.4497,2.11347 0,0.55177 1.0125,0.95216 2.25,0.88975 1.2829,-0.0647 2.25,-0.75819 2.25,-1.61346 z m 20.5,-0.0795 c 0,-0.67129 1.0984,-0.83821 2.9048,-0.44145 1.5976,0.3509 3.1674,0.21311 3.4883,-0.3062 0.321,-0.5193 -0.6487,-1.18945 -2.1548,-1.4892 -1.9017,-0.3785 -3.3408,0.0448 -4.7105,1.38565 -1.136,1.11204 -1.454,1.93066 -0.75,1.93066 0.6722,0 1.2222,-0.48575 1.2222,-1.07946 z m 210,-4.9205 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 4.239,-1.46974 c 0.2596,-1.35835 0.087,-2.2318 -0.3835,-1.94098 -0.8285,0.51208 -1.2458,4.41072 -0.4721,4.41072 0.2109,0 0.5959,-1.11138 0.8556,-2.46974 z m -7.664,-2.2886 c -1.0157,-1.01571 -2.8548,1.49655 -2.0495,2.79962 0.5514,0.89214 1.0049,0.76233 1.7045,-0.48787 0.5244,-0.93688 0.6796,-1.97716 0.345,-2.31175 z m 53.925,2.75834 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -285.3876,-13.60948 c 0.1424,-4.93929 -0.1191,-9.5923 -0.5812,-10.34003 -0.5481,-0.88691 -0.4612,-1.12526 0.2501,-0.68564 0.7026,0.43425 1.3104,-1.02203 1.7091,-4.0955 1.0999,-8.47769 1.4159,-9.2625 3.7787,-9.38535 1.6927,-0.088 1.8087,-0.22632 0.4809,-0.57333 -2.2096,-0.57743 -2.1925,-1.06032 0.3005,-8.46047 3.0382,-9.01889 5.9944,-14.8502 7.5282,-14.8502 0.755,0 1.1193,-0.6233 0.8201,-1.40305 -0.5866,-1.52866 2.3093,-7.77268 5.2536,-11.32771 1.0162,-1.22692 2.6561,-3.36442 3.6443,-4.75 0.9882,-1.38558 2.4019,-2.51924 3.1416,-2.51924 0.7397,0 1.6004,-1.0125 1.9127,-2.25 0.3123,-1.2375 3.1114,-4.725 6.2201,-7.75 3.1088,-3.025 5.0395,-4.47377 4.2906,-3.21949 -1.1441,1.91606 -1.1454,2.41513 -0.01,3.12283 1.0558,0.65712 1.103,1.30999 0.2149,2.96949 -1.2635,2.36088 0.1387,2.91414 2.9235,1.1535 1.1566,-0.73122 1.2233,-1.21144 0.2968,-2.13788 -0.8588,-0.85883 -0.9015,-1.74294 -0.1517,-3.14388 0.5737,-1.07197 0.8125,-2.83084 0.5307,-3.90861 -0.3741,-1.4303 0.3444,-2.46704 2.6601,-3.83847 1.7449,-1.03339 3.6225,-2.25527 4.1725,-2.71527 4.8422,-4.04992 13.3788,-8.51322 11.9926,-6.27025 -1.2703,2.05535 0.4853,4.58137 3.1514,4.53446 3.4883,-0.0614 5.2831,-2.83232 3.5902,-5.54297 -1.0427,-1.67215 -1.0002,-2.00346 0.2588,-2.00346 0.8297,0 1.5085,-0.43266 1.5085,-0.96146 0,-1.19839 7.7319,-3.3554 9.5402,-2.66149 0.7318,0.28083 1.4899,0.0326 1.6846,-0.5516 0.3993,-1.19763 11.7017,-3.2323 12.6557,-2.27827 0.339,0.33899 -0.1634,1.18654 -1.1165,1.88346 -0.9531,0.69691 -1.4557,1.54429 -1.117,1.88305 0.7831,0.78312 4.5114,-1.17708 5.9504,-3.12852 0.7873,-1.0677 1.2984,-1.16281 1.809,-0.33666 1.0311,1.66832 2.5936,1.4124 2.5936,-0.42479 0,-1.3624 1.1194,-1.48437 8.25,-0.8989 4.5375,0.37256 8.6927,0.94844 9.2337,1.27973 0.541,0.33129 3.1927,0.73393 5.8925,0.89476 5.8827,0.35042 7.6238,1.58893 7.6238,5.42314 0,1.98342 0.5023,2.87755 1.6166,2.87755 1.1243,0 1.4574,-0.60908 1.0937,-2 -0.4033,-1.54203 -0.029,-2.00179 1.6333,-2.0078 1.332,-0.005 2.6097,-0.98476 3.3421,-2.56314 1.0884,-2.34551 1.0062,-2.53182 -1,-2.26892 -1.2021,0.15753 -2.3068,-0.15155 -2.4547,-0.68686 -0.3016,-1.09117 -2.9604,-1.9812 -11.731,-3.92695 -15.9234,-3.53259 -36.4893,-2.71944 -51.6226,2.0411 -28.5868,8.9927 -51.5819,28.56105 -65.3381,55.60125 -8.8864,17.46788 -15.063,41.88758 -11.4969,45.4537 0.7232,0.72318 0.57,1.43437 -0.5,2.32245 -1.1458,0.95094 -1.5424,3.26261 -1.5424,8.99095 0,4.24099 0.2847,7.99563 0.6328,8.34364 0.348,0.34802 1.44,-0.3935 2.4266,-1.64781 1.3659,-1.73642 1.8557,-4.42334 2.053,-11.26109 z m 42.8876,12.60948 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -18,-1.44098 c 0,-0.79254 -0.45,-1.7191 -1,-2.05902 -0.55,-0.33992 -1,-0.40328 -1,-0.1408 0,0.26247 -0.2731,1.18903 -0.607,2.05901 -0.3983,1.03799 -0.054,1.58179 1,1.58179 0.8839,0 1.607,-0.64844 1.607,-1.44098 z m 5.3895,-0.13167 c 0.4208,-1.09668 0.1,-1.475 -1.0601,-1.25 -0.915,0.17746 -1.851,0.88515 -2.0799,1.57265 -0.6122,1.83866 2.4306,1.526 3.14,-0.32265 z m -24.8895,-0.42735 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 6.5,-5 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 27,-1.5 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 3,0.5 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -35,-3.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 17,-3.02764 c 0,-0.89208 -0.5866,-1.24351 -1.4943,-0.89521 -0.8218,0.31537 -1.2452,0.97625 -0.9409,1.46861 0.8726,1.41193 2.4352,1.04399 2.4352,-0.5734 z m 13.9847,-2.3404 c -0.013,-1.45727 -0.1493,-1.48367 -0.9847,-0.19098 -1.2656,1.95837 -1.2656,3.28218 0,2.5 0.55,-0.33992 0.9931,-1.37898 0.9847,-2.30902 z m -22.0725,-2.11554 c 1.1943,-0.75601 1.1569,-1.14921 -0.2423,-2.54845 -1.941,-1.94093 -3.6699,-1.21917 -3.6699,1.53203 0,2.06693 1.5971,2.48188 3.9122,1.01642 z m 7.0878,-0.69788 c 0,-1.3288 -0.2715,-1.39713 -1.5,-0.37756 -0.825,0.68469 -1.5,1.41479 -1.5,1.62244 0,0.20766 0.675,0.37756 1.5,0.37756 0.825,0 1.5,-0.7301 1.5,-1.62244 z m 182,-1.87756 c 0,-0.825 -0.4234,-1.5 -0.941,-1.5 -1.261,0 -2.1641,1.56159 -1.3651,2.36052 1.1261,1.12618 2.3061,0.68589 2.3061,-0.86052 z m -161,-0.5 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -35,-1.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 27.7292,-0.16319 c -0.3323,-0.33229 -1.1948,-0.36781 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60416 1.0541,0.0434 1.6448,-0.19293 1.3125,-0.52522 z m 186.2708,-2.39583 c 0,-1.65 0.4734,-3 1.052,-3 0.5786,0 1.5227,-1.35 2.0978,-3 0.5752,-1.65 1.4672,-3 1.9822,-3 1.0337,0 0.6911,4.51023 -0.4275,5.62885 -1.3032,1.3032 -0.7454,5.37115 0.7365,5.37115 1.9333,0 2.8908,-1.70043 1.3152,-2.33564 -0.7843,-0.3162 -0.6241,-0.53612 0.4264,-0.58541 0.9254,-0.0434 1.9683,-0.97895 2.3174,-2.07895 0.7464,-2.35177 2.5,-2.68047 2.5,-0.46862 0,0.84227 -0.675,1.79041 -1.5,2.10699 -2.1671,0.83162 -1.8432,2.36163 0.5,2.36163 1.1,0 2,-0.45 2,-1 0,-1.97225 1.8699,-0.95348 2.2943,1.25 0.2383,1.2375 0.4946,-0.13149 0.5695,-3.04221 0.1636,-6.35835 -1.4274,-8.85645 -4.1138,-6.45934 -1.626,1.45092 -1.75,1.34243 -1.75,-1.53173 0,-2.75316 0.3022,-3.07255 2.749,-2.90498 2.1755,0.14899 2.8172,-0.29117 3.0759,-2.10995 0.3124,-2.1967 0.096,-2.27675 -4.9013,-1.81256 -5.469,0.50801 -6.9911,1.63683 -6.2139,4.60861 0.2555,0.97704 -0.025,2.07879 -0.6226,2.44832 -0.5979,0.36953 -1.0871,0.19532 -1.0871,-0.38714 0,-0.58246 -1.8266,-1.05902 -4.059,-1.05902 -2.4514,0 -3.8143,0.39607 -3.441,1 0.3399,0.55 2.1665,1 4.059,1 3.6013,0 4.0298,0.52018 2.4661,2.99356 -0.5713,0.90379 -2.084,1.37399 -3.8308,1.19077 -2.1678,-0.22739 -3.2922,0.3161 -4.5151,2.18255 -1.5956,2.43512 -1.5684,2.49855 1.3462,3.13869 1.636,0.35934 2.9746,1.06759 2.9746,1.57389 0,0.50629 0.45,0.92054 1,0.92054 0.55,0 1,-1.35 1,-3 z m -208,1.05902 c 0,-1.67643 -1.7735,-2.09154 -2.3638,-0.55328 -0.3483,0.90766 0,1.49426 0.8952,1.49426 0.8077,0 1.4686,-0.42344 1.4686,-0.94098 z m 28.7292,-0.66319 c -0.3323,-0.33229 -1.1948,-0.36781 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60416 1.0541,0.0434 1.6448,-0.19293 1.3125,-0.52522 z m 168.2708,-1.01827 c 0,-1.3288 -0.2715,-1.39713 -1.5,-0.37756 -0.825,0.68469 -1.5,1.41479 -1.5,1.62244 0,0.20766 0.675,0.37756 1.5,0.37756 0.825,0 1.5,-0.7301 1.5,-1.62244 z m -200.8,-1.37756 c 0.99,0 1.8,-0.45857 1.8,-1.01905 0,-0.60438 -1.119,-0.75158 -2.75,-0.36174 -3.7393,0.89378 -4.3898,1.3455 -3.6534,2.53702 0.4207,0.68071 0.9894,0.65781 1.7163,-0.0691 0.5979,-0.59792 1.8971,-1.08713 2.8871,-1.08713 z m 131.4181,-9.09133 c 0.3312,-5.72477 0.9235,-13.23245 1.3163,-16.68373 0.6888,-6.05253 0.6291,-6.29639 -1.6834,-6.87678 -3.8009,-0.95398 -4.6167,0.73596 -3.2852,6.80539 0.6451,2.94055 1.4339,10.4167 1.753,16.61366 0.3191,6.19697 0.7415,11.10587 0.9387,10.90867 0.1972,-0.1972 0.6294,-5.04244 0.9606,-10.76721 z m -120.6181,8.59133 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 187,-1 c 0,-0.825 -0.3949,-1.5 -0.8776,-1.5 -0.4826,0 -1.4377,0.675 -2.1224,1.5 -1.0401,1.2532 -0.8957,1.5 0.8776,1.5 1.2199,0 2.1224,-0.63782 2.1224,-1.5 z m 5,-1.61803 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,0.11492 -1,-0.5 0,-0.61492 -0.4455,-0.84269 -0.99,-0.50615 -0.6232,0.38516 -0.5306,1.1092 0.25,1.95405 1.3075,1.41522 2.74,1.11934 2.74,-0.56593 z m -191,-3.94099 c 0,-4.18102 -1.5831,-3.66332 -1.7028,0.55683 -0.054,1.92379 0.3063,3.24723 0.8018,2.94098 0.4956,-0.30625 0.901,-1.88027 0.901,-3.49781 z m -7.673,2.39871 c 0.3631,-0.36316 -0.266,-1.30906 -1.398,-2.10199 -2.4585,-1.72202 -3.7336,-0.91206 -1.9491,1.23813 1.3713,1.65224 2.3151,1.89584 3.3471,0.86386 z m 186.173,-0.33969 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -171.5,-3 c 0,-1.1 -0.4234,-2 -0.941,-2 -1.3423,0 -2.2882,1.82013 -1.559,3 1.0451,1.69104 2.5,1.10908 2.5,-1 z m 5.5539,-2.91287 c -0.3696,-0.59792 -1.4329,-1.0516 -2.3629,-1.00818 -1.0412,0.0486 -1.2106,0.27277 -0.441,0.58333 0.6875,0.27741 1.25,1.23189 1.25,2.12105 0,1.18709 0.2957,1.32096 1.1129,0.5038 0.612,-0.61207 0.8105,-1.60207 0.441,-2.2 z m 9.4461,-3.08713 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m 173.0054,-1.98988 c -0.8908,-1.66453 -1.3765,-1.79531 -2.9705,-0.79985 -2.3959,1.49628 -1.673,2.78973 1.5593,2.78973 2.1621,0 2.3411,-0.25239 1.4112,-1.98988 z m 87.0545,-2.53409 c -0.8776,-2.94113 -0.889,-2.9297 -0.9739,0.97397 -0.056,2.56295 0.256,3.60799 0.888,2.97603 0.6023,-0.60229 0.6351,-2.10963 0.086,-3.95 z m -104.0599,-0.59104 c 0,-1.50589 -2.2105,-0.97593 -3.608,0.86501 -2.0861,2.74822 -1.6201,3.44559 1.108,1.65804 1.375,-0.90093 2.5,-2.03631 2.5,-2.52305 z m 12.5411,0.18154 c -0.8092,-1.30936 -3.5411,-1.41725 -3.5411,-0.13985 0,0.50967 0.7875,1.10184 1.75,1.31593 2.1823,0.48541 2.6345,0.1885 1.7911,-1.17608 z m -184.5411,-2.06653 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 7.8233,-1.66713 c -0.1778,-0.91693 -0.8504,-1.84262 -1.4946,-2.05711 -0.7451,-0.24807 -0.9756,0.35856 -0.6334,1.66714 0.6392,2.44419 2.596,2.80279 2.128,0.38997 z m 266.7181,-6.96386 c -0.3476,-1.85296 -1.0616,-3.36901 -1.5867,-3.36901 -1.2516,0 -1.2049,1.15928 0.2745,6.80718 0.9451,3.60817 1.3119,4.1425 1.5867,2.31183 0.1967,-1.30955 0.073,-3.89705 -0.2745,-5.75 z m -288.2364,4.57276 c 0.4013,-1.53471 0.116,-1.97691 -1.1219,-1.73851 -2.0919,0.40285 -2.8723,3.79674 -0.8731,3.79674 0.8012,0 1.6989,-0.9262 1.995,-2.05823 z m 16.4187,-1.60699 c -0.2505,-1.31038 -0.066,-2.62333 0.4104,-2.91766 0.4762,-0.29434 0.8659,-0.0641 0.8659,0.51173 0,0.57578 1.4443,0.92975 3.2096,0.78659 2.9653,-0.24047 3.2194,-0.54393 3.339,-3.98786 0.1528,-4.39977 -1.9673,-5.09742 -3.7306,-1.22758 -1.2493,2.74201 -2.818,3.33152 -2.818,1.05902 0,-2.51183 -2.2139,-2.92624 -3.8872,-0.72763 -0.887,1.16546 -2.5128,2.2557 -3.6128,2.42275 -3.3032,0.50163 -4.5012,1.72021 -4.4778,4.55488 l 0.022,2.69098 1.7277,-2.12488 c 0.9503,-1.16868 3.0196,-2.42839 4.5985,-2.79936 2.7238,-0.63993 2.8486,-0.5236 2.4385,2.2712 -0.3266,2.22498 -0.09,2.81412 0.9688,2.408 0.8604,-0.33016 1.2253,-1.45718 0.9457,-2.92018 z m 20.6973,-6.13772 c 1.3724,-0.7845 -3.1815,-2.2262 -4.9221,-1.55826 -0.8244,0.31635 -1.4989,1.21061 -1.4989,1.98724 0,1.03311 0.738,1.23566 2.75,0.75475 1.5125,-0.36152 3.1644,-0.8942 3.671,-1.18373 z m -28.0315,-0.76971 c 0.4208,-1.09668 0.1,-1.475 -1.0601,-1.25 -0.915,0.17746 -1.851,0.88515 -2.0799,1.57265 -0.6122,1.83866 2.4306,1.526 3.14,-0.32265 z m 114.0678,-1.35825 c 0.3164,-0.512 0.118,-1.21356 -0.441,-1.55902 -0.559,-0.34546 -1.0163,0.0734 -1.0163,0.9309 0,1.75653 0.6001,2.01516 1.4573,0.62812 z m -101.8024,-5.61223 c 0.9,-2.34537 -0.072,-2.62076 -1.4512,-0.41139 -0.7726,1.23707 -0.8389,1.95452 -0.1808,1.95452 0.5719,0 1.3063,-0.69441 1.632,-1.54313 z m 15.6457,-1.49844 c 0.4451,-1.70185 0.2877,-1.86166 -0.8793,-0.89314 -0.7817,0.64878 -1.4213,1.82606 -1.4213,2.61617 0,2.01158 1.6465,0.77848 2.3006,-1.72303 z m -25.0558,-0.45843 c 0.2628,-1.375 0.1427,-2.5 -0.2669,-2.5 -0.4096,0 -0.9598,1.125 -1.2227,2.5 -0.2628,1.375 -0.1427,2.5 0.2669,2.5 0.4096,0 0.9598,-1.125 1.2227,-2.5 z m 111.9385,0.28333 c -0.7175,-0.71756 -1.1833,-0.7766 -1.1833,-0.15 0,1.33478 1.1826,2.51739 1.85,1.85 0.2842,-0.28416 -0.016,-1.04916 -0.6667,-1.7 z m 8.1386,-1.37636 c -0.098,-1.03278 0.2721,-2.15602 0.8223,-2.49609 0.5502,-0.34007 1.3705,-2.25913 1.8228,-4.26459 0.647,-2.86875 0.5197,-3.64629 -0.5971,-3.64629 -0.7807,0 -1.8471,1.125 -2.3699,2.5 -0.5228,1.375 -1.6632,2.5 -2.5343,2.5 -0.871,0 -1.3056,-0.45 -0.9657,-1 0.3399,-0.55 -0.2944,-1 -1.4096,-1 -1.3017,0 -1.8402,0.48837 -1.5042,1.36404 0.3446,0.89801 -0.4771,1.56414 -2.4051,1.94974 -3.5224,0.70448 -5.1316,3.48905 -1.842,3.18751 3.5541,-0.32581 6.6599,-1.65996 6.6762,-2.86792 0.01,-0.62643 0.4235,-0.48818 0.928,0.30907 0.6217,0.98263 0.4046,1.81388 -0.6809,2.60765 -1.4351,1.04933 -1.403,1.27561 0.322,2.27532 2.5149,1.4574 3.9583,0.90958 3.7375,-1.41844 z m 152.6781,1.15205 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 1,-5.05902 c 0,-0.76008 -0.3375,-1.59055 -0.75,-1.84549 -0.4125,-0.25494 -0.75,0.57553 -0.75,1.84549 0,1.26996 0.3375,2.10043 0.75,1.84549 0.4125,-0.25494 0.75,-1.08541 0.75,-1.84549 z m -269.2289,-0.31318 c 0.2435,-0.73075 -0.2136,-0.95424 -1.1875,-0.58051 -0.871,0.33422 -1.5836,1.04702 -1.5836,1.58401 0,1.31439 2.2728,0.49134 2.7711,-1.0035 z m 23.4122,-0.40349 c -0.7175,-0.71756 -1.1833,-0.7766 -1.1833,-0.15 0,1.33478 1.1826,2.51739 1.85,1.85 0.2842,-0.28416 -0.016,-1.04916 -0.6667,-1.7 z m -14.1833,-0.28333 c 0.6847,-0.825 1.8887,-1.5 2.6755,-1.5 0.7868,0 3.0862,-1.125 5.1097,-2.5 2.0235,-1.375 4.3621,-2.51595 5.1969,-2.53543 0.9154,-0.0214 0.5256,-0.58684 -0.9821,-1.42466 l -2.5,-1.38922 2.6529,-1.01366 c 1.459,-0.55752 2.9289,-1.46033 3.2663,-2.00625 1.0142,-1.64101 -1.6348,-2.5534 -2.8209,-0.97158 -0.6041,0.80561 -1.9143,1.77118 -2.9117,2.14571 -0.9973,0.37453 -1.5775,1.06258 -1.2892,1.529 0.6517,1.05456 -5.1347,5.44645 -6.2598,4.75113 -0.7399,-0.45729 -5.1376,4.57113 -5.1376,5.87447 0,1.07657 1.7837,0.5061 3,-0.95951 z m 256,0.5 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -247,-1.60699 c 0,-0.21615 -0.675,-0.39301 -1.5,-0.39301 -0.825,0 -1.5,0.43588 -1.5,0.96862 0,0.53273 0.675,0.70959 1.5,0.39301 0.825,-0.31659 1.5,-0.75246 1.5,-0.96862 z m -22.5,-0.39301 c 0.3399,-0.55 -0.057,-1 -0.882,-1 -0.825,0 -1.7781,0.45 -2.118,1 -0.3399,0.55 0.057,1 0.882,1 0.825,0 1.7781,-0.45 2.118,-1 z m 9.1623,-3.25 c -0.2774,-0.6875 -0.5044,-0.125 -0.5044,1.25 0,1.375 0.227,1.9375 0.5044,1.25 0.2774,-0.6875 0.2774,-1.8125 0,-2.5 z m 19.3377,1.05 c 0,-1.61542 -0.2957,-1.90429 -1.1129,-1.08713 -0.612,0.61207 -0.8105,1.60207 -0.441,2.2 1.0344,1.67368 1.5539,1.30164 1.5539,-1.11287 z m 239.5,-0.8 c 0.3399,-0.55 -0.083,-1 -0.941,-1 -0.8574,0 -1.559,0.45 -1.559,1 0,0.55 0.4234,1 0.941,1 0.5175,0 1.2191,-0.45 1.559,-1 z m -233.2716,-3.04846 c -0.3416,-2.92867 -0.7651,-3.34332 -2.6684,-2.61293 -0.8447,0.32415 -1.2736,1.24421 -0.9604,2.06039 0.3408,0.88808 1.2291,1.22645 2.2332,0.85063 1.5021,-0.5623 1.5187,-0.44095 0.1672,1.22576 -1.3333,1.64431 -1.3333,1.79176 0,1.327 0.8775,-0.30586 1.3873,-1.48904 1.2284,-2.85085 z m 79.2649,-1.96234 c -0.8653,-1.40014 -2.4522,0.50502 -2.478,2.97509 -0.013,1.22091 0.2537,1.19531 1.603,-0.15404 0.8916,-0.8916 1.2845,-2.15843 0.875,-2.82105 z m 159.5064,-2.34998 c -2e-4,-1.79645 -0.5875,-2.13922 -3.6653,-2.13922 -2.0424,0 -3.8501,0.55342 -4.083,1.25 -0.2454,0.73377 0.4423,1.25 1.6653,1.25 2.3436,0 2.6649,1.01845 0.8833,2.8 -0.9333,0.93333 -0.8091,1.2 0.559,1.2 1.0793,0 1.5136,0.48301 1.1238,1.25 -0.3493,0.6875 0.2991,0.18765 1.441,-1.11078 1.1419,-1.29843 2.0761,-3.32344 2.0759,-4.5 z m -257.6027,4.52745 c 0.2833,-0.45834 -0.1402,-0.83334 -0.941,-0.83334 -0.8008,0 -1.456,0.375 -1.456,0.83334 0,0.45833 0.4234,0.83333 0.941,0.83333 0.5175,0 1.1727,-0.375 1.456,-0.83333 z m 106.5391,-3.20088 c 1.203,0.64381 2.0639,0.70688 2.0639,0.15118 0,-0.52437 0.2912,-1.7777 0.6472,-2.78518 0.5295,-1.49873 0.4022,-1.60451 -0.7,-0.58179 -0.741,0.6875 -2.1021,1.25 -3.0248,1.25 -0.9226,0 -2.2951,0.7875 -3.05,1.75 -1.2325,1.57158 -1.2005,1.61548 0.3137,0.43061 1.2762,-0.99867 2.1878,-1.05089 3.75,-0.21482 z m -82.3411,-3.13768 c 1.0478,-1.19455 1.2841,-1.80691 0.5253,-1.36081 -0.9501,0.55854 -1.2292,0.37853 -0.8963,-0.5781 0.2659,-0.76406 1.2243,-1.25697 2.1297,-1.09536 1.0747,0.1918 1.6463,-0.39617 1.6463,-1.6933 0,-1.09292 1.0125,-2.73621 2.25,-3.65176 l 2.25,-1.66463 -2.8035,0.6404 c -1.5419,0.35222 -4.5801,1.92738 -6.7515,3.50035 -3.0269,2.19263 -3.5816,3.00056 -2.3776,3.4626 1.0442,0.40068 1.3572,1.27456 0.9342,2.60757 -0.8371,2.63739 0.7068,2.55406 3.0934,-0.16696 z m -15.7831,-2.45653 c 0.6231,-1.11334 1.1319,-1.27149 1.6087,-0.5 1.3394,2.16721 2.5248,1.10525 1.9537,-1.7503 -0.3274,-1.63691 -0.101,-3.17218 0.525,-3.55902 0.6054,-0.37416 1.0864,-1.21624 1.0689,-1.87128 -0.02,-0.73025 -0.5031,-0.58673 -1.25,0.37099 -1.714,2.19771 -4.7182,3.19556 -4.7182,1.56716 0,-0.71946 1.2375,-1.90676 2.75,-2.63847 2.2078,-1.06805 2.4051,-1.40989 1.0008,-1.73369 -2.0468,-0.47192 -7.0482,3.162 -7.3701,5.35489 -0.122,0.83125 0.7549,1.90511 1.9487,2.38636 1.1938,0.48126 1.6081,0.90353 0.9206,0.93839 -1.441,0.0731 -1.7335,3.06339 -0.2997,3.06339 0.5227,0 1.3604,-0.73279 1.8616,-1.62842 z m 86.1728,-1.62158 c 0.01,-0.4125 -0.8847,-0.75 -1.9847,-0.75 -2.1811,0 -2.7703,2.56625 -0.75,3.26672 1.2038,0.41737 2.703,-0.96229 2.7347,-2.51672 z m 7.0153,-0.80902 c 0,-1.61754 -0.3713,-2.94098 -0.825,-2.94098 -0.4538,0 -0.7913,1.5303 -0.75,3.40067 0.091,4.12785 1.575,3.69474 1.575,-0.45969 z m -12,1.05902 c 0,-1.36719 0.6667,-2 2.107,-2 1.3792,0 1.9243,-0.47601 1.5781,-1.37815 -0.2908,-0.75798 -0.031,-1.87548 0.5764,-2.48333 1.5653,-1.56533 0.086,-2.67162 -1.6483,-1.23246 -0.9782,0.81182 -1.6415,0.8572 -2.0832,0.1425 -1.2212,-1.97599 -2.5618,-1.04874 -2.4598,1.70144 0.056,1.5125 -0.2143,3.7625 -0.6008,5 -0.5294,1.69525 -0.3041,2.25 0.914,2.25 0.9499,0 1.6166,-0.82476 1.6166,-2 z m 168,0.51079 c 0,-0.7027 -1.1144,-1.49067 -2.4765,-1.75105 -2.7873,-0.53283 -3.5913,-0.099 -2.9428,1.58803 0.6167,1.60425 5.4193,1.74872 5.4193,0.16302 z m -238.375,-3.27865 c 0.717,-0.71696 1.6459,-1.25375 2.0643,-1.19285 0.4184,0.0609 0.9431,-0.43655 1.1661,-1.10542 0.29,-0.87005 -0.4143,-1.01355 -2.475,-0.50424 -3.9133,0.96719 -4.7126,1.9539 -3.8231,4.71971 0.5427,1.68728 0.8983,1.93239 1.2601,0.86852 0.2772,-0.81518 1.0906,-2.06875 1.8076,-2.78572 z m 90.125,1.42991 c 1.3762,-0.85884 1.7336,-4.66205 0.4381,-4.66205 -0.4466,0 -1.8094,1.34913 -3.0286,2.99808 -1.966,2.65914 -2.0155,2.96676 -0.438,2.72107 0.9782,-0.15236 2.341,-0.62805 3.0285,-1.0571 z m -9.1927,-5.08029 c 1.0668,-0.78003 1.5903,-1.76753 1.1633,-2.19444 -0.4269,-0.42692 -1.7637,0.21129 -2.9706,1.41824 -2.4462,2.4462 -1.2054,2.97911 1.8073,0.7762 z m 128.8354,-0.40822 c 0.281,-0.45455 0.2405,-1.86001 -0.09,-3.12324 l -0.6006,-2.29678 -1.3157,2.37324 c -0.7237,1.30528 -1.3317,2.71074 -1.3512,3.12324 -0.048,1.01841 2.7196,0.95538 3.3573,-0.0765 z m -144.8427,-5.17354 c 0.4013,0 1.2902,-0.76675 1.9754,-1.70388 1.277,-1.74644 0.093,-6.29612 -1.639,-6.29612 -1.0441,0 -3.5726,5.71185 -4.2035,9.49591 l -0.4996,2.99592 1.8187,-2.24592 c 1.0002,-1.23525 2.1468,-2.24591 2.548,-2.24591 z m 6.977,0.0437 c -0.3251,-0.52598 -1.2516,-0.70283 -2.059,-0.39301 -2.0671,0.79323 -1.8235,1.34934 0.591,1.34934 1.1325,0 1.7931,-0.43035 1.468,-0.95633 z m 27.2022,-1.64784 c -0.3323,-0.33229 -1.1948,-0.36782 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60417 1.0541,0.0434 1.6448,-0.19293 1.3125,-0.52522 z m -41.7292,-1.39583 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m -23,-3.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 6,-1.11804 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m 10.4657,-2.29112 c -0.5635,-0.59314 -2.4657,0.91014 -2.4657,1.94858 0,0.53923 0.6296,0.40017 1.3991,-0.30901 0.7696,-0.70919 1.2495,-1.44699 1.0666,-1.63957 z m -881.15996,223.38174 -2.80576,-2.4684 39.58753,-0.0316 c 21.77315,-0.0174 51.87133,-0.33038 66.88484,-0.69555 26.21859,-0.63772 27.39868,-0.75115 29.86247,-2.87041 1.84731,-1.58898 2.56516,-3.18878 2.56516,-5.71665 v -3.51019 l 2,2.54259 c 2.69829,3.43032 2.59526,8.66733 -0.22606,11.49083 -2.11607,2.1177 -3.27476,2.25962 -23.45,2.87207 -11.67317,0.35437 -41.56135,0.69187 -66.41818,0.75 l -45.19423,0.10571 z m 154.19424,0.52304 c -1.1,-0.45022 -2.75565,-1.65919 -3.67922,-2.68661 -1.63796,-1.82213 -0.28937,-1.86129 54.88838,-1.59369 48.35627,0.23452 56.89257,0.0614 58.8064,-1.19258 4.02525,-2.63745 3.86056,-5.65324 -1.00015,-18.31472 -2.48348,-6.4691 -4.51541,-12.14234 -4.51541,-12.60719 0,-0.46485 2.19827,1.13124 4.88504,3.54688 18.43426,16.57399 49.07095,19.49747 73.67039,7.02994 18.82092,-9.53885 30.5377,-27.58157 33.55912,-51.67782 2.13034,-16.98984 -2.31057,-35.32809 -11.75933,-48.55885 l -2.49953,-3.5 2.89491,3.24992 c 4.40414,4.94422 11.85896,19.90159 13.83076,27.75008 1.17438,4.67446 1.74009,10.65442 1.70281,18 -0.14369,28.31334 -13.34798,50.39919 -36.4569,60.9788 -20.82976,9.53618 -45.12355,8.38311 -63.91776,-3.03377 -9.46843,-5.75177 -10.7964,-4.4335 -6.40951,6.36269 3.32259,8.17695 3.28466,12.42991 -0.13486,15.1197 -2.5949,2.04115 -3.46306,2.07162 -57.25,2.00919 -30.03833,-0.0349 -55.51514,-0.43175 -56.61514,-0.88197 z m 435.1667,0.27869 c -1.7395,-1.73947 -5.241,7.66801 61.50502,-165.24358 l 14.0549,-36.41024 -2.3633,-1.81693 c -3.9191,-3.01304 -16.6437,-9.00775 -24.2171,-11.4089 -7.8366,-2.48462 -9.2693,-3.83497 -8.2744,-7.7989 l 0.6663,-2.65478 h 35.4458 c 32.7384,0 35.5165,0.13366 36.3716,1.75 0.5093,0.9625 6.5689,15.7 13.4658,32.75 6.897,17.05 26.7471,66.07994 44.1115,108.95543 17.5685,43.37964 31.3341,78.7035 31.0363,79.64203 -0.2945,0.92763 -1.5329,1.95824 -2.7522,2.29024 -1.2193,0.33201 -26.6726,0.30689 -56.563,-0.0558 l -54.346,-0.65948 -1.0069,-2.20971 c -1.7086,-3.75011 0.3701,-5.81099 8.3646,-8.29265 8.3566,-2.59406 19.992,-8.10129 24.1473,-11.42925 l 2.813,-2.25288 -2.813,-7.2556 -2.8129,-7.2556 -37.3619,0.26164 -37.362,0.26165 -2.9543,7.44568 -2.9544,7.44567 2.2981,1.73352 c 3.8496,2.90371 15.9139,8.49965 23.6693,10.97874 7.9868,2.5531 10.0636,4.62912 8.3636,8.36033 -0.9864,2.16486 -1.513,2.22476 -25.2648,2.8735 -30.7931,0.84107 -44.42302,0.83983 -45.26692,-0.004 z m 9.01762,-7.20837 c 2.6198,-1.34929 7.6674,-1.50305 6.8678,-0.2092 -0.3113,0.50367 0.7871,0.40501 2.4409,-0.21924 3.4466,-1.30094 3.729,-2.13567 1.257,-3.71563 -1.5417,-0.98539 -1.4822,-1.06195 0.5,-0.64331 1.5305,0.32322 2.25,0.004 2.25,-0.99859 0,-1.06973 -0.6168,-1.28127 -2.25,-0.7716 -1.2375,0.3862 -2.5313,1.13968 -2.8752,1.6744 -0.7374,1.14685 -4.8748,0.0429 -4.8748,-1.3007 0,-0.50828 0.8551,-1.45816 1.9002,-2.11085 1.0451,-0.65269 1.6716,-1.78251 1.3922,-2.51071 -0.8241,-2.14746 0.6252,-6.31953 2.1953,-6.31953 0.86,0 1.2217,-0.5938 0.8893,-1.46001 -0.5206,-1.35658 2.4661,-11.39344 4.5574,-15.31547 0.5058,-0.94849 1.1633,-2.51202 1.4612,-3.47452 0.6726,-2.1733 3.6044,-2.32183 3.6044,-0.18261 0,1.16369 0.5795,1.38925 2.25,0.87577 3.1536,-0.96936 3.4722,-1.45952 1.6217,-2.49507 -1.2993,-0.72714 -1.4598,-1.72993 -0.8284,-5.175 0.8234,-4.49259 0.2901,-6.7639 -0.6996,-2.97942 -0.3173,1.21348 -0.9903,2.20633 -1.4955,2.20633 -0.5075,0 -0.4395,0.89508 0.1518,2 0.9074,1.69548 0.7605,2 -0.9648,2 -2.4358,0 -2.4003,0.42784 -0.4412,-5.32186 0.8848,-2.59686 2.2195,-4.67814 3,-4.67814 0.7733,0 1.406,-0.47172 1.406,-1.04827 0,-1.469 5.8993,-3.79082 8.1418,-3.2044 2.5531,0.66766 2.3443,2.25267 -0.2968,2.25267 -1.9665,0 -2.0216,0.15309 -0.6305,1.75 0.8385,0.9625 1.7727,2.425 2.0761,3.25 0.3775,1.02676 0.6158,0.79014 0.7555,-0.75 0.2926,-3.22872 0.3901,-3.60106 1.3321,-5.08713 1.3448,-2.12162 -0.7454,-3.32954 -5.7615,-3.32954 -3.3164,0 -4.6167,-0.39901 -4.6167,-1.41666 0,-0.77917 0.45,-1.47292 1,-1.54167 0.55,-0.0687 1.4275,-0.18125 1.95,-0.25 2.3405,-0.30796 3.1208,-2.30862 2.0248,-5.19136 -0.677,-1.78067 -0.7321,-3.01454 -0.1433,-3.21079 0.5259,-0.17531 0.7338,-1.16913 0.462,-2.2085 -0.2718,-1.03936 0.2696,-2.93029 1.2031,-4.20205 l 1.6973,-2.3123 -0.4238,3.25 c -0.3482,2.6711 -0.087,3.25 1.4688,3.25 2.8865,0 5.9782,-1.99179 5.4061,-3.48274 -0.2806,-0.73114 0.357,-2.11409 1.4168,-3.07321 1.0598,-0.95913 2.377,-3.36391 2.927,-5.34396 1.3637,-4.90913 1.218,-5.95754 -0.5103,-3.67309 -2.3975,3.16908 -2.8901,0.93585 -0.6362,-2.8843 1.1496,-1.94849 1.6994,-3.5427 1.2218,-3.5427 -1.179,0 -3.4828,-6.03355 -3.2254,-8.44725 0.3123,-2.92867 3.1487,-5.05564 8.1479,-6.10989 3.1496,-0.6642 4.5948,-1.50759 4.8495,-2.8301 0.2968,-1.54154 -0.1033,-1.79483 -2.2018,-1.39369 -1.4105,0.26964 -2.772,-0.007 -3.0255,-0.61441 -0.2653,-0.63576 -1.3679,-0.0435 -2.5976,1.39534 l -2.1366,2.5 0.6496,-2.5 c 0.7414,-2.85332 4.2415,-6.26286 5.58,-5.43562 0.4927,0.30451 0.9101,1.3146 0.9276,2.24464 0.029,1.5155 0.1773,1.49898 1.4335,-0.15916 0.7709,-1.01757 1.868,-1.56193 2.4379,-1.20968 0.5743,0.35491 1.7315,-1.02337 2.5956,-3.09151 1.968,-4.71002 3.0412,-9.38379 1.7281,-7.52596 -0.6517,0.92217 -2.0426,1.11489 -4.5931,0.63642 -3.042,-0.57069 -3.5591,-0.42811 -3.07,0.8465 0.6068,1.58136 -2.4185,7.17304 -3.3674,6.22407 -0.471,-0.47096 0.2348,-2.38503 2.7764,-7.5297 0.4076,-0.825 2.043,-1.73454 3.6341,-2.0212 1.7415,-0.31374 2.4315,-0.81259 1.7333,-1.25325 -0.6378,-0.40262 -1.8316,-0.47423 -2.6527,-0.15913 -1.2201,0.46822 -1.1128,-0.52694 0.5875,-5.44594 1.1442,-3.31037 2.4505,-5.79016 2.9027,-5.51065 0.4523,0.27951 0.8565,-0.75585 0.8984,-2.30081 0.1104,-4.07588 2.4831,-9.85594 3.9095,-9.52393 1.9629,0.45684 4.0144,-1.82574 4.0144,-4.46655 0,-1.34012 0.4308,-2.1703 0.9574,-1.84486 1.0416,0.64374 4.0426,-4.45244 4.0426,-6.865 0,-2.05474 -1.9386,-3.07005 -3.2871,-1.72155 -0.8172,0.81716 -0.6612,1.11287 0.5871,1.11287 0.935,0 1.7,0.675 1.7,1.5 0,0.825 -0.3651,1.5 -0.8114,1.5 -0.4463,0 -1.7963,0.91753 -3,2.03896 -1.6643,1.5505 -2.1886,1.68739 -2.1886,0.57142 0,-0.80714 0.6737,-2.14123 1.4971,-2.96465 0.8234,-0.82342 1.2861,-2.09306 1.0282,-2.82143 -1.0455,-2.9523 4.3108,-6.8243 9.4403,-6.8243 1.8253,0 3.3326,-0.61365 3.6706,-1.49426 0.3153,-0.82184 0.9878,-1.2381 1.4944,-0.92503 0.5066,0.31308 -0.2156,1.92002 -1.6048,3.57098 -1.3892,1.65097 -2.5258,3.41723 -2.5258,3.92504 0,0.5078 -0.675,0.92327 -1.5,0.92327 -0.825,0 -1.5,0.40787 -1.5,0.90638 0,0.49851 0.8009,0.69695 1.7797,0.44098 2.1561,-0.56384 7.2203,1.2292 7.2203,2.55646 0,0.52433 -0.675,1.62832 -1.5,2.45332 -0.825,0.825 -1.5,2.22687 -1.5,3.11527 0,0.88839 -0.5625,1.54672 -1.25,1.46294 -2.0376,-0.24829 -5.75,1.22048 -5.75,2.2749 0,0.53734 0.8618,1.20235 1.9151,1.47779 1.6472,0.43076 1.7734,0.907 0.9026,3.40519 -0.5569,1.59742 -1.4187,2.65337 -1.9151,2.34657 -0.4964,-0.30681 -0.9026,-0.051 -0.9026,0.56857 0,1.20097 2.2873,0.73233 7.5,-1.53668 1.65,-0.71821 4.6993,-1.88783 6.7763,-2.59915 2.4817,-0.84997 3.5968,-1.76085 3.2528,-2.65722 -0.5872,-1.53032 1.0508,-3.47861 3.8005,-4.52045 1.4419,-0.54628 1.69,-1.32929 1.1706,-3.69404 -0.5675,-2.58369 -0.37,-3.00083 1.4203,-3.00083 1.4128,0 2.0795,0.64119 2.0795,2 0,1.1 0.4766,2 1.059,2 0.5825,0 0.7937,0.42931 0.4694,0.95401 -0.6915,1.11888 0.3925,6.04613 1.33,6.04569 0.3529,-1.7e-4 0.6944,-2.34278 0.759,-5.2058 0.065,-2.88824 0.6215,-5.37355 1.25,-5.58303 1.9351,-0.64503 1.2419,-3.21087 -0.8674,-3.21087 -1.1,0 -2,-0.45 -2,-1 0,-0.55 1.125,-1 2.5,-1 2.1,0 2.5,-0.4706 2.5,-2.94098 0,-3.77563 0.9917,-4.32817 3.8707,-2.15657 l 2.3147,1.74603 -2.6769,1.75397 c -2.5563,1.67499 -2.5943,1.82081 -0.8427,3.23858 1.319,1.06763 1.4831,1.63081 0.5842,2.00512 -1.7352,0.72257 -1.5711,5.01665 0.218,5.70319 1.9346,0.74239 3.1758,-1.33341 1.4391,-2.40677 -2.2005,-1.35996 -0.2727,-2.20863 2.1146,-0.93095 3.5719,1.91161 4.2526,-0.13355 1.8586,-5.58397 -1.1904,-2.71021 -2.4595,-5.15265 -2.8203,-5.42765 -0.3608,-0.275 -0.7227,-1.56285 -0.8043,-2.8619 -0.082,-1.29904 -0.8474,-3.13448 -1.702,-4.07874 -0.8545,-0.94426 -1.5537,-2.46891 -1.5537,-3.3881 0,-0.91919 -0.3907,-1.67126 -0.8683,-1.67126 -0.4776,0 -1.1228,-1.89671 -1.4337,-4.21491 -0.3109,-2.31821 -1.2632,-4.7252 -2.1161,-5.34888 -0.853,-0.62368 -1.274,-1.4108 -0.9356,-1.74915 0.3383,-0.33835 -0.4243,-3.17623 -1.6947,-6.30639 -2.1855,-5.38462 -2.222,-5.84445 -0.6773,-8.53594 l 1.6327,-2.84473 h -32.9535 c -21.3023,0 -32.9535,0.35356 -32.9535,1 0,0.55 0.3375,0.91551 0.75,0.81224 0.4125,-0.10326 2.775,0.13801 5.25,0.53615 12.7783,2.0556 17.6787,3.14255 19.4338,4.31053 1.0636,0.7078 3.0886,1.0377 4.5,0.73311 1.6817,-0.36292 2.1272,-0.24205 1.2926,0.35071 -1.8176,1.29082 2.0205,4.62742 4.4519,3.87022 1.002,-0.31202 2.4967,-0.13447 3.3217,0.39456 0.9985,0.64025 1.0821,0.96697 0.25,0.97717 -0.6875,0.008 -1.25,0.99238 -1.25,2.18657 0,1.19419 -0.6646,2.90561 -1.4768,3.80314 -1.2978,1.43404 -7.7736,17.5363 -16.4991,41.0256 -1.5323,4.125 -4.6471,12.225 -6.9218,18 -2.2747,5.775 -5.3071,13.65 -6.7387,17.5 -1.4317,3.85 -3.0106,7.9 -3.5087,9 -0.4982,1.1 -10.7373,27.56237 -22.7536,58.80527 -15.2785,39.72469 -21.20942,56.22486 -19.72462,54.87497 1.1678,-1.06167 3.10622,-2.43655 4.30762,-3.05528 z m 36.8157,-83.12496 c 0.3399,-0.55 1.2665,-1 2.059,-1 0.7926,0 1.441,0.45 1.441,1 0,0.55 -0.9266,1 -2.059,1 -1.1325,0 -1.7809,-0.45 -1.441,-1 z m -0.107,-4.58179 c 0.3339,-0.86998 0.607,-1.79654 0.607,-2.05901 0,-0.26248 0.45,-0.19912 1,0.1408 1.5934,0.98476 1.1572,3.5 -0.607,3.5 -1.0545,0 -1.3983,-0.5438 -1,-1.58179 z m 2.2737,-4.08488 c -0.9557,-0.95569 -0.8221,-2.33333 0.2263,-2.33333 0.4912,0 1.152,0.675 1.4686,1.5 0.5849,1.52428 -0.4803,2.04799 -1.6949,0.83333 z m 15.3333,-31.33333 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 23,-28.3955 c 0,-0.21752 1.7777,-1.27505 3.9505,-2.35007 3.0146,-1.49147 4.0664,-1.65285 4.4393,-0.68113 0.2899,0.75551 -0.7675,1.71131 -2.5998,2.35007 -3.1283,1.09053 -5.79,1.40365 -5.79,0.68113 z m 10.1875,-7.667 c 0.2406,-0.72187 1.0281,-1.50938 1.75,-1.75 0.75,-0.25 1.125,0.125 0.875,0.875 -0.2406,0.72187 -1.0281,1.50938 -1.75,1.75 -0.75,0.25 -1.125,-0.125 -0.875,-0.875 z m -4.1875,-5.81506 c 0,-0.48265 0.675,-1.43775 1.5,-2.12244 1.2532,-1.04007 1.5,-0.89568 1.5,0.87756 0,1.21995 -0.6378,2.12244 -1.5,2.12244 -0.825,0 -1.5,-0.3949 -1.5,-0.87756 z m 13.297,-2.45397 c 0.3386,-0.88243 0.156,-1.88851 -0.4058,-2.23572 -1.2635,-0.78088 1.8373,-4.43275 3.7638,-4.43275 1.7753,0 1.7218,1.68974 -0.085,2.70112 -0.7868,0.44028 -1.3493,1.65171 -1.25,2.69206 0.099,1.04036 -0.4538,2.1139 -1.2289,2.38564 -0.9651,0.3383 -1.2153,-0.0118 -0.7937,-1.11035 z m 14.703,-1.72749 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -25.5,-0.94098 c -0.3399,-0.55 0.083,-1 0.941,-1 0.8574,0 1.559,0.45 1.559,1 0,0.55 -0.4234,1 -0.941,1 -0.5175,0 -1.2191,-0.45 -1.559,-1 z m 4.1759,-0.40223 c -0.6665,-1.73687 0.1279,-2.59777 2.3971,-2.59777 1.2474,0 1.5918,0.56599 1.2167,2 -0.6016,2.30075 -2.8195,2.66762 -3.6138,0.59777 z m -20.6759,-5.3833 c 0,-2.47937 3.751,-9.20755 5.135,-9.21072 0.8992,-0.002 2.3721,-1.12875 3.273,-2.50375 2.0366,-3.10821 3.592,-3.21392 3.592,-0.24411 0,1.55857 -0.9536,2.67798 -3.0849,3.62139 -2.0345,0.90056 -2.9417,1.92003 -2.6643,2.99411 0.2632,1.01945 -0.8271,2.45298 -2.9151,3.83257 -1.8346,1.21218 -3.3357,1.89191 -3.3357,1.51051 z m 22,-2.26981 c 0,-0.9779 -0.5585,-1.96415 -1.2411,-2.19168 -0.9124,-0.30416 -0.816,-0.83877 0.3643,-2.01905 1.2184,-1.21839 1.8851,-1.32558 2.766,-0.44469 0.8685,0.86847 1.6175,0.87539 2.9752,0.0275 1.072,-0.66944 2.3811,-0.78306 3.1989,-0.27763 1.1187,0.69142 0.9425,1.32584 -0.9185,3.30675 -2.9734,3.16503 -7.1448,4.09848 -7.1448,1.59881 z m -12.1276,-2.69466 c -1.2695,-1.61876 -1.2224,-1.63998 0.6276,-0.28297 1.1,0.80687 2.1875,1.59437 2.4167,1.75 0.2291,0.15563 -0.053,0.28297 -0.6276,0.28297 -0.5743,0 -1.6618,-0.7875 -2.4167,-1.75 z m 2.1276,-1.69098 c 0,-0.79254 0.4078,-1.69299 0.9061,-2.001 0.4984,-0.30801 0.6525,-1.52993 0.3425,-2.71539 -0.3862,-1.47663 -0.1991,-1.93009 0.5939,-1.43999 0.6366,0.39347 1.1575,1.36384 1.1575,2.15638 0,0.79254 0.5197,1.44098 1.155,1.44098 0.655,0 0.3714,0.86581 -0.655,2 -2.1304,2.35411 -3.5,2.57285 -3.5,0.55902 z m 6,-3.44552 c 0,-0.48758 1.2375,-1.12051 2.75,-1.40651 1.5125,-0.28601 3.8062,-0.851 5.0972,-1.25555 2.1947,-0.68775 2.2603,-0.59638 1.0094,1.40651 -0.9819,1.57233 -2.3376,2.14205 -5.0971,2.14205 -2.0677,0 -3.7595,-0.39893 -3.7595,-0.8865 z m 0,-3.1135 c 0,-0.55 0.4234,-1 0.941,-1 0.5175,0 1.2191,0.45 1.559,1 0.3399,0.55 -0.083,1 -0.941,1 -0.8574,0 -1.559,-0.45 -1.559,-1 z m -1,-2.95947 c -3.3392,-0.48907 -4.0486,-0.86486 -2.75,-1.4568 0.9625,-0.43874 2.381,-0.55557 3.1522,-0.25962 0.7713,0.29595 2.6838,-0.76841 4.25,-2.36523 3.563,-3.63253 4.1985,-3.66966 3.5749,-0.20888 -0.5179,2.87459 -2.0265,5.35662 -3.0995,5.09981 -0.3452,-0.0826 -2.6526,-0.44679 -5.1276,-0.80928 z m -6.7619,-5.34008 c 2.3576,-3.6211 5.5639,-6.23177 6.5018,-5.2939 0.7505,0.75054 -1.7219,3.59345 -3.1252,3.59345 -0.6273,0 -1.5847,0.98339 -2.1276,2.18531 -0.5429,1.20192 -1.555,2.36621 -2.249,2.58731 -0.6967,0.22193 -0.2488,-1.15418 1,-3.07217 z m 4.7619,-0.70045 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -8,-7 c 0,-1.1 0,-2.225 0,-2.5 0,-1.27942 1.5056,0.18074 1.5467,1.5 0.026,0.825 0.5882,1.3875 1.25,1.25 0.6618,-0.1375 1.2033,0.2 1.2033,0.75 0,0.55 -0.9,1 -2,1 -1.3333,0 -2,-0.66667 -2,-2 z m -6.5,-3 c -0.3399,-0.55 0.083,-1 0.941,-1 0.8574,0 1.559,0.45 1.559,1 0,0.55 -0.4234,1 -0.941,1 -0.5175,0 -1.2191,-0.45 -1.559,-1 z m 31.6434,207.11309 c 2.5539,-0.55708 6.1077,-1.90335 7.8974,-2.99172 l 3.254,-1.97887 1.9363,2.17875 c 1.5109,1.70006 1.815,1.79426 1.384,0.42875 -0.3544,-1.12299 -0.026,-1.75 0.9163,-1.75 0.8077,0 1.4686,-0.675 1.4686,-1.5 0,-1.82301 2.1277,-1.95997 3.8836,-0.25 1.0349,1.00781 1.2189,0.86249 0.95,-0.75 -0.2654,-1.59103 0.2468,-2.02088 2.5045,-2.10213 1.598,-0.0575 3.0745,0.51386 3.3791,1.30758 0.3979,1.03688 0.8609,0.79942 1.7507,-0.89788 1.4558,-2.77673 0.8827,-4.34346 -1.0131,-2.77004 -1.5608,1.29536 -3.4548,0.48405 -3.4548,-1.47992 0,-0.72839 -1.0125,-1.62481 -2.25,-1.99204 l -2.25,-0.66769 2.4347,-0.98505 c 1.3391,-0.54177 3.1391,-0.71713 4,-0.38969 1.255,0.47733 1.3173,0.34549 0.3141,-0.66507 -1.003,-1.01045 -0.6232,-1.90834 1.9152,-4.52726 2.7865,-2.87498 2.9557,-3.34765 1.4103,-3.94066 -1.9841,-0.76138 -6.5743,3.47403 -6.5743,6.06621 0,0.92274 -0.883,1.54364 -2.1953,1.54364 -1.2074,0 -3.3449,1.10091 -4.75,2.44646 -4.8687,4.66241 -19.1135,12.38494 -28.0607,15.21253 -4.9443,1.56256 -8.9906,3.10194 -8.9918,3.42086 0,0.59234 11.783,-1.1436 20.1412,-2.96676 z m 13.3566,-6.11309 c 0.3399,-0.55 1.068,-1 1.618,-1 0.55,0 0.7219,0.45 0.382,1 -0.3399,0.55 -1.068,1 -1.618,1 -0.55,0 -0.7219,-0.45 -0.382,-1 z m -59,8 c -2.7491,-1.18132 -4.328,-1.18132 -2.5,0 0.825,0.53316 2.175,0.94464 3,0.9144 0.9891,-0.0362 0.8187,-0.34772 -0.5,-0.9144 z m -5.0296,-1.04785 c -0.3562,-0.57632 -1.3952,-0.92505 -2.309,-0.77496 -0.9138,0.15009 -2.2538,-0.0984 -2.9779,-0.55228 -0.7241,-0.45385 -1.6111,-0.53065 -1.9711,-0.17067 -1.0202,1.02019 1.9875,2.5135 5.0966,2.53045 1.7064,0.009 2.5548,-0.39599 2.1614,-1.03254 z m 107.6334,-3.24835 c -1.2835,-1.28349 -2.5851,-0.2915 -1.6348,1.24598 0.368,0.59556 1.1273,0.79971 1.6872,0.45366 0.683,-0.42212 0.6658,-0.98146 -0.052,-1.69964 z m -132.1191,0.5462 c -0.035,-1.69231 -1.8359,-3.45997 -2.8729,-2.8191 -1.8502,1.14351 -1.2466,3.5691 0.8882,3.5691 1.1,0 1.9931,-0.3375 1.9847,-0.75 z m 119.0153,-0.25 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -126,-1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 160,-2 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -14.5,-2 c 0.3519,-0.5694 -0.5093,-1 -2,-1 -1.4907,0 -2.3519,0.4306 -2,1 0.3399,0.55 1.2399,1 2,1 0.7601,0 1.6601,-0.45 2,-1 z m -142.5,-1.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 131.4107,-2.41456 c 0.2908,-0.47055 -0.5826,-0.64309 -1.941,-0.38343 -1.3583,0.25967 -2.4697,0.64466 -2.4697,0.85555 0,0.77375 3.8986,0.35644 4.4107,-0.47212 z m -137.7627,-7.82982 c -0.3305,-0.33049 -0.8847,0.13851 -1.2315,1.04223 -0.3467,0.90372 -1.2573,1.64313 -2.0235,1.64313 -0.7661,0 -1.393,0.93453 -1.393,2.07673 0,1.83754 0.3023,1.71751 2.6244,-1.04224 1.4435,-1.71543 2.3541,-3.38936 2.0236,-3.71985 z m 158.352,6.24438 c 0,-1.05548 -1.9191,-1.49891 -2.4899,-0.57533 -0.3455,0.55897 0.073,1.01631 0.9309,1.01631 0.8574,0 1.559,-0.19844 1.559,-0.44098 z m -40.6384,-3.05902 c 0.3896,-1.01522 -0.051,-1.5 -1.3616,-1.5 -1.3111,0 -1.7512,0.48478 -1.3616,1.5 0.3166,0.825 0.9293,1.5 1.3616,1.5 0.4323,0 1.045,-0.675 1.3616,-1.5 z m 1.1384,-3.5 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 4.5,-1.41821 c 0,-1.52442 -1.3617,-3.47629 -2.1048,-3.01703 -1.4627,0.90403 -1.0171,3.43524 0.6048,3.43524 0.825,0 1.5,-0.1882 1.5,-0.41821 z m 7,-0.58179 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m -30.307,-3.73097 c -0.2536,-0.97297 -0.4777,-0.41903 -0.4981,1.23097 -0.02,1.65 0.1871,2.44606 0.461,1.76903 0.274,-0.67703 0.2906,-2.02703 0.037,-3 z m 49.9112,-2.9982 c -1.0165,-1.01651 -1.8553,0.51389 -1.0213,1.86338 0.6301,1.01942 0.8656,1.02021 1.2044,0.004 0.2315,-0.69479 0.1492,-1.53513 -0.1831,-1.86742 z m -47.5224,-0.27083 c 0.505,0 0.9182,-0.45 0.9182,-1 0,-1.22073 -4.6712,-1.34108 -5.4138,-0.13948 -0.7744,1.253 0.5845,2.28797 2.1934,1.67058 0.7612,-0.29211 1.7972,-0.5311 2.3022,-0.5311 z m 10.1682,-1.5 c -0.369,-1.47618 -3.5115,-1.2155 -4.028,0.33415 -0.3049,0.91466 0.2977,1.22908 1.9166,1 1.2988,-0.18378 2.2489,-0.78415 2.1114,-1.33415 z m 6.3039,0.41287 c 1.0305,-1.66742 -1.2873,-3.57951 -2.6668,-2.2 -1.1539,1.15392 -0.4317,3.28713 1.1129,3.28713 0.4851,0 1.1843,-0.48921 1.5539,-1.08713 z m -14.5539,-5.28306 c 2.0293,-2.83436 3.0711,-6.62981 1.8199,-6.62981 -0.5539,0 -1.2425,0.9 -1.5302,2 -0.6094,2.3306 -2.2897,2.69751 -2.2897,0.5 0,-2.16572 -1.0796,-1.82387 -4.7307,1.49793 -1.7768,1.61662 -3.0014,3.53657 -2.7213,4.26654 0.7922,2.06446 7.6531,0.87791 9.452,-1.63466 z m 42,2.37019 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -21.1917,-1.075 c -0.197,-0.59125 -0.7858,-1.075 -1.3083,-1.075 -0.5225,0 -1.1113,0.48375 -1.3083,1.075 -0.1971,0.59125 0.3916,1.075 1.3083,1.075 0.9167,0 1.5054,-0.48375 1.3083,-1.075 z m -6.8083,-0.80842 c 0,-1.10899 -4.8881,-2.10671 -5.4967,-1.12195 -0.2469,0.39952 -0.1612,1.01418 0.1906,1.36589 0.966,0.96605 5.3061,0.76652 5.3061,-0.24394 z m 21,-1.61658 c 0,-1.89289 -1.0855,-1.90259 -3.5589,-0.0318 -1.8593,1.4063 -1.8252,1.46953 0.8089,1.5 1.7919,0.0207 2.75,-0.49079 2.75,-1.4682 z m 5.7446,-2.23381 c 0.2251,-0.6752 -0.4305,-0.89959 -1.6762,-0.57381 -1.1253,0.29425 -1.7847,0.95759 -1.4655,1.4741 0.7144,1.15587 2.6403,0.60397 3.1417,-0.90029 z m -22.7446,-3.30051 c 1.3232,-0.8854 1.3107,-1.14934 -0.1059,-2.23956 -1.185,-0.91193 -1.3392,-1.65877 -0.5883,-2.8492 0.7679,-1.21735 0.4871,-2.18282 -1.1441,-3.93368 -1.1889,-1.2762 -2.1617,-3.00051 -2.1617,-3.8318 0,-1.17556 -0.2667,-1.24477 -1.2,-0.31144 -0.66,0.66 -1.785,1.2 -2.5,1.2 -1.9401,0 -1.5703,-2.97639 0.45,-3.62206 4.8483,-1.54949 6.2408,-2.68414 5.052,-4.11654 -0.9007,-1.08524 -0.89,-1.58901 0.046,-2.16757 1.654,-1.02221 0.3412,-4.11321 -1.7052,-4.01488 -1.0375,0.0499 -1.1823,0.26482 -0.393,0.58333 2.0334,0.82048 1.3174,2.66216 -2.1529,5.53836 -3.1104,2.5778 -7.5971,2.98101 -7.5971,0.68273 0,-1.18013 1.3626,-1.1208 2.5964,0.11305 0.6619,0.66188 0.9808,0.10814 0.95,-1.64937 -0.03,-1.69095 -0.7682,-2.9274 -2.0464,-3.42613 -1.6923,-0.66031 -1.7308,-0.79116 -0.25,-0.85063 0.9625,-0.0387 1.75,-0.77185 1.75,-1.62931 0,-0.92379 -0.4704,-1.26829 -1.1545,-0.84549 -0.7667,0.47384 -0.8807,0.27044 -0.3393,-0.60547 1.2704,-2.05561 1.4166,-7.13095 0.1936,-6.7233 -0.5911,0.19706 -1.7138,2.27535 -2.4949,4.61844 -0.781,2.34308 -2.0466,4.5006 -2.8125,4.79449 -0.7658,0.29388 -1.3924,0.92206 -1.3924,1.39595 0,0.4739 0.675,0.60261 1.5,0.28603 1.1632,-0.44638 1.5259,0.29032 1.6152,3.28138 0.063,2.12135 0.025,4.70429 -0.085,5.73989 -0.1616,1.51726 0.3015,1.78692 2.3848,1.38867 1.422,-0.27182 2.5854,-0.13319 2.5854,0.30808 0,3.8935 -8.553,0.23203 -9.4969,-4.06554 -0.3582,-1.63092 -0.3856,-3.3952 -0.061,-3.92061 0.9538,-1.54326 -1.3973,-2.37563 -2.986,-1.05715 -0.8009,0.6647 -1.4562,2.05344 -1.4562,3.08609 0,1.03266 -0.5625,1.76506 -1.25,1.62756 -0.6875,-0.1375 -1.25,0.67931 -1.25,1.81513 0,1.13583 -0.8478,2.91574 -1.8839,3.95536 -1.1844,1.18833 -1.4629,2.03058 -0.75,2.2682 1.7636,0.58787 1.334,3.01681 -0.6161,3.48323 -1.6255,0.38878 -1.6183,0.47552 0.1009,1.21904 1.2017,0.51969 2.1396,0.33345 2.6738,-0.53094 0.6444,-1.04267 1.1359,-1.0716 2.2664,-0.13339 1.1348,0.94179 1.6982,0.89115 2.6343,-0.23671 0.6549,-0.78911 2.5482,-1.90796 4.2073,-2.48634 4.1599,-1.45013 3.3587,0.67965 -1.1999,3.18988 -4.9275,2.71338 -5.7295,3.70654 -2.993,3.70654 1.2868,0 2.9433,-0.7875 3.681,-1.75 1.0938,-1.42721 1.5061,-1.49974 2.2352,-0.39324 0.6238,0.94672 1.1007,1.02228 1.578,0.25 1.1687,-1.89104 2.7348,-1.21396 2.066,0.89324 -0.9509,2.9959 0.7103,2.37993 3.2036,-1.18787 2.2887,-3.27511 2.2048,-4.81213 -0.2626,-4.81213 -0.7926,0 -1.441,-0.45 -1.441,-1 0,-0.55 2.1375,-0.98632 4.75,-0.96959 3.7134,0.0238 4.3681,0.25285 3,1.04969 -0.9625,0.5606 -1.75,2.12192 -1.75,3.46959 0,1.51139 -0.5748,2.45031 -1.5,2.45031 -2.282,0 -1.7899,1.94793 0.75,2.96884 3.0054,1.20803 4.9413,1.20712 6.75,-0.003 z m -27.4284,-7.88656 c -1.7395,-1.92217 -1.7067,-2.05919 1.0668,-4.45682 l 2.8616,-2.47369 0.3238,3.06615 c 0.1789,1.69319 -0.2988,3.68886 -1.0668,4.45682 -1.1876,1.18757 -1.6528,1.10104 -3.1854,-0.59246 z m 37.4284,8.4799 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -51.5,-1.55902 c 1.2606,-0.54172 1.4455,-0.85943 0.5,-0.85943 -0.825,0 -2.4,0.38674 -3.5,0.85943 -1.2606,0.54172 -1.4455,0.85943 -0.5,0.85943 0.825,0 2.4,-0.38674 3.5,-0.85943 z m 65,0 c 0.3399,-0.55 -0.057,-1 -0.882,-1 -0.825,0 -1.7781,0.45 -2.118,1 -0.3399,0.55 0.057,1 0.882,1 0.825,0 1.7781,-0.45 2.118,-1 z m -114.1384,-1.5 c -0.3166,-0.825 -1.2575,-1.5 -2.091,-1.5 -1.2337,0 -1.284,0.27889 -0.2706,1.5 0.6847,0.825 1.6257,1.5 2.0911,1.5 0.4654,0 0.5871,-0.675 0.2705,-1.5 z m 30.8048,-1.04283 c -0.549,-3.2215 -2.1621,-4.18959 -2.8158,-1.68992 -0.3211,1.22801 -1.2329,2.23275 -2.0262,2.23275 -0.7934,0 -1.1814,0.42231 -0.8624,0.93847 0.319,0.51616 1.808,0.83439 3.309,0.70717 2.0995,-0.17795 2.6521,-0.68277 2.3954,-2.18847 z m 2.4329,-7.45717 c 3.5339,0 5.4007,-0.4148 5.4007,-1.2 0,-0.93333 0.2667,-0.93333 1.2,0 0.66,0.66 2.0161,1.2 3.0136,1.2 0.9974,0 2.7662,0.5625 3.9306,1.25 1.6937,1 2.2076,1 2.5698,0 0.249,-0.6875 1.3448,-1.25 2.4351,-1.25 3.1795,0 5.8509,-1.9021 5.8509,-4.16603 0,-1.86517 -0.4124,-2.02748 -3.75,-1.47582 -2.0625,0.34091 -16.6875,0.62479 -32.5,0.63084 l -28.75,0.011 v 2.46546 2.46545 l 14.25,0.0841 c 7.8375,0.0463 15.2625,0.10943 16.5,0.14033 1.8918,0.0472 2.2665,0.63642 2.3534,3.7004 l 0.1033,3.64421 0.996,-3.75 c 0.9953,-3.74748 0.9996,-3.75 6.3966,-3.75 z m 60.7823,5.44806 c 0.3415,-0.88992 0.1738,-1.29132 -0.3931,-0.94098 -0.5437,0.33602 -0.9885,1.0344 -0.9885,1.55194 0,1.43843 0.7168,1.12146 1.3816,-0.61096 z m 7.3892,-1.26056 c 0.2199,-0.65946 -0.5166,-1.1875 -1.6561,-1.1875 -1.4381,0 -1.8749,0.46137 -1.4601,1.54226 0.6549,1.70679 2.499,1.49685 3.1162,-0.35476 z m -85.7708,-1.74652 c 0,-0.79254 -0.45,-1.44098 -1,-1.44098 -0.55,0 -1,0.92656 -1,2.05902 0,1.13246 0.45,1.7809 1,1.44098 0.55,-0.33992 1,-1.26648 1,-2.05902 z m 22,2.11804 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 70.5539,-0.64615 c 0.3695,-0.59793 0.1523,-1.60666 -0.4827,-2.24164 -0.8727,-0.87268 -1.3847,-0.79038 -2.0975,0.33713 -0.5187,0.8204 -0.95,1.82914 -0.9584,2.24164 -0.024,1.15507 2.7815,0.88782 3.5386,-0.33713 z m -74.8247,-2.51704 c -0.3323,-0.33229 -1.1948,-0.36781 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60416 1.0541,0.0434 1.6448,-0.19293 1.3125,-0.52522 z m 64.2708,-2.31404 c 0,-0.50502 0.25,-1.56978 0.5556,-2.36613 0.3813,-0.99354 -0.093,-1.41148 -1.5128,-1.33179 -1.1376,0.0639 -2.0626,0.45363 -2.0556,0.86613 0.01,0.4125 0.013,1.425 0.013,2.25 0,0.825 0.675,1.5 1.5,1.5 0.825,0 1.5,-0.4132 1.5,-0.91821 z m 9,-0.0818 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m -10,-6.5 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m -110.5,-0.5 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 111.5,-4.16359 c 0,-0.4028 -1.35,-0.26176 -3,0.31343 -1.65,0.5752 -3,1.70223 -3,2.50452 0,1.20863 0.5143,1.1549 3,-0.31343 1.65,-0.97468 3,-2.10171 3,-2.50452 z m 7.25,1.87203 c 0.9625,-0.35512 1.75,-1.13523 1.75,-1.73359 0,-0.63631 -1.2228,-0.36561 -2.9456,0.6521 -1.6201,0.95701 -2.6889,2.15549 -2.375,2.6633 0.3479,0.563 0.8145,0.5605 1.1956,-0.006 0.3438,-0.51134 1.4125,-1.22026 2.375,-1.57538 z m -57.4167,0.38704 c -3.0866,-8.37567 -25.4183,-62.09548 -25.8135,-62.09548 -0.534,0 -24.0198,60.91636 -24.0198,62.30133 0,0.38427 11.2875,0.69867 25.0833,0.69867 14.5361,0 24.9432,-0.38034 24.75,-0.90452 z m -42.391,-9.84548 c 1.2777,-3.7125 3.7677,-10.35 5.5333,-14.75 1.7657,-4.4 3.8992,-10.025 4.7412,-12.5 0.842,-2.475 2.6177,-6.95815 3.9461,-9.96257 l 2.4151,-5.46256 2.461,5.31186 c 2.4553,5.2995 3.2133,7.84949 1.5552,5.23138 -1.3288,-2.09806 -3.2312,1.42311 -9.1206,16.88189 -2.8288,7.425 -5.8771,15.4125 -6.7741,17.75 -1.3665,3.5611 -2.0726,4.25 -4.3556,4.25 h -2.7248 z m 35.1961,5.25 c 0.3166,-0.825 0.7524,-1.5 0.9686,-1.5 0.2161,0 0.393,0.675 0.393,1.5 0,0.825 -0.4359,1.5 -0.9686,1.5 -0.5328,0 -0.7096,-0.675 -0.393,-1.5 z m 16.8616,3.5 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 6.1696,-4.25974 c 0.1627,-2.11776 -0.2302,-2.74026 -1.7295,-2.74026 -1.0671,0 -1.9401,0.675 -1.9401,1.5 0,0.825 -0.5051,1.5 -1.1224,1.5 -0.7617,0 -0.7109,0.49596 0.158,1.54289 1.9146,2.30698 4.3922,1.3432 4.634,-1.80263 z m 21.3304,2.25974 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m 15.3451,-0.54313 c -0.3257,-0.84872 -0.8066,-1.32866 -1.0688,-1.06653 -0.2621,0.26213 -0.18,0.95654 0.1826,1.54313 0.986,1.59546 1.5624,1.28551 0.8862,-0.4766 z m -28.3451,-3.41027 c 0,-0.48566 0.3041,-1.67551 0.6758,-2.64409 0.6139,-1.59993 0.4338,-1.58454 -1.9686,0.16821 -3.2491,2.37052 -3.8461,6.10915 -0.7072,4.42928 1.1,-0.5887 2,-1.46773 2,-1.9534 z m 20,1.01242 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 5.2448,-4.55902 c -0.5003,-2.61675 -1.6747,-3.23146 -2.7744,-1.45211 -0.9294,1.50385 0.2225,3.95211 1.8595,3.95211 0.9464,0 1.2396,-0.80127 0.9149,-2.5 z m -11.2448,-0.5 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m 4.971,0.0391 c 0.8091,-0.51167 1.166,-1.23537 0.7932,-1.60823 -0.9151,-0.91509 -3.7642,0.24885 -3.7642,1.53779 0,1.2701 1.0353,1.29465 2.971,0.0704 z m -26.171,-2.2391 c 1.8876,-1.88759 1.4026,-2.9788 -0.8,-1.8 -1.1,0.5887 -2,1.50453 -2,2.03518 0,1.32439 1.3542,1.21065 2.8,-0.23518 z m -13.0292,-2.6125 c 0.6,-1.79986 -1.467,-1.42165 -2.1645,0.39606 -0.3737,0.97391 -0.1502,1.43108 0.5805,1.1875 0.6535,-0.21783 1.3663,-0.93044 1.584,-1.58356 z m 5.5189,-0.1875 c 0.5891,-2.25237 -0.2978,-2.59188 -2.0897,-0.8 -1.5974,1.59743 -1.5187,2.8 0.1834,2.8 0.7608,0 1.6187,-0.9 1.9063,-2 z m 2.7103,1 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 25,-1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -14.5,-1 c 0.3399,-0.55 -0.1101,-1 -1,-1 -0.8899,0 -1.3399,0.45 -1,1 0.3399,0.55 0.7899,1 1,1 0.2101,0 0.6601,-0.45 1,-1 z m 23.2292,-0.60417 c -0.3323,-0.33229 -1.1948,-0.36781 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60416 1.0541,0.0434 1.6448,-0.19293 1.3125,-0.52522 z m -9.6887,-2.58389 c 1.6277,-1.20343 2.9595,-2.77843 2.9595,-3.5 0,-1.64272 -0.034,-1.64048 -3.8265,0.25138 -3.5586,1.7753 -4.5662,2.99221 -3.6735,4.43668 0.8547,1.38292 1.1772,1.29854 4.5405,-1.18806 z m 11.9595,-0.25292 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -5.1347,-3.11005 c 0.3161,-1.6311 0.1476,-1.70455 -1.25,-0.54469 -1.9112,1.5862 -2.1492,3.44015 -0.3653,2.84619 0.6875,-0.22891 1.4144,-1.26459 1.6153,-2.3015 z m -35.8751,-0.93714 c 1.0002,-1.20519 0.9284,-1.60583 -0.3776,-2.10699 -1.8366,-0.70478 -2.2244,-5.40484 -0.4459,-5.40484 0.6416,0 0.929,-0.23759 0.6387,-0.52798 -0.2904,-0.29039 -1.8279,-0.0117 -3.4167,0.6192 -1.5888,0.63095 -2.3298,1.35484 -1.6467,1.60865 1.589,0.59039 -0.2764,4.43536 -2.0442,4.21349 -2.2142,-0.27789 -3.6978,0.0808 -3.6978,0.89395 0,0.44402 1.35,0.71385 3,0.59961 1.65,-0.11423 3,0.19748 3,0.69269 0,1.45904 3.6481,1.02934 4.9902,-0.58778 z m 43.35,-1.28039 c -0.6378,-0.40587 -1.3128,-2.08648 -1.5,-3.73469 -0.2164,-1.90627 -0.8416,-2.89028 -1.718,-2.70416 -0.9074,0.1927 -1.2103,-0.34782 -0.8872,-1.58333 0.3984,-1.52324 -0.067,-1.87593 -2.476,-1.87593 -2.8055,0 -2.9371,0.1816 -2.424,3.34355 0.7903,4.87003 2.739,6.39492 9.165,7.17163 0.55,0.0665 0.4781,-0.21121 -0.1598,-0.61707 z m -6.7405,-3.8323 c -0.8154,-2.12477 -0.1457,-2.82265 1.9403,-2.02215 0.8945,0.34323 1.4483,1.1582 1.2307,1.81104 -0.6382,1.91449 -2.4706,2.03648 -3.171,0.21111 z m -3.5809,0.61247 c -0.7828,-0.4838 -1.8649,-0.60671 -2.4047,-0.27312 -0.5397,0.33358 -0.1112,0.9224 0.9523,1.30849 2.391,0.86801 3.3853,0.15922 1.4524,-1.03537 z m -22.726,-1.26161 c 1.4804,-0.6875 2.6951,-1.5875 2.6994,-2 0.011,-1.08141 -0.7232,-0.94045 -4.0419,0.77568 -4.7367,2.44946 -3.5756,3.50836 1.3425,1.22432 z m 8.2483,-0.68347 c -0.3625,-0.58659 -1.1377,-1.06653 -1.7226,-1.06653 -0.6631,0 -0.5872,0.57378 0.2016,1.52417 1.3715,1.6526 2.5973,1.2838 1.521,-0.45764 z m -32.5411,-1.00751 c 0,-1.17986 -1.9504,-2.442 -2.6667,-1.72569 -0.7163,0.71632 0.5459,2.66667 1.7257,2.66667 0.5176,0 0.941,-0.42344 0.941,-0.94098 z m 6.033,-1.47274 c 1.383,-1.80414 1.3366,-1.84421 -0.811,-0.69983 -1.2529,0.66764 -1.9954,1.67126 -1.6499,2.23025 0.3455,0.559 0.7104,0.87392 0.811,0.69983 0.1006,-0.17409 0.843,-1.1777 1.6499,-2.23025 z m 32.9517,-0.8953 c 0.01,-0.44496 -0.4347,-0.5309 -0.9847,-0.19098 -0.55,0.33992 -0.9931,1.37898 -0.9847,2.30902 0.013,1.45727 0.1493,1.48367 0.9847,0.19098 0.5332,-0.825 0.9763,-1.86406 0.9847,-2.30902 z m 7,0.5 c -0.013,-1.45727 -0.1493,-1.48367 -0.9847,-0.19098 -1.2656,1.95837 -1.2656,3.28218 0,2.5 0.55,-0.33992 0.9931,-1.37898 0.9847,-2.30902 z m -86.3051,-2.48163 c 0.4078,-0.65978 5e-4,-0.80057 -1.0973,-0.37929 -0.9603,0.36847 -2.1591,0.66994 -2.6641,0.66994 -0.505,0 -0.9182,0.40787 -0.9182,0.90638 0,1.16376 3.8253,0.18526 4.6796,-1.19703 z m 73.3204,-0.70935 c 0,-1.1 -0.525,-2 -1.1667,-2 -0.6416,0 -0.8705,0.2961 -0.5086,0.65799 0.3619,0.3619 0.1568,1.2619 -0.4558,2 -0.8539,1.0289 -0.7352,1.34201 0.5087,1.34201 0.9557,0 1.6224,-0.82181 1.6224,-2 z m -26,-0.87756 c 0,-0.48265 -0.675,-1.43775 -1.5,-2.12244 -1.2532,-1.04007 -1.5,-0.89568 -1.5,0.87756 0,1.21995 0.6378,2.12244 1.5,2.12244 0.825,0 1.5,-0.3949 1.5,-0.87756 z m 11.5,-0.12244 c 0.3399,-0.55 -0.083,-1 -0.941,-1 -0.8574,0 -1.559,0.45 -1.559,1 0,0.55 0.4234,1 0.941,1 0.5175,0 1.2191,-0.45 1.559,-1 z m -19.9729,-1.0438 c 0.3548,-0.5741 0.1262,-1.66899 -0.5079,-2.4331 -0.9114,-1.09812 -0.6114,-1.7442 1.4314,-3.08267 1.8347,-1.20219 2.2952,-2.04184 1.5873,-2.89474 -0.6312,-0.76056 -0.6646,-2.36037 -0.091,-4.36005 1.0681,-3.72439 0.5082,-4.23359 -4.8923,-4.44894 -4.2956,-0.1713 -6.2935,0.87954 -4.1688,2.19267 0.9295,0.57443 0.9958,1.02584 0.2211,1.50465 -1.1872,0.73372 -1.5185,4.82095 -0.4753,5.86413 0.3473,0.34732 1.4723,0.18148 2.5,-0.36852 2.3099,-1.23621 2.4697,-0.0897 0.2171,1.55743 -1.4645,1.07082 -1.4934,1.56447 -0.2559,4.36024 1.4041,3.17201 3.2382,4.0443 4.4344,2.1089 z m 39.4729,-2.35789 c 0,-0.63623 0.9,-1.80547 2,-2.59831 2.6185,-1.88729 2.5323,-2.81298 -0.25,-2.68463 -1.2375,0.0571 -3.4875,-0.2241 -5,-0.62484 -1.8635,-0.49375 -2.75,-0.3464 -2.75,0.45708 0,0.65215 0.2932,0.89253 0.6515,0.53419 1.1267,-1.12663 3.2124,4.12127 2.593,6.52422 -0.5275,2.04643 -0.4107,2.14587 1.0821,0.92154 0.9204,-0.75485 1.6734,-1.89301 1.6734,-2.52925 z m -9.4411,-0.0665 c 1.0676,-0.8075 1.4646,-1.4825 0.8822,-1.5 -0.5823,-0.0175 -1.9323,0.62889 -3,1.4364 -1.0676,0.8075 -1.4646,1.4825 -0.8822,1.5 0.5823,0.0175 1.9323,-0.62889 3,-1.4364 z m 16.7187,-2.78947 c -0.509,-0.95199 -3.2776,1.73941 -3.2776,3.18624 0,0.58929 0.8286,0.28393 1.8414,-0.67857 1.0127,-0.9625 1.659,-2.09095 1.4362,-2.50767 z m -21.6734,0.5285 c -1.0165,-1.01651 -1.8553,0.51389 -1.0213,1.86338 0.6301,1.01942 0.8656,1.02021 1.2044,0.004 0.2315,-0.69479 0.1492,-1.53513 -0.1831,-1.86742 z m -15.1069,-4.10416 c -0.1819,-0.18334 -1.2306,0.56666 -2.3306,1.66666 -1.1,1.1 -1.7567,2.24337 -1.4592,2.54081 0.2974,0.29745 1.3462,-0.45255 2.3306,-1.66666 0.9843,-1.21412 1.641,-2.35748 1.4592,-2.54081 z m 19.3702,-1.66667 2.065,-3.5 h -3.4662 c -3.2948,0 -3.4663,0.17315 -3.4663,3.5 0,2.33479 0.4665,3.5 1.4012,3.5 0.7707,0 2.3305,-1.575 3.4663,-3.5 z m 9.4372,-1.55715 c 0.4414,-1.68797 0.2829,-1.84546 -0.8834,-0.87756 -1.5908,1.32028 -1.8868,2.93471 -0.5379,2.93471 0.4858,0 1.1254,-0.92572 1.4213,-2.05715 z m -17.6108,-1.94286 c 0.6762,-1.79157 1.8521,-3 2.9192,-3 1.3454,0 1.5031,-0.28378 0.6382,-1.14865 -0.8648,-0.86487 -1.7789,-0.73565 -3.7,0.52305 -1.4032,0.91944 -2.5513,2.07453 -2.5513,2.56687 0,0.49233 -0.2731,1.60696 -0.607,2.47694 -0.3738,0.9741 -0.074,1.58179 0.7808,1.58179 0.7632,0 1.8973,-1.35 2.5201,-3 z m 14.8413,-3.61501 c 1.3556,-0.88826 2.4717,-1.22576 2.4801,-0.75 0.01,0.47576 0.4168,0.23082 0.9075,-0.54431 0.4907,-0.77512 0.6723,-1.98234 0.4035,-2.68271 -0.3497,-0.91144 -1.5704,-0.51085 -4.2944,1.40932 -2.0932,1.47549 -3.6051,3.02021 -3.3598,3.43271 0.63,1.05949 1.0796,0.95882 3.8631,-0.86501 z m -21.5352,-0.88865 c 0,-1.90871 -1.9581,-2.93829 -3.209,-1.68735 -1.3202,1.32017 -3.791,0.4046 -3.791,-1.40478 0,-1.72736 -4.6876,-1.48553 -6.1853,0.3191 -0.5828,0.70218 -1.706,1.27669 -2.4962,1.27669 -0.7901,0 -1.1584,0.45 -0.8185,1 0.3399,0.55 1.4915,1 2.559,1 1.0676,0 1.941,-0.45 1.941,-1 0,-0.55 0.9,-1 2,-1 1.1,0 2,0.62195 2,1.38212 0,0.9366 1.2894,1.39991 4,1.43732 2.7586,0.0381 4,-0.37255 4,-1.3231 z m -19.25,-1.18567 c -0.9625,-0.25152 -1.75,-1.09932 -1.75,-1.88399 0,-0.78468 -0.45,-1.42668 -1,-1.42668 -1.1657,0 -1.2119,0.28423 -0.393,2.41821 0.3338,0.86999 1.5713,1.52959 2.75,1.46579 1.6904,-0.0915 1.7734,-0.21259 0.393,-0.57333 z m 30.25,-2.31067 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 19.075,-0.275 c -0.1237,-1.1957 -1.4953,-0.96414 -1.925,0.325 -0.22,0.66 0.14,1.02 0.8,0.8 0.66,-0.22 1.1663,-0.72625 1.125,-1.125 z m -29.075,-2.71541 c 0,-0.90034 -5.2564,-2.07416 -5.9984,-1.33952 -0.2742,0.2714 0.3321,1.10075 1.3472,1.84301 1.8143,1.3267 4.6512,1.01961 4.6512,-0.50349 z m 25.4973,-0.31548 c 2.9953,-1.54344 0.2646,-1.97636 -4.4531,-0.706 -2.2575,0.60788 -3.8384,1.53588 -3.5131,2.06223 0.6324,1.02323 4.6888,0.33264 7.9662,-1.35623 z m -53.4973,-0.19411 c 0,-0.825 -0.4359,-1.5 -0.9686,-1.5 -0.5328,0 -0.7096,0.675 -0.393,1.5 0.3166,0.825 0.7524,1.5 0.9686,1.5 0.2161,0 0.393,-0.675 0.393,-1.5 z m 18.6066,-3.22676 c -0.9331,-0.9331 -4.6066,0.91473 -4.6066,2.3172 0,1.2208 0.4084,1.18807 2.5312,-0.20285 1.3922,-0.91218 2.3261,-1.86364 2.0754,-2.11435 z m 23.3934,1.72676 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -56.85,-1.5 c 0,-0.5225 -0.4837,-1.11125 -1.075,-1.30833 -0.5912,-0.19709 -1.075,0.39166 -1.075,1.30833 0,0.91667 0.4838,1.50542 1.075,1.30833 0.5913,-0.19708 1.075,-0.78583 1.075,-1.30833 z m 44.267,-1.37665 c -0.3849,-0.89284 -0.9116,-2.85626 -1.1704,-4.36315 -0.552,-3.21377 -2.2466,-2.6992 -2.2466,0.68219 0,1.48334 -0.7236,2.51358 -2,2.84736 -3.3947,0.88774 -2.2118,2.23856 2.0584,2.35053 3.386,0.0888 3.9424,-0.16252 3.3586,-1.51693 z m -25.417,-0.0164 c 0,-1.64372 -2.7853,-1.98501 -4.6528,-0.57011 -1.7054,1.29207 -1.5977,1.40195 1.4028,1.43132 1.7875,0.0175 3.25,-0.37006 3.25,-0.86121 z m 9,-1.10699 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 26.5,-0.93036 c 0,-2.28768 -2.199,-2.32884 -2.7943,-0.0523 -0.4134,1.58097 -0.1363,2.01965 1.1227,1.77719 0.9194,-0.17706 1.6716,-0.95326 1.6716,-1.72489 z m 12.5,-0.0696 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -52,-2 c 1.2927,-0.8354 1.2663,-0.97149 -0.191,-0.98469 -0.93,-0.008 -1.9691,0.43469 -2.309,0.98469 -0.7822,1.2656 0.5416,1.2656 2.5,0 z m 34.25,-0.39205 c 0.9625,-0.73064 1.75,-2.29133 1.75,-3.46819 0,-2.43544 2.4907,-2.90945 3.3616,-0.63976 0.8527,2.22204 4.6384,1.91389 4.6384,-0.37756 0,-2.39924 -2.5254,-4.51854 -4.4873,-3.7657 -0.832,0.31927 -1.5127,0.12878 -1.5127,-0.42331 0,-1.96891 -3.9728,1.11004 -4.5863,3.55442 -0.3355,1.33656 -1.2358,2.94956 -2.0008,3.58444 -0.765,0.63488 -1.1443,1.55334 -0.8429,2.04102 0.7375,1.19325 1.598,1.07508 3.68,-0.50536 z m -44.25,-2.60795 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 37.0382,-4.17971 c -2.37,-1.04727 -2.7753,-0.94789 -3.4651,0.84976 -0.9181,2.39245 1.3588,3.39108 3.3332,1.46192 1.4805,-1.44669 1.4955,-1.70914 0.1319,-2.31168 z m -31.0382,0.67971 c 0,-1.68305 -0.1831,-1.75069 -2.4182,-0.89301 -2.2344,0.85742 -1.966,2.39301 0.4182,2.39301 1.1111,0 2,-0.66667 2,-1.5 z m 5.5,0.5 c 0.3399,-0.55 0.168,-1 -0.382,-1 -0.55,0 -1.2781,0.45 -1.618,1 -0.3399,0.55 -0.168,1 0.382,1 0.55,0 1.2781,-0.45 1.618,-1 z m 47.865,-0.50868 c 0.7747,-2.01898 -1.1925,-7.08029 -2.2949,-5.90416 -1.0048,1.07202 -0.2038,7.41284 0.9364,7.41284 0.4287,0 1.04,-0.67891 1.3585,-1.50868 z m -39.5675,-5.02713 c -0.7211,-0.72114 -4.7975,3.4862 -4.7975,4.95164 0,0.5713 1.2136,-0.17492 2.697,-1.65825 1.4833,-1.48334 2.4286,-2.96536 2.1005,-3.29339 z m 9.7025,4.53581 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m -30.25,-1.39205 c 1.9039,-1.44525 2.3534,-3.60795 0.75,-3.60795 -0.55,0 -1,0.49814 -1,1.10699 0,0.60884 -0.675,0.84797 -1.5,0.53138 -1.0203,-0.39152 -1.5,0.054 -1.5,1.39301 0,2.28468 0.8104,2.42846 3.25,0.57657 z m 32.7889,-4.68415 c 1.6237,-3.18274 1.8225,-4.38588 0.907,-5.48899 -1.5382,-1.85339 -2.8334,-0.94836 -4.5614,3.18727 -0.7762,1.85785 -1.8553,3.37792 -2.3979,3.37792 -0.5426,0 -0.9866,0.675 -0.9866,1.5 0,0.93005 0.9422,1.5 2.4797,1.5 1.8939,0 2.9709,-0.96291 4.5592,-4.0762 z m 23.1551,-1.00994 c 1.5925,-1.60758 1.5776,-1.74034 -0.25,-2.21827 -1.0692,-0.27959 -1.944,-1.25204 -1.944,-2.16099 0,-0.90895 0.45,-1.37452 1,-1.0346 1.0915,0.67456 1.3891,-0.77759 0.3685,-1.79815 -1.2795,-1.27956 -4.3685,1.43098 -4.3685,3.83333 0,1.35565 -0.45,2.46482 -1,2.46482 -0.55,0 -1,0.66996 -1,1.4888 0,2.04053 4.9986,1.64104 7.194,-0.57494 z m -11.0062,-3.12606 c -0.5588,-0.55877 -2.0056,-0.65013 -3.3371,-0.2107 l -2.3507,0.77576 2.5,0.66605 c 2.9544,0.7871 4.5787,0.1598 3.1878,-1.23111 z m -34.6407,-7.0378 c 0.4901,-2.0126 0.2931,-2.75 -0.7348,-2.75 -0.8174,0 -2.0568,2.12536 -2.9645,5.08328 l -1.5598,5.08329 2.2947,-2.33329 c 1.2621,-1.2833 2.5961,-3.57078 2.9644,-5.08328 z m 36.4529,3.85579 c 0,-0.85886 -0.9597,-1.33884 -2.4993,-1.25 -2.8839,0.1664 -3.3135,1.28516 -0.7507,1.95488 2.9965,0.78308 3.25,0.7281 3.25,-0.70488 z m -31.925,-3.88079 c -0.041,-0.39875 -0.075,-1.4 -0.075,-2.225 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,1.1625 -1,2.58333 0,1.42084 0.4838,2.42209 1.075,2.225 0.5913,-0.19708 1.0413,-0.68458 1,-1.08333 z m -5.1695,-10.57917 c -1.478,-0.50795 -2.2287,0.5222 -1.3806,1.8944 0.5376,0.86994 0.943,0.82251 1.5681,-0.18347 0.4951,-0.79692 0.4177,-1.5029 -0.1875,-1.71093 z M 356.64288,705.38324 c -1.1,-0.46592 -5.15,-4.14925 -9,-8.18516 -6.34693,-6.65343 -6.43752,-6.80172 -0.971,-1.58948 6.51486,6.21181 9.9301,7.21656 14.24849,4.19185 l 2.22251,-1.55671 v -66.832 -66.83201 l 3.32627,-0.62401 c 5.69674,-1.06871 6.53836,-2.39541 9.73018,-15.33826 1.65996,-6.73118 4.59976,-16.01684 6.53288,-20.63482 3.02489,-7.22607 3.90491,-8.47434 6.31403,-8.95616 6.57387,-1.31478 9.94037,2.81881 4.09321,5.02586 -4.05607,1.531 -8.23616,10.83774 -12.44879,27.71655 -2.64507,10.59806 -3.70964,13.33073 -5.94092,15.25 -1.49511,1.28604 -3.35246,2.33826 -4.12744,2.33826 -0.77498,0 -1.87489,0.87042 -2.44424,1.93426 -0.6827,1.27564 -1.03518,23.76433 -1.03518,66.04545 v 64.1112 l -2.45455,2.45454 c -2.54539,2.5454 -4.62716,2.92852 -8.04545,1.48064 z m 423.85483,-1.77441 c -21.0308,-0.3231 -22.65434,-0.78179 -20.77686,-5.86999 0.74819,-2.02767 2.6175,-3.06571 9.91439,-5.50552 9.45917,-3.1628 17.4993,-7.26807 23.75764,-12.1306 l 3.75,-2.91363 v -49.04143 -49.04143 l -6.63851,-12.62454 c -3.65118,-6.9435 -6.95891,-13.07454 -7.35052,-13.62454 -0.3916,-0.55 -3.32658,-5.95 -6.52218,-12 -3.1956,-6.05 -7.76286,-14.54226 -10.14948,-18.8717 -2.38662,-4.32943 -4.34932,-8.15443 -4.36155,-8.5 -0.0122,-0.34556 -0.90222,-1.7533 -1.97776,-3.1283 l -1.95553,-2.5 -0.0222,22.21482 c -0.0202,20.12751 -0.18667,22.30098 -1.77224,23.13183 -3.68907,1.93311 -5.76111,-0.22703 -7.18319,-7.48862 -4.0533,-20.69745 -14.92371,-41.31116 -23.72399,-44.98815 -4.27069,-1.78441 -9.72294,-1.74179 -13.29211,0.1039 -7.21721,3.73216 -14.07169,16.10051 -14.02875,25.31373 0.061,13.09852 8.99413,21.54236 42.97804,40.62425 8.38744,4.70953 20.01891,16.79584 23.66291,24.58824 4.955,10.59587 5.84409,15.22419 5.76297,30 -0.0647,11.78747 -0.40934,14.51483 -2.71673,21.5 -8.5294,25.82102 -31.26554,41.8971 -59.20915,41.86509 -16.72382,-0.0192 -29.41111,-4.76399 -40.7159,-15.22708 -5.69372,-5.26979 -5.83624,-5.33387 -8.28871,-3.72694 -1.37247,0.89927 -2.49539,1.98593 -2.49539,2.4148 0,0.42886 2.25,6.26878 5,12.97758 5.48505,13.38114 5.90239,15.64324 3.15717,17.11244 -1.19347,0.63872 -21.36689,0.73921 -57.25,0.28518 l -55.4072,-0.70107 v -3.90189 -3.90189 l 8.5,-2.67526 c 8.71643,-2.74339 16.56454,-6.38087 23.10349,-10.70815 l 3.70313,-2.45061 -3.02658,-7.4311 -3.02659,-7.4311 h -37.21874 -37.21874 l -2.75577,7.02399 c -1.51567,3.8632 -2.51551,7.6501 -2.22185,8.41534 0.83277,2.17017 13.07982,8.60045 22.56576,11.84809 4.72774,1.6186 9.15839,3.39619 9.84589,3.95019 1.63191,1.31503 1.60418,5.22356 -0.0468,6.59374 -2.59084,2.1502 -130.821,4.14571 -133.31647,2.07466 -1.1638,-0.96588 -1.38673,-15.84048 -1.38673,-92.52845 v -91.37756 h -7.86084 -7.86084 l -3.6204,7.92017 c -3.77098,8.24957 -7.89505,21.34749 -9.15622,29.07983 -0.99241,6.08458 -2.15049,8 -4.83688,8 -4.62687,0 -4.66482,-0.31459 -4.66482,-38.66482 0,-34.8305 0.0765,-36.30576 1.93426,-37.3 2.67339,-1.43075 130.45809,-1.43075 133.13148,0 1.85776,0.99424 1.93426,2.4695 1.93426,37.3 0,38.32019 -0.0414,38.66482 -4.64098,38.66482 -2.93575,0 -3.22659,-0.58262 -5.39732,-10.81199 -2.13722,-10.07139 -4.73322,-17.86328 -9.12832,-27.39856 l -3.12946,-6.78945 h -7.85196 -7.85196 l 0.0213,79.75 0.0213,79.75 4.05728,2.87137 c 2.2315,1.57926 4.40168,2.47926 4.82261,2 0.42094,-0.47925 4.03746,-9.42137 8.03672,-19.87137 9.18676,-24.00488 15.07604,-39.31304 34.04726,-88.5 8.37925,-21.725 17.38411,-45.125 20.01081,-52 2.62669,-6.875 5.69117,-14.80008 6.80995,-17.61129 l 2.03414,-5.11129 -7.18074,-4.07977 c -7.4474,-4.23128 -14.81284,-7.39551 -22.86991,-9.82503 -5.09797,-1.53725 -6.66253,-3.91267 -4.83104,-7.33485 1.06539,-1.9905 1.89886,-2.03777 35.93306,-2.03777 26.66479,0 35.08108,0.29338 35.85945,1.25 0.5594,0.6875 7.77091,17.9 16.02558,38.25 8.25468,20.35 19.12016,47.125 24.14551,59.5 5.02535,12.375 13.50644,33.36613 18.84686,46.64696 l 9.70986,24.14695 0.5,-17.64695 c 0.275,-9.70583 0.86406,-18.20946 1.30902,-18.89696 0.44496,-0.6875 1.85236,-1.25 3.12755,-1.25 3.26329,0 4.13117,1.47167 5.89725,10 3.17594,15.33653 8.70977,28.56324 14.90015,35.61369 9.39866,10.70449 27.09519,9.77168 37.43342,-1.97317 10.56134,-11.99831 6.28475,-22.89747 -13.66739,-34.83221 -30.80914,-18.42904 -43.31889,-36.13665 -47.13581,-66.72096 -2.10483,-16.8656 0.87484,-31.18473 9.15511,-43.99592 7.80885,-12.08181 17.92385,-19.99968 31.65287,-24.77741 10.79749,-3.75755 24.90555,-3.88497 33.82783,-0.30552 5.96512,2.39309 6.25048,2.4089 49.08508,2.71975 l 43.08508,0.31266 11.55254,21.22954 c 6.3539,11.67625 13.46709,24.82955 15.80711,29.22955 2.34001,4.4 4.55601,8.34292 4.92443,8.76205 0.36843,0.41913 5.04474,-7.77807 10.3918,-18.216 l 9.72194,-18.97805 -4.14747,-2.61818 c -5.44369,-3.43645 -11.82086,-6.21829 -20.42051,-8.90781 -6.47649,-2.0255 -7.02252,-2.41445 -7.30107,-5.20079 -0.17135,-1.71405 0.31082,-3.51939 1.11913,-4.19023 1.04135,-0.86423 10.16257,-1.10827 34.19248,-0.91482 30.27811,0.24375 32.85665,0.4004 33.88087,2.05834 0.92047,1.48999 -2.84169,9.63539 -22.16998,48 l -23.27858,46.20549 0.0286,61.67857 c 0.0254,54.76295 -0.14762,61.85477 -1.54286,63.25 -1.61707,1.61708 -16.3105,1.77198 -78.07374,0.82311 z m -8.85483,-5.75848 c 7.71693,-0.958 19.5,-3.76803 19.5,-4.65036 0,-0.43532 1.38233,-1.50631 3.07183,-2.37999 3.41965,-1.76836 6.1821,-0.59349 5.69137,2.42055 -0.14476,0.88913 0.4118,1.6166 1.2368,1.6166 0.84055,0 1.328,-0.65945 1.10876,-1.5 -0.83306,-3.19392 0.0422,-7.53183 1.92391,-9.53478 2.62549,-2.7947 2.89879,-13.46522 0.34489,-13.46522 -1.38996,0 -1.42753,-0.23487 -0.26218,-1.63903 0.74815,-0.90146 1.23215,-2.61668 1.07557,-3.8116 -0.15659,-1.19492 0.19441,-3.43274 0.77999,-4.97294 0.7998,-2.10364 1.55787,-2.67141 3.04688,-2.28202 1.0902,0.28509 1.98218,0.11048 1.98218,-0.38803 0,-0.49851 -1.07686,-0.90638 -2.39301,-0.90638 -1.31616,0 -2.65203,-0.675 -2.96862,-1.5 -0.35062,-0.91371 -0.002,-1.5 0.89301,-1.5 0.80774,0 1.46862,-0.70156 1.46862,-1.55902 0,-0.90405 -0.47462,-1.26569 -1.12973,-0.8608 -0.68501,0.42336 -0.94942,0.15135 -0.67167,-0.69098 0.25193,-0.76406 1.43531,-1.533 2.62973,-1.70875 1.82664,-0.26878 2.17167,0.16813 2.17167,2.75 0,1.68825 0.45,3.06955 1,3.06955 0.55,0 1,-0.45 1,-1 0,-1.64751 3.18101,-1.12976 4.60795,0.75 1.82327,2.40185 1.73004,3.7754 -0.15033,2.21483 -2.01725,-1.67417 -3.32345,-0.30877 -3.63664,3.80148 -0.28683,3.76432 -1.50018,4.19215 -2.78982,0.98369 -1.01033,-2.51358 -1.10866,-2.40799 -1.39536,1.4985 -0.1593,2.17056 0.1538,2.63567 1.48899,2.21189 2.33282,-0.7404 4.87521,4.61877 4.87521,10.27658 0,3.10339 0.37427,4.30265 1.25,4.00539 0.78828,-0.26757 1.18004,-2.05287 1.0606,-4.83333 -0.10417,-2.42497 0.0413,-3.62153 0.32332,-2.65903 0.3373,1.15124 1.51408,1.75 3.4394,1.75 1.90703,0 2.92668,0.51166 2.92668,1.46862 0,0.89459 0.58629,1.24363 1.5,0.89301 1.75345,-0.67287 2.00789,-5.45374 0.37704,-7.08459 -0.8306,-0.8306 -0.54039,-1.94108 1.11476,-4.26553 1.62469,-2.28167 2.27477,-4.69984 2.37296,-8.82704 0.0744,-3.12646 0.47274,-5.57197 0.88524,-5.43447 0.4125,0.1375 1.18886,0.25 1.72525,0.25 0.63366,0 0.63366,0.89843 0,2.5651 -0.53639,1.4108 -0.97525,2.70637 -0.97525,2.87904 0,0.17266 2.8125,0.25587 6.25,0.1849 3.65484,-0.0755 6.11896,-0.54427 5.93442,-1.12904 -0.17356,-0.55 -0.96106,-0.86777 -1.75,-0.70616 -1.63015,0.33393 -1.95037,-1.35693 -0.43442,-2.29384 1.69104,-1.04512 1.10908,-2.5 -1,-2.5 -1.11111,0 -2,-0.66667 -2,-1.5 0,-0.825 0.34987,-1.5 0.77749,-1.5 1.03054,0 5.53413,3.10494 6.43087,4.43368 0.48366,0.71665 1.08878,0.66918 1.90762,-0.14966 0.93234,-0.93234 0.89319,-1.56805 -0.17593,-2.85625 -1.18711,-1.43039 -1.1061,-1.88066 0.59238,-3.29239 2.67409,-2.22262 3.12749,-8.91459 0.72739,-10.73615 -2.0841,-1.58174 -3.25982,-1.75217 -3.25982,-0.47255 0,0.50967 0.64368,1.07217 1.43041,1.25 1.20498,0.27237 1.22368,0.70624 0.11863,2.75306 l -1.31179,2.42973 -1.44204,-2.92973 c -0.79312,-1.61136 -1.25353,-3.76907 -1.02312,-4.79491 0.27729,-1.23458 -0.036,-1.71061 -0.92659,-1.40803 -0.74002,0.25143 -1.38262,1.76576 -1.42799,3.36517 -0.13365,4.71124 -0.31944,5.14912 -2.41751,5.69778 -2.71112,0.70897 -2.53821,2.67767 0.25,2.84643 l 2.25,0.13618 -2.25,0.43337 c -1.40665,0.27094 -2.25,1.15695 -2.25,2.36382 0,1.06175 -0.5625,1.93659 -1.25,1.9441 -0.6875,0.008 -2.26919,0.28675 -3.51486,0.62052 -1.80164,0.48274 -2.13768,0.27542 -1.64301,-1.01365 0.69138,-1.80171 -1.08868,-2.24414 -2.14598,-0.53339 -0.48382,0.78285 -0.97617,0.78285 -1.75902,0 -1.52893,-1.52893 -2.68713,-1.35098 -2.68713,0.41287 0,0.825 0.40186,1.5 0.89301,1.5 1.31978,0 2.04777,2.51044 1.42196,4.90355 -0.75931,2.90363 -2.31497,2.63245 -2.31497,-0.40355 0,-1.375 -0.41968,-2.5 -0.93261,-2.5 -0.51294,0 -1.23264,-0.9453 -1.59934,-2.10066 -0.48513,-1.52853 -0.9665,-1.80089 -1.76739,-1 -0.60536,0.60536 -1.59407,1.10066 -2.19713,1.10066 -1.48791,0 -1.30635,-4.59794 0.24272,-6.14659 0.99486,-0.99459 1.52403,-0.86604 2.62328,0.63728 1.33556,1.82648 1.39712,1.81989 2.04415,-0.21871 0.36691,-1.15604 0.37368,-3.27101 0.015,-4.69992 -0.38358,-1.52829 -0.14392,-3.21031 0.58205,-4.08505 0.9793,-1.17999 0.97708,-1.79671 -0.0108,-2.98701 -1.77233,-2.13552 0.58978,-4.88154 3.43014,-3.98763 2.61319,0.82241 5.43528,1.29766 8.33891,1.4043 1.93986,0.0712 2.17327,0.46495 1.60887,2.71371 -0.49107,1.95658 -0.3156,2.51551 0.68501,2.18198 1.96462,-0.65488 3.36511,-6.89731 2.02782,-9.03866 -0.59984,-0.96061 -1.09068,-1.94471 -1.09068,-2.18689 0,-0.99073 6.20309,-3.44611 7.47396,-2.95843 0.75427,0.28944 2.1937,-0.29604 3.19872,-1.30106 1.4237,-1.4237 1.60928,-2.32431 0.84019,-4.07732 -0.54292,-1.2375 -1.75386,-2.25 -2.69098,-2.25 -0.93712,0 -1.98197,-0.45 -2.32189,-1 -1.06173,-1.71792 -3.24192,-1.09491 -3.8132,1.08966 -0.39874,1.52478 -1.0679,1.92416 -2.47544,1.47742 -1.15371,-0.36617 -2.44097,0.005 -3.20286,0.92267 -0.96342,1.16086 -1.60397,1.26095 -2.62844,0.41071 -1.91186,-1.5867 -4.38006,-0.36099 -4.38006,2.17514 0,1.48994 0.45486,1.96383 1.5,1.56277 0.825,-0.31658 1.5,-0.13972 1.5,0.39301 0,1.37635 -2.05334,1.1893 -5.25,-0.47824 -2.65578,-1.38538 -2.75,-1.34724 -2.75,1.11315 0,1.94317 -0.38643,2.3994 -1.62859,1.92274 -1.35366,-0.51945 -1.5267,-0.11546 -1.025,2.39301 0.45321,2.26604 0.2361,3.01796 -0.87141,3.01796 -0.81125,0 -1.475,0.70532 -1.475,1.56739 0,1.13573 -0.57664,1.38437 -2.09385,0.90282 -1.51127,-0.47966 -2.90244,0.11012 -5,2.11971 -1.91466,1.83435 -2.91137,2.29397 -2.92146,1.34717 -0.0129,-1.20734 -0.17029,-1.19729 -0.98469,0.0629 -0.75538,1.16887 -0.97275,0.89294 -0.98469,-1.25 -0.01,-1.78458 0.51128,-2.75 1.48469,-2.75 0.825,0 1.5,-0.49814 1.5,-1.10699 0,-0.60884 -0.675,-0.84797 -1.5,-0.53138 -0.91371,0.35062 -1.5,0.002 -1.5,-0.89301 0,-1.62429 0.4411,-1.71615 7.14849,-1.48873 4.7223,0.16012 7.36359,-1.53492 4.74191,-3.0431 -0.76472,-0.43992 -2.28184,-1.46313 -3.37138,-2.27381 -1.8815,-1.39992 -1.83849,-1.44671 0.85636,-0.93155 3.00564,0.57456 5.51791,-1.56131 3.38614,-2.87882 -0.82517,-0.50998 -0.77758,-1.12834 0.17523,-2.27639 0.98626,-1.18839 1.02815,-1.91358 0.17023,-2.94731 -0.70475,-0.84918 -0.82575,-2.21494 -0.31785,-3.58792 0.70737,-1.91218 0.98915,-2.01307 2.05055,-0.73416 0.67677,0.81546 1.1022,1.86752 0.94541,2.33791 -0.41717,1.2515 3.96219,5.35526 5.71491,5.35526 2.7094,0 1.56714,-2.96687 -1.64723,-4.27847 -2.92257,-1.19253 -3.02965,-1.40179 -1.5,-2.93144 2.2863,-2.2863 2.10715,-2.61903 -1.60277,-2.97673 -2.4516,-0.23638 -3.17782,-0.74327 -2.95616,-2.06336 0.45273,-2.69631 -1.7213,-2.071 -2.81672,0.81017 -0.53536,1.4081 -1.43156,2.27701 -1.99156,1.93091 -0.56,-0.3461 -0.75929,-1.04818 -0.44285,-1.56018 0.31643,-0.51199 0.2837,-1.40275 -0.0727,-1.97946 -0.9187,-1.48648 -3.70589,0.99142 -3.04688,2.70877 0.28274,0.73689 0.0782,1.33979 -0.45451,1.33979 -0.53274,0 -0.96862,-0.675 -0.96862,-1.5 0,-0.83333 -0.88889,-1.5 -2,-1.5 -1.1,0 -2,-0.28789 -2,-0.63976 0,-1.12559 3.43883,-3.29554 5.27475,-3.32844 0.97611,-0.0175 2.20248,-1.1568 2.72525,-2.5318 0.52277,-1.375 1.32164,-2.5 1.77525,-2.5 1.17471,0 3.22757,2.20673 3.20944,3.45 -0.008,0.5775 -0.40811,0.42985 -0.8882,-0.32812 -1.03443,-1.63316 -3.09649,-0.64052 -3.09649,1.49059 0,1.19702 1.1151,1.41262 5.60301,1.08333 3.26028,-0.23922 5.95533,-0.98117 6.44563,-1.7745 1.1645,-1.88421 0.78326,-2.02027 -2.7896,-0.99559 -1.70967,0.49033 -3.36737,0.63263 -3.68377,0.31623 -1.30226,-1.30227 -0.44029,-4.04398 1.42473,-4.53169 1.1,-0.28766 2,-1.24014 2,-2.11663 0,-0.87649 0.675,-1.59362 1.5,-1.59362 0.83333,0 1.5,-0.88889 1.5,-2 0,-1.1 0.41968,-2 0.93261,-2 0.51294,0 1.18534,-0.79627 1.49423,-1.76949 0.68121,-2.14631 6.88078,-5.65358 8.73813,-4.94339 0.78817,0.30137 -0.009,1.00619 -1.94697,1.72065 -2.22779,0.82147 -2.9948,1.5767 -2.38789,2.35121 1.90538,2.43154 2.2114,6.41111 0.54226,7.05162 -1.21703,0.46702 -1.49107,0.15131 -1.11546,-1.28504 0.27388,-1.04729 0.10931,-2.51648 -0.3657,-3.26486 -0.67058,-1.0565 -1.41761,-0.69001 -3.34147,1.6393 -3.01097,3.64551 -3.20691,5.5 -0.58112,5.5 1.33903,0 1.78453,0.47971 1.39301,1.5 -0.88401,2.30368 0.72556,1.78938 3.91197,-1.25 l 2.88304,-2.75 1.92168,2.36078 c 1.05692,1.29844 1.92168,3.21094 1.92168,4.25 0,1.03907 0.4,1.88922 0.88889,1.88922 0.48889,0 0.82639,-0.7875 0.75,-1.75 -0.0912,-1.14907 0.46204,-1.6491 1.61111,-1.45616 0.9625,0.16161 1.75,-0.17589 1.75,-0.75 0,-0.57411 0.45,-1.04384 1,-1.04384 1.80276,0 1.05014,5.64465 -1,7.5 -1.86949,1.69186 -2.74389,4.5 -1.40121,4.5 0.32933,0 1.79183,-1.27954 3.25,-2.84342 2.49217,-2.67286 2.67228,-3.52769 3.00249,-14.25 0.34377,-11.16265 0.44,-11.57365 4.5,-19.21914 9.93621,-18.7111 9.54475,-17.68744 6.76373,-17.68744 -1.03674,0 -2.62212,-1.125 -3.52305,-2.5 -0.90094,-1.375 -1.23394,-2.5 -0.74001,-2.5 0.49393,0 2.32819,-0.28603 4.07614,-0.63562 3.06987,-0.61397 3.15847,-0.53736 2.602,2.25 -0.57479,2.87908 -0.57342,2.87996 0.60491,0.38562 0.64954,-1.375 1.22239,-4.25815 1.273,-6.407 0.0593,-2.51926 0.62479,-4.0866 1.592,-4.41262 1.30015,-0.43826 1.31246,-0.27846 0.0924,1.19938 -1.04962,1.27138 -1.1191,1.99352 -0.27317,2.83945 1.43251,1.43251 5.10612,-6.57965 7.74965,-16.90203 1.01173,-3.95056 2.17797,-6.97365 2.59165,-6.71798 0.41368,0.25567 0.50491,1.23794 0.20273,2.18283 -1.08292,3.38619 3.1048,-2.74657 6.51851,-9.54613 1.85996,-3.70474 3.80364,-7.56722 4.31929,-8.58328 1.20959,-2.38345 -0.0379,-3.69547 -1.32573,-1.39429 -1.35878,2.428 -2.37531,2.17151 -2.37531,-0.59933 0,-1.66657 0.46717,-2.21884 1.62157,-1.91696 0.95499,0.24974 3.42907,-1.35713 6.01863,-3.90899 2.41838,-2.38318 5.28867,-4.86909 6.37843,-5.52424 1.55944,-0.93753 -4.72652,-1.17854 -29.51863,-1.13179 -21.83562,0.0412 -29.96597,0.33504 -26.5,0.95778 5.05415,0.9081 11.63633,2.21177 16.84092,3.33554 2.07896,0.44888 2.67629,1.04242 2.22711,2.21297 -0.49233,1.283 -0.33456,1.36782 0.79715,0.42858 1.07879,-0.89531 2.0259,-0.89082 4.0229,0.0191 1.43655,0.65454 2.61192,1.55628 2.61192,2.00387 0,0.4476 1.38198,1.52846 3.07107,2.40192 l 3.07107,1.58811 -2.3998,3.18757 c -1.31991,1.75316 -7.4428,13.08757 -13.60644,25.18757 -10.91394,21.42542 -13.28502,25.0405 -15.79262,24.07824 -0.66775,-0.25624 -1.38222,0.0385 -1.58771,0.65499 -0.20562,0.61686 -0.93099,0.7764 -1.61317,0.35479 -0.84919,-0.52483 -0.92252,-1.14806 -0.23283,-1.97908 0.55369,-0.66716 0.74806,-2.2021 0.43193,-3.41098 -0.59724,-2.28384 -2.76028,-2.94745 -3.8516,-1.18165 -0.34546,0.55897 -1.05436,0.75288 -1.57533,0.4309 -0.52097,-0.32197 -0.6915,-0.99916 -0.37896,-1.50485 0.64754,-1.04776 -2.417,-0.10931 -4.24183,1.29896 -1.63145,1.25904 -3.2938,0.0803 -3.2938,-2.33552 0,-2.1889 2.54767,-6.73223 4.84164,-8.63421 1.30193,-1.07946 1.26168,-1.71606 -0.33191,-5.25 -0.99741,-2.21188 -2.14245,-4.02159 -2.54453,-4.02159 -0.40208,0 -1.952,-2.5875 -3.44426,-5.75 -1.49226,-3.1625 -3.56994,-6.55503 -4.61707,-7.53896 -1.04713,-0.98392 -1.90387,-2.74642 -1.90387,-3.91666 0,-1.17024 -0.3375,-1.78705 -0.75,-1.37069 -0.4125,0.41636 -0.75,1.72048 -0.75,2.89804 0,1.30505 -0.74027,2.28551 -1.89591,2.51107 -1.50473,0.2937 -1.73806,-0.0119 -1.13089,-1.48138 0.42076,-1.01828 0.78642,-2.39456 0.81258,-3.05839 0.0261,-0.66383 0.66329,-1.44325 1.41586,-1.73203 1.13267,-0.43465 1.09387,-1.05577 -0.22533,-3.60681 -1.85475,-3.58669 -4.11453,-3.42913 -3.6714,0.25599 0.25084,2.08595 -0.19256,2.63116 -2.5,3.07409 -1.5427,0.29613 -3.40697,0.0404 -4.14282,-0.56834 -1.07647,-0.89047 -0.88106,-1.28121 1,-1.99956 2.19099,-0.83672 2.05512,-1.00054 -2.16209,-2.60688 -3.19358,-1.21643 -4.41469,-2.20692 -4.20616,-3.41177 0.41056,-2.37212 -0.86138,-2.11767 -4.01041,0.80228 -1.48288,1.375 -3.16578,2.5 -3.73979,2.5 -0.574,0 -1.04364,0.60526 -1.04364,1.34501 0,4.05316 -9.72997,6.40357 -10.72692,2.59124 -0.70928,-2.71227 -1.57183,-2.4175 -3.11279,1.06375 -0.73036,1.65 -1.96521,3 -2.74411,3 -0.7789,0 -1.41618,0.675 -1.41618,1.5 0,0.825 -0.3949,1.5 -0.87756,1.5 -1.65405,0 -3.03875,-2.60404 -2.49347,-4.68918 0.2999,-1.14681 0.0757,-2.3753 -0.49818,-2.72999 -0.57389,-0.35468 -0.78995,-1.30547 -0.48013,-2.11286 0.94662,-2.46685 -1.32387,-1.64091 -4.65993,1.69515 -2.7933,2.7933 -3.03175,3.45144 -2.03948,5.62922 1.25248,2.7489 2.54875,2.17282 2.54875,-1.1327 0,-1.25301 0.62971,-2.15964 1.5,-2.15964 1.80987,0 1.46161,3.28093 -0.59244,5.58115 -1.76896,1.98098 -0.7974,3.0548 2.10485,2.32638 1.70047,-0.42679 2.35141,-0.0363 2.8002,1.67988 0.32159,1.22977 0.15558,3.03778 -0.36892,4.0178 -0.81081,1.51501 -0.61591,1.69871 1.30134,1.2266 6.64529,-1.63634 8.46668,-1.54224 8.99146,0.46454 0.74996,2.86783 -0.77642,5.06372 -2.39485,3.44529 -2.13468,-2.13468 -3.59457,-1.37216 -4.27044,2.2305 -0.73173,3.9005 1.75539,10.06208 3.60112,8.92136 0.64521,-0.39876 0.88191,-0.10717 0.58227,0.7173 -0.77915,2.14391 6.28377,15.08846 7.89528,14.47006 0.74257,-0.28495 1.35013,-0.17697 1.35013,0.23995 0,0.41692 1.2375,0.74029 2.75,0.71861 2.3695,-0.034 2.73438,0.34108 2.6371,2.71058 -0.0748,1.82304 0.39061,2.75 1.38084,2.75 1.15327,0 1.36215,0.81092 0.91642,3.55766 -0.67124,4.13635 -0.0129,6.44234 1.8393,6.44234 0.72032,0 1.57217,0.5625 1.89301,1.25 0.46666,1 0.7,1 1.16666,0 1.19706,-2.56513 2.41667,-1.1155 2.41667,2.87244 0,3.55102 -0.20792,3.94989 -1.5,2.87756 -0.825,-0.68469 -1.5,-1.95479 -1.5,-2.82244 0,-1.08509 -0.32241,-1.25515 -1.03278,-0.54478 -1.0248,1.0248 -0.34364,4.36772 0.88977,4.36667 0.35365,-3e-4 0.48636,6.0747 0.2949,13.5 -0.27912,10.82448 -0.0809,13.50359 1,13.51586 1.12294,0.0128 1.12462,0.15697 0.0101,0.86342 -1.04614,0.6631 -1.33013,5.18623 -1.30185,20.73469 0.0588,32.32402 -0.0349,31.10761 2.4464,31.75648 2.13239,0.55764 2.13526,0.58657 0.19902,2.00239 -1.65532,1.2104 -2.015,2.86862 -2.2845,10.53215 -0.28797,8.18878 -0.14046,9.10257 1.47955,9.16585 1.45163,0.0567 1.5095,0.20165 0.29941,0.75 -0.825,0.37384 -4.875,2.97598 -9,5.78254 -4.125,2.80656 -9.04284,5.89716 -10.92853,6.868 -4.76428,2.45287 -16.20006,6.52917 -18.31716,6.52917 -0.96488,0 -1.75433,0.48032 -1.75433,1.06739 0,0.58706 0.7875,0.83769 1.75,0.55696 0.9625,-0.28074 4,-0.78975 6.75,-1.13115 z m 52,-37.4932 c 0.33992,-0.55 1.04148,-1 1.55902,-1 0.51754,0 0.94098,0.45 0.94098,1 0,0.55 -0.70156,1 -1.55902,1 -0.85746,0 -1.2809,-0.45 -0.94098,-1 z m -20,-14 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 2.5,-2.0112 c 0,-0.54384 0.70532,-0.9888 1.56739,-0.9888 1.11231,0 1.38308,-0.58068 0.93261,-2 -0.44326,-1.3966 -0.1797,-2 0.8736,-2 3.66424,0 2.77946,5.46835 -0.93451,5.77573 -1.3415,0.11103 -2.43909,-0.24309 -2.43909,-0.78693 z m 11.54667,-6.03751 c 1.75313,-1.82988 3.08008,-2.57104 3.31913,-1.8539 0.21905,0.65715 -0.67365,2.01907 -1.98377,3.02648 -3.75006,2.8836 -4.54916,2.18191 -1.33536,-1.17258 z m 17.95333,-12.95129 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -0.5,-4 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -1,-2.88337 c 0,-0.48585 0.7875,-1.15455 1.75,-1.48599 0.9625,-0.33144 3.2125,-1.49978 5,-2.59631 2.43836,-1.4958 3.25,-1.65289 3.25,-0.62902 0,1.65478 -4.69537,4.901 -5.95915,4.11994 -0.49646,-0.30683 -1.18531,-0.10053 -1.53077,0.45844 -0.77213,1.24933 -2.51008,1.34137 -2.51008,0.13294 z m -26.3031,-0.91618 c -1.43335,-0.29218 -1.56204,-0.65802 -0.62756,-1.784 0.79549,-0.9585 0.82567,-1.41645 0.0934,-1.41645 -1.33441,0 -1.04444,-6.21954 0.3373,-7.23469 1.67807,-1.23285 3.5,-0.85041 3.5,0.73469 0,0.825 -0.675,1.5 -1.5,1.5 -1.87622,0 -1.97845,3.62079 -0.1327,4.70031 1.8949,1.10827 0.53852,3.95041 -1.6704,3.50014 z m 4.78122,-4.83911 c 0.58289,-4.5527 1.33339,-5.33961 2.96474,-3.10859 1.79183,2.45046 0.80264,6.74725 -1.55331,6.74725 -1.57779,0 -1.80297,-0.58051 -1.41143,-3.63866 z m -4.97812,-18.36134 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -1.3455,-7.55197 c 0.19002,-0.98026 0.95098,-1.98391 1.691,-2.23033 0.86063,-0.28658 1.221,0.19425 1,1.33427 -0.19002,0.98026 -0.95098,1.98391 -1.691,2.23033 -0.86063,0.28658 -1.221,-0.19425 -1,-1.33427 z m 8.8455,-0.72579 c 0,-0.70277 0.99828,-2.13251 2.21839,-3.1772 1.66062,-1.42187 1.87112,-2.0152 0.8372,-2.35984 -0.75966,-0.25322 -1.96131,0.33296 -2.67035,1.30263 -1.28513,1.75753 -4.38524,1.48249 -4.38524,-0.38906 0,-1.26247 3.89802,-2.54086 6.75,-2.21372 1.2375,0.14194 2.25,-0.1801 2.25,-0.71566 0,-1.07297 6.03633,-3.46639 6.80466,-2.69806 0.89439,0.89438 -2.03734,3.52867 -3.9271,3.52867 -1.97458,0 -2.58721,2.44338 -0.87756,3.5 0.55,0.33992 1,1.09658 1,1.68146 0,0.7238 -0.43058,0.70608 -1.34821,-0.0555 -1.02862,-0.85368 -1.7765,-0.64566 -3.15499,0.87755 -2.06769,2.28478 -3.4968,2.57851 -3.4968,0.71871 z m 25.5,-6.72224 c 0.99549,-1.1 1.96904,-2 2.16346,-2 0.19442,0 -0.20857,0.9 -0.89553,2 -0.68696,1.1 -1.66052,2 -2.16346,2 -0.50295,0 -0.1,-0.9 0.89553,-2 z m -9.83333,-4.66667 c -0.36667,-0.36666 -0.66667,-1.80666 -0.66667,-3.2 0,-1.92834 0.27827,-2.25506 1.1652,-1.36813 0.88694,0.88694 1.47638,0.75559 2.4682,-0.55 0.73205,-0.96364 1.31693,-1.19334 1.3348,-0.52422 0.0175,0.65504 -0.4182,1.4691 -0.9682,1.80902 -0.55,0.33992 -1,1.49148 -1,2.55902 0,1.94112 -1.07787,2.52978 -2.33333,1.27431 z m -14.66667,-1.23971 c 0,-0.49851 0.9,-0.67103 2,-0.38337 1.1,0.28766 2,0.69553 2,0.90638 0,0.21085 -0.9,0.38337 -2,0.38337 -1.1,0 -2,-0.40787 -2,-0.90638 z m 22.56341,-3.69699 c -0.76404,-3.0442 1.00604,-5.66764 3.32777,-4.93211 0.88485,0.28033 2.81529,-0.11673 4.28987,-0.88234 2.40382,-1.24809 2.85932,-1.19505 4.40499,0.51289 1.60427,1.7727 1.60682,1.90493 0.0367,1.90493 -0.92796,0 -2.09418,1.0125 -2.5916,2.25 l -0.90439,2.25 -0.0634,-2.25 c -0.0589,-2.09279 -2.06335,-3.37322 -2.06335,-1.31809 0,0.51254 -1.30209,1.85907 -2.89353,2.99228 l -2.89353,2.06037 z m -6.94345,-4.94461 c -0.34455,-0.89788 -0.32769,-2.11591 0.0375,-2.70675 1.43258,-2.31795 1.11953,-6.89231 -0.51795,-7.56838 -2.90308,-1.19859 -1.66447,-5.12183 1.62957,-5.16158 0.87297,-0.0105 1.06269,0.8069 0.60787,2.61905 -0.62677,2.49727 -0.4938,2.60979 2.55514,2.1623 2.7999,-0.41093 3.15035,-0.21982 2.70684,1.47619 -0.35214,1.34657 0.0882,2.10453 1.42581,2.45432 2.03412,0.53194 2.53233,1.78581 1.06894,2.69023 -0.4765,0.29449 -1.70956,-0.39629 -2.74014,-1.53507 -1.86933,-2.06559 -1.87624,-2.06036 -2.91361,2.20024 -1.10768,4.54936 -2.83017,6.05297 -3.85994,3.36945 z m -31.63011,-1.96425 c -0.63912,-0.77009 -0.85955,-1.88958 -0.48985,-2.48777 0.3697,-0.59819 0.17568,-1.68586 -0.43116,-2.41706 -0.60684,-0.73119 -0.81601,-2.07824 -0.46481,-2.99344 0.36951,-0.96292 -0.10984,-2.49094 -1.13774,-3.62675 -1.50528,-1.66331 -1.54157,-1.96275 -0.23791,-1.96275 0.8461,0 1.77371,0.9 2.06137,2 0.33124,1.26666 1.36401,2 2.81663,2 1.78393,0 2.02695,0.26667 1.09362,1.2 -1.95014,1.95014 -1.44186,5.77498 0.88166,6.6345 2.02276,0.74827 2.01077,0.80236 -0.42407,1.91174 -1.98448,0.90419 -2.74744,0.85042 -3.66774,-0.25847 z m 8.22628,-3.33303 c -0.70776,-0.44909 -0.9963,-1.56404 -0.64301,-2.48469 0.96278,-2.50898 2.42688,-2.00828 2.42688,0.82995 0,2.79159 0.003,2.78865 -1.78387,1.65474 z m 5.53387,-0.23707 c -1.98312,-1.15254 -2.39681,-4.04954 -0.52374,-3.66767 0.67444,0.1375 1.37473,-0.71663 1.55619,-1.89806 0.18147,-1.18144 1.23037,-2.38353 2.33089,-2.67133 1.62991,-0.42623 1.78418,-0.26205 0.83194,0.88533 -1.53857,1.85386 -0.63021,4.02168 1.97009,4.70168 1.69895,0.44428 2.08463,0.0864 2.08463,-1.93456 0,-1.83167 0.45734,-2.38592 1.75,-2.12084 1.2883,0.26419 1.66403,1.139 1.42413,3.31586 -0.17923,1.62635 -0.48329,3.11441 -0.67569,3.30681 -0.91727,0.91727 -9.20277,0.98109 -10.74844,0.0828 z m 14.25,0.0823 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -19,-8.5 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m 47,-1.5 c 0,-2.38425 1.53559,-2.65261 2.39301,-0.41821 0.85768,2.23506 0.79004,2.41821 -0.89301,2.41821 -0.83333,0 -1.5,-0.88889 -1.5,-2 z m 5,-8.5 c 0,-0.825 0.66088,-1.5 1.46862,-1.5 0.89459,0 1.24363,0.58629 0.89301,1.5 -0.31659,0.825 -0.97746,1.5 -1.46862,1.5 -0.49115,0 -0.89301,-0.675 -0.89301,-1.5 z m -64,-1 c 0,-0.825 0.43588,-1.5 0.96862,-1.5 0.53273,0 0.70959,0.675 0.39301,1.5 -0.31659,0.825 -0.75246,1.5 -0.96862,1.5 -0.21615,0 -0.39301,-0.675 -0.39301,-1.5 z m -5.48992,-2.48369 c -0.73755,-1.19337 0.19857,-3.01631 1.54894,-3.01631 1.2168,0 1.22469,2.70662 0.0101,3.45729 -0.512,0.31644 -1.21356,0.11799 -1.55902,-0.44098 z m 8.48992,-1.51631 c 0.68469,-0.825 2.31479,-1.5 3.62244,-1.5 1.30766,0 2.37756,-0.45 2.37756,-1 0,-0.55 0.675,-1 1.5,-1 2.71507,0 1.56529,2.07477 -1.96788,3.55103 -4.746,1.983 -7.20142,1.96035 -5.53212,-0.051 z m -2,-6.49704 c 0,-0.58707 -1.0125,-1.47438 -2.25,-1.9718 l -2.25,-0.90439 2.25,-0.0634 c 2.30554,-0.0649 3.01353,-1.47347 1.27937,-2.54524 -1.13416,-0.70095 -7.13003,2.17987 -6.77207,3.25375 0.27423,0.8227 -0.60271,1.2281 -2.65661,1.2281 -0.93874,0 -1.5171,-1.4811 -1.7572,-4.5 -0.24949,-3.13687 0.0229,-4.5 0.8993,-4.5 0.69147,0 1.25721,0.5051 1.25721,1.12244 0,0.81967 0.35818,0.82518 1.32784,0.0204 0.89397,-0.74193 2.37946,-0.80042 4.54625,-0.17899 2.92363,0.83848 3.30773,0.68809 4.19365,-1.64207 0.64745,-1.70293 0.63069,-2.98026 -0.0499,-3.8003 -0.56382,-0.67936 -0.74224,-2.64962 -0.39649,-4.37836 0.54938,-2.74676 0.35674,-3.1431 -1.52773,-3.1431 -3.07172,0 -3.62855,-2.50945 -1.14771,-5.17232 1.69542,-1.81982 2.46417,-2.05404 3.83714,-1.16908 0.94432,0.60868 1.58329,1.84072 1.41994,2.73788 -0.16336,0.89715 0.39914,2.62509 1.25,3.83986 0.85085,1.21477 1.54701,2.9388 1.54701,3.83118 0,0.89238 0.9,2.43699 2,3.43248 2.12309,1.92137 2.6072,3.5 1.07332,3.5 -0.50967,0 -1.11612,-0.7875 -1.34768,-1.75 -0.34599,-1.43819 -0.60996,-1.30456 -1.48151,0.75 -0.85081,2.00567 -0.73263,2.76063 0.59768,3.81809 1.5083,1.19895 1.39929,1.52695 -1.20599,3.62861 -1.98619,1.60225 -2.44682,2.44963 -1.50266,2.76435 0.94698,0.31566 0.67728,0.82003 -0.88582,1.65658 -1.50832,0.80723 -2.24734,0.85173 -2.24734,0.13533 z m 68.15,0.047 c 0.42971,-1.28914 1.80131,-1.5207 1.925,-0.325 0.0412,0.39875 -0.465,0.905 -1.125,1.125 -0.66,0.22 -1.02,-0.14 -0.8,-0.8 z m 4.42321,-10.04996 c 0.3678,-1.375 1.08577,-3.175 1.5955,-4 0.64411,-1.04249 0.72283,-0.73748 0.25808,1 -0.3678,1.375 -1.08577,3.175 -1.5955,4 -0.64411,1.04249 -0.72283,0.73748 -0.25808,-1 z m -64.57321,-8.44098 c 0,-0.85746 0.45,-1.55902 1,-1.55902 0.55,0 1,0.42344 1,0.94098 0,0.51754 -0.45,1.2191 -1,1.55902 -0.55,0.33992 -1,-0.0835 -1,-0.94098 z m 71,-19.05902 c 0,-0.825 0.66088,-1.5 1.46862,-1.5 0.89459,0 1.24363,0.58629 0.89301,1.5 -0.31659,0.825 -0.97746,1.5 -1.46862,1.5 -0.49115,0 -0.89301,-0.675 -0.89301,-1.5 z m 12.8125,-1.18311 c 0.72187,-0.28888 1.58438,-0.25335 1.91667,0.079 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28495 -0.60417,-0.60417 z M 420.33676,691.35715 c 7.02812,0 10.70374,-0.35664 10.30612,-1 -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.39118 1.05902,0.86929 0,0.4781 2.75338,0.93152 6.11862,1.00759 5.62793,0.12722 6.07728,-0.0197 5.60323,-1.83252 -0.28346,-1.08395 0.12709,-2.50403 0.91234,-3.15572 1.16521,-0.96704 1.64619,-0.60608 2.616,1.96323 0.92821,2.4591 1.77867,3.14813 3.88571,3.14813 1.48359,0 2.90368,-0.5625 3.15577,-1.25 0.36666,-1 0.72333,-1 1.78333,0 0.72875,0.6875 1.99601,1.25 2.81613,1.25 1.11894,0 1.00662,-0.36966 -0.45,-1.481 -1.63994,-1.2512 -1.71636,-1.62852 -0.49255,-2.43174 1.04309,-0.68462 2.04567,-0.3065 3.58159,1.35079 2.68131,2.89319 10.86785,3.41671 13.67683,0.87462 1.65538,-1.4981 1.793,-1.49562 1.793,0.0323 0,1.11807 0.84838,1.65499 2.61501,1.65499 2.55826,0 2.57952,-0.0542 0.97984,-2.49558 -1.03772,-1.58377 -1.40151,-3.42655 -0.99567,-5.04356 0.80109,-3.19181 3.00408,-2.64841 2.60974,0.64374 -0.17054,1.4238 0.59344,3.37951 1.84494,4.72284 1.94456,2.08724 2.64291,2.22205 7.79108,1.50396 3.11028,-0.43383 9.36756,-0.7208 13.90506,-0.6377 7.48668,0.1371 8.25,-0.0244 8.25,-1.74563 0,-3.77804 -9.33227,-5.85171 -10.66814,-2.37051 -0.71063,1.85187 -2.76104,1.81516 -4.33186,-0.0776 -1.03658,-1.249 -0.90743,-1.5 0.77177,-1.5 2.56696,0 2.55109,-4.31597 -0.0218,-5.92353 -1.44873,-0.90518 -1.75,-0.74765 -1.75,0.91506 0,1.10466 -0.49814,2.00847 -1.10699,2.00847 -0.60884,0 -0.85538,-0.65567 -0.54786,-1.45705 0.44515,-1.16005 0.0812,-1.27533 -1.78569,-0.56555 -1.28965,0.49032 -3.29311,0.64351 -4.45214,0.34041 -1.63887,-0.42857 -2.10732,-0.0937 -2.10732,1.50654 0,1.13169 -0.45,2.33573 -1,2.67565 -0.56716,0.35052 -1,-0.48962 -1,-1.94098 3e-5,-1.81473 -0.53314,-2.55894 -1.8333,-2.55894 -2.52541,0 -2.95743,-0.64375 -2.39755,-3.57257 0.62314,-3.25973 3.87862,-2.92902 3.41802,0.34722 -0.35928,2.55553 1.29408,3.01966 2.2143,0.6216 0.33848,-0.88207 1.25887,-1.35684 2.04531,-1.05506 1.71913,0.6597 5.18985,-7.50213 4.00525,-9.41885 -0.44906,-0.72661 -0.34771,-0.97592 0.24726,-0.60821 0.55456,0.34274 1.52409,-0.50891 2.15451,-1.89254 1.52718,-3.35178 1.44498,-3.91442 -0.35377,-2.42159 -1.19743,0.99377 -1.80575,0.99114 -3.01575,-0.0131 -1.31889,-1.09459 -1.17551,-1.43447 1.10408,-2.61714 1.44091,-0.74755 2.99133,-1.12957 3.4454,-0.84894 0.45407,0.28063 1.40325,-1.08729 2.10929,-3.03981 1.36685,-3.77995 3.44585,-4.81843 9.85698,-4.92362 2.80559,-0.046 3.50036,-0.45158 3.5018,-2.04407 9.9e-4,-1.09526 0.78619,-2.13771 1.75,-2.32332 0.96151,-0.18518 1.7482,-0.69128 1.7482,-1.12468 0,-1.11621 -5.35668,0.0118 -6.19563,1.30472 -0.38259,0.5896 -1.04456,0.72307 -1.47104,0.2966 -0.42647,-0.42648 -0.11344,-1.23521 0.69563,-1.79717 1.1191,-0.77731 1.17049,-1.1436 0.21481,-1.53104 -2.35637,-0.95525 -0.13459,-2.33843 3.75623,-2.33843 4.56033,0 5.44601,1.06796 5.1431,6.2016 -0.19059,3.23009 0.0812,3.7984 1.81639,3.7984 1.23249,0 2.08645,-0.69299 2.15651,-1.75 0.11048,-1.66667 0.13778,-1.66667 0.57333,0 0.70367,2.69269 3.31067,2.1298 3.31067,-0.71482 0,-1.41343 0.82507,-2.90638 1.93426,-3.5 2.58328,-1.38252 3.06574,-1.30938 3.06574,0.46482 0,0.825 -0.675,1.5 -1.5,1.5 -0.825,0 -1.49311,0.3375 -1.48469,0.75 0.0432,2.11664 2.24095,2.7804 10.07801,3.04375 7.1188,0.23921 8.83469,-0.004 10,-1.41837 1.28556,-1.56014 1.14838,-1.64848 -1.59332,-1.02598 l -3,0.68114 2.41481,-2.05902 c 1.44545,-1.23248 3.05113,-1.78912 4,-1.38667 0.87185,0.36979 2.59769,0.89193 3.83519,1.16032 1.8844,0.40869 2.25,0.0628 2.25,-2.12859 0,-1.68302 0.54638,-2.61658 1.53138,-2.61658 0.84227,0 1.79041,-0.675 2.10699,-1.5 0.31659,-0.825 1.00402,-1.5 1.52764,-1.5 0.52361,0 0.65638,0.47836 0.29505,1.06301 -0.73985,1.1971 2.40342,5.13878 3.53848,4.43728 0.40273,-0.24891 0.52521,-1.53555 0.27218,-2.85921 -0.61451,-3.21458 1.25677,-4.18005 4.27226,-2.20422 2.50443,1.64097 3.37739,5.87567 1.45602,7.06314 -0.55,0.33992 -1,1.49148 -1,2.55902 0,1.74142 0.74541,1.94255 7.25,1.95629 3.9875,0.008 7.74513,0.34592 8.3503,0.75 1.53191,1.02289 3.68029,5.28743 3.00426,5.96346 -0.30662,0.30662 -0.83032,-0.15351 -1.16378,-1.0225 -0.33346,-0.86899 -1.19986,-1.35221 -1.92532,-1.07383 -1.02319,0.39264 -0.75461,1.89239 1.19753,6.68686 1.38411,3.39939 2.90708,7.2019 3.38439,8.45004 0.77413,2.02433 1.11262,2.13229 3.13522,1 1.24707,-0.69814 2.58713,-1.71715 2.97791,-2.26447 0.42493,-0.59514 1.31652,-0.1932 2.2182,1 0.82923,1.09732 1.52199,1.59694 1.53949,1.11027 0.0344,-0.95598 2.78308,2.55898 4.73958,6.06078 0.99976,1.78942 0.89797,2.56321 -0.59103,4.4929 -0.98934,1.28215 -2.05321,3.34368 -2.36416,4.58118 -0.46607,1.85488 -0.15314,2.25 1.78201,2.25 1.29105,0 2.62548,0.45 2.9654,1 1.16361,1.88276 3.52923,1.00027 5.35162,-1.99641 1.8705,-3.07578 3.14838,-3.03355 3.14838,0.10406 0,2.21382 1.84355,3.4488 3.16927,2.12308 0.66,-0.66 1.96454,-0.62904 3.8747,0.092 2.90529,1.09662 5.4075,0.19239 3.21586,-1.16212 -0.65024,-0.40187 -1.88075,-2.4024 -2.73446,-4.44563 -0.85372,-2.04325 -1.96961,-3.71498 -2.47977,-3.71498 -1.70562,0 -2.12623,1.89803 -0.86733,3.91384 1.73894,2.78449 0.12111,3.9586 -1.75797,1.27583 -0.84354,-1.20432 -2.13073,-2.18967 -2.86043,-2.18967 -1.70372,0 -2.70923,-5.10502 -1.3332,-6.76876 0.75417,-0.91185 0.58797,-1.77858 -0.59084,-3.08115 -0.90211,-0.99682 -1.33921,-2.11337 -0.97135,-2.48124 1.13659,-1.13658 2.33552,-0.74021 2.33552,0.77213 0,1.87508 1.69869,2.88862 3.61127,2.1547 0.89891,-0.34495 1.20527,-1.08352 0.75298,-1.81532 -0.41938,-0.67857 -0.91713,-2.89277 -1.10611,-4.92043 -0.2716,-2.91423 0.12414,-4.01428 1.8888,-5.2503 2.75241,-1.92786 3.3778,-1.45863 1.85306,1.39037 -1.52299,2.84573 -0.93964,3.2669 3.39782,2.45319 2.20717,-0.41407 3.60218,-1.24832 3.60218,-2.15419 0,-1.55592 3.79321,-5.19812 5.5,-5.28104 0.55,-0.0267 1.64606,-0.4574 2.4357,-0.95706 1.2476,-0.78944 1.2476,-1.1377 0,-2.6581 -1.3025,-1.5873 -1.22695,-1.69584 0.8143,-1.16983 1.2375,0.31888 2.25,0.2244 2.25,-0.20996 0,-1.35752 -3.586,-1.80023 -5.14093,-0.63466 -0.81566,0.61141 -1.77559,1.89156 -2.13319,2.84479 -0.35759,0.95323 -1.27011,1.49525 -2.02781,1.20449 -0.7577,-0.29076 -1.95484,0.16683 -2.6603,1.01686 -1.60785,1.93734 -3.03777,1.99048 -3.03777,0.1129 0,-0.78794 0.9,-1.71826 2,-2.06739 2.74698,-0.87186 2.5114,-2.47725 -0.95936,-6.53777 -4.12369,-4.82441 -3.88741,-9.66615 0.26888,-5.50985 0.79881,0.79881 1.71155,1.19322 2.0283,0.87646 0.31676,-0.31675 1.38283,-0.22435 2.36905,0.20534 0.98622,0.42969 2.35563,0.69056 3.04313,0.5797 1.90375,-0.30697 1.49852,0.86404 -1,2.88975 -3.31292,2.68599 -1.37703,3.58287 3.2398,1.50097 2.20561,-0.99459 4.0102,-1.86986 4.0102,-1.94503 0,-0.0752 -0.9,-1.90198 -2,-4.05957 -1.1,-2.15759 -2,-4.72773 -2,-5.71144 0,-0.98371 -0.72378,-1.78856 -1.60841,-1.78856 -1.23372,0 -1.45604,-0.60706 -0.95437,-2.60589 0.81994,-3.26692 -1.87976,-7.82201 -4.12524,-6.96033 -1.26685,0.48613 -1.42703,-0.007 -0.90543,-2.78734 0.70364,-3.75072 -0.0429,-6.64644 -1.71354,-6.64644 -0.73124,0 -0.69583,0.39718 0.10699,1.2 1.85605,1.85605 1.42469,2.97155 -1.01297,2.61955 -1.54333,-0.22285 -2.39858,-1.22735 -2.82635,-3.31955 -0.94525,-4.62315 -2.83893,-7.5 -4.93685,-7.5 -2.04313,0 -3.55851,-1.55152 -2.28444,-2.33893 1.64299,-1.01543 6.11996,0.54189 5.5827,1.94195 -0.32834,0.85565 0.11743,1.39698 1.15038,1.39698 1.37068,0 1.55717,-0.58856 0.99602,-3.14344 -0.37972,-1.72889 -1.32582,-4.66419 -2.10243,-6.52289 -1.17401,-2.80979 -1.717,-3.21622 -3.22129,-2.41115 -0.99509,0.53256 -2.36765,1.64111 -3.05013,2.46344 -1.30243,1.56934 -4.09464,1.13789 -4.09464,-0.63271 0,-0.56802 -0.7875,-1.61747 -1.75,-2.3321 -1.47604,-1.09593 -1.55299,-1.62197 -0.49153,-3.36025 0.69216,-1.13349 0.9893,-2.0609 0.6603,-2.0609 -0.94412,0 -4.34866,4.37783 -4.3855,5.63922 -0.0183,0.62656 -0.9254,2.20156 -2.01578,3.5 l -1.98252,2.36078 -0.63412,-2.25 c -0.74847,-2.65575 -2.23984,-3.02133 -2.03974,-0.5 0.11059,1.39338 -0.5234,1.68602 -3.11111,1.43603 -2.76506,-0.26712 -3.25,0.01 -3.25,1.85699 0,1.5189 0.45053,1.99807 1.5,1.59535 0.825,-0.31658 1.53379,-0.25222 1.57509,0.14301 0.53433,5.11351 0.38709,12.21862 -0.2532,12.21862 -0.45204,0 -0.82189,0.64844 -0.82189,1.44098 0,2.22334 -2.15391,3.03539 -3.18137,1.19942 -1.41491,-2.52831 -3.60561,-1.95301 -5.34085,1.40256 -1.44477,2.79389 -4.87141,4.96975 -7.79288,4.94837 -0.65169,-0.005 0.48837,-1.59469 2.53347,-3.53314 3.14135,-2.97754 3.62629,-3.98487 3.125,-6.49133 -0.37653,-1.88264 -0.18224,-2.96686 0.53163,-2.96686 0.61875,0 1.125,0.39754 1.125,0.88342 0,1.12648 4.89282,2.09901 5.51286,1.09578 0.25581,-0.41392 -0.20493,-1.30867 -1.02387,-1.98834 -2.19053,-1.81798 -1.8172,-2.99086 0.95199,-2.99086 3.17977,0 3.88974,-1.27235 1.738,-3.11472 -1.80995,-1.54973 -5.90949,-1.7879 -8.04601,-0.46746 -0.69632,0.43035 -1.56984,0.47864 -1.94117,0.10731 -0.37133,-0.37132 0.10861,-1.11374 1.06653,-1.64982 1.8892,-1.05725 2.31209,-5.42481 0.76252,-7.87531 -0.82792,-1.30928 -1.17563,-1.27289 -2.73469,0.28616 -1.30957,1.30958 -1.46672,1.98368 -0.58895,2.5264 0.74894,0.46306 0.87108,1.26792 0.32622,2.14953 -0.70279,1.13714 -1.16193,1.16785 -2.37748,0.15904 -1.24343,-1.03195 -1.70202,-0.88488 -2.62638,0.84231 -1.5773,2.94721 -3.3083,1.42242 -2.6428,-2.32796 0.34286,-1.93215 0.0191,-3.84553 -0.84365,-4.98562 -1.58323,-2.09221 -3.75336,-1.38737 -2.86402,0.93021 0.31996,0.83381 -0.0957,2.0569 -0.92373,2.71797 -2.28805,1.82675 -3.17594,6.70196 -1.22059,6.70196 0.93374,0 1.44461,-0.70448 1.26906,-1.75 -0.50746,-3.02224 2.60581,-1.9257 3.54898,1.25 1.26764,4.2682 2.13053,5.82445 3.47862,6.27381 0.65332,0.21778 1.17856,-0.53561 1.17856,-1.69048 0,-1.41666 0.64,-2.08333 2,-2.08333 2.85771,0 2.47152,2.06145 -1,5.33801 -1.65,1.55734 -3,3.24338 -3,3.74676 0,0.50337 -0.5051,0.91523 -1.12244,0.91523 -0.82241,0 -0.81828,-0.3665 0.0155,-1.37109 0.68856,-0.82967 0.82382,-2.22014 0.34253,-3.52118 -0.70691,-1.91098 -1.00632,-1.99583 -2.69232,-0.763 -1.68078,1.22902 -1.75241,1.73605 -0.62854,4.44932 1.51796,3.66468 3.22991,4.48167 6.65909,3.1779 3.07426,-1.16883 3.42851,-1.19183 3.41842,-0.22195 -0.0122,1.17006 -5.1534,3.26841 -6.28876,2.56671 -0.9295,-0.57445 -0.84189,0.64643 0.48406,6.74579 0.26432,1.21586 -4.39021,1.52486 -30.1875,2.00408 -16.775,0.31162 -31.4,0.76162 -32.5,1 -1.56314,0.33875 -2.06796,-0.15528 -2.31113,-2.26174 -0.19528,-1.69158 -0.78485,-2.51337 -1.58333,-2.20696 -0.85785,0.32918 -1.27221,-0.50294 -1.27221,-2.55485 0,-1.70906 0.52884,-3.04303 1.20637,-3.04303 1.32722,0 1.50903,-8.28518 0.2103,-9.58354 -0.4125,-0.41239 -0.75,-0.13479 -0.75,0.61687 0,0.92823 -0.32695,1.03972 -1.01915,0.34752 -0.69219,-0.69219 -0.46568,-2.51246 0.70607,-5.67401 1.29527,-3.49482 2.45012,-4.90756 4.63402,-5.66887 3.31632,-1.15608 4.83869,-0.61753 4.0517,1.43332 -0.297,0.77398 -0.13905,2.1237 0.35101,2.99938 0.67212,1.20101 1.45185,-0.1186 3.17401,-5.37167 1.25565,-3.8301 2.90304,-7.78173 3.66087,-8.78141 1.94247,-2.56239 1.77893,-3.14083 -0.98992,-3.50117 -2.27219,-0.2957 -2.33015,-0.44738 -0.88525,-2.31642 1.10916,-1.43474 1.68251,-1.63492 2.02864,-0.70826 0.36264,0.97086 0.81982,1.01178 1.84046,0.16472 1.03354,-0.85776 1.09206,-1.55282 0.24494,-2.90927 -0.62326,-0.99799 -0.77634,-2.61062 -0.34789,-3.66472 0.73929,-1.81881 0.79004,-1.81559 1.50078,0.0952 0.59573,1.6016 1.14583,0.88132 2.89267,-3.78751 2.5852,-6.90966 2.56873,-6.69016 0.50201,-6.69016 -1.49027,0 -1.50326,-0.17417 -0.13049,-1.75 0.83848,-0.9625 1.39197,-2.32375 1.22999,-3.025 -0.16198,-0.70125 -0.0658,-0.81375 0.21382,-0.25 0.86517,1.74452 2.34167,1.12975 2.34167,-0.975 0,-1.1 0.45,-2 1,-2 0.55,0 1,-0.53292 1,-1.18428 0,-0.65135 0.92428,-3.09358 2.05395,-5.42717 1.67692,-3.46405 1.8333,-4.59622 0.85193,-6.16765 -1.49457,-2.39319 -4.90588,-4.63873 -4.90588,-3.22937 0,0.55466 0.45,1.00847 1,1.00847 1.40483,0 1.2507,3.72703 -0.19098,4.61803 -0.65504,0.40484 -1.3738,0.18762 -1.59725,-0.48272 -0.31043,-0.93128 -0.73717,-0.94416 -1.80902,-0.0546 -0.77151,0.6403 -1.39788,0.99658 -1.39193,0.79173 0.0378,-1.29904 3.05884,-9.99148 4.56075,-13.12244 1.82199,-3.79823 2.43744,-4.0865 8.07744,-3.7834 3.89522,0.20934 5.24074,-1.52647 1.84408,-2.37898 -1.3712,-0.34415 -2.49309,-1.30627 -2.49309,-2.13806 0,-0.83178 -0.64659,-1.76045 -1.43686,-2.0637 -1.74391,-0.6692 -0.90637,-3.38586 1.04385,-3.38586 1.6256,0 1.8118,-1.18121 0.40756,-2.58545 -0.91515,-0.91515 1.28316,-8.29314 3.9278,-13.18254 0.51527,-0.9526 1.21994,-3.05854 1.56595,-4.67985 0.48514,-2.27323 0.83874,-2.61651 1.5451,-1.5 0.50378,0.79631 0.92287,2.46034 0.93129,3.69784 0.018,2.6378 3.71051,3.20786 4.66512,0.7202 0.38566,-1.00503 1.27307,-1.31207 2.58693,-0.89506 1.41833,0.45016 1.86855,0.24073 1.54824,-0.7202 -0.24841,-0.74522 -0.86415,-1.39381 -1.36831,-1.44131 -2.18048,-0.20544 -4.41667,-1.7348 -4.41667,-3.02062 0,-0.76615 -0.72314,-1.39301 -1.60699,-1.39301 -1.05452,0 -1.39831,-0.5438 -1,-1.58179 0.33385,-0.86998 0.60699,-2.21998 0.60699,-3 0,-0.78001 0.765,-1.41821 1.7,-1.41821 1.32222,0 1.43333,-0.26667 0.5,-1.2 -0.93333,-0.93333 -1.46667,-0.93333 -2.4,0 -0.66,0.66 -2.02412,1.2 -3.03138,1.2 -1.00727,0 -2.09298,0.7875 -2.4127,1.75 -0.31972,0.9625 -5.08175,13.45 -10.58229,27.75 -5.50054,14.3 -12.67512,32.975 -15.94353,41.5 -3.2684,8.525 -7.68594,20 -9.81674,25.5 -2.1308,5.5 -6.64354,17.2 -10.02831,26 -23.50149,61.10107 -26.13829,67.62157 -27.56688,68.16978 -0.71054,0.27265 -1.04715,1.1335 -0.74804,1.91298 0.29912,0.77948 0.0457,1.41724 -0.56314,1.41724 -0.60885,0 -1.10699,-0.40598 -1.10699,-0.90217 0,-0.4962 -1.38399,-1.38464 -3.07554,-1.97432 -2.53329,-0.88311 -2.9552,-1.4513 -2.39299,-3.22267 0.43172,-1.36021 0.18385,-2.46652 -0.67446,-3.01037 -2.22015,-1.40675 -3.12322,-1.01646 -2.56726,1.10953 0.33992,1.29986 0.0307,2 -0.88337,2 -1.66737,0 -1.79558,-1.40426 -0.3712,-4.06574 0.7227,-1.35037 0.71323,-1.93426 -0.0314,-1.93426 -0.58661,0 -1.30651,0.62527 -1.59977,1.38949 -0.29326,0.76422 -1.33432,1.17999 -2.31348,0.92394 -1.44278,-0.3773 -1.83579,-1.73079 -2.07306,-7.13949 -0.16103,-3.67067 -0.26565,-7.57394 -0.23249,-8.67394 0.0332,-1.1 -0.15113,-3.46697 -0.40953,-5.25994 -0.40867,-2.8356 -0.71546,-3.12847 -2.35691,-2.25 -3.14587,1.68363 -4.14363,1.13501 -1.94124,-1.06738 1.14252,-1.14252 2.71752,-1.83165 3.5,-1.53138 0.92955,0.3567 1.42268,-0.12785 1.42268,-1.39793 0,-1.642 -0.37502,-1.80128 -2.41492,-1.02572 -1.84373,0.70099 -2.55331,0.55752 -3,-0.60654 -0.96273,-2.50883 -0.60233,-3.9952 0.50679,-2.09008 1.19545,2.05343 3.09438,1.37792 2.25747,-0.80306 -0.35123,-0.91533 0.0417,-1.46797 1.04369,-1.46797 1.45513,0 1.60699,-4.85503 1.60699,-51.37756 0,-42.26969 -0.24274,-51.57901 -1.36931,-52.51398 -1.11765,-0.92756 -1.49156,-0.21489 -2.03445,3.87755 -0.4557,3.43528 -1.12657,5.01399 -2.13068,5.01399 -0.80606,0 -1.46556,-0.1882 -1.46556,-0.41821 0,-0.23002 -0.27314,-1.13002 -0.60699,-2 -0.39831,-1.03799 -0.0545,-1.58179 1,-1.58179 0.88385,0 1.60699,-0.72314 1.60699,-1.60699 0,-0.96779 -0.55775,-1.39296 -1.40223,-1.0689 -2.23532,0.85777 -2.74956,-0.4989 -0.94496,-2.49296 0.91144,-1.00713 2.6821,-1.83115 3.93479,-1.83115 2.48773,0 3.07816,-1.31334 3.33345,-7.41476 0.0918,-2.19532 -0.37889,-4.25017 -1.07177,-4.67839 -0.97791,-0.60438 -0.96953,-1.34751 0.0401,-3.56353 1.169,-2.56567 1.05968,-2.97217 -1.30685,-4.85917 -3.14272,-2.50592 -3.34463,-6.00595 -0.43627,-7.56245 1.90318,-1.01855 2.08698,-0.9218 1.62257,0.85412 -0.28806,1.10153 -0.13579,2.6151 0.33838,3.36348 0.57403,0.90601 0.86723,0.12935 0.87743,-2.3242 0.0215,-5.1727 1.68538,-9.15568 3.52921,-8.44814 0.81735,0.31365 2.14954,0.31569 2.9604,0.005 1.26843,-0.48674 1.24474,-0.7953 -0.16964,-2.20969 -1.26283,-1.26282 -1.74458,-1.34205 -2.07801,-0.34174 -0.33052,0.99155 -0.89335,0.88656 -2.3593,-0.44011 -1.83894,-1.66422 -1.99372,-1.64454 -3.453,0.43887 -3.05685,4.36426 -5.39172,1.4867 -4.49552,-5.5404 0.0857,-0.67187 -0.986,-1.50816 -2.38152,-1.85841 -1.39547,-0.35023 -2.53726,-1.21974 -2.53726,-1.93222 0,-0.93195 1.68348,-1.25672 6,-1.15749 6.61553,0.15208 8.00026,1.77678 3,3.51988 -1.65,0.5752 -3,1.51922 -3,2.09783 0,1.33561 1.68503,1.37067 2.5,0.052 0.33992,-0.55 1.66833,-1 2.95203,-1 1.2837,0 2.59301,-0.675 2.9096,-1.5 0.31658,-0.825 1.10947,-1.5 1.76197,-1.5 0.74433,0 0.56973,0.68139 -0.46861,1.82874 -2.84043,3.13863 -1.51301,5.17126 3.37711,5.17126 1.02768,0 2.27495,0.72625 2.7717,1.61389 0.61647,1.10157 1.58457,1.39762 3.04969,0.93261 2.58405,-0.82015 2.84005,-2.51521 0.39651,-2.62545 -1.04544,-0.0472 -1.24674,-0.28201 -0.5,-0.58333 0.6875,-0.27741 1.29486,-1.70439 1.34968,-3.17105 l 0.0997,-2.66667 0.80064,2.5 c 0.44035,1.375 0.8455,3.9625 0.90032,5.75 0.0782,2.55011 0.53038,3.25 2.09968,3.25 2.07031,0 2.7596,-2.41251 1,-3.5 -0.55,-0.33992 -0.98503,-2.27898 -0.96673,-4.30902 l 0.0333,-3.69098 1.91659,2.29887 c 1.08961,1.30694 1.64758,2.99992 1.29312,3.92361 -0.47529,1.2386 -0.20628,1.46465 1.13193,0.95113 0.96544,-0.37049 2.18559,-0.67361 2.71143,-0.67361 0.52583,0 0.86904,-1.0125 0.76268,-2.25 -0.53832,-6.26365 -0.25492,-6.60513 5.3724,-6.47337 4.46528,0.10454 5.66032,-0.28258 7.95454,-2.5768 l 2.69983,-2.69983 h -4.37121 c -2.58586,0 -4.55841,0.51054 -4.82955,1.25 -0.36666,1 -0.72333,1 -1.78333,0 -1.92618,-1.81715 -56.36323,-1.81715 -55.33731,0 0.56457,1 0.43638,1 -0.64099,0 -1.01581,-0.94287 -8.79161,-1.25 -31.6467,-1.25 h -30.3 l 0.15092,33.75 c 0.0933,20.86531 0.42407,30.88674 0.86641,26.25 0.39352,-4.125 1.50268,-11.55 2.46481,-16.5 0.96212,-4.95 1.97888,-10.27543 2.25946,-11.8343 0.28058,-1.55886 1.5641,-3.97153 2.85227,-5.36149 1.28817,-1.38996 2.59643,-3.32844 2.90725,-4.30773 0.68177,-2.14809 3.38245,-2.96463 9.86551,-2.98282 4.32378,-0.0121 4.80995,-0.23042 4.35848,-1.95684 -0.52646,-2.01318 2.73671,-5.92833 3.93901,-4.72603 0.89135,0.89135 3.33588,-1.25882 3.33588,-2.93418 0,-1.84924 -4.88806,-2.94761 -7.06565,-1.58768 -1.35166,0.84412 -2.05068,0.75582 -2.99157,-0.37788 -0.67528,-0.81366 -0.99885,-1.70831 -0.71905,-1.98811 0.27979,-0.2798 5.85642,-0.38142 12.3925,-0.22583 l 11.88377,0.28289 -3.75,1.69897 c -2.0625,0.93444 -3.8175,2.17194 -3.9,2.75 -0.0825,0.57807 -0.195,1.61353 -0.25,2.30103 -0.14916,1.86454 -1.87447,2.7671 -3.19482,1.6713 -2.03965,-1.69275 -8.8437,1.97351 -7.02948,3.78773 0.31678,0.31679 1.26184,0.007 2.10013,-0.68897 1.3911,-1.15451 1.95269,-0.734 1.64259,1.22994 -0.0651,0.4125 1.40148,0.75 3.25914,0.75 4.14892,0 6.36527,2.13862 4.13477,3.98977 -1.82333,1.51323 -2.02555,6.97782 -0.26233,7.08918 1,0.0632 1,0.17982 0,0.58333 -0.98678,0.39818 -1.25,19.13791 -1.25,88.99363 v 88.48925 l 2.63486,-2.07258 c 2.3004,-1.80949 4.02153,-2.07258 13.55902,-2.07258 z m 4.80612,-1.94098 c 0,-0.51754 0.44485,-1.21592 0.98855,-1.55194 0.56686,-0.35034 0.7345,0.0511 0.39301,0.94098 -0.66479,1.73242 -1.38156,2.04939 -1.38156,0.61096 z m 182.5,-2.05902 c 0.33992,-0.55 1.06803,-1 1.61803,-1 0.55,0 0.72189,0.45 0.38197,1 -0.33992,0.55 -1.06803,1 -1.61803,1 -0.55,0 -0.72189,-0.45 -0.38197,-1 z m -193.95729,-0.9309 c -1.00194,-1.62117 1.17528,-2.11382 2.46643,-0.55809 1.00476,1.21067 0.94351,1.48899 -0.32768,1.48899 -0.85988,0 -1.82232,-0.41891 -2.13875,-0.9309 z m 82.45729,-0.12812 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -59,-1.94098 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 170.73557,-1.59777 c -0.32877,-0.32877 -0.35122,-1.24025 -0.0499,-2.02552 0.41816,-1.08969 0.8728,-1.1581 1.92009,-0.28893 0.75472,0.62636 1.12561,1.53785 0.8242,2.02553 -0.63262,1.0236 -1.8312,1.15213 -2.6944,0.28892 z m -175.19286,-2.33313 c -0.73955,-1.1966 1.14162,-2.38223 2.4736,-1.55902 1.11836,0.69118 0.38417,2.48992 -1.01631,2.48992 -0.48508,0 -1.14086,-0.41891 -1.45729,-0.9309 z m -14.04271,-1.0691 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 10.7285,-4.0035 c -1.49002,-1.21478 -1.88705,-2.0895 -1.15403,-2.54252 1.30816,-0.80849 4.32711,1.87636 3.7916,3.372 -0.20608,0.57558 -1.3588,0.21307 -2.63757,-0.82948 z m 176.15624,-1.7465 c -0.35935,-1.5125 -1.33766,-3.5375 -2.17404,-4.5 -1.38488,-1.59373 -1.33351,-1.75 0.5753,-1.75 3.11967,0 3.49363,-1.55156 0.68264,-2.83233 -2.01893,-0.91989 -2.46864,-0.85544 -2.46864,0.35377 0,0.81321 -0.9,1.47856 -2,1.47856 -2.27536,0 -2.40157,-0.38114 -0.99596,-3.00755 0.56261,-1.05124 1.7994,-1.72289 2.8131,-1.52767 1.48194,0.2854 1.73192,-0.17718 1.38246,-2.55819 -0.3596,-2.45011 -0.0843,-2.90659 1.75264,-2.90659 1.19858,0 2.93716,-0.38775 3.8635,-0.86167 0.92634,-0.47391 3.03426,-1.18172 4.68426,-1.57289 l 3,-0.71122 -2.30172,2.16003 c -1.26595,1.18802 -2.88176,1.93745 -3.59069,1.66541 -0.70892,-0.27204 -1.92315,-0.0931 -2.69827,0.39755 -1.03426,0.65474 -1.07007,0.89624 -0.13457,0.90748 0.70111,0.008 1.72426,1.1976 2.27366,2.64263 0.78433,2.06295 0.59091,3.31881 -0.90043,5.84645 -1.36022,2.30539 -1.62703,3.70574 -0.93998,4.93342 1.07181,1.91523 0.39696,4.59281 -1.15756,4.59281 -0.55679,0 -1.30635,-1.2375 -1.6657,-2.75 z m -172.38474,0.94032 c 0,-0.53699 0.7126,-1.24979 1.58356,-1.58401 0.97391,-0.37373 1.43108,-0.15024 1.1875,0.58051 -0.49828,1.49484 -2.77106,2.31789 -2.77106,1.0035 z m 3.53262,-2.13753 c -0.35786,-0.57904 -1.5991,-1.05279 -2.7583,-1.05279 -3.28664,0 -1.25166,-1.22311 2.77285,-1.66661 2.97849,-0.32822 3.55413,-0.1 3.28238,1.30142 -0.39467,2.03527 -2.38608,2.89175 -3.29693,1.41798 z m 50.46738,-5.30264 c 0,-0.89767 0.47994,-1.92873 1.06653,-2.29127 1.71501,-1.05993 1.88329,-0.11074 0.35171,1.98382 -1.1861,1.62209 -1.41824,1.67241 -1.41824,0.30745 z m 125,-1.66836 c 0,-1.60502 -0.23399,-3.52797 -0.51997,-4.27323 -0.32038,-0.83489 0.58013,-1.77025 2.346,-2.43679 3.64621,-1.37629 5.23665,-7.12155 2.52112,-9.10719 -0.93563,-0.68415 -1.33489,-1.58606 -0.88724,-2.00425 0.44764,-0.41818 1.01479,-0.19783 1.26033,0.48967 0.24553,0.6875 1.08393,1.25 1.86309,1.25 1.02957,0 1.41667,1.33951 1.41667,4.90217 0,4.47533 -0.24493,4.98756 -2.81289,5.88276 -2.5129,0.876 -2.76785,1.36634 -2.39059,4.59782 0.33072,2.83288 0.0733,3.61725 -1.18711,3.61725 -1.11154,0 -1.60941,-0.90274 -1.60941,-2.91821 z m -20,0.64463 c 0,-0.87096 0.70369,-2.28725 1.56376,-3.14732 0.86006,-0.86007 1.29535,-1.99805 0.9673,-2.52884 -0.32805,-0.5308 0.76826,-1.6708 2.43624,-2.53335 2.3235,-1.20153 3.0327,-1.26774 3.0327,-0.28314 0,0.70683 -0.9,1.8472 -2,2.53416 -1.1,0.68696 -2,1.85046 -2,2.58556 0,0.73509 -0.9,2.15102 -2,3.14651 -1.72936,1.56505 -2,1.59569 -2,0.22642 z m -3,-4.22642 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m -163.5,-1.5 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -8.5,-4 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 74.95827,-1.92202 c 1.70867,-3.19269 4.01443,-5.02569 5.57067,-4.4285 2.26943,0.87086 1.75945,1.98842 -1.52894,3.35052 -1.65,0.68345 -3,1.63805 -3,2.12132 0,0.48327 -0.46583,0.87868 -1.03518,0.87868 -0.71131,0 -0.71336,-0.60134 -0.007,-1.92202 z m 104.04173,-7.01896 c 0,-1.13246 0.45,-2.05902 1,-2.05902 0.55,0 1,0.64844 1,1.44098 0,0.79254 -0.45,1.7191 -1,2.05902 -0.55,0.33992 -1,-0.30852 -1,-1.44098 z m 9,1.04797 c 0,-0.49116 0.73865,-1.17646 1.64144,-1.52289 1.37248,-0.52667 1.43434,-0.38034 0.37756,0.89301 -1.44013,1.73524 -2.019,1.91584 -2.019,0.62988 z m -167.23882,-0.68439 c -0.32111,-0.51956 0.0513,-1.8132 0.8275,-2.87476 1.51495,-2.07182 1.73989,-1.24583 0.51354,1.88578 -0.41647,1.0635 -1.01994,1.50853 -1.34104,0.98898 z m 57.23882,-0.73174 c 0,-1.40981 3.93566,-5.08853 4.66435,-4.35984 0.67803,0.67803 -1.88071,4.53803 -3.39284,5.11829 -0.69933,0.26835 -1.27151,-0.0729 -1.27151,-0.75845 z m 115.00836,0.33452 c -1.14212,-0.72134 -1.21645,-1.21729 -0.31722,-2.11652 1.41198,-1.41198 4.63925,-0.40003 4.07952,1.27917 -0.54538,1.63613 -1.98891,1.95741 -3.7623,0.83735 z m -198.75836,-2.24708 c -2.65933,-2.84513 -2.82241,-3.7783 -0.66029,-3.7783 0.87434,0 2.37997,-0.97593 3.34584,-2.16874 0.96588,-1.1928 2.38801,-2.27432 3.16029,-2.40338 0.77229,-0.12905 2.19166,-0.55126 3.15416,-0.93825 1.82709,-0.7346 2.49417,0.93241 0.79367,1.98338 -0.52598,0.32507 -0.73376,1.17102 -0.46175,1.87987 0.35621,0.92828 -0.47917,1.21215 -2.9861,1.01472 -3.32255,-0.26166 -3.49463,-0.11303 -3.78824,3.27189 l -0.30758,3.54601 z m 178.96361,0.0265 c 1.63664,-2.46491 3.78639,-3.53691 3.78639,-1.88813 0,0.59583 -0.45,1.08333 -1,1.08333 -0.55,0 -1,0.675 -1,1.5 0,0.825 -0.72989,1.5 -1.62197,1.5 -1.44603,0 -1.46387,-0.23812 -0.16442,-2.19519 z m -148.21361,0.1952 c 0,-0.55 0.675,-1 1.5,-1 0.825,0 1.5,0.45 1.5,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,-0.45 -1.5,-1 z m 174,0 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -64.25391,-2.25 c -0.65196,-1.93768 0.35299,-4.75 1.69735,-4.75 0.77582,0 1.05214,1.07676 0.76987,3 -0.4516,3.07693 -1.71843,3.97549 -2.46722,1.75 z m 29.25391,0.25 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 45,-1.53138 c 0,-1.61739 1.56262,-1.98533 2.43524,-0.5734 0.3043,0.49236 -0.11914,1.15324 -0.94098,1.46861 -0.90766,0.3483 -1.49426,-0.003 -1.49426,-0.89521 z m -183.3895,-0.89597 c 0.70939,-1.84865 3.75217,-2.16131 3.13997,-0.32265 -0.22891,0.6875 -1.16483,1.39519 -2.07983,1.57265 -1.16012,0.225 -1.48098,-0.15332 -1.06014,-1.25 z m 99.86436,0.38667 c -0.35375,-0.57237 -1.55854,-0.75015 -2.67733,-0.39506 -1.42573,0.45251 -1.90342,0.2534 -1.59705,-0.6657 0.25906,-0.77717 2.41562,-1.44038 5.29432,-1.62816 4.81903,-0.31436 4.84282,-0.30095 3.02622,1.70637 -2.04807,2.2631 -3.09727,2.51788 -4.04616,0.98255 z m -40.98296,-4.62304 c 1.30078,-3.79321 3.71027,-5.43622 4.97388,-3.39165 0.35874,0.58045 -0.0493,1.05537 -0.90676,1.05537 -1.85406,0 -2.10272,2.63915 -0.30902,3.27976 1.68561,0.602 0.7997,1.41868 -2.41387,2.22523 l -2.65978,0.66756 z m 112.5081,2.66372 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 16.07414,0.12274 c -2.94527,-0.82305 -3.8404,-2.89147 -1.62005,-3.7435 1.58866,-0.60962 5.54591,2.08454 5.54591,3.77575 0,0.94447 -0.44373,0.94082 -3.92586,-0.0323 z m -47.05883,-2.44936 c -0.0142,-2.63102 0.2303,-2.80546 3.53403,-2.52082 1.9631,0.16913 3.87428,-0.21995 4.2764,-0.8706 0.46821,-0.75758 1.24868,-0.854 2.19229,-0.27081 2.23555,1.38164 -0.19732,3.24714 -4.58186,3.51334 -2.01391,0.12227 -4.05403,0.84178 -4.5336,1.59891 -0.61601,0.97255 -0.87644,0.54694 -0.88726,-1.45002 z m 21.6952,0.32762 c -0.74121,-2.8344 0.54083,-3.22119 4.36066,-1.31561 2.95975,1.47652 3.10639,1.73459 1.37147,2.41367 -3.36553,1.31731 -5.19199,0.96743 -5.73213,-1.09806 z m -194.71051,-0.96204 c 0,-1.12143 0.62622,-2.03896 1.39159,-2.03896 0.76538,0 1.67857,-1.1434 2.02932,-2.5409 0.35075,-1.39749 1.07575,-2.27018 1.61111,-1.93931 1.1641,0.71945 -0.44384,4.15558 -3.16763,6.76917 -1.79452,1.72191 -1.86439,1.71254 -1.86439,-0.25 z m 37,-0.039 c 0,-0.55 0.675,-1 1.5,-1 0.825,0 1.5,0.45 1.5,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,-0.45 -1.5,-1 z m 150.69385,-0.63948 c -0.79893,-0.79893 0.10419,-2.36052 1.36517,-2.36052 0.51754,0 0.94098,0.675 0.94098,1.5 0,1.54641 -1.17996,1.9867 -2.30615,0.86052 z m 25.30615,-0.3919 c 0,-0.53274 0.675,-0.96862 1.5,-0.96862 0.825,0 1.5,0.17686 1.5,0.39301 0,0.21616 -0.675,0.65203 -1.5,0.96862 -0.825,0.31658 -1.5,0.13972 -1.5,-0.39301 z m -125,-2.69416 c 0,-2.31394 2.57552,-6.03228 3.52241,-5.08539 0.94765,0.94766 -0.87889,6.09642 -2.33491,6.58176 -0.65313,0.21771 -1.1875,-0.45565 -1.1875,-1.49637 z m -76,-0.27446 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 204,0.0276 c 0,-1.35555 1.7771,-2.19731 2.42516,-1.14873 0.30984,0.50134 -0.10906,1.16956 -0.9309,1.48493 -0.82184,0.3154 -1.49426,0.16411 -1.49426,-0.33617 z m -186.54112,-2.09416 c -1.07627,-1.74144 0.14952,-2.11024 1.52106,-0.45764 0.78875,0.95039 0.86462,1.52417 0.20152,1.52417 -0.58488,0 -1.36004,-0.47994 -1.72258,-1.06653 z m 7.72862,0.004 c 0.24063,-0.72188 1.02813,-1.50938 1.75,-1.75 0.75,-0.25 1.125,0.125 0.875,0.875 -0.24063,0.72187 -1.02813,1.50937 -1.75,1.75 -0.75,0.25 -1.125,-0.125 -0.875,-0.875 z m 169.47917,-0.60417 c -1.22988,-1.22988 -0.68228,-5.11336 0.8013,-5.68267 1.74402,-0.66924 3.03136,0.92271 1.50766,1.8644 -0.58134,0.35929 -0.78336,1.51538 -0.44892,2.5691 0.5903,1.85988 -0.51023,2.59898 -1.86004,1.24917 z m -190.15949,-4.08327 c 0.56824,-2.83367 0.38535,-3.25 -1.42772,-3.25 -1.18174,0 -2.07946,0.64756 -2.07946,1.5 0,1.92849 -1.40675,1.91974 -3.01557,-0.0188 -1.03151,-1.24289 -0.93478,-1.87863 0.53255,-3.5 2.13132,-2.35509 4.32329,-2.56106 5.12139,-0.48124 0.31659,0.825 1.42746,1.5 2.46862,1.5 2.36786,0 2.3587,0.21587 -0.17927,4.22583 l -2.07227,3.27417 0.65173,-3.25 z m 168.30532,0.0669 c 0.72187,-0.28887 1.58438,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 28.73021,-0.24779 c -0.68308,-1.10523 0.8944,-2.29865 1.81781,-1.37525 0.95079,0.95079 0.77359,2.30615 -0.3015,2.30615 -0.51754,0 -1.19988,-0.41891 -1.51631,-0.9309 z M 502.7645,621.60715 c 0.7606,-3.17046 1.16089,-3.80082 1.92705,-3.03467 0.81752,0.81753 -0.62172,5.78467 -1.67613,5.78467 -0.50085,0 -0.61377,-1.2375 -0.25092,-2.75 z m 101.87838,0.75 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -163.5,-1 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 155.56655,0.10769 c -0.4063,-0.65742 -0.17906,-1.86966 0.50498,-2.69388 0.94203,-1.13508 0.96291,-1.77937 0.0861,-2.65619 -1.67994,-1.67994 -1.41975,-3.44899 0.59238,-4.02754 0.9625,-0.27674 2.5375,-0.82737 3.5,-1.22362 1.34091,-0.55202 1.75,-0.22789 1.75,1.38655 0,1.20621 -0.64128,2.10699 -1.5,2.10699 -0.90022,0 -1.5,0.92321 -1.5,2.30887 0,3.05675 -2.41983,6.43888 -3.43345,4.79882 z m 16.43345,-1.16671 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -168,-2.35765 c 0,-0.87083 0.7125,-1.58333 1.58333,-1.58333 1.76593,0 1.45839,2.15276 -0.39583,2.77083 -0.65313,0.21771 -1.1875,-0.31666 -1.1875,-1.1875 z m -16.24331,-0.7722 c -0.55411,-1.61188 1.14399,-6.81113 2.22456,-6.81113 0.43208,0 0.99849,1.11369 1.25869,2.47486 0.53357,2.79115 -2.65139,6.75608 -3.48325,4.33627 z m 174.24331,0.37343 c 0,-0.525 1.16072,-1.71508 2.57939,-2.64462 2.52733,-1.65597 2.57274,-1.64315 2.25,0.63499 -0.2154,1.52046 -1.10802,2.43565 -2.57939,2.64462 -1.2375,0.17575 -2.25,-0.10999 -2.25,-0.63499 z m -5.40344,-10.02833 c -0.34605,-0.55992 -0.1419,-1.31919 0.45366,-1.68727 1.53748,-0.95021 2.52947,0.35135 1.24598,1.63484 -0.71818,0.71818 -1.27752,0.73543 -1.69964,0.0524 z m 18.03961,-2.66197 c -0.3483,-0.90766 0.003,-1.49426 0.89521,-1.49426 1.61739,0 1.98533,1.56262 0.5734,2.43524 -0.49236,0.3043 -1.15324,-0.11914 -1.46861,-0.94098 z m -11.63617,-0.99426 c 0,-0.825 0.43588,-1.5 0.96862,-1.5 0.53273,0 0.70959,0.675 0.39301,1.5 -0.31659,0.825 -0.75246,1.5 -0.96862,1.5 -0.21615,0 -0.39301,-0.675 -0.39301,-1.5 z m -195.33074,-0.22613 c -0.8122,-1.31416 0.18345,-4.27387 1.43773,-4.27387 1.04082,0 1.03976,0.76631 -0.005,3.43362 -0.47202,1.20536 -1.01172,1.52182 -1.43296,0.84025 z m 36.99773,-1.43931 c -0.7088,-2.71043 -0.27582,-3.28217 1.86379,-2.46112 1.76244,0.67631 1.65424,3.73277 -0.15346,4.33459 -0.61747,0.20556 -1.38712,-0.6375 -1.71033,-1.87347 z m 67.50332,-4.58456 c -1.39837,-2.71889 -0.27774,-4.76407 1.39889,-2.553 0.75196,0.99165 1.3815,2.3655 1.399,3.053 0.0469,1.84225 -1.75923,1.51949 -2.79789,-0.5 z m -81.17031,-2.82778 c 0,-0.56222 0.40632,-1.44972 0.90294,-1.97222 0.49661,-0.5225 1.10197,-1.85 1.34524,-2.95 0.41727,-1.88681 0.48722,-1.89625 1.23601,-0.16672 0.55753,1.28776 0.15723,2.46974 -1.34524,3.97222 -1.17642,1.17642 -2.13895,1.67894 -2.13895,1.11672 z m -19.11842,-1.17222 c -0.0651,-0.4125 -0.0705,-1.07131 -0.012,-1.46401 0.0585,-0.39271 -0.56828,-0.45511 -1.39292,-0.13866 -1.06903,0.41023 -1.32188,0.1129 -0.88101,-1.03599 0.34008,-0.88624 1.40778,-1.61134 2.37267,-1.61134 1.33207,0 1.6393,0.60175 1.27643,2.5 -0.46419,2.42826 -1.12261,3.27353 -1.36317,1.75 z m 105.75679,-11.75 c -0.31658,-0.825 -0.13972,-1.5 0.39301,-1.5 0.53274,0 0.96862,0.675 0.96862,1.5 0,0.825 -0.17686,1.5 -0.39301,1.5 -0.21616,0 -0.65203,-0.675 -0.96862,-1.5 z m -101.63837,-0.5 c 0,-0.55 0.70156,-1 1.55902,-1 0.85746,0 1.2809,0.45 0.94098,1 -0.33992,0.55 -1.04148,1 -1.55902,1 -0.51754,0 -0.94098,-0.45 -0.94098,-1 z m 20,-4 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -27,-2.94098 c 0,-0.51754 0.45,-1.2191 1,-1.55902 0.55,-0.33992 1,0.0835 1,0.94098 0,0.85746 -0.45,1.55902 -1,1.55902 -0.55,0 -1,-0.42344 -1,-0.94098 z m 16.44113,-1.64066 c -1.77628,-1.44731 -1.78556,-1.53223 -0.10934,-1 1.00748,0.3199 2.46998,0.58164 3.25,0.58164 0.78001,0 1.41821,0.45 1.41821,1 0,1.50479 -2.36919,1.20252 -4.55887,-0.58164 z m -8.36218,-5.00169 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 25.92105,-1.41667 c 0,-0.55 0.64844,-1 1.44098,-1 0.79254,0 1.7191,0.45 2.05902,1 0.33992,0.55 -0.30852,1 -1.44098,1 -1.13246,0 -2.05902,-0.45 -2.05902,-1 z m 82,-1.9349 c 0,-3.67423 1.61981,-8.0651 2.97525,-8.0651 1.41231,0 1.29058,3.33417 -0.17525,4.8 -0.91985,0.91985 -0.9254,1.4746 -0.0238,2.37621 0.85892,0.85892 0.87984,1.5333 0.0775,2.5 -1.77632,2.14041 -2.8537,1.53217 -2.8537,-1.61111 z m 3.54271,-0.996 c -0.68308,-1.10523 0.8944,-2.29865 1.81781,-1.37525 0.95079,0.95079 0.77359,2.30615 -0.3015,2.30615 -0.51754,0 -1.19988,-0.41891 -1.51631,-0.9309 z m -97.84886,-3.70858 c -0.79893,-0.79893 0.10419,-2.36052 1.36517,-2.36052 0.51754,0 0.94098,0.675 0.94098,1.5 0,1.54641 -1.17996,1.9867 -2.30615,0.86052 z m -17.53596,-4.36052 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 28.84211,0 c -0.85431,-1.5963 -0.76049,-2 0.46482,-2 0.86851,0 1.53518,0.86852 1.53518,2 0,1.1 -0.20917,2 -0.46482,2 -0.25565,0 -0.94648,-0.9 -1.53518,-2 z m -24,-6.03138 c 0,-1.08322 0.67464,-1.96862 1.5,-1.96862 0.825,0 1.5,0.62686 1.5,1.39301 0,0.76616 -0.675,1.65203 -1.5,1.96862 -1.02029,0.39152 -1.5,-0.054 -1.5,-1.39301 z m 19.9,0.53138 c -0.14668,-0.73341 -0.12187,-5.22672 0.04,-7.25 0.10393,-1.29878 0.5304,-1.03008 1.65401,1.04214 1.50599,2.77732 1.11841,6.70786 -0.6614,6.70786 -0.51293,0 -0.97761,-0.225 -1.03261,-0.5 z m -11.90814,-3.5 c 0.5858,-2.14446 1.16826,-2.45125 4.09553,-2.15722 1.87694,0.18853 3.9822,0.81201 4.67836,1.38551 1.71192,1.4103 -2.78138,3.76339 -6.64317,3.47895 -2.48684,-0.18317 -2.73431,-0.49761 -2.13072,-2.70724 z m -13.99186,0.12244 c 0,-0.61734 0.45,-1.12244 1,-1.12244 0.55,0 1,-0.62252 1,-1.38337 0,-1.6411 3.73942,-2.84727 4.58509,-1.47895 0.77207,1.24923 -1.54329,4.00619 -2.7422,3.26522 -0.51178,-0.31629 -1.58579,-0.0312 -2.38669,0.63345 -1.02557,0.85115 -1.4562,0.87661 -1.4562,0.0861 z m -1,-7.12244 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 28.66667,-0.66667 c -0.36667,-0.36666 -0.65299,-1.37916 -0.63626,-2.25 0.025,-1.3003 0.22011,-1.2571 1.09166,0.24167 1.07678,1.85169 0.76461,3.22835 -0.4554,2.00833 z m 4.87604,-2.26423 c -0.31644,-0.512 -0.11799,-1.21356 0.44098,-1.55902 0.55897,-0.34546 1.01631,0.0734 1.01631,0.9309 0,1.75653 -0.60006,2.01516 -1.45729,0.62812 z m -21.95976,-5.93489 c -0.43077,-0.697 -0.51316,-1.53733 -0.18309,-1.86741 0.89497,-0.89496 1.87077,0.4213 1.38739,1.87145 -0.33872,1.01617 -0.57427,1.01538 -1.2043,-0.004 z m -12.33295,-3.42258 c -2.9629,-1.33957 -2.86626,-2.71163 0.19098,-2.71163 2.71079,0 3.78292,1.04053 2.74304,2.66219 -0.47258,0.73696 -1.37955,0.75224 -2.93402,0.0494 z m 1.10183,-5.23715 c -0.45142,-1.17639 -0.90196,-1.2628 -1.96861,-0.37756 -1.13146,0.93903 -1.38043,0.53415 -1.36791,-2.22448 0.01,-2.2071 0.30536,-2.91497 0.85469,-2.04855 0.67798,1.06935 1.15571,1.00755 2.48468,-0.32143 2.17663,-2.17663 2.08449,-4.2283 -0.2228,-4.9606 -3.29442,-1.04561 -5.28924,-4.06672 -4.57204,-6.92427 0.36134,-1.43967 1.10634,-2.61759 1.65556,-2.61759 0.54922,0 0.75058,0.64628 0.44747,1.43618 -0.82388,2.14697 3.1131,6.56382 5.85069,6.56382 3.39657,0 3.67968,1.2116 0.90672,3.88048 -2.70966,2.60796 -3.29283,7.11952 -0.92028,7.11952 0.825,0 1.5,-0.675 1.5,-1.5 0,-0.825 0.49814,-1.5 1.10699,-1.5 0.60884,0 0.83384,0.7118 0.5,1.58179 -0.33385,0.86998 -0.60699,1.99498 -0.60699,2.5 0,1.55434 -5.02604,1.01393 -5.64817,-0.60731 z m 25.14817,0.52552 c -0.33992,-0.55 0.11008,-1 1,-1 0.88992,0 1.33992,0.45 1,1 -0.33992,0.55 -0.78992,1 -1,1 -0.21008,0 -0.66008,-0.45 -1,-1 z m -15.71999,-1.15998 c -0.85054,-2.55162 0.48691,-6.67656 2.32022,-7.15598 2.33147,-0.60969 2.42988,0.94605 0.32653,5.16232 -1.72627,3.46038 -2.07123,3.72022 -2.64675,1.99366 z m 18.21999,-3.84002 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -9.86381,-3.3359 c -1.01103,-1.21821 -0.84258,-1.85973 0.91934,-3.50121 1.18645,-1.10534 1.85776,-2.49418 1.49181,-3.0863 -0.36646,-0.59294 0.035,-1.07659 0.89364,-1.07659 0.85746,0 1.55902,-0.675 1.55902,-1.5 0,-2.00585 2.66783,-1.91598 3.81193,0.12842 0.6498,1.16113 1.11923,1.29199 1.63588,0.45602 0.39852,-0.64482 -0.007,-2.28817 -0.90006,-3.6519 -0.89355,-1.36374 -1.49484,-3.20976 -1.33619,-4.10228 0.15864,-0.89253 -0.31287,-1.8324 -1.04781,-2.0886 -0.91721,-0.31975 -1.23919,0.27491 -1.02672,1.89626 0.17024,1.29914 -0.0112,2.46227 -0.40325,2.58472 -1.60074,0.5 -3.73378,-1.04992 -3.73378,-2.71305 0,-1.10076 -0.95089,-1.95821 -2.5,-2.25434 -1.375,-0.26285 -2.5,-0.0153 -2.5,0.55009 0,0.5654 -0.23559,0.7924 -0.52354,0.50445 -0.28794,-0.28794 -0.2498,-1.23688 0.0848,-2.10875 0.44929,-1.17084 1.95846,-1.576 5.77353,-1.54999 5.88146,0.0401 7.66524,1.07867 7.66524,4.46292 0,1.303 0.9,2.93114 2,3.6181 2.11637,1.32171 2.72727,3.76793 0.94095,3.76793 -0.58246,0 -0.77401,0.46115 -0.42567,1.02478 0.34834,0.56362 0.0849,0.90112 -0.58533,0.75 -0.67027,-0.15113 -1.62851,1.23372 -2.12941,3.07745 -0.76181,2.80405 -1.26966,3.25733 -3.10565,2.77195 -1.51348,-0.40013 -2.68017,0.058 -3.75791,1.47557 -1.36485,1.79524 -1.7199,1.86678 -2.80082,0.56435 z m 7.31006,-5.19965 c 1.56532,-1.18385 1.69894,-1.71587 0.68268,-2.7182 -1.01075,-0.99689 -1.55023,-0.85786 -2.69625,0.69488 -2.61331,3.54075 -1.48798,4.67153 2.01357,2.02332 z m -15.19625,2.31506 c -2.68525,-1.29505 -2.94723,-2.77951 -0.49055,-2.77951 0.9677,0 2.32152,0.9 3.00848,2 1.3857,2.21885 0.82588,2.39216 -2.51793,0.77951 z m -0.25,-7.89475 v -3.26188 l -2.08896,2.24224 c -2.29663,2.46514 -4.23359,2.38414 -4.73436,-0.19799 -0.19771,-1.01941 0.32513,-1.66713 1.3457,-1.66713 0.91797,0 2.94646,-0.75459 4.50775,-1.67687 2.34204,-1.38348 3.11071,-1.45113 4.39328,-0.38669 0.85501,0.70959 1.22202,1.80169 0.81558,2.42687 -0.40644,0.62518 -0.73899,2.02831 -0.73899,3.11806 0,1.09009 -0.78721,2.1352 -1.75,2.32333 -1.37889,0.26943 -1.75,-0.34978 -1.75,-2.91994 z m 38.52191,-6.49166 c -2.41939,-3.69247 -0.3789,-5.64666 2.4049,-2.30318 1.10366,1.32554 2.02162,2.97258 2.03992,3.66008 0.0581,2.18211 -2.67206,1.34866 -4.44482,-1.3569 z m -74.02191,0.6069 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m 88.31077,-1.33209 c -0.74276,-0.74275 -2.86569,-1.39354 -4.71763,-1.4462 -1.85194,-0.0527 -3.84551,-0.57408 -4.43015,-1.15872 -0.75065,-0.75065 0.7761,-1.06299 5.19603,-1.06299 4.33764,0 6.04808,0.3413 5.57188,1.1118 -0.37792,0.61149 -0.13144,1.45524 0.54775,1.875 0.80232,0.49586 0.87543,0.98535 0.20873,1.39739 -0.56438,0.34881 -1.63385,0.0265 -2.37661,-0.71628 z m -101.24484,-0.56124 c -0.62771,-1.01565 4.34781,-2.52626 5.27311,-1.60097 0.70379,0.70379 -1.79223,2.45664 -3.53002,2.47899 -0.65504,0.008 -1.43943,-0.38669 -1.74309,-0.87802 z m 9.43407,-0.0476 c 0,-0.51754 0.45,-1.2191 1,-1.55902 0.55,-0.33992 1,0.0835 1,0.94098 0,0.85746 -0.45,1.55902 -1,1.55902 -0.55,0 -1,-0.42344 -1,-0.94098 z m 36.8125,-2.74213 c 0.72187,-0.28888 1.58438,-0.25335 1.91667,0.079 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28495 -0.60417,-0.60417 z M 822.74482,692.8572 c 0.0561,-1.1 0.16857,-3.2375 0.25,-4.75 0.10793,-2.00461 0.67417,-2.75 2.08904,-2.75 1.06754,0 2.20263,-0.42334 2.52241,-0.94077 0.34488,-0.55802 -0.85163,-0.70821 -2.94098,-0.36915 -3.73518,0.60613 -4.60309,-0.54831 -2.02241,-2.69008 1.7575,-1.4586 1.9663,-3 0.40638,-3 -0.60149,0 -1.32897,0.9 -1.61663,2 -0.5729,2.19077 -0.75085,2.25111 -4.03975,1.36971 -1.2375,-0.33163 -2.25,-1.22549 -2.25,-1.98634 0,-2.10654 -1.69714,-1.6495 -2.28975,0.61663 -0.28766,1.1 -0.11514,2 0.38337,2 1.28167,0 1.12748,3.3789 -0.21548,4.72186 -0.61702,0.61702 -1.85452,0.89804 -2.75,0.62449 -1.38367,-0.42268 -1.37161,-0.3319 0.0803,0.60459 2.09352,1.35032 1.25609,4.04906 -1.25644,4.04906 -2.02966,0 -3.27398,1.34472 -2.2198,2.39889 0.37282,0.37282 4.07308,0.54809 8.22281,0.38948 6.74172,-0.25767 7.55581,-0.50129 7.6469,-2.28837 z m -7.60194,-5.5 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 25.5,7.14551 c 0.55,-0.35503 1.9,-0.64551 3,-0.64551 1.31273,0 2.10981,-0.77318 2.31955,-2.25 0.17575,-1.2375 0.70611,-2.25 1.17857,-2.25 1.14782,0 4.00188,-2.90366 4.00188,-4.07143 0,-0.51071 -0.68625,-0.92857 -1.525,-0.92857 -0.89444,0 -1.77309,-1.24044 -2.125,-3 -0.68353,-3.41766 -1.9298,-3.89928 -2.82134,-1.09031 -0.33336,1.05034 -1.29798,2.4839 -2.1436,3.1857 -1.25298,1.03989 -1.69433,1.02223 -2.38506,-0.0954 -0.70039,-1.13325 -1.12128,-1.14423 -2.42378,-0.0632 -1.86744,1.54983 -2.06607,5.1734 -0.37622,6.86325 1.87565,1.87565 -0.59106,3.95027 -2.65762,2.23517 -1.23246,-1.02285 -1.84379,-1.02991 -3.04238,-0.0352 -1.26523,1.05005 -1.5,0.85401 -1.5,-1.25256 0,-2.00209 -0.49947,-2.49744 -2.51824,-2.49744 -3.1076,0 -4.33375,1.6937 -2.12216,2.93137 0.90222,0.5049 1.6404,1.56029 1.6404,2.34529 0,1.09282 1.46459,1.40819 6.25,1.34582 3.4375,-0.0448 6.7,-0.37194 7.25,-0.72697 z m -0.73752,-2.71636 c -0.65119,-0.65119 3.10146,-6.42915 4.17558,-6.42915 0.30907,0 0.56194,1.4625 0.56194,3.25 0,2.50974 -0.46492,3.31655 -2.04115,3.54218 -1.12263,0.1607 -2.336,-0.003 -2.69637,-0.36303 z m 11.23752,1.07085 c 0,-2.94132 -0.77526,-3.16427 -2.60795,-0.75 -1.85757,2.44704 -1.70736,3.25 0.60795,3.25 1.46667,0 2,-0.66667 2,-2.5 z m -277.5,-2.05639 c 7.45097,-1.27106 10.4111,-2.21894 11.61279,-3.71857 1.66951,-2.08348 4.41218,-1.53548 3.55072,0.70944 -0.47895,1.24815 1.70598,1.75276 4.19911,0.96979 1.09061,-0.34251 1.11607,-0.72502 0.12756,-1.9161 -0.938,-1.13022 -0.94791,-1.48817 -0.0412,-1.48817 1.57328,0 4.12855,2.58914 3.33673,3.38095 -0.34047,0.34048 0.13096,0.61905 1.04762,0.61905 0.91667,0 1.66667,-0.45 1.66667,-1 0,-0.55 0,-1.3375 0,-1.75 0,-0.4125 -0.53807,-0.75 -1.19572,-0.75 -0.65765,0 -2.17996,-0.87668 -3.38291,-1.94818 l -2.18719,-1.94819 2.29064,-1.80181 c 3.16344,-2.48836 5.86102,-2.38527 5.18543,0.19818 -0.61826,2.36424 -0.0929,2.52553 1.86118,0.57143 1.82893,-1.82893 1.8083,-2.57143 -0.0714,-2.57143 -0.825,0 -1.5,-0.70714 -1.5,-1.57143 0,-2.23409 -2.78058,-4.72675 -4.5257,-4.05708 -0.81086,0.31116 -1.4743,1.02986 -1.4743,1.59713 0,0.56726 -0.40478,1.03138 -0.89951,1.03138 -0.49473,0 -3.30723,1.63447 -6.25,3.63216 -6.93423,4.70727 -17.27281,9.67919 -24.8408,11.94616 -6.60404,1.97822 -8.22507,3.69281 -2.25969,2.39011 2.0625,-0.4504 8.25,-1.58657 13.75,-2.52482 z m -43.5,1.55639 c -0.825,-0.53316 -1.95,-0.96937 -2.5,-0.96937 -0.55,0 -0.325,0.43621 0.5,0.96937 0.825,0.53316 1.95,0.96937 2.5,0.96937 0.55,0 0.325,-0.43621 -0.5,-0.96937 z m -6.26428,-1.25 c -0.23703,-0.6875 -1.59091,-1.23487 -3.00862,-1.21638 -1.41772,0.0185 -2.38888,-0.27186 -2.15813,-0.64522 0.23075,-0.37336 -0.21563,-0.92257 -0.99195,-1.22047 -0.77633,-0.29791 -1.66625,0.12221 -1.97761,0.9336 -0.35383,0.92208 0.27132,1.81204 1.66724,2.37347 3.37541,1.35755 6.97155,1.23248 6.46907,-0.225 z m 132.26428,-1.69098 c 0,-1.52634 -2.23727,-2.46636 -5.31232,-2.23205 -1.96301,0.14958 -2.72236,-0.18345 -2.40362,-1.05416 0.25627,-0.70004 0.95875,-1.16479 1.56108,-1.03276 0.60233,0.13202 1.56065,-0.62976 2.1296,-1.69285 1.03495,-1.93383 0.93712,-2.34328 -2.52,-10.5472 -0.69531,-1.65 -2.47936,-5.925 -3.96456,-9.5 -2.74149,-6.59897 -4.2836,-9.27516 -3.07373,-5.33416 0.89908,2.92865 -1.32732,4.17653 -3.10764,1.74181 -1.19615,-1.63583 -1.5183,-1.69145 -2.33298,-0.40278 -0.51986,0.82232 -0.9521,2.70607 -0.96052,4.18611 -0.0167,2.93309 -1.57189,4.41409 -4.18455,3.98489 -1.20279,-0.1976 -1.52957,0.25986 -1.16943,1.63705 0.30569,1.16895 -0.11407,2.14683 -1.08076,2.51779 -0.86931,0.33359 -1.58057,0.11554 -1.58057,-0.48454 0,-0.73972 -0.46388,-0.70607 -1.44056,0.1045 -0.79231,0.65756 -1.21644,1.77959 -0.94253,2.4934 0.27392,0.71382 -0.21986,1.57333 -1.09729,1.91003 -2.17744,0.83556 -3.0599,-1.8729 -1.63159,-5.0077 0.87922,-1.92967 0.87186,-2.43303 -0.0312,-2.13202 -0.65016,0.21672 -1.31135,1.04464 -1.4693,1.83983 -0.15795,0.79518 -0.58726,2.45829 -0.95401,3.69579 -0.44254,1.49326 -0.24425,2.25 0.58958,2.25 0.69101,0 1.82326,0.77525 2.51611,1.72278 1.10783,1.51504 1.56783,1.55788 3.815,0.35523 1.4054,-0.75215 3.2767,-2.88784 4.15845,-4.74599 0.88174,-1.85814 1.99062,-3.13899 2.46416,-2.84633 1.31162,0.81063 -1.81386,6.3278 -3.9729,7.01306 -2.57366,0.81684 -1.42572,3.50125 1.49725,3.50125 1.86044,0 2.26264,0.51314 2.15544,2.75 -0.0725,1.5125 -0.58738,3.0875 -1.14421,3.5 -0.64304,0.47636 -0.46514,1.10927 0.48757,1.73469 1.92511,1.26375 23,1.33186 23,0.0743 z m -20,-6.61804 c 0,-0.85746 0.45,-1.2809 1,-0.94098 0.55,0.33992 1,1.04148 1,1.55902 0,0.51754 -0.45,0.94098 -1,0.94098 -0.55,0 -1,-0.70156 -1,-1.55902 z m 4.68333,-7.09098 c -0.37583,-0.37583 -0.68333,-1.60476 -0.68333,-2.73095 0,-1.93053 0.0976,-1.95 1.70714,-0.34048 1.16457,1.16456 1.38175,2.03254 0.68334,2.73095 -0.5631,0.5631 -1.33131,0.71631 -1.70715,0.34048 z m -0.68333,-9.2212 c 0,-1.44923 0.50715,-1.80894 2,-1.41855 1.1,0.28766 2,0.6797 2,0.8712 0,0.1915 -0.9,0.82985 -2,1.41855 -1.6808,0.89953 -2,0.76049 -2,-0.8712 z m 167,21.8712 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m 26.54901,-5.75 c 0.269,-1.2375 1.08578,-2.25 1.81505,-2.25 2.22118,0 4.82623,-3.67068 4.37706,-6.16753 -0.39295,-2.18435 -0.4982,-2.12986 -1.65746,0.85808 -0.77975,2.00978 -2.04202,3.30508 -3.41076,3.5 -1.1951,0.1702 -2.04433,0.66302 -1.88719,1.09516 0.15715,0.43215 -0.40446,1.4759 -1.24801,2.31945 -1.15313,1.15313 -1.27734,2.01281 -0.50053,3.46429 0.56826,1.0618 0.76581,1.93055 0.439,1.93055 -0.32681,0 -0.2307,0.5625 0.21358,1.25 0.54578,0.84457 0.89898,0.43914 1.08897,-1.25 0.15465,-1.375 0.50128,-3.5125 0.77029,-4.75 z m -204.69162,3.97082 c -1.08141,-0.21469 -1.46863,-0.99143 -1.13337,-2.27346 0.53583,-2.04904 -1.13871,-2.70343 -2.26296,-0.88435 -0.88745,1.43592 2.51831,5.07113 3.92259,4.18687 0.7263,-0.45735 0.54243,-0.8169 -0.52626,-1.02906 z m -160.94072,-2.50379 c -0.22917,-0.15563 -1.20417,-0.88573 -2.16667,-1.62244 -1.49798,-1.14658 -1.75,-1.10583 -1.75,0.28297 0,0.99737 0.83473,1.62244 2.16667,1.62244 1.19166,0 1.97916,-0.12734 1.75,-0.28297 z m 150.08333,-4.65801 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 192.5,-2.05902 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -93.25,-3.61599 c 0.9625,-0.3395 1.75,-1.23979 1.75,-2.00064 0,-0.76085 0.45,-1.38337 1,-1.38337 0.55,0 1,0.93575 1,2.07946 0,1.82295 0.40089,1.99312 3.25,1.37956 4.07199,-0.87691 9.12826,-3.41409 8.35161,-4.19075 -1.10891,-1.1089 1.65049,-3.26827 4.17644,-3.26827 3.33255,0 9.64724,-4.75978 8.40895,-6.33835 -0.50117,-0.63891 -1.20685,-2.39915 -1.56816,-3.91165 -0.62033,-2.59672 -0.46408,-2.75 2.80309,-2.75 4.1198,0 5.03538,-1.1762 5.05975,-6.5 0.0132,-2.88075 0.43804,-4 1.51832,-4 1.03948,0 1.41163,0.84429 1.21215,2.75 -0.15832,1.5125 0.17918,2.75 0.75,2.75 0.95629,0 1.13426,-0.44204 1.45524,-3.61446 0.062,-0.61296 0.60318,-1.73796 1.20259,-2.5 1.26818,-1.61228 3.38002,-7.5696 3.38002,-9.53476 0,-0.74293 -0.5625,-1.23828 -1.25,-1.10078 -0.70169,0.14034 -1.11976,-0.5235 -0.95309,-1.51338 0.1633,-0.96986 -0.3992,-2.03051 -1.25,-2.35699 -2.5267,-0.96959 -1.76175,-2.37963 1.29096,-2.37963 2.67754,0 2.84762,-0.25792 3.01055,-4.56554 0.10815,-2.8593 -0.20498,-4.33213 -0.83786,-3.94098 -0.55581,0.3435 -1.01056,-0.077 -1.01056,-0.93446 0,-0.85746 0.45,-1.55902 1,-1.55902 1.11241,0 1.32857,-2.98018 0.39301,-5.41821 -0.33384,-0.86999 -1.0354,-1.58179 -1.55902,-1.58179 -0.52361,0 -0.67391,0.45 -0.33399,1 0.33992,0.55 -0.26038,1 -1.33399,1 -2.47729,0 -3.21403,1.92924 -2.47526,6.48174 0.43074,2.65434 0.15816,3.91435 -1.04004,4.80767 -0.89307,0.66582 -1.92619,2.74862 -2.29581,4.62843 -0.57395,2.91899 -0.42996,3.32494 0.98653,2.78138 2.17716,-0.83545 2.09601,-0.0851 -0.26484,2.44895 -1.05788,1.13549 -2.36072,1.79426 -2.89522,1.46393 -0.53449,-0.33034 -1.22983,0.0718 -1.5452,0.89364 -0.8477,2.20906 -2.95594,1.82508 -2.36599,-0.43092 0.33935,-1.29768 0.0808,-1.76301 -0.79312,-1.42764 -0.71311,0.27364 -1.56131,1.47747 -1.88488,2.67518 -0.603,2.23197 -6.3808,5.58143 -8.44249,4.8942 -0.63233,-0.21077 -1.14969,-1.02073 -1.14969,-1.79989 0,-2.48775 -2.53413,-1.52721 -5.849,2.21699 -1.76935,1.99852 -3.53965,3.30978 -3.934,2.91392 -0.39435,-0.39585 0.29654,-1.54148 1.53532,-2.54583 1.38371,-1.12185 2.01734,-2.43844 1.64301,-3.41392 -0.39271,-1.02338 -0.0663,-1.58783 0.91823,-1.58783 1.64164,0 3.2798,-5.23091 2.19025,-6.99384 -0.35441,-0.57345 0.32394,-2.60943 1.50746,-4.5244 1.19554,-1.93442 1.65724,-3.48176 1.0389,-3.48176 -0.61211,0 -1.3616,0.648 -1.66552,1.44001 -0.30392,0.792 -1.64353,2.15482 -2.9769,3.02848 -2.34491,1.53644 -2.32578,1.42834 0.58397,-3.30061 1.65455,-2.68899 3.00828,-5.40181 3.00828,-6.02848 0,-0.62667 0.52707,-1.1394 1.17126,-1.1394 0.64419,0 2.06289,-0.7875 3.15267,-1.75 1.93576,-1.70968 1.96704,-1.67558 1.35768,1.4803 -0.50095,2.59444 -0.22882,3.44166 1.38251,4.30402 1.667,0.89215 1.89524,1.69867 1.34977,4.76969 -0.83066,4.6767 -1.72345,5.63587 -4.07461,4.37757 -1.52472,-0.81601 -2.08821,-0.55283 -3.01327,1.40736 -0.62581,1.32608 -0.84003,2.41106 -0.47604,2.41106 0.364,0 1.25134,1.33185 1.97188,2.95967 l 1.31008,2.95966 3.03763,-3.45966 c 1.67069,-1.90282 3.59378,-3.45967 4.27352,-3.45967 1.83277,0 3.51809,-4.31799 2.43837,-6.24736 -0.5652,-1.00994 -0.52386,-1.85561 0.10984,-2.24726 0.55883,-0.34537 0.75502,-1.66796 0.43599,-2.93909 -0.47674,-1.89949 -0.0935,-2.43324 2.15148,-2.9967 1.78499,-0.44801 3.00545,-0.24236 3.52201,0.59346 1.04965,1.69837 1.64228,0.96666 2.15686,-2.66305 0.4444,-3.13468 1.21243,-5.5111 2.97033,-9.19077 1.5348,-3.21267 0.0905,-10.14206 -2.83979,-13.6245 -2.21057,-2.62711 -2.33598,-3.13443 -0.96455,-3.90192 0.86701,-0.48521 1.57638,-1.56139 1.57638,-2.39152 0,-0.83013 -0.45,-1.23121 -1,-0.89129 -0.55,0.33992 -1,-0.0138 -1,-0.786 0,-2.37326 -3.30427,-4.55015 -7.4227,-4.89016 -3.71131,-0.30639 -6.52901,-2.82384 -3.16063,-2.82384 2.44262,0 1.88282,-1.39187 -1.32096,-3.28439 -3.26555,-1.92901 -4.21067,-2.12945 -3.84571,-0.81561 0.1375,0.495 -0.2,0.8325 -0.75,0.75 -0.55,-0.0825 -1,-0.825 -1,-1.65 0,-2.20774 -11.39394,-8.01324 -14.70562,-7.49288 -2.22316,0.34932 -2.59098,0.11911 -2.06276,-1.291 0.56164,-1.49935 0.42972,-1.54276 -1.04439,-0.34368 -1.49723,1.2179 -1.68723,1.09683 -1.68723,-1.07514 0,-1.82133 -1.40176,-3.45184 -5.47843,-6.37245 -3.01314,-2.15867 -5.48814,-4.26235 -5.5,-4.67485 -0.0318,-1.10426 -3.02157,-0.91528 -3.02157,0.19098 0,0.51754 0.45734,1.22364 1.01631,1.5691 1.44556,0.8934 0.0583,2.73251 -1.58544,2.10177 -0.75175,-0.28848 -1.63279,-0.0942 -1.95786,0.43182 -1.18745,1.92134 -2.08226,0.8788 -1.87054,-2.17935 0.15084,-2.17875 -0.51831,-3.87107 -2.19269,-5.54545 -1.32538,-1.32538 -2.40978,-2.78422 -2.40978,-3.24188 0,-0.45766 -0.64899,-1.37071 -1.4422,-2.02902 -0.7932,-0.6583 -1.5807,-2.6259 -1.75,-4.37244 -0.45201,-4.66328 -3.39382,-4.35047 -3.05156,0.32447 0.18412,2.51497 -0.0117,3.086 -0.69563,2.02896 -1.55953,-2.41015 -2.50919,-0.23565 -1.07082,2.45195 1.02169,1.90906 1.86379,2.34296 3.66817,1.89009 1.94305,-0.48768 2.34204,-0.19945 2.34204,1.69185 0,1.25382 0.76223,3.12192 1.69384,4.15134 1.60346,1.7718 1.57678,1.90228 -0.5,2.44537 -2.94147,0.76921 -2.78367,1.36976 1.19379,4.54338 3.36066,2.68148 3.40177,2.68725 5.17634,0.72638 1.11165,-1.22837 2.14327,-1.62208 2.72527,-1.04008 1.26528,1.26528 0.0314,3.03835 -2.88638,4.14769 -1.44518,0.54946 -2.40286,1.72055 -2.40286,2.93832 0,1.11361 -0.49878,2.02475 -1.10841,2.02475 -0.67656,0 -0.86912,-0.9534 -0.49423,-2.44708 0.38583,-1.53728 0.11926,-2.7456 -0.717,-3.25 -0.73215,-0.44161 -1.62062,-1.59042 -1.97439,-2.55292 -0.35376,-0.9625 -1.38478,-1.75 -2.29116,-1.75 -1.68254,0 -1.64575,-2.17084 0.10787,-6.3654 0.66896,-1.60012 0.45242,-1.76147 -1.52268,-1.1346 -1.96204,0.62273 -2.19678,0.45519 -1.58737,-1.13291 0.53953,-1.40601 0.0241,-1.20937 -2.09873,0.80065 -1.54764,1.4654 -3.4889,2.75096 -4.3139,2.8568 -2.59938,0.33347 -6,-1.19909 -6,-2.70403 0,-0.91135 -0.79777,-1.33052 -2.15705,-1.13337 -3.13122,0.45415 -3.46129,-2.00155 -0.42423,-3.15624 2.68106,-1.01934 3.01049,-2.14521 1.61833,-5.5309 -0.74645,-1.81534 -0.88737,-1.84094 -1.52627,-0.2772 -0.38713,0.94754 -2.2404,2.01105 -4.11838,2.36336 -1.87797,0.35231 -3.69077,1.0876 -4.02845,1.63397 -0.37306,0.60362 -0.94093,0.46433 -1.44731,-0.35501 -0.62992,-1.01924 -1.11519,-1.06657 -1.98787,-0.19389 -1.47995,1.47995 -0.3207,3.4164 1.60326,2.67811 1.84358,-0.70745 1.89005,0.50661 0.0985,2.57192 -0.75323,0.86831 -1.80098,2.92874 -2.32833,4.57874 -0.61436,1.92223 -1.739,3.1148 -3.13049,3.31955 -2.75843,0.40589 -2.85178,-1.46892 -0.11637,-2.3371 1.66519,-0.52851 1.99735,-1.348 1.75,-4.31739 -0.18987,-2.27933 -0.77792,-3.57054 -1.5553,-3.41506 -2.38728,0.47746 -1.2355,-3.43558 1.35922,-4.61781 1.89099,-0.86159 2.46737,-1.73131 2.09388,-3.15952 -0.28344,-1.08387 -0.0573,-2.25378 0.50258,-2.59979 1.39511,-0.86222 2.87123,1.73322 2.20445,3.87604 -0.44398,1.42679 -0.017,1.69121 2.31805,1.43558 3.87057,-0.42374 5.27182,-1.4271 5.27182,-3.7749 0,-1.0848 0.675,-2.23139 1.5,-2.54797 2.08215,-0.799 1.88681,-2.5436 -0.25,-2.23284 -0.9625,0.13997 -2.73435,-0.0781 -3.93745,-0.48468 -1.2031,-0.40655 -3.1156,-0.26779 -4.25,0.30835 -1.1344,0.57615 -2.96255,1.50135 -4.06255,2.05601 -2.34933,1.18462 -2.52258,0.26662 -0.46351,-2.45601 0.81009,-1.07115 1.25605,-2.64615 0.99103,-3.5 -0.26503,-0.85385 -0.0339,-2.22746 0.5136,-3.05246 0.8679,-1.30777 1.12765,-1.27573 2.02687,0.25 1.07519,1.82432 3.93201,2.42866 3.93201,0.83179 0,-2.0194 -1.2874,-4.08179 -2.54797,-4.08179 -2.04957,0 -2.66316,-1.73697 -1.42854,-4.0439 0.77043,-1.43955 1.48145,-1.78581 2.29625,-1.11824 1.14366,0.93701 3.99178,1.5132 6.31363,1.27729 1.39831,-0.14207 2.49285,-3.91911 1.34185,-4.63047 -0.46036,-0.28451 -1.09357,-0.10221 -1.40712,0.40513 -0.87661,1.41832 -4.56814,0.0752 -4.56814,-1.66205 0,-2.73982 4.87552,-8.21276 6.69446,-7.51476 1.20656,0.463 1.49268,0.21706 1.05981,-0.91097 -0.72384,-1.88629 4.20209,-5.80203 7.29886,-5.80203 1.29311,0 2.34022,-0.78815 2.65712,-2 0.28766,-1.1 1.33303,-2 2.32305,-2 0.99002,0 1.95003,-0.43981 2.13337,-0.97736 0.18333,-0.53754 1.79583,-1.26879 3.58333,-1.625 2.59903,-0.51792 3.25,-0.32216 3.25,0.97736 0,0.89375 0.45,1.625 1,1.625 1.35024,0 1.26212,-1.33788 -0.18333,-2.78333 -1.54962,-1.54962 -1.11109,-1.85704 3.80739,-2.66905 3.97426,-0.65613 4.10706,-0.59189 3.65583,1.76854 -0.55609,2.90903 1.2164,4.34677 3.26391,2.64748 1.02557,-0.85114 1.4562,-0.8766 1.4562,-0.0861 0,0.61735 -0.45,1.12245 -1,1.12245 -0.55,0 -1,0.69083 -1,1.53518 0,1.19119 0.42014,1.31034 1.87499,0.53172 2.84122,-1.52057 15.40585,-2.77234 18.70918,-1.86392 2.41432,0.66394 3.25982,0.38993 4.91583,-1.59313 1.89324,-2.26714 2.33863,-2.3474 8.34366,-1.50355 3.48901,0.49029 6.72365,1.12628 7.18808,1.41331 1.17903,0.72868 8.95825,1.87045 11.96512,1.75614 1.37328,-0.0522 2.75317,0.31979 3.06642,0.82664 0.33851,0.54772 1.9046,0.45617 3.86053,-0.22567 2.65089,-0.92411 3.46159,-0.87782 4.16826,0.23802 0.64906,1.02486 0.88129,1.05527 0.89262,0.11689 0.0103,-0.85287 1.57135,-1.24873 4.76531,-1.20841 2.6125,0.033 5.425,-0.0297 6.25,-0.13917 5.33898,-0.70873 9.83381,2.77951 8.39913,6.51822 -0.59118,1.54059 -0.79559,1.54892 -2.39913,0.0977 -1.44788,-1.31031 -1.84527,-1.3456 -2.28382,-0.20277 -0.35134,0.91557 -1.57702,1.23004 -3.62355,0.92967 -2.36657,-0.34734 -3.09263,-0.0751 -3.09263,1.1596 0,1.12611 0.90621,1.6135 3,1.6135 1.65,0 3,0.45 3,1 0,2.29197 5.14178,0.82698 8.48181,-2.41663 4.19658,-4.07543 4.58446,-6.58337 1.01819,-6.58337 -2.52978,0 -3.34128,-1.36203 -1.49233,-2.50474 0.55422,-0.34253 1.76127,0.13082 2.68233,1.05188 1.39394,1.39395 1.85362,1.44654 2.74233,0.31376 1.33605,-1.70299 4.39854,-1.7526 5.42737,-0.0879 1.46152,2.3648 9.1403,-2.89059 9.1403,-6.25567 0,-0.98125 -82.3773,0.65236 -83.65435,1.65894 -0.63489,0.50042 -2.32239,0.6167 -3.75,0.25839 -1.45091,-0.36416 -2.59565,-0.22593 -2.59565,0.31342 0,0.53069 -1.31622,0.91697 -2.92493,0.85841 -2.75713,-0.10037 -2.8311,-0.21041 -1.28932,-1.91802 0.89958,-0.99634 2.4408,-1.60097 3.42493,-1.34362 2.48549,0.64997 2.29622,-2.00319 -0.23972,-3.36038 -3.1441,-1.68268 -17.80143,-2.33844 -24.43398,-1.09317 -16.76839,3.14829 -31.62422,14.96136 -40.1698,31.94228 -2.79682,5.55755 -3.30154,7.55599 -3.03435,12.01433 0.2253,3.75925 -0.0736,5.49913 -1.00616,5.85699 -0.72967,0.28 -1.32667,1.31881 -1.32667,2.30848 0,1.30706 0.54722,1.65629 2,1.27638 2.3392,-0.61172 2.86617,2.16389 0.57756,3.04211 -1.9422,0.7453 -2.4115,4.91993 -0.70278,6.25162 1.13908,0.88773 1.17257,1.74303 0.18536,4.7343 -1.35807,4.115 -0.57191,8.09258 1.44641,7.31808 0.80693,-0.30965 1.98778,0.88609 3.01703,3.05507 1.02391,2.15773 2.83244,3.99464 4.58379,4.6557 3.39552,1.28166 3.64839,2.92579 0.90319,5.87241 -1.09419,1.17448 -1.76454,2.36031 -1.48967,2.63519 0.27488,0.27487 1.0695,-0.27937 1.76582,-1.23166 0.80765,-1.10452 1.90575,-1.48594 3.03284,-1.05344 1.56267,0.59965 1.59732,0.86589 0.29995,2.30443 -1.23608,1.37057 -1.25576,1.91418 -0.12513,3.45549 1.11694,1.52262 1.70836,1.63282 3.53023,0.65778 1.78912,-0.9575 2.0744,-1.74183 1.56321,-4.29779 -0.45508,-2.27537 -0.3256,-2.82683 0.47557,-2.02566 0.7965,0.7965 1.8971,0.80035 3.98059,0.0139 3.38647,-1.27825 5.22516,-0.0785 2.70446,1.7647 -2.14503,1.56849 -2.24914,3.89756 -0.24843,5.558 0.825,0.68469 1.5522,2.20229 1.616,3.37244 0.0921,1.68987 0.21008,1.76755 0.57333,0.37756 0.50609,-1.93662 1.85567,-2.29523 2.81234,-0.7473 0.41211,0.66681 1.26937,0.65502 2.55902,-0.0352 2.10059,-1.1242 2.25562,-0.95539 1.33232,1.45069 -0.33384,0.86999 -1.23384,1.58179 -2,1.58179 -0.76615,0 -1.39301,0.9 -1.39301,2 0,2.14451 -1.46041,2.68209 -2.54015,0.93504 -0.362,-0.58573 -1.85133,-0.93982 -3.30962,-0.78685 -1.45829,0.15296 -3.24697,-0.0899 -3.97486,-0.5398 -0.84606,-0.5229 -2.2069,0.0121 -3.77275,1.48309 l -2.44932,2.30102 3.75069,3.68397 c 3.36281,3.30299 3.8823,3.51538 5.02324,2.05375 1.14602,-1.46813 1.48007,-1.35629 3.35981,1.12493 1.148,1.51533 2.5054,2.49674 3.01643,2.1809 0.51103,-0.31583 0.67026,-0.99315 0.35382,-1.50515 -0.31643,-0.51199 -0.0988,-0.9309 0.48369,-0.9309 0.58246,0 1.05902,0.80298 1.05902,1.78439 0,0.98142 1.38093,2.60013 3.06873,3.59714 2.96905,1.75386 3.11303,1.75274 4.43268,-0.0344 1.12833,-1.52806 1.59151,-1.61958 2.68127,-0.52982 1.08976,1.08976 1.01224,1.5427 -0.44878,2.62201 -1.63321,1.20653 -1.55733,1.39117 1.00856,2.454 1.52607,0.63211 4.23242,1.25221 6.01411,1.37798 2.62431,0.18526 3.23983,0.65594 3.24144,2.47869 10e-4,1.55985 0.59736,2.25 1.94297,2.25 1.06754,0 2.22364,-0.45734 2.5691,-1.01631 1.20874,-1.95579 2.51576,0.0995 1.395,2.19366 -0.86326,1.61303 -0.75612,2.40018 0.4973,3.6536 1.46349,1.4635 1.59762,1.35947 1.59762,-1.23911 0,-2.42685 0.22,-2.65415 1.52258,-1.5731 0.83742,0.69499 1.29078,1.99395 1.00747,2.88657 -0.30973,0.9759 0.34969,2.163 1.65401,2.97756 1.88295,1.17593 2.33492,1.12787 3.42599,-0.36426 0.69128,-0.94539 1.71717,-1.43441 2.27974,-1.08672 1.63392,1.00981 0.0926,3.56811 -2.14979,3.56811 -2.02939,0 -2.02866,0.0151 0.0888,1.85152 1.17415,1.01834 1.84301,2.14334 1.48635,2.5 -0.95757,0.95757 -2.35377,0.78752 -2.06515,-0.25152 0.1375,-0.495 -0.0875,-0.945 -0.5,-1 -1.03814,-0.13842 -1.0295,0.0347 0.15773,3.15732 0.57659,1.51653 1.56447,2.64153 2.1953,2.5 0.63083,-0.14152 1.35322,0.30518 1.6053,0.99268 0.68893,1.87889 -3.45096,1.53231 -4.52026,-0.37842 -0.50122,-0.89563 -1.157,-1.23088 -1.45729,-0.745 -0.86619,1.40154 3.00146,5.51381 4.86977,5.17775 0.93058,-0.16738 1.89519,0.2778 2.14358,0.98929 0.55572,1.59181 -4.8325,0.51252 -5.97882,-1.19759 -0.40408,-0.60282 -0.74597,0.47897 -0.75977,2.40397 -0.0579,8.08461 -8.88311,19.83287 -17.64984,23.49585 -8.84109,3.69404 -19.54509,2.9007 -26.73996,-1.98187 -4.10012,-2.78242 -7.47194,-2.87624 -9.42367,-0.26223 -1.69248,2.26679 -0.57682,4.31246 1.43934,2.63919 1.10083,-0.9136 1.73415,-0.92538 2.61097,-0.0486 0.87683,0.87692 0.74527,1.15771 -0.54238,1.15771 -0.935,0 -1.7,0.66154 -1.7,1.4701 0,1.07124 1.01742,1.41038 3.75,1.25 2.96614,-0.17409 3.72372,0.12917 3.62429,1.45082 -0.0691,0.91901 0.40793,1.46614 1.06015,1.21586 0.65222,-0.25028 2.90438,0.71116 5.00479,2.13654 2.10041,1.42538 4.44605,2.35095 5.21253,2.05682 0.76648,-0.29413 2.2834,0.35502 3.37092,1.44254 1.08753,1.08753 3.23761,1.97732 4.77796,1.97732 2.88067,0 8.17768,-2.01737 8.19156,-3.11976 0.004,-0.34086 1.57274,-2.40507 3.48544,-4.58713 2.77336,-3.16391 4.21449,-3.99507 7.1161,-4.10415 2.00116,-0.0752 4.32613,-0.7075 5.16661,-1.40503 1.3148,-1.09119 1.42879,-0.95522 0.81651,0.97391 -0.8934,2.81484 0.94781,2.99884 2.42314,0.24216 1.47692,-2.75965 3,-2.5058 3,0.5 0,1.55556 -0.56667,2.5 -1.5,2.5 -1.81631,0 -1.99117,1.63514 -0.25,2.33772 0.84762,0.34202 0.76714,0.51956 -0.25,0.55153 -0.825,0.0259 -2.35379,-0.59913 -3.39732,-1.38902 -2.32668,-1.76116 -3.89058,-0.98268 -3.09044,1.53834 0.32855,1.03518 -0.19669,3.0764 -1.17633,4.57152 -1.37115,2.09264 -1.4394,2.55367 -0.30292,2.04622 0.80686,-0.36026 2.25451,-0.9328 3.21701,-1.2723 z m -24.48422,-4.41332 c 1.79617,-1.63388 4.27117,-2.9524 5.5,-2.93005 2.04635,0.0372 1.94309,0.28949 -1.22801,3 -1.90422,1.62765 -4.37922,2.94617 -5.5,2.93005 -1.78297,-0.0256 -1.62943,-0.40076 1.22801,-3 z m 40.85228,-9.13041 c -0.72088,-3.60437 -0.83713,-3.37079 2.13194,-4.28344 1.71852,-0.52825 2.25,-0.29246 2.25,0.99822 0,1.38869 0.26731,1.46798 1.5,0.44494 1.2532,-1.04007 1.5,-0.89568 1.5,0.87756 0,1.16734 -0.6199,2.12244 -1.37756,2.12244 -0.75765,0 -1.93775,0.675 -2.62244,1.5 -1.86144,2.2429 -2.68196,1.84022 -3.38194,-1.65972 z m -16.61806,-3.64996 c 0,-0.53699 0.7126,-1.24979 1.58356,-1.58401 0.97391,-0.37373 1.43108,-0.15024 1.1875,0.58051 -0.49828,1.49484 -2.77106,2.31789 -2.77106,1.0035 z m 11.52227,-1.26049 c 0.50096,-1.57837 0.14718,-2.20351 -1.48917,-2.63142 -1.24333,-0.32514 -1.9335,-1.11557 -1.64059,-1.8789 0.32119,-0.83699 -0.023,-1.11481 -0.94344,-0.76159 -0.98287,0.37716 -1.44907,-0.12181 -1.44907,-1.55093 0,-1.15885 0.47656,-2.10699 1.05902,-2.10699 0.58246,0 0.7972,-0.42362 0.47721,-0.94138 -0.32,-0.51777 0.66594,-0.85527 2.19098,-0.75 2.31862,0.16003 2.82328,-0.24519 3.08105,-2.47399 0.16954,-1.46595 0.98646,-2.92562 1.81539,-3.2437 1.477,-0.56678 1.40512,0.44129 -0.36787,5.15907 -0.59448,1.58187 0.2354,1.58471 2.75779,0.009 1.47312,-0.91998 2.44291,-0.95547 3.75294,-0.13734 1.3393,0.83641 2.07932,0.76835 3.05995,-0.28142 1.58036,-1.69178 3.53008,-0.7122 2.73037,1.3718 -0.41574,1.08341 -0.12094,1.33422 1.04317,0.88751 1.16451,-0.44686 1.45893,-0.19594 1.04273,0.88866 -0.39268,1.02329 0.0367,1.51134 1.32964,1.51134 1.05028,0 2.19796,0.46657 2.55039,1.03683 0.4059,0.65676 -0.67218,0.94841 -2.94098,0.79562 -1.96998,-0.13222 -3.58178,-0.5988 -3.58178,-1.03639 0,-0.43758 -0.6375,-0.79561 -1.41667,-0.79561 -0.77916,0 -1.57234,-0.46704 -1.76262,-1.03787 -0.38134,-1.14403 -9.82071,7.60693 -9.82071,9.10449 0,0.51336 -0.48032,0.93338 -1.06739,0.93338 -0.62437,0 -0.79468,-0.85922 -0.41034,-2.07017 z m 4.1097,-5.01139 c 3.50619,-2.16695 4.11109,-3.34117 2.29836,-4.4615 -0.58832,-0.3636 -2.38832,0.81589 -4,2.62109 -4.22626,4.73372 -3.77302,5.22393 1.70164,1.84041 z m 14.16803,-7.11844 c 0.66,-0.66 1.2,-2.05814 1.2,-3.10699 0,-1.30512 0.48536,-1.72074 1.53785,-1.31686 0.88135,0.33821 1.785,-0.0539 2.11679,-0.91853 0.42195,-1.09958 0.92545,-1.22108 1.85688,-0.44806 0.70288,0.58334 1.66283,0.93232 2.13322,0.77553 0.47039,-0.1568 0.85526,0.13815 0.85526,0.65543 0,0.51729 -1.35,1.0794 -3,1.24912 -1.65,0.16973 -3.74713,1.20899 -4.66029,2.30948 -0.91316,1.10048 -2.01566,2.00088 -2.45,2.00088 -0.43434,0 -0.24971,-0.54 0.41029,-1.2 z m -4.92756,-29.48723 c -1.20814,-1.48525 -1.15316,-1.60496 0.45935,-1 1.00748,0.37798 2.27154,0.68723 2.80901,0.68723 0.53748,0 0.69912,0.45 0.3592,1 -0.89775,1.45258 -2.06718,1.23104 -3.62756,-0.68723 z m -21.87244,-2.70578 c 0,-0.94863 2.99338,-1.42672 3.52699,-0.56332 0.32508,0.52598 -0.33551,0.95633 -1.46797,0.95633 -1.13246,0 -2.05902,-0.17686 -2.05902,-0.39301 z m -7,-4.60699 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 34,0.24055 c 0,-1.11685 3.682,-3.22522 4.39219,-2.51503 1.46564,1.46564 0.42039,3.27448 -1.89219,3.27448 -1.375,0 -2.5,-0.34175 -2.5,-0.75945 z m -38,-2.11811 c 0,-1.16734 0.42344,-2.12244 0.94098,-2.12244 1.73246,0 2.053,1.7601 0.54801,3.00914 -1.23911,1.02837 -1.48899,0.87956 -1.48899,-0.8867 z m 16.48992,0.86125 c -0.34546,-0.55897 -1.04702,-0.75742 -1.55902,-0.44098 -0.51199,0.31643 -0.9309,0.10159 -0.9309,-0.47742 0,-1.33957 3.64951,-0.81578 5.21357,0.74828 0.91524,0.91524 0.81134,1.18643 -0.45455,1.18643 -0.90254,0 -1.92364,-0.45734 -2.2691,-1.01631 z m 26.51008,-3.02753 c 0,-0.57411 -0.74082,-0.91161 -1.64626,-0.75 -0.90544,0.16161 -1.82446,-0.21322 -2.04226,-0.83295 -0.57651,-1.6404 2.70479,-2.6046 4.31527,-1.26802 1.59256,1.32171 1.83915,3.89481 0.37325,3.89481 -0.55,0 -1,-0.46973 -1,-1.04384 z m -50.68723,-1.28795 c 0.37798,-1.00748 0.68723,-2.24498 0.68723,-2.75 0,-0.50501 0.45,-0.91821 1,-0.91821 1.59486,0 1.15747,2.62702 -0.68723,4.12756 -1.48525,1.20814 -1.60496,1.15316 -1,-0.45935 z m 9.68723,-3.66821 c 0,-0.88774 0.71398,-1.14672 2.57574,-0.93431 0.31665,0.0361 1.44165,-0.93273 2.5,-2.15301 1.43653,-1.65634 1.92426,-1.82887 1.92426,-0.6807 0,0.8459 -1.10917,2.26475 -2.46482,3.15301 -2.80865,1.8403 -4.53518,2.07443 -4.53518,0.61501 z m 24,-1.05902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 13,0.49328 c 0,-1.57407 2.22269,-4.41467 3.05288,-3.90158 1.13232,0.69981 -0.62864,4.46732 -2.08806,4.46732 -0.53065,0 -0.96482,-0.25458 -0.96482,-0.56574 z m 6,-0.43426 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -58,-2.94098 c 0,-1.61754 0.45,-3.2191 1,-3.55902 0.55,-0.33992 1,-1.43972 1,-2.44401 0,-2.17766 4.18094,-5.18023 5.8107,-4.17299 0.7819,0.48325 0.46239,1.29492 -1.004,2.55048 -2.04485,1.75086 -2.06257,1.90626 -0.35934,3.15169 1.70019,1.2432 1.67071,1.46287 -0.5779,4.30709 -3.1633,4.0012 -5.86946,4.07808 -5.86946,0.16676 z m -6,0.10765 c 0,-1.40725 1.12573,-2.05565 2.59202,-1.49298 0.76807,0.29473 1.14752,0.93873 0.84322,1.43109 -0.69797,1.12934 -3.43524,1.17865 -3.43524,0.0619 z m -7,-3.10765 c 0,-0.51754 0.45,-1.2191 1,-1.55902 0.55,-0.33992 1,0.0835 1,0.94098 0,0.85746 -0.45,1.55902 -1,1.55902 -0.55,0 -1,-0.42344 -1,-0.94098 z m 10.0318,-1.80902 c 0.0301,-2.60563 0.1072,-2.6504 1.46797,-0.85268 1.44635,1.91078 1.18393,3.60268 -0.55879,3.60268 -0.51754,0 -0.92667,-1.2375 -0.90918,-2.75 z m -21.0318,-1.30902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 34,0.059 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 18.5,-1 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -13.5,-3.05902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 5.01531,0.30902 c 0.037,-1.80974 1.87139,-3.41846 3.53311,-3.09839 1.72264,0.3318 1.72544,0.43172 0.0587,2.09839 -1.8091,1.80908 -3.61865,2.31287 -3.59185,1 z m 17.22846,-2.91436 c -1.57558,-0.63521 -0.61804,-2.33564 1.31525,-2.33564 0.79254,0 1.44098,0.675 1.44098,1.5 0,1.54198 -0.57319,1.71576 -2.75623,0.83564 z m -7.74377,-1.33564 c 0.33992,-0.55 1.06803,-1 1.61803,-1 0.55,0 0.72189,0.45 0.38197,1 -0.33992,0.55 -1.06803,1 -1.61803,1 -0.55,0 -0.72189,-0.45 -0.38197,-1 z m -14.47104,-3.96094 c -0.80907,-0.51167 -1.2107,-1.19066 -0.8925,-1.50885 0.3182,-0.3182 1.14776,0.10733 1.84348,0.94562 1.4426,1.73822 1.16599,1.90204 -0.95098,0.56323 z m -20.41297,-1.78906 c -0.3395,-0.9625 -0.90773,-2.425 -1.26273,-3.25 -0.44846,-1.04219 0.01,-0.91858 1.50064,0.40499 2.16344,1.92038 2.89844,4.59501 1.26273,4.59501 -0.48585,0 -1.16114,-0.7875 -1.50064,-1.75 z m 27.02238,0.25 c 0.31659,-0.825 0.70432,-1.5 0.86163,-1.5 0.15731,0 0.54504,0.675 0.86163,1.5 0.3471,0.90455 0.005,1.5 -0.86163,1.5 -0.8667,0 -1.20873,-0.59545 -0.86163,-1.5 z m -47.63837,-2.05902 c 0,-0.85746 0.45734,-1.27636 1.01631,-0.9309 0.55897,0.34546 0.75742,1.04702 0.44098,1.55902 -0.85723,1.38704 -1.45729,1.12841 -1.45729,-0.62812 z m 15,0.55902 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 42.8125,0.31689 c 0.72187,-0.28887 1.58438,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m -10.17633,-3.81115 c 0.31537,-0.82184 0.98359,-1.24074 1.48493,-0.9309 1.04858,0.64806 0.20682,2.42516 -1.14873,2.42516 -0.50028,0 -0.65157,-0.67242 -0.3362,-1.49426 z m -48.94628,-3.9822 c 0.50719,-3.12541 0.27706,-3.58561 -2.27898,-4.55741 -2.05961,-0.78307 -2.47954,-1.30568 -1.52378,-1.89637 1.63399,-1.00986 -0.2481,-5.18732 -2.16699,-4.80981 -0.67108,0.13203 -1.22014,-0.43495 -1.22014,-1.25995 0,-0.95369 0.77305,-1.39392 2.12258,-1.20873 1.46798,0.20144 2.29531,-0.36928 2.68269,-1.85061 0.33236,-1.27095 1.02183,-1.85654 1.6956,-1.44013 0.62451,0.38598 0.89392,1.33125 0.59869,2.10062 -0.97898,2.55117 0.40186,4.46846 2.43466,3.38054 2.38065,-1.27409 5.96578,-1.26309 5.96578,0.0183 0,0.55 -0.70458,1 -1.56574,1 -2.73125,0 -5.39018,1.9513 -4.79003,3.51525 0.73095,1.90483 3.35577,1.93906 3.35577,0.0438 0,-2.08621 2.07515,-3.05166 3.08898,-1.43714 0.47595,0.75797 0.59083,2.27812 0.25529,3.37812 -0.58557,1.91968 -0.5312,1.92964 1.35398,0.24782 1.08023,-0.9637 2.26191,-1.45433 2.62596,-1.09028 0.36404,0.36405 0.94426,-0.74988 1.28936,-2.47539 0.74622,-3.73112 3.40548,-6.5489 3.35463,-3.55459 -0.0175,1.02984 -0.68281,2.7327 -1.47847,3.78413 -0.79567,1.05143 -1.2077,2.86382 -0.91563,4.02754 0.43796,1.74497 0.0398,2.15613 -2.27153,2.34564 -3.13099,0.25671 -8.89511,2.74683 -9.81911,4.24189 -0.33082,0.53528 -1.22164,0.97324 -1.97961,0.97324 -1.01472,0 -1.22935,-0.91669 -0.81396,-3.47646 z m 19.07937,-0.64228 c -0.48891,-3.33119 0.24295,-3.63024 2.57575,-1.05252 2.11647,2.33867 2.08112,2.82656 -0.24894,3.43589 -1.48901,0.38938 -1.99608,-0.13002 -2.32681,-2.38337 z m 2.23074,-5.38126 c 0,-0.825 0.17686,-1.5 0.39301,-1.5 0.21616,0 0.65203,0.675 0.96862,1.5 0.31658,0.825 0.13972,1.5 -0.39301,1.5 -0.53274,0 -0.96862,-0.675 -0.96862,-1.5 z m 16.427,-5.02147 c 2.05508,-1.55476 3.20345,-1.30764 2.11412,0.45494 -0.36254,0.58659 -1.4201,1.05222 -2.35014,1.03473 -1.48465,-0.0279 -1.45585,-0.2097 0.23602,-1.48967 z m -43.84882,-6.35204 c -0.85263,-1.37958 2.54376,-5.40455 3.63755,-4.31076 0.64569,0.64569 0.27444,1.6941 -1.07926,3.0478 -1.13493,1.13493 -2.28617,1.70327 -2.55829,1.26296 z m 2.41724,-14.12932 c -1.9192,-1.18613 -0.71816,-2.23976 2.08373,-1.82797 1.89807,0.27895 2.02383,0.51776 0.80233,1.5236 -0.90495,0.74516 -1.98802,0.85939 -2.88606,0.30437 z m 43.50458,-47.99717 c -1.90836,-0.82005 -1.8969,-0.86265 0.25,-0.92972 1.2375,-0.0387 2.25,0.37972 2.25,0.92972 0,0.55 -0.1125,0.96837 -0.25,0.92971 -0.1375,-0.0387 -1.15,-0.45702 -2.25,-0.92971 z m 140,187.33333 c 0,-0.64166 0.3375,-1.50416 0.75,-1.91666 0.4125,-0.4125 0.73632,-1.2375 0.71959,-1.83334 -0.0167,-0.59583 -0.49438,-0.28637 -1.06146,0.6877 -0.56708,0.97407 -1.47311,1.49783 -2.0134,1.16391 -1.10061,-0.68022 -3.89473,1.29547 -3.89473,2.75393 0,0.51918 1.2375,0.80158 2.75,0.62755 1.5125,-0.17403 2.75,-0.84142 2.75,-1.48309 z m -134.87123,-2.03789 c -0.82426,-0.82426 -3.62877,0.49605 -3.62877,1.70836 0,0.73956 0.63946,0.72434 2.08565,-0.0496 1.1471,-0.61391 1.84151,-1.36033 1.54312,-1.65872 z m -85.62877,-2.85446 c 0,-0.85746 -0.45734,-1.27636 -1.01631,-0.9309 -0.55897,0.34546 -0.75742,1.04702 -0.44098,1.55902 0.85723,1.38704 1.45729,1.12841 1.45729,-0.62812 z m 204,-0.048 c 0,-0.21612 -0.675,-0.39298 -1.5,-0.39298 -0.825,0 -1.5,0.43588 -1.5,0.96862 0,0.53273 0.675,0.70959 1.5,0.39301 0.825,-0.31659 1.5,-0.75246 1.5,-0.96862 z m -122,-0.39298 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m 129.66228,-5.25 c -0.27741,-0.6875 -0.50439,-0.125 -0.50439,1.25 0,1.375 0.22698,1.9375 0.50439,1.25 0.27741,-0.6875 0.27741,-1.8125 0,-2.5 z M 654.33964,660.2976 c 0.93322,-1.89225 2.17072,-3.98396 2.75,-4.64824 1.33207,-1.52755 1.36061,-3.29221 0.0532,-3.29221 -0.55,0 -1,-0.675 -1,-1.5 0,-2.44495 1.90985,-1.70737 2.58936,1 0.39264,1.56443 1.33534,2.5 2.51905,2.5 2.71608,0 2.33896,-2.00157 -1.18191,-6.273 -2.6235,-3.18276 -3.36905,-5.44893 -5.09208,-15.47785 -3.5924,-20.90968 -3.57666,-20.96188 -4.07207,13.50224 -0.27181,18.90959 0.18189,20.78404 3.43441,14.18906 z m 193.80324,0.55955 c 0,-2.88189 -0.55047,-3.09238 -2.63519,-1.00767 -1.6575,1.65751 -1.02761,3.50767 1.19421,3.50767 0.87038,0 1.44098,-0.98995 1.44098,-2.5 z m -9.75,0.10795 c 1.56045,-1.18454 2.44378,-3.60795 1.3151,-3.60795 -1.96354,0 -5.5651,2.24908 -5.5651,3.47525 0,1.86133 1.89488,1.9205 4.25,0.1327 z M 552.50451,648.85715 c -0.31659,-0.825 -0.96334,-1.5 -1.43723,-1.5 -0.4739,0 -0.60261,0.675 -0.28603,1.5 0.31659,0.825 0.96334,1.5 1.43723,1.5 0.4739,0 0.60261,-0.675 0.28603,-1.5 z m 4.63837,0.5 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 3,-4.11803 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m 275,-0.76534 c 0,-1.03585 -0.87394,-2.11191 -1.9421,-2.39124 -2.97228,-0.77727 -3.41251,0.4945 -0.85295,2.46409 2.85595,2.19766 2.79505,2.19925 2.79505,-0.0729 z m -6.5,-2.11663 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m -2.5,-3.94098 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 9.77083,-1.87152 c 0.21771,-0.65313 -0.31666,-1.1875 -1.1875,-1.1875 -0.87083,0 -1.58333,0.7125 -1.58333,1.58333 0,1.76593 2.15276,1.45839 2.77083,-0.39583 z m -5.24691,-2.26286 c 0.74935,-2.36099 0.11357,-3.43666 -1.45739,-2.46576 -1.31159,0.81061 -1.4216,4.54112 -0.13392,4.54112 0.51294,0 1.22903,-0.93391 1.59131,-2.07536 z M 566.52679,621.10715 c -1.94712,-4.5375 -7.84559,-18.94697 -13.1077,-32.02104 -5.26211,-13.07407 -9.70613,-23.63237 -9.87561,-23.46289 -0.3055,0.3055 -15.96897,41.08966 -21.50105,55.98393 l -2.87853,7.75 h 25.45156 25.45156 z m -41.38391,3.34627 c 0,-1.1553 16.49524,-44.3719 17.88209,-46.85005 0.6901,-1.23316 1.33725,-0.53879 2.99895,3.21777 2.46727,5.57766 2.47392,5.61367 0.97624,5.28601 -1.23442,-0.27006 -3.28728,4.33733 -11.25034,25.25 -4.74659,12.46554 -5.34993,13.52425 -7.87372,13.81642 -1.50327,0.17403 -2.73322,-0.15004 -2.73322,-0.72015 z m 37,-0.59627 c 0,-0.825 0.17686,-1.5 0.39301,-1.5 0.21616,0 0.65203,0.675 0.96862,1.5 0.31658,0.825 0.13972,1.5 -0.39301,1.5 -0.53274,0 -0.96862,-0.675 -0.96862,-1.5 z m 286,3.95203 c 0,-1.18139 -1.89074,-1.17914 -2.34429,0.003 -0.36945,0.96277 -0.0714,1.25818 0.89522,0.88726 0.79699,-0.30604 1.44907,-0.70656 1.44907,-0.89026 z m -98.54271,-3.38293 c 0.31644,-0.512 0.11799,-1.21356 -0.44098,-1.55902 -0.55897,-0.34546 -1.01631,0.0734 -1.01631,0.9309 0,1.75653 0.60006,2.01516 1.45729,0.62812 z m 94.45883,-2.90659 c -2.76975,-0.42685 -4.55044,2.06935 -2.1295,2.98516 1.03384,0.39108 2.23017,-0.005 3.01641,-0.99976 1.12108,-1.4178 0.99724,-1.69504 -0.88691,-1.9854 z m 5.06382,0.31332 c -0.69572,-0.83829 -1.47088,-1.31823 -1.72258,-1.06653 -0.69349,0.6935 0.71555,2.5907 1.9241,2.5907 0.6631,0 0.58723,-0.57378 -0.20152,-1.52417 z m -333.99525,-7.72583 c 0.008,-0.4125 -0.65969,-0.75 -1.48469,-0.75 -1.53126,0 -2.04884,2.11783 -0.81831,3.34836 0.67147,0.67147 2.27313,-1.13561 2.303,-2.59836 z m 308.01531,0.35699 c 0,-0.49116 -0.675,-1.15203 -1.5,-1.46862 -1.52428,-0.58492 -2.04799,0.4803 -0.83333,1.69496 0.95569,0.9557 2.33333,0.82206 2.33333,-0.22634 z m -253,-2.60699 c 1.01957,-1.22851 0.95124,-1.5 -0.37756,-1.5 -0.89234,0 -1.62244,0.675 -1.62244,1.5 0,0.825 0.1699,1.5 0.37756,1.5 0.20765,0 0.93775,-0.675 1.62244,-1.5 z m 81.69299,-2.23097 c -0.25354,-0.97297 -0.47766,-0.41903 -0.49804,1.23097 -0.0204,1.65 0.18706,2.44606 0.46099,1.76903 0.27392,-0.67703 0.29059,-2.02703 0.0371,-3 z m 187.90701,-2.86903 c -0.44371,-1.15629 -0.9989,-1.4011 -1.66557,-0.73443 -0.55,0.55 -0.70049,1.78049 -0.33443,2.73443 0.44371,1.15629 0.9989,1.4011 1.66557,0.73443 0.55,-0.55 0.70049,-1.78049 0.33443,-2.73443 z m 10.22874,-1.49738 c 0.72041,-1.15356 1.06453,-2.34268 0.76471,-2.6425 -0.81697,-0.81698 -3.59345,1.78092 -3.59345,3.36232 0,2.0191 1.32954,1.68078 2.82874,-0.71982 z m -12.82874,-1.33919 c 0,-0.7252 -0.675,-1.87874 -1.5,-2.56343 -1.26408,-1.04909 -1.5,-0.85864 -1.5,1.21089 0,1.35068 0.28777,2.74354 0.63948,3.09526 0.90297,0.90297 2.36052,-0.17311 2.36052,-1.74272 z m -247.75525,-3.06343 c -0.49392,-2.58378 -1.67241,-3.23509 -2.73695,-1.51262 -0.58676,0.94939 1.34352,3.89618 2.60353,3.97458 0.33623,0.0209 0.39627,-1.08696 0.13342,-2.46196 z m -25.24475,0.5 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 31.4671,-1.79546 c 2.21928,-1.74569 2.23263,-1.85714 0.48141,-4.01981 l -1.80116,-2.22433 -0.65302,2.2698 c -0.35917,1.24839 -0.87264,3.0573 -1.14106,4.0198 -0.62098,2.22667 0.24129,2.21408 3.11383,-0.0455 z m -31.4671,-1.20454 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 52.3407,-0.45836 c 2.04112,-1.54663 1.58823,-4.71438 -1.11397,-7.79164 -2.14467,-2.44235 -4.60027,-2.28642 -3.93698,0.25 0.28766,1.1 0.10634,2 -0.40293,2 -1.32516,0 -0.20773,5.17952 1.3276,6.15368 1.68814,1.07112 1.95774,1.03113 4.12628,-0.61204 z m -37.88643,-1.13877 c 0.87842,-0.87842 2.16691,-1.37848 2.86332,-1.11124 1.71708,0.6589 5.04684,-1.89296 4.21861,-3.23306 -0.64086,-1.03694 -3.38777,-0.87523 -7.54478,0.44415 -1.27351,0.4042 -1.99142,0.17516 -1.99142,-0.63533 0,-0.98354 -0.26792,-0.99947 -1.19625,-0.0711 -0.92834,0.92834 -0.76037,1.52592 0.75,2.6682 1.81356,1.37159 1.82291,1.47411 0.13723,1.50375 -0.99496,0.0175 -1.5309,0.4818 -1.19098,1.0318 0.88153,1.42635 2.11742,1.23972 3.95427,-0.59713 z m 24.18106,-0.95439 c 2.69673,-2.90982 3.01542,-4.44848 0.92137,-4.44848 -1.59568,0 -4.5567,3.71858 -4.5567,5.72251 0,1.91299 1.00961,1.55917 3.63533,-1.27403 z m -12.88547,-2.03195 c -0.95295,-0.95296 -2.86349,0.5906 -2.1533,1.7397 0.42212,0.683 0.98146,0.66575 1.69964,-0.0524 0.58876,-0.58876 0.79291,-1.34803 0.45366,-1.68727 z m -21.92654,-1.7494 c 0.21801,-1.12408 -0.35203,-1.66713 -1.75,-1.66713 -1.14032,0 -2.07332,0.6 -2.07332,1.33333 0,3.06275 3.23923,3.34555 3.82332,0.3338 z m -8.21958,-2.25737 c -0.83287,-2.17043 0.39545,-4.01911 1.50595,-2.26652 0.63257,0.99833 0.86373,1.02653 0.875,0.10676 0.008,-0.6875 1.08521,-1.25 2.39287,-1.25 1.30765,0 2.8802,-0.60565 3.49454,-1.34589 0.91001,-1.0965 0.12476,-1.37831 -4.23779,-1.52087 -6.48928,-0.21205 -8.32017,1.26735 -6.50335,5.25484 1.26753,2.78193 3.50263,3.7054 2.47278,1.02168 z m 14.24176,-0.85779 c 0.221,-1.14002 -0.13937,-1.62085 -1,-1.33427 -0.74002,0.24642 -1.50098,1.25007 -1.691,2.23033 -0.221,1.14002 0.13937,1.62085 1,1.33427 0.74002,-0.24642 1.50098,-1.25007 1.691,-2.23033 z m 32.267,-0.83947 c -0.81667,-0.81667 -1.1125,-0.70476 -1.1125,0.42083 0,1.98786 1.3447,3.33256 1.84167,1.84167 0.21083,-0.6325 -0.1173,-1.65063 -0.72917,-2.2625 z m -36.6125,0.2875 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 8.5,-2.5 c 0,-0.825 -0.65917,-1.5 -1.46482,-1.5 -0.80565,0 -2.00604,-1.0113 -2.66755,-2.24734 -0.75626,-1.41308 -1.35915,-1.77811 -1.62408,-0.98331 -0.41649,1.24948 3.55627,6.17997 5.00645,6.21337 0.4125,0.01 0.75,-0.65772 0.75,-1.48272 z m 31,-1.61803 c 0,-0.55 -0.45,-0.72189 -1,-0.38197 -0.55,0.33992 -1,1.06803 -1,1.61803 0,0.55 0.45,0.72189 1,0.38197 0.55,-0.33992 1,-1.06803 1,-1.61803 z m 4.5,1.11803 c -0.33992,-0.55 -1.29303,-1 -2.11803,-1 -0.825,0 -1.22189,0.45 -0.88197,1 0.33992,0.55 1.29303,1 2.11803,1 0.825,0 1.22189,-0.45 0.88197,-1 z m -21.34769,-1.25 c 0.0838,-0.6875 0.19709,-1.91899 0.2518,-2.73665 0.12624,-1.88653 3.59589,-2.64558 3.59589,-0.78667 0,0.75532 -0.48025,1.85357 -1.06722,2.44054 -0.75629,0.75629 -0.61062,1.24243 0.5,1.66861 0.99371,0.38132 1.56722,0.0525 1.56722,-0.8986 0,-0.825 0.675,-1.75902 1.5,-2.0756 0.825,-0.31659 1.5,-1.45402 1.5,-2.52764 0,-1.29547 -0.42043,-1.69944 -1.25,-1.20105 -0.84936,0.51028 -0.81011,0.20868 0.12244,-0.94098 0.75485,-0.93058 2.75735,-1.69196 4.45,-1.69196 2.39366,0 2.81089,0.26667 1.87756,1.2 -1.7034,1.7034 -1.49951,3.85216 0.3,3.16163 0.825,-0.31659 1.5,-0.0775 1.5,0.53138 0,0.60885 1.125,1.10699 2.5,1.10699 1.375,0 2.5,-0.15586 2.5,-0.34636 0,-1.29453 -3.33503,-6.65364 -4.14063,-6.65364 -0.54678,0 -0.7085,-0.9 -0.35937,-2 0.76437,-2.40833 -1.25152,-2.72207 -2.91071,-0.453 -1.25379,1.71466 -8.58929,3.02125 -8.58929,1.5299 0,-0.51817 -0.94114,-1.24083 -2.09142,-1.60592 -1.41171,-0.44805 -1.93513,-1.26147 -1.61051,-2.5028 0.27388,-1.04731 -0.14456,-2.07903 -0.97196,-2.39653 -0.79908,-0.30664 -1.19201,-0.97961 -0.87318,-1.49549 0.31883,-0.51588 0.16951,-1.19147 -0.33183,-1.50132 -1.50926,-0.93277 -2.16974,2.34693 -0.94946,4.71469 0.62657,1.21576 1.45094,2.88547 1.83194,3.71047 0.381,0.825 1.77356,2.05587 3.09458,2.73526 2.68004,1.37833 2.68217,1.37631 -1.84816,1.75735 -2.23178,0.18771 -3.25,-0.15993 -3.25,-1.10963 0,-0.76064 -0.40787,-1.38298 -0.90638,-1.38298 -0.49851,0 -0.66407,0.92659 -0.36792,2.05908 0.39572,1.51323 -0.0267,2.20688 -1.59362,2.61663 -2.24116,0.58608 -2.77043,1.81173 -1.20118,2.78158 0.512,0.31644 1.21356,0.11799 1.55902,-0.44098 0.34546,-0.55897 1.32902,-1.01631 2.18567,-1.01631 1.12218,0 1.42397,0.69883 1.07966,2.5 -0.32047,1.67641 -0.0294,2.5 0.88342,2.5 0.74873,0 1.42987,-0.5625 1.51364,-1.25 z m -32.82244,-2.79484 c 1.42978,-1.12466 2.87796,-1.98716 3.21819,-1.91666 0.34024,0.0705 0.91861,-0.1869 1.28527,-0.57198 0.86595,-0.90944 -5.79574,0.48835 -8.11134,1.70197 -0.9779,0.51252 -1.51385,1.35928 -1.19098,1.88168 0.87208,1.41106 1.91564,1.17294 4.79886,-1.09501 z m 11.17013,-1.03849 c 0,-0.77917 0.7875,-1.73967 1.75,-2.13445 0.98409,-0.40363 1.75,-1.77265 1.75,-3.12802 0,-1.38053 0.96127,-3.06247 2.25,-3.93687 1.69282,-1.14858 1.96912,-1.81874 1.11573,-2.70625 -0.86413,-0.89868 -1.5164,-0.63406 -2.73878,1.11113 -1.57801,2.25293 -1.62831,2.25845 -3.04653,0.33427 -1.3107,-1.7783 -1.38805,-1.54665 -0.8494,2.54352 0.54139,4.11095 0.44896,4.38134 -1.06919,3.12756 -0.9502,-0.78474 -1.66183,-2.8188 -1.66183,-4.75 0,-1.85766 -0.44035,-3.37756 -0.97856,-3.37756 -0.59528,0 -0.53241,-0.9792 0.16051,-2.5 0.6265,-1.375 1.74185,-2.5 2.47857,-2.5 0.73671,0 1.33948,-0.7125 1.33948,-1.58333 0,-0.91077 -0.53097,-1.33582 -1.25,-1.00065 -0.6875,0.32048 -2.0375,0.86047 -3,1.19997 -0.9625,0.3395 -1.75,1.46479 -1.75,2.50064 0,2.12651 -1.06023,2.42314 -2.72186,0.76151 -1.41636,-1.41636 -0.53293,-3.87814 1.39171,-3.87814 0.82955,0 1.33201,-0.75285 1.16797,-1.75 -0.15835,-0.9625 0.0457,-2.28141 0.45345,-2.9309 0.40774,-0.6495 0.2337,-1.49465 -0.38676,-1.87812 -0.62046,-0.38346 -1.47156,-0.14152 -1.89131,0.53767 -0.54314,0.87882 -0.96043,0.91576 -1.44722,0.12811 -0.37621,-0.60872 -0.4059,-1.55676 -0.066,-2.10676 0.33992,-0.55 -0.057,-1 -0.88197,-1 -0.825,0 -1.77811,0.45 -2.11803,1 -1.02852,1.66417 -2.51242,1.12945 -3.46884,-1.25 l -0.90439,-2.25 -0.0634,2.25 c -0.0348,1.2375 -0.51335,2.25 -1.06335,2.25 -0.55,0 -1,0.68357 -1,1.51905 0,1.1138 0.65534,1.35458 2.45648,0.90252 2.05328,-0.51534 2.56515,-0.18358 3.11852,2.02124 0.44708,1.78129 0.13651,3.21849 -0.95648,4.42623 -0.89019,0.98364 -1.61852,2.29968 -1.61852,2.92452 0,1.47023 -3.74724,3.48069 -5.02067,2.69367 -0.53863,-0.3329 -0.97933,-0.12871 -0.97933,0.45375 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,0.84856 1,1.88569 0,1.03713 0.61844,3.07773 1.3743,4.53467 1.25449,2.41803 1.41922,2.47722 1.88946,0.67902 0.37058,-1.41711 1.09642,-1.81795 2.58639,-1.42831 1.91138,0.49983 1.99867,0.2886 1.13098,-2.73687 -1.03819,-3.61996 0.10731,-5.95784 2.89131,-5.90093 1.26514,0.0259 1.10124,0.47172 -0.73604,2.00228 l -2.3636,1.96901 3.1136,0.62272 c 3.32279,0.66456 4.28054,2.35244 1.3636,2.40313 -1.62999,0.0283 -1.62582,0.10264 0.0607,1.08368 0.9959,0.5793 2.4584,0.80474 3.25,0.50098 1.00461,-0.38551 1.43926,0.16851 1.43926,1.83453 0,1.31275 0.28044,3.11765 0.62321,4.01088 0.73357,1.91167 2.87679,1.50653 2.87679,-0.54381 z m -6.15492,-10.4598 c -0.32569,-0.84872 -0.3415,-1.79378 -0.0352,-2.10013 0.87571,-0.87571 2.69007,0.60965 2.69007,2.20228 0,1.91885 -1.90756,1.84546 -2.65492,-0.10215 z m 110.02992,10.74538 c 0.27117,-0.43876 0.16976,-1.32081 -0.22535,-1.96011 -0.49427,-0.79974 -1.10026,-0.55087 -1.94249,0.79775 -1.0044,1.6083 -0.96395,1.96011 0.22535,1.96011 0.7972,0 1.67132,-0.35899 1.94249,-0.79775 z m -6.99658,-3.46496 c -1.03313,-0.54226 -2.41098,-1.65005 -3.06189,-2.46175 -0.6509,-0.8117 -1.69272,-1.16108 -2.31514,-0.7764 -1.53567,0.9491 1.90793,4.74963 3.68551,4.06751 0.72221,-0.27713 1.3131,-0.0414 1.3131,0.52375 0,0.5652 0.50779,0.7138 1.12842,0.33023 0.74893,-0.46286 0.4967,-1.02897 -0.75,-1.68334 z m -83.57009,0.18771 c -0.19708,-0.59125 -0.78583,-1.075 -1.30833,-1.075 -0.5225,0 -1.11125,0.48375 -1.30833,1.075 -0.19709,0.59125 0.39166,1.075 1.30833,1.075 0.91667,0 1.50542,-0.48375 1.30833,-1.075 z m 0.27654,-8.02982 c -0.52695,-1.31735 -0.98662,-1.86948 -1.02148,-1.22697 -0.0847,1.56062 1.08023,4.52151 1.58163,4.0201 0.21887,-0.21887 -0.0332,-1.47578 -0.56015,-2.79313 z m 77.41229,-1.88623 c 0.80678,-2.54192 -0.10703,-4.00895 -2.49716,-4.00895 -2.67046,0 -3.15673,1.33122 -1.40159,3.83703 1.88611,2.69281 3.08192,2.74554 3.89875,0.17192 z m -58.49716,-0.4629 c -0.55476,-1.05844 -4.02042,-1.57262 -5.35676,-0.79476 -1.32129,0.7691 1.60871,2.29188 3.85676,2.00444 1.1,-0.14065 1.775,-0.68501 1.5,-1.20968 z m -48.56891,-4.70838 c 0.86767,-1.73928 1.31985,-3.42006 1.00485,-3.73506 -0.91337,-0.91337 -4.28138,4.1366 -3.7253,5.58571 0.71331,1.85887 0.95034,1.69763 2.72045,-1.85065 z m 19.56891,0.16233 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 25,0 c 0,-0.55 -0.41968,-1 -0.93261,-1 -1.91985,0 -2.21734,-4.1222 -0.48797,-6.76155 1.64335,-2.50808 1.79008,-2.54901 2.51264,-0.70103 0.59059,1.51046 0.78356,1.58764 0.83765,0.33502 0.10734,-2.48549 -2.84229,-4.37244 -6.83487,-4.37244 -3.3341,0 -3.58015,-0.20702 -3.39231,-2.85422 0.16899,-2.38148 -0.12085,-2.76965 -1.75,-2.34362 -2.42674,0.63461 -2.54945,-1.12855 -0.20253,-2.91011 1.59278,-1.2091 1.60013,-1.3313 0.0818,-1.36025 -0.91752,-0.0175 -2.38002,-0.30494 -3.25,-0.63879 -1.13395,-0.43514 -1.58179,-0.0105 -1.58179,1.5 0,1.71359 -0.60681,2.10413 -3.25,2.09168 -2.43229,-0.0115 -2.87382,-0.25313 -1.75487,-0.96052 1.28251,-0.81079 1.21298,-1.15151 -0.48897,-2.39601 -1.09126,-0.79794 -2.38776,-1.20134 -2.88111,-0.89643 -0.49336,0.30491 -1.62332,0.65626 -2.51103,0.78078 -3.3431,0.46892 -5.99405,1.73246 -6.52216,3.10871 -0.61238,1.59582 3.03502,5.79152 3.86592,4.44709 0.2919,-0.47231 -0.1341,-1.11386 -0.94666,-1.42567 -0.83928,-0.32206 -1.22251,-1.23116 -0.88727,-2.10479 0.66029,-1.72069 3.92271,-2.08054 4.87615,-0.53785 0.33992,0.55 1.52539,1 2.63438,1 1.60085,0 1.95867,0.56668 1.73642,2.75 -0.27186,2.67069 2.01333,9.25 3.2128,9.25 0.32745,0 1.10795,-1.125 1.73445,-2.5 1.04823,-2.30061 0.9414,-2.5 -1.33949,-2.5 -3.01885,0 -3.14635,-1.08568 -0.41751,-3.55525 1.5621,-1.41368 2.24719,-1.56405 2.82995,-0.62112 0.42289,0.68426 1.52042,0.95572 2.43895,0.60325 0.91853,-0.35247 1.67005,-0.18021 1.67005,0.3828 0,0.56301 -0.47413,1.1817 -1.05361,1.37486 -0.57949,0.19316 -1.21151,2.05009 -1.4045,4.12651 -0.29133,3.1346 -0.11453,3.57916 1.04178,2.61951 1.08262,-0.8985 1.52982,-0.79838 2.00876,0.4497 0.41688,1.08639 1.34555,1.42243 2.87216,1.03927 1.8973,-0.47619 2.35382,-0.0775 2.87074,2.50712 0.44339,2.21697 1.17893,3.07335 2.63967,3.07335 1.11375,0 2.025,-0.45 2.025,-1 z m 3.68311,-1.1875 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m -52.932,-3.3283 c -0.27995,-2.48369 -0.11347,-4.76025 0.36995,-5.05902 0.48342,-0.29877 0.87894,-1.77666 0.87894,-3.2842 0,-1.50754 0.47491,-3.21589 1.05536,-3.79634 1.28443,-1.28443 0.27293,-5.82729 -1.65347,-7.42607 -1.09655,-0.91005 -1.40189,-0.83675 -1.40189,0.33654 0,0.825 -0.675,2.0602 -1.5,2.74489 -2.29098,1.90135 -1.78931,3.11072 1,2.41064 3.189,-0.80038 3.17243,0.23683 -0.0515,3.22469 -2.71189,2.51329 -4.92858,3.0149 -5.95856,1.34836 -0.70597,-1.14224 -2.48994,-0.37179 -2.48994,1.07533 0,0.51754 1.05526,0.94098 2.34501,0.94098 2.75037,0 6.37032,3.43987 4.70382,4.46982 -0.5948,0.36761 -0.79146,1.13759 -0.43703,1.71108 0.35444,0.57349 0.0243,1.45095 -0.73368,1.94991 -1.12433,0.74013 -1.02065,1.17993 0.56301,2.38819 3.14839,2.40209 3.85026,1.75856 3.30998,-3.0348 z m 40.24889,2.5158 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 204.34308,-0.75 c -0.65665,-2.4466 -2.46147,-4.51345 -5.36305,-6.14165 -2.42395,-1.36019 -2.44046,-1.3471 -0.73003,0.57874 0.9625,1.08371 1.75,2.46532 1.75,3.07022 0,1.28996 2.76839,4.24269 3.97781,4.24269 0.45922,0 0.62359,-0.7875 0.36527,-1.75 z m -217.99937,-2.45633 c 0.31733,-1.21348 0.34534,-2.43795 0.0623,-2.72104 -0.64668,-0.64669 -2.37015,2.00441 -2.39065,3.67737 -0.0258,2.10339 1.71526,1.38831 2.3284,-0.95633 z m -4.76291,-3.5462 c -1.08935,-1.08936 -1.50282,0.33508 -0.81164,2.7962 l 0.68983,2.45633 0.35131,-2.33586 c 0.19322,-1.28473 0.0899,-2.59723 -0.2295,-2.91667 z m 29.4192,4.31155 c 0,-1.05548 -1.91911,-1.49891 -2.48992,-0.57533 -0.34546,0.55897 0.0734,1.01631 0.9309,1.01631 0.85746,0 1.55902,-0.19844 1.55902,-0.44098 z m -106.31689,-3.74652 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 374.31689,-2.85616 c 0,-0.53914 -0.89212,-0.41615 -2,0.27573 -1.1,0.68696 -2,1.60661 -2,2.04366 0,0.43705 0.9,0.31297 2,-0.27573 1.1,-0.5887 2,-1.50835 2,-2.04366 z m -375.35653,-5.10007 c -0.27717,-3.47126 -1.05495,-6.49254 -1.78805,-6.94562 -0.71362,-0.44105 -1.38798,-0.71142 -1.49857,-0.60084 -0.32792,0.32793 2.99238,13.69019 3.40179,13.69019 0.20645,0 0.15463,-2.76468 -0.11517,-6.14373 z m 76.35653,4.70275 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 5,-2.05902 c 0,-0.825 -0.43588,-1.5 -0.96862,-1.5 -0.53273,0 -0.70959,0.675 -0.39301,1.5 0.31659,0.825 0.75246,1.5 0.96862,1.5 0.21615,0 0.39301,-0.675 0.39301,-1.5 z m 178.77252,-5.75 c -1.4478,-10.23448 -3.13246,-17.75 -3.9788,-17.75 -1.2381,0 -0.93531,5.14384 0.62213,10.5685 0.77872,2.71232 1.71827,6.844 2.0879,9.1815 0.36962,2.3375 1.00524,4.25 1.41248,4.25 0.40724,0 0.34257,-2.8125 -0.14371,-6.25 z m -73.77252,2.25 c 0,-1.1 -0.5625,-2.00689 -1.25,-2.01531 -0.90518,-0.0111 -0.86984,-0.2561 0.12812,-0.8882 1.73247,-1.09733 0.55907,-3.20149 -1.37208,-2.46043 -2.03808,0.78208 -2.88604,4.20115 -1.46621,5.91193 1.73698,2.09294 3.96017,1.78531 3.96017,-0.54799 z m -120.37305,-1.94562 c 0.95701,-1.62009 1.9968,-2.78692 2.31064,-2.59295 0.31385,0.19397 0.56878,-1.02518 0.56652,-2.7092 -0.005,-3.86113 2.20273,-4.76845 3.08169,-1.26639 l 0.65957,2.62791 1.89064,-2.02936 c 1.59889,-1.71621 2.27589,-1.85384 4.38721,-0.89186 2.12014,0.966 2.84404,0.81108 4.80112,-1.02751 1.26751,-1.19076 2.78991,-2.16502 3.38312,-2.16502 1.55365,0 2.3888,-2.76828 1.68324,-5.57946 -0.74664,-2.97484 -1.962,-3.09009 -3.44114,-0.3263 -0.75228,1.40566 -1.7683,1.92492 -3.09007,1.57927 -1.39859,-0.36574 -2.21828,0.13999 -2.82857,1.74516 -0.69566,1.82972 -1.44083,2.17478 -3.91294,1.81195 -1.67951,-0.2465 -3.57322,-1.07423 -4.20826,-1.8394 -1.53836,-1.85361 -4.90972,-1.77891 -4.90972,0.10878 0,0.825 -0.46412,1.5 -1.03138,1.5 -0.56727,0 -1.29041,-0.675 -1.60699,-1.5 -0.75721,-1.97324 -2.9866,-1.91971 -3.75789,0.0902 -0.88252,2.29981 0.0827,3.30452 2.55377,2.65832 1.93944,-0.50718 2.09513,-0.26178 1.55317,2.44805 -0.35301,1.76504 -0.10734,3.56197 0.59349,4.341 0.65856,0.73206 -0.0239,0.57294 -1.51899,-0.35416 -3.1602,-1.95963 -4.71281,-2.21108 -2.98518,-0.48345 0.66,0.66 1.2,2.16 1.2,3.33333 0,4.3345 2.2262,4.5852 4.62695,0.52105 z m -14.16689,-2.80438 c 0.40466,-1.34944 0.2475,-2.25 -0.39267,-2.25 -0.58707,0 -1.06739,0.675 -1.06739,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,0.99643 -1,2.21429 0,1.92669 0.18088,2.0241 1.39268,0.75 0.76597,-0.80536 1.69629,-2.47679 2.06738,-3.71429 z m 51.53994,2.91667 c 0,-1.30208 -1.18877,-2.16804 -2.15579,-1.57039 -1.03422,0.63919 -0.14245,2.40372 1.21481,2.40372 0.51754,0 0.94098,-0.375 0.94098,-0.83333 z m -3.12188,-3.07018 c 1.61343,-1.02193 0.65059,-3.09649 -1.43714,-3.09649 -0.79254,0 -1.44098,0.9 -1.44098,2 0,2.17109 0.73777,2.45216 2.87812,1.09649 z m 241.07819,-4.52286 c -0.77988,-0.7675 -1.49032,-0.53264 -2.4916,0.82369 -1.93791,2.62511 -0.69346,4.11967 1.6582,1.99145 1.38557,-1.25392 1.6189,-2.04211 0.8334,-2.81514 z m -153.397,0.33041 c 0.37254,-0.60278 -0.0752,-1.84028 -0.99502,-2.75 -1.55641,-1.53936 -1.62653,-1.53271 -1.01134,0.096 0.45144,1.19513 0.17287,1.75 -0.87857,1.75 -1.76766,0 -3.29481,-3.79219 -2.02372,-5.02524 0.46714,-0.45315 2.74952,-0.47053 5.07196,-0.0386 4.64421,0.8637 5.82335,0.42664 4.18261,-1.55033 -1.40501,-1.69293 -0.27916,-3.46653 1.71479,-2.70138 1.17871,0.45231 1.47402,0.0364 1.21798,-1.71532 -0.38483,-2.63282 -4.41586,-3.54585 -5.68021,-1.28659 -0.4169,0.74497 -2.28648,2.17422 -4.15461,3.17611 -4.66293,2.50076 -5.9688,6.5693 -2.94913,9.18825 2.52208,2.18738 4.49344,2.49432 5.50526,0.85716 z m -133.55931,-6.02648 c 0,-1.77324 -0.2468,-1.91763 -1.5,-0.87756 -0.825,0.68469 -1.5,1.63979 -1.5,2.12244 0,0.48266 0.675,0.87756 1.5,0.87756 0.86218,0 1.5,-0.90249 1.5,-2.12244 z m 42.97994,0.59827 c -0.69572,-0.83829 -1.47088,-1.31823 -1.72258,-1.06653 -0.69349,0.6935 0.71555,2.5907 1.9241,2.5907 0.6631,0 0.58723,-0.57378 -0.20152,-1.52417 z m -19.61023,-2.72583 c 0.84133,-3.1394 0.77327,-4.75 -0.20073,-4.75 -1.31115,0 -3.4782,4.69065 -2.72791,5.90465 1.08045,1.74821 2.27715,1.2764 2.92864,-1.15465 z m -81.36971,-1.24041 c 0,-0.70204 -1.04609,-1.47641 -2.32465,-1.72082 -2.08977,-0.39949 -2.21917,-0.22086 -1.28064,1.76786 1.07145,2.2704 3.60529,2.23734 3.60529,-0.047 z m 60.50645,-2.48928 c -0.75233,-2.37036 -2.83724,-2.22675 -3.31354,0.22824 -0.17042,0.8784 0.49715,1.76094 1.5,1.98306 2.40893,0.53355 2.60777,0.29111 1.81354,-2.2113 z m 9.49355,2.03871 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 28,-3.55902 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 86.98469,-0.25 c -0.0357,-1.74838 -1.69137,-3.04358 -4.73469,-3.70382 -2.69502,-0.58469 -3.25,-0.40692 -3.25,1.04103 0,0.96037 0.28411,1.46201 0.63136,1.11476 0.34725,-0.34725 1.57238,0.0277 2.72251,0.83334 2.24043,1.56926 4.65588,1.94204 4.63082,0.71469 z m 5.34715,-1.67238 c 0.3002,-0.7823 1.36084,-1.23052 2.35699,-0.99603 2.4695,0.58132 5.71117,-4.12117 5.71117,-8.28484 0,-1.81321 0.36,-3.29675 0.8,-3.29675 0.44,0 0.8,-0.825 0.8,-1.83333 0,-2.5345 0.96353,-3.25655 2.93656,-2.20062 1.28393,0.68714 2.30107,0.1093 4.36852,-2.48176 3.21119,-4.02446 3.39617,-5.48429 0.69492,-5.48429 -1.25926,0 -2,0.66667 -2,1.8 0,1.85479 -1.78682,4.2 -3.2,4.2 -1.40053,0 -0.82045,-2.41701 1.2,-5 2.56402,-3.27791 2.48371,-4.2685 -0.45655,-5.63173 -2.11159,-0.97902 -2.67763,-0.81655 -4.19506,1.20408 -1.17903,1.57001 -2.12759,2.02586 -2.89326,1.39041 -1.42751,-1.18473 -2.45513,-0.21748 -2.45513,2.31089 0,1.29508 -0.48817,1.753 -1.46797,1.37701 -2.00968,-0.77118 -2.82742,0.8593 -1.13529,2.26364 1.0795,0.89591 2.15475,0.38339 5.00718,-2.3867 4.44674,-4.31837 5.93665,-4.51757 3.94619,-0.5276 -0.83746,1.67873 -2.29453,3 -3.30834,3 -0.99646,0 -2.5385,1.10917 -3.42676,2.46482 -2.11094,3.2217 -2.03709,3.80392 0.38499,3.03518 1.80166,-0.57183 2,-0.1797 2,3.95405 0,3.92433 -0.36202,4.75377 -2.5,5.7279 -1.375,0.6265 -2.5,1.74185 -2.5,2.47857 0,0.73671 -0.6,1.33948 -1.33333,1.33948 -0.73334,0 -1.33334,0.675 -1.33334,1.5 0,1.90132 1.27962,1.95102 1.99851,0.0776 z m 69.90558,0.21012 c 0.22225,-0.66674 0.21476,-2.20265 -0.0166,-3.41313 -0.37679,-1.97107 -0.72827,-2.09366 -3.3662,-1.17407 -3.03969,1.05964 -3.40875,3.40681 -0.49695,3.16057 0.9033,-0.0764 1.64237,0.48611 1.64237,1.25 0,1.70858 1.6825,1.8414 2.23742,0.17663 z m -175.64139,-0.55305 c 1.19174,-0.79885 2.81105,-6.23469 1.85728,-6.23469 -0.32164,0 -1.42858,0.45158 -2.45988,1.00352 -1.48289,0.79361 -2.19641,0.54478 -3.41126,-1.18967 -1.73648,-2.47917 -2.08115,-2.34052 -2.94871,1.18615 -0.33825,1.375 -0.35665,1.9375 -0.0409,1.25 0.85822,-1.8686 2.55934,-1.50745 2.35514,0.5 -0.0979,0.9625 -0.12619,2.3125 -0.0629,3 0.1257,1.36453 2.96311,1.65645 4.71118,0.48469 z m -15.09603,-1.23469 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 130.48469,-1.25 c -0.0124,-1.81944 -0.20082,-1.96296 -0.98469,-0.75 -1.25292,1.93876 -1.25292,3 0,3 0.55,0 0.99311,-1.0125 0.98469,-2.25 z m -139.98469,-0.095 c 0,-0.73976 -0.9,-2.1595 -2,-3.15499 -1.7188,-1.55549 -2,-1.58878 -2,-0.23678 0,2.65756 1.14434,4.73678 2.60699,4.73678 0.76615,0 1.39301,-0.60526 1.39301,-1.34501 z m 6,0.40403 c 0,-0.51754 -0.40775,-1.19299 -0.90612,-1.501 -0.49837,-0.30801 -0.67088,-1.45956 -0.38337,-2.55902 0.59004,-2.25632 -0.91106,-2.66721 -2.54621,-0.69696 -1.57757,1.90084 -0.27653,5.69796 1.95233,5.69796 1.03585,0 1.88337,-0.42344 1.88337,-0.94098 z m 120.48803,-0.80902 c -0.18426,-0.9625 -0.36944,-1.9525 -0.41152,-2.2 -0.0421,-0.2475 -0.5773,0.0508 -1.18938,0.66287 -0.61207,0.61207 -0.81052,1.60207 -0.44098,2.2 1.05671,1.7098 2.41186,1.26987 2.04188,-0.66287 z m -186.48803,-1.25 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 72.8,-4.50279 c 0,-4.18877 -1.38375,-5.34972 -3.64596,-3.05892 -1.53901,1.55846 -1.53234,1.744 0.096,2.66802 0.9625,0.54619 1.75,1.64571 1.75,2.44338 0,0.79767 0.405,1.45031 0.9,1.45031 0.495,0 0.9,-1.57625 0.9,-3.50279 z m 128.2,2.50279 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 59.14286,-7.54493 c 0,-3.23092 0.66984,-7.12597 1.5023,-8.73579 0.82627,-1.59783 1.26819,-3.13926 0.98205,-3.42541 -1.14238,-1.14237 -9.63483,5.2847 -10.18254,7.70613 -0.31101,1.375 -1.003,3.30494 -1.53775,4.28875 -0.70753,1.30169 -0.53482,2.22621 0.63429,3.39532 1.27785,1.27784 1.34142,1.77043 0.3107,2.40745 -1.02923,0.6361 -0.99299,0.90279 0.17612,1.29614 6.48817,2.18294 8.11483,0.79327 8.11483,-6.93259 z m -262.89811,5.04493 c 0.26285,-1.375 0.35211,-2.5 0.19837,-2.5 -0.15375,0 -0.99135,-0.27315 -1.86133,-0.60699 -1.17608,-0.4513 -1.58179,0.0189 -1.58179,1.83333 0,4.28513 2.48277,5.25969 3.24475,1.27366 z m 88.90525,-1 c 0,-0.5225 -0.48375,-1.11125 -1.075,-1.30833 -0.59125,-0.19709 -1.075,0.39166 -1.075,1.30833 0,0.91667 0.48375,1.50542 1.075,1.30833 0.59125,-0.19708 1.075,-0.78583 1.075,-1.30833 z m 106.85,0.11663 c 0,-0.76085 -0.9,-1.61872 -2,-1.90638 -2.2067,-0.57707 -2.8765,1.76941 -0.75,2.62747 2.14702,0.86634 2.75,0.70823 2.75,-0.72109 z m -101.27083,-1.2208 c -0.33229,-0.33229 -1.1948,-0.36782 -1.91667,-0.0789 -0.79773,0.31923 -0.56078,0.55619 0.60417,0.60417 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 96.04166,-0.58333 c -0.61807,-1.85422 -2.77083,-2.16176 -2.77083,-0.39583 0,0.87083 0.7125,1.58333 1.58333,1.58333 0.87084,0 1.40521,-0.53438 1.1875,-1.1875 z m -4.77083,-2.8125 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -183.22917,-1.1875 c -0.61807,-1.85422 -2.77083,-2.16176 -2.77083,-0.39583 0,0.87083 0.7125,1.58333 1.58333,1.58333 0.87084,0 1.40521,-0.53438 1.1875,-1.1875 z m 76.04167,-1.75 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.72187,0.24062 -1.50937,1.02812 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.72187,-0.24062 1.50937,-1.02813 1.75,-1.75 z m -9.8125,-0.0625 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 17,-2.05902 c 0,-2.00979 -1.459,-2.62535 -2.44423,-1.03122 -0.79864,1.29223 0.47441,4.18962 1.54901,3.52548 0.49237,-0.3043 0.89522,-1.42672 0.89522,-2.49426 z m 204.55931,1.96306 c 0.37254,-0.60278 -0.0509,-1.82421 -0.94099,-2.71429 -1.49109,-1.4911 -1.61832,-1.40494 -1.61832,1.09596 0,2.76169 1.33209,3.60401 2.55931,1.61833 z m -11.98788,-2.90404 c 0,-1.1 -0.53644,-2 -1.1921,-2 -0.69976,0 -0.97609,0.82599 -0.66908,2 0.28766,1.1 0.8241,2 1.1921,2 0.36799,0 0.66908,-0.9 0.66908,-2 z M 488.14288,496.7347 c 0,-1.03523 -0.45758,-0.94267 -1.84137,0.37245 -1.01276,0.9625 -1.64769,2.10935 -1.41097,2.54856 0.60529,1.12305 3.25234,-1.25433 3.25234,-2.92101 z m 79.81955,-0.12755 c 0.17575,-1.2375 -0.16175,-2.25 -0.75,-2.25 -0.58825,0 -1.06955,0.65264 -1.06955,1.45031 0,0.79767 -0.7875,1.9348 -1.75,2.52695 -1.51411,0.93152 -1.41302,1.03931 0.75,0.79969 1.72386,-0.19097 2.59921,-0.97547 2.81955,-2.52695 z m 209.18045,1.30902 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 31.71429,-3.27331 c -0.91667,-0.91666 -1.98203,-1.3513 -2.36748,-0.96585 -0.38544,0.38544 0.16563,1.33436 1.22462,2.10871 2.49394,1.82362 3.30164,1.01592 1.14286,-1.14286 z m -324.71429,-0.28571 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m 218.5,-3 c -0.48382,-0.78284 -1.05907,-0.84093 -1.72574,-0.17427 -0.55,0.55 -0.67341,1.52842 -0.27426,2.17427 0.48382,0.78284 1.05907,0.84093 1.72574,0.17426 0.55,-0.55 0.67341,-1.52841 0.27426,-2.17426 z m -152.5,-0.95031 c 0,-0.52267 -0.78375,-1.38892 -1.74167,-1.925 -0.95792,-0.53608 -1.40042,-1.31594 -0.98333,-1.73302 0.41708,-0.41709 1.29083,-0.22584 1.94167,0.425 0.65083,0.65083 1.54333,1.18333 1.98333,1.18333 1.16279,0 0.982,-3.76949 -0.21631,-4.51008 -1.28367,-0.79336 -0.29546,-2.48992 1.45033,-2.48992 0.72379,0 1.6393,1.4625 2.03447,3.25 0.39517,1.7875 0.93892,2.6875 1.20834,2 0.26941,-0.6875 1.40219,-1.25 2.51729,-1.25 1.98576,0 1.98301,-0.036 -0.13346,-1.75 -2.10602,-1.70555 -1.96514,-1.75603 5.54661,-1.98745 7.37058,-0.22708 11.39273,-1.78667 11.39273,-4.41754 0,-1.36531 -4.99228,-0.96723 -5.07895,0.40499 -0.0632,1 -0.17982,1 -0.58333,0 -0.64418,-1.59646 -60.33772,-1.84379 -60.33772,-0.25 0,0.55 1.0125,0.98545 2.25,0.96768 5.49356,-0.0789 27.75,4.53845 27.75,5.75708 0,0.70138 0.57471,1.27524 1.27714,1.27524 0.70243,0 2.7552,1.35 4.56172,3 3.33397,3.04512 5.16114,3.77075 5.16114,2.04969 z m -8,-8.04969 c 0,-0.55 0.42344,-1 0.94098,-1 0.51754,0 1.2191,0.45 1.55902,1 0.33992,0.55 -0.0835,1 -0.94098,1 -0.85746,0 -1.55902,-0.45 -1.55902,-1 z m 13,7 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 5,-0.5 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -1.56157,0 -1.98397,1.1827 -0.83333,2.33333 1.15063,1.15064 2.33333,0.72824 2.33333,-0.83333 z M -4.19045,700.69048 c -0.366667,-0.36666 -0.666667,-48.0419 -0.666667,-105.94496 v -105.2783 l -5.689674,-4.07428 c -7.239016,-5.18375 -13.904918,-8.43409 -25.541554,-12.45424 -8.752868,-3.02388 -9.285529,-3.37048 -9.569837,-6.22701 -0.165586,-1.66369 0.284414,-3.48858 1,-4.05531 0.855918,-0.67786 29.947975,-1.23038 85.029575,-1.61488 74.135407,-0.5175 83.902837,-0.41014 85.249997,0.93702 1.26259,1.26259 1.52149,4.99451 1.52149,21.93163 v 20.41014 l 23.24276,0.26843 23.24277,0.26843 1.68054,3.5704 c 0.92429,1.96371 11.5765,28.06371 23.67158,58 12.09508,29.93628 22.89781,56.4546 24.00606,58.9296 l 2.01502,4.5 0.0706,-65.05 c 0.0534,-49.18109 0.36338,-65.34274 1.27064,-66.25 0.74635,-0.74635 4.43485,-1.2 9.75681,-1.2 h 8.55681 l 45.99319,52.9974 45.99319,52.99741 0.26108,-41.63159 c 0.18795,-29.97115 -0.0573,-42.01526 -0.87576,-43.0014 -2.29401,-2.76411 -12.60571,-8.26294 -20.67406,-11.02466 -6.54831,-2.24143 -8.40904,-3.31233 -8.86167,-5.10015 -1.26567,-4.99935 -0.0534,-5.23701 26.71387,-5.23701 13.65019,0 25.05165,0.37719 25.33657,0.8382 0.28492,0.46101 0.8348,45.07594 1.22195,99.14428 0.68035,95.01458 0.64184,98.35146 -1.15014,99.66179 -1.01974,0.74565 -2.40166,1.35573 -3.07093,1.35573 -0.66928,0 -11.28818,-10.9125 -23.59757,-24.25 -12.30938,-13.3375 -35.98194,-38.99308 -52.60569,-57.01241 l -30.22498,-32.76241 0.26368,32.7356 0.26368,32.73559 6.72146,4.12857 c 3.69681,2.27071 9.88554,5.12717 13.75274,6.34768 7.65021,2.41444 9.86407,4.64253 8.0258,8.07738 -1.02717,1.91928 -2.09382,2 -26.42819,2 -28.21308,0 -26.57181,0.43742 -26.57181,-7.08179 v -3.91821 h -33.06574 c -20.88071,0 -33.77854,-0.38147 -35,-1.03518 -1.22604,-0.65616 -1.93426,-2.09132 -1.93426,-3.91964 0,-2.59463 0.5275,-3.05722 5.25,-4.60399 7.0392,-2.30557 16.72594,-7.21491 17.32712,-8.78156 0.26706,-0.69595 -0.20958,-2.92907 -1.0592,-4.9625 l -1.54476,-3.69713 h -24.39258 -24.39258 l -1.59761,4.68875 c -1.26431,3.71054 -1.33608,4.86637 -0.34401,5.54015 3.31451,2.25108 10.70964,5.67634 14.75362,6.83356 2.475,0.70824 5.0625,1.71402 5.75,2.23507 1.83476,1.39054 1.52282,5.48661 -0.5,6.5654 -0.9625,0.51331 -11.75238,1.08569 -23.97751,1.27196 -19.22653,0.29294 -22.440827,0.12534 -23.807567,-1.2414 -1.44008,-1.44008 -1.0824,-2.85636 4.037467,-15.98678 3.08964,-7.92369 10.29877,-26.55671 16.02028,-41.40671 5.72151,-14.85 14.85266,-38.475 20.29145,-52.5 5.97507,-15.40791 9.55201,-25.936 9.03797,-26.60165 -0.8765,-1.135 -12.60491,-6.69565 -16.60209,-7.87133 l -2.25,-0.66179 v 14.94494 c 0,16.35701 -0.42042,17.61807 -5.67163,17.01209 -2.67986,-0.30925 -2.88057,-0.72839 -4.97255,-10.38401 -2.59157,-11.96154 -6.25394,-23.18457 -10.63277,-32.58321 l -3.19376,-6.85504 H 82.407523 62.142883 v 31 31 h 24.3 c 17.566667,0 24.632507,0.33251 25.499997,1.2 0.81986,0.81986 1.2,5.66667 1.2,15.3 0,9.63333 -0.38014,14.48014 -1.2,15.3 -0.86749,0.86749 -7.93333,1.2 -25.499997,1.2 h -24.3 v 40.94496 40.94497 l 5.75,4.13318 c 7.31726,5.25974 20.08009,11.38365 28.3362,13.59638 7.253217,1.94395 7.440807,2.05803 8.352557,5.07936 0.45996,1.52422 0.0342,2.82816 -1.38761,4.25 -2.01594,2.01594 -2.94945,2.05115 -54.384477,2.05115 -28.783337,0 -52.633337,-0.3 -53.000003,-0.66667 z m 7.328366,-9.65288 c 0.0027,-0.45075 -1.007533,-0.67575 -2.245033,-0.5 -1.780376,0.25285 -2.305248,1.05008 -2.514699,3.81955 l -0.264698,3.5 2.509731,-3 c 1.380353,-1.65 2.511967,-3.3688 2.514699,-3.81955 z m 94.504967,3.31955 c -1.1,-0.47269 -3.125,-0.88417 -4.5,-0.9144 -1.97037,-0.0433 -2.18222,0.15039 -1,0.9144 0.825,0.53316 2.85,0.94464 4.5,0.9144 2.57572,-0.0472 2.71714,-0.17652 1,-0.9144 z m -8.5,-1.39159 c 0,-0.76538 -1.16327,-1.68356 -2.58504,-2.0404 -2.91065,-0.73052 -6.41496,0.0885 -6.41496,1.49938 0,1.39593 3.74836,1.1247 4.38626,-0.31739 0.40221,-0.9093 0.90052,-0.77301 1.82821,0.5 1.5336,2.10444 2.78553,2.26552 2.78553,0.35841 z m -64.473008,-1.56474 c -0.325073,-0.52598 -1.251631,-0.70283 -2.059017,-0.39301 -2.067113,0.79323 -1.823523,1.34934 0.591042,1.34934 1.132459,0 1.793048,-0.43035 1.467975,-0.95633 z m 14.473008,0.123 c 0,-1.30208 -1.18877,-2.16804 -2.15579,-1.57039 -1.03422,0.63919 -0.14245,2.40372 1.21481,2.40372 0.51754,0 0.94098,-0.375 0.94098,-0.83333 z m 6.10574,-0.0298 c 0.66501,1.04964 0.86716,0.93607 0.87895,-0.49384 0.0102,-1.24272 -0.48087,-1.66658 -1.48469,-1.28138 -0.825,0.31658 -1.5,0.0647 -1.5,-0.55968 0,-0.62441 -0.23559,-0.89969 -0.52354,-0.61174 -0.28794,0.28794 -0.20536,1.35269 0.18352,2.3661 0.4876,1.27066 0.84286,1.43516 1.14459,0.52998 0.35547,-1.06641 0.59951,-1.05693 1.30117,0.0506 z m 32.87927,-1.16486 c -1.15781,-2.16342 -2.98501,-1.80408 -2.98501,0.58701 0,0.79254 0.91583,1.44098 2.03518,1.44098 1.73468,0 1.87493,-0.29945 0.94983,-2.02801 z m -21.53227,-4.04846 c -0.31393,-0.50796 -2.56922,-0.92355 -5.01176,-0.92355 -4.03649,0 -4.44098,0.22137 -4.44098,2.43045 0,1.74676 0.63293,2.53207 2.25,2.7917 2.54811,0.40911 8.07406,-2.88879 7.20274,-4.29862 z M 3.91129,683.34287 c -1.007973,-3.9711 -2.768407,-4.56039 -2.768407,-0.9267 0,2.41761 -1.692245,2.55747 -2.310674,0.19098 -0.251528,-0.9625 -0.509524,-0.273 -0.573325,1.53222 -0.08989,2.54342 0.390462,3.47415 2.133999,4.13484 3.529095,1.33731 4.694836,-0.29657 3.518407,-4.93134 z m 6.731593,5.01428 c 0.339919,-0.55 0.141476,-1 -0.440983,-1 -0.582459,0 -1.059017,0.45 -1.059017,1 0,0.55 0.198442,1 0.440983,1 0.242541,0 0.719098,-0.45 1.059017,-1 z m 12.5,-0.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -10,-4.55902 c 0,-0.55 -0.198442,-1 -0.440983,-1 -0.242541,0 -0.719098,0.45 -1.059017,1 -0.339919,0.55 -0.141476,1 0.440983,1 0.582459,0 1.059017,-0.45 1.059017,-1 z m 45.25,-1.21307 c 0.9625,0.19784 1.75,-0.0934 1.75,-0.64718 0,-0.5538 -1.2375,-1.1493 -2.75,-1.32333 -1.92246,-0.2212 -2.66679,-0.82034 -2.47348,-1.99101 0.15209,-0.92103 -0.18541,-1.96009 -0.75,-2.30902 -0.56459,-0.34893 -1.02652,-1.50787 -1.02652,-2.57541 0,-2.5514 -1.19266,-2.46338 -2.86303,0.2113 -1.15551,1.85027 -1.1191,2.27821 0.25945,3.04969 2.02787,1.13485 2.11603,3.20865 0.10358,2.4364 -0.825,-0.31658 -1.5,-0.13972 -1.5,0.39301 0,0.53274 0.45,0.96862 1,0.96862 0.55,0 1,0.642 1,1.42668 0,1.80876 3.17604,2.59798 4.5,1.11821 0.55,-0.61473 1.7875,-0.95581 2.75,-0.75796 z M 8.547235,679.74581 c 0.452567,-1.17937 0.191242,-1.44745 -0.974799,-1 -0.87622,0.33624 -1.807881,0.61134 -2.070357,0.61134 -0.262477,0 -0.199115,0.45 0.140804,1 0.917278,1.48419 2.204168,1.21331 2.904352,-0.61134 z m 339.885855,-2.38689 c -0.2874,-1.09903 0.20473,-3.1082 1.09362,-4.46482 0.88889,-1.35662 1.58064,-3.71992 1.53722,-5.25177 -0.0434,-1.53185 -0.30592,-2.22268 -0.58333,-1.53518 -0.81884,2.0293 -2.06932,1.43437 -2.57798,-1.2265 -0.57666,-3.01659 0.10737,-3.87868 1.89825,-2.39238 1.0289,0.85391 1.34201,0.73522 1.34201,-0.50868 0,-0.89234 -0.675,-1.62244 -1.5,-1.62244 -1.84045,0 -1.98141,-3.35558 -0.20295,-4.83156 0.88485,-0.73437 1.36983,-4.46312 1.52609,-11.73328 0.20653,-9.60942 0.44762,-10.84806 2.45295,-12.60246 l 2.22391,-1.94563 -2.25,1.09165 c -2.21547,1.07489 -2.25147,0.98752 -2.3461,-5.69354 -0.0529,-3.73185 -0.0148,-12.97268 0.0845,-20.53518 0.15231,-11.59878 -0.0527,-13.75 -1.31028,-13.75 -0.99852,0 -1.31813,0.66047 -0.96784,2 0.36373,1.39092 0.0307,2 -1.09362,2 -1.87005,0 -2.14994,-3.13499 -0.54724,-6.12966 0.77855,-1.45473 0.74525,-2.38876 -0.12244,-3.43426 -0.94994,-1.14458 -0.87262,-1.43608 0.38089,-1.43608 0.86501,0 2.04377,0.7875 2.61946,1.75 0.74674,1.24847 0.95021,-3.53663 0.70998,-16.69657 -0.23444,-12.84267 -0.68923,-18.56407 -1.49703,-18.83334 -0.63815,-0.21271 -1.16028,-1.6727 -1.16028,-3.24441 0,-1.5717 -0.45,-3.13576 -1,-3.47568 -1.7419,-1.07655 -1.08024,-4.24575 1,-4.78975 1.59577,-0.4173 2,-1.36401 2,-4.68402 0,-3.70593 -0.21873,-4.09158 -2,-3.52623 -1.14731,0.36414 -2,0.1797 -2,-0.43261 0,-0.58707 0.61875,-1.06739 1.375,-1.06739 1.5098,0 2.70171,-4.48974 2.48882,-9.375 -0.10261,-2.35448 -0.24304,-2.57022 -0.56955,-0.875 -0.52985,2.7509 -3.29427,3.01022 -3.29427,0.30902 0,-2.57628 -1.32435,-3.27355 -3.37272,-1.77574 -1.446,1.05733 -1.66242,3.47612 -1.63008,18.21796 0.0205,9.34932 0.10042,17.67376 0.17758,18.49876 0.0772,0.825 0.0694,14.4375 -0.0172,30.25 -0.13743,25.08218 -0.3529,28.75 -1.68891,28.75 -0.84227,0 -1.79041,0.675 -2.10699,1.5 -0.90327,2.35386 -2.36163,1.75572 -2.36163,-0.96862 0,-1.78519 -0.41591,-2.30901 -1.50234,-1.89211 -1.57663,0.60501 -5.40535,-3.17108 -5.46439,-5.38927 -0.0183,-0.6875 -1.13171,-1.25 -2.47425,-1.25 -1.34254,0 -2.6818,-0.38965 -2.97614,-0.86589 -0.29433,-0.47624 -1.78339,-0.69917 -3.30901,-0.4954 l -2.77387,0.37048 2.75,-1.08793 c 3.40851,-1.34844 3.47371,-2.89274 0.25,-5.92126 -1.375,-1.29175 -2.5,-2.74177 -2.5,-3.22228 0,-0.48051 -1.2375,-1.96285 -2.75,-3.29408 -2.6885,-2.36631 -2.69968,-2.42114 -0.5,-2.45204 1.2375,-0.0174 2.25,-0.4265 2.25,-0.90916 0,-1.82615 -2.88252,-3.19003 -5.40435,-2.55709 -1.98841,0.49905 -2.5957,0.27516 -2.5957,-0.95694 0,-0.88463 -0.63287,-1.60841 -1.40638,-1.60841 -0.91405,0 -1.22329,0.70014 -0.88337,2 0.28766,1.1 0.95803,2 1.48971,2 0.53169,0 0.77721,0.5625 0.5456,1.25 -0.2316,0.6875 0.2934,1.81283 1.16667,2.50074 1.4409,1.13504 1.4259,1.34776 -0.16223,2.29969 -1.87302,1.12269 -2.40982,3.94957 -0.75,3.94957 0.55,0 1,0.45 1,1 0,0.55 -1.06197,1 -2.35993,1 -1.29796,0 -3.12028,1.0125 -4.0496,2.25 -2.35516,3.13616 -2.40133,4.24715 -0.17656,4.24868 1.05265,7.3e-4 2.10265,0.56382 2.33334,1.25132 0.23068,0.6875 -0.23798,1.25 -1.04147,1.25 -2.96316,0 -5.57752,6.84629 -2.95578,7.74038 0.73641,0.25114 1.25,-0.42969 1.25,-1.65705 0,-1.14583 0.45,-2.08333 1,-2.08333 0.55,0 1,0.417 1,0.92668 0,0.50967 0.74484,1.07217 1.65519,1.25 1.21593,0.23751 0.8842,0.7214 -1.25,1.82332 -3.28187,1.69449 -5.32637,3.89105 -5.37339,5.77305 -0.0234,0.9387 0.60782,0.85396 2.40356,-0.32266 3.18197,-2.0849 8.11518,-1.5872 7.92575,0.79961 -0.0896,1.12852 0.56991,1.75 1.85699,1.75 1.3854,0 1.81531,0.47054 1.40554,1.53839 -0.38228,0.9962 0.19677,1.85495 1.64301,2.43661 2.02774,0.81553 1.93958,0.90406 -0.95763,0.96161 -1.75504,0.0349 -3.45695,0.49374 -3.78203,1.01972 -0.32507,0.52598 -1.19356,0.72511 -1.92997,0.44253 -1.57091,-0.60282 -2.78678,1.94305 -1.95865,4.10114 0.31659,0.825 1.22902,1.5 2.02764,1.5 0.79861,0 1.20542,0.39901 0.90402,0.88669 -0.30141,0.48768 0.11708,1.43867 0.92997,2.11331 0.81289,0.67464 1.25538,1.58678 0.98332,2.02698 -0.27206,0.4402 0.84677,1.39414 2.48627,2.11985 1.63951,0.72572 3.50107,2.57523 4.1368,4.11003 0.63574,1.53479 1.83034,3.16798 2.65469,3.62931 0.82434,0.46132 1.56004,1.91316 1.6349,3.2263 0.11176,1.9604 0.61177,2.33814 2.79493,2.11146 1.46236,-0.15184 2.9442,0.18566 3.29298,0.75 0.34878,0.56434 1.28259,1.02607 2.07513,1.02607 1.73811,0 1.93634,-2.66821 0.24023,-3.23358 -0.90953,-0.30318 -0.8932,-0.59032 0.0673,-1.18395 0.83573,-0.51651 1.45722,-0.0603 1.82289,1.33799 0.41139,1.57314 0.88088,1.8511 1.81591,1.07509 0.91068,-0.75579 1.42373,-0.62272 1.84647,0.47893 0.32197,0.83903 0.13369,1.52552 -0.4184,1.52552 -0.66714,0 -0.66276,0.63723 0.0131,1.90004 0.7816,1.46042 0.64951,2.04101 -0.57088,2.50932 -1.12513,0.43175 -1.40561,1.33499 -0.96264,3.09996 0.51596,2.05575 0.26224,2.49068 -1.45294,2.49068 -1.14294,0 -1.79996,0.45 -1.46004,1 1.12772,1.82469 3.66236,1.03771 6.52394,-2.02562 2.92099,-3.12694 4.95722,-2.51833 2.85212,0.85248 -1.79448,2.87342 -0.41969,5.17314 3.09256,5.17314 2.02789,0 3.03138,0.49655 3.03138,1.5 0,0.825 -0.44702,1.5 -0.99339,1.5 -0.54636,0 -0.0152,1.125 1.18034,2.5 2.62413,3.01802 2.7704,3.05291 2.10326,0.50177 z m -4.29021,-14.00177 c 0,-1.86667 0.26667,-2.13333 1.2,-1.2 0.93333,0.93333 0.93333,1.46667 0,2.4 -0.93333,0.93333 -1.2,0.66667 -1.2,-1.2 z m -0.25845,-8.25 c -0.35469,-1.04295 0.12867,-2.41743 1.98428,-5.6425 0.12421,-0.21588 0.89907,0.16623 1.72191,0.84913 1.32136,1.09663 1.29499,1.51834 -0.22583,3.61108 -1.94924,2.68226 -2.86449,2.99317 -3.48036,1.18229 z m -6.07488,-2.41667 c -1.233,-1.23299 -0.68141,-2.09736 1.61904,-2.53712 1.70389,-0.32572 2.28572,0.0264 2.28572,1.38343 0,1.76426 -2.54288,2.51558 -3.90476,1.15369 z m -17.66667,-7.33333 c 0,-0.55 0.675,-1 1.5,-1 0.825,0 1.5,0.45 1.5,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,-0.45 -1.5,-1 z m -2,-4.87756 c 0,-0.48265 0.675,-1.43775 1.5,-2.12244 1.2532,-1.04007 1.5,-0.89568 1.5,0.87756 0,1.21995 -0.63782,2.12244 -1.5,2.12244 -0.825,0 -1.5,-0.3949 -1.5,-0.87756 z m 6,-0.93212 c 0,-0.53699 0.7126,-1.24979 1.58356,-1.58401 0.97391,-0.37373 1.43108,-0.15024 1.1875,0.58051 -0.49828,1.49484 -2.77106,2.31789 -2.77106,1.0035 z m 6.5,-2.19032 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -1.37188,-2.89966 c -0.75454,-0.47797 -1.16744,-1.48238 -0.91756,-2.23202 0.31643,-0.94929 0.8194,-0.68086 1.65707,0.88434 1.32968,2.48454 1.25887,2.61358 -0.73951,1.34768 z m 6.87188,-0.9779 c 0,-1.41748 2.82392,-3.3493 3.91252,-2.6765 1.56024,0.96427 0.0886,3.55406 -2.01951,3.55406 -1.04115,0 -1.89301,-0.3949 -1.89301,-0.87756 z m 8,-4.62244 c 0,-1.49071 0.4306,-2.35191 1,-2 0.55,0.33992 1,1.23992 1,2 0,0.76008 -0.45,1.66008 -1,2 -0.5694,0.35191 -1,-0.50929 -1,-2 z m -15,-1.5 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -15,-6.87756 c 0,-0.48265 0.675,-1.43775 1.5,-2.12244 1.62821,-1.35129 1.83174,-1.02807 0.89301,1.41821 -0.64255,1.67447 -2.39301,2.18961 -2.39301,0.70423 z m 5,-4.00441 c 0,-0.55 0.45,-1.27811 1,-1.61803 0.55,-0.33992 1,-0.16803 1,0.38197 0,0.55 -0.45,1.27811 -1,1.61803 -0.55,0.33992 -1,0.16803 -1,-0.38197 z m -13.75,-6.54369 c -3.08768,-1.43899 -2.81927,-2.24101 0.75,-2.24101 1.76386,0 3,0.52508 3,1.27432 0,1.85093 -1.19286,2.15843 -3.75,0.96669 z m 14.75,0.42566 c -1.82797,-1.18132 -0.24909,-1.18132 2.5,0 1.31874,0.56668 1.48906,0.87815 0.5,0.9144 -0.825,0.0302 -2.175,-0.38124 -3,-0.9144 z m -10.36163,-6.5 c -0.35062,-0.91371 -0.002,-1.5 0.89301,-1.5 0.80774,0 1.46862,0.675 1.46862,1.5 0,0.825 -0.40186,1.5 -0.89301,1.5 -0.49116,0 -1.15203,-0.675 -1.46862,-1.5 z m 36.36163,-4 c 0,-1.375 0.45,-2.5 1,-2.5 0.55,0 1,1.125 1,2.5 0,1.375 -0.45,2.5 -1,2.5 -0.55,0 -1,-1.125 -1,-2.5 z m 0.60478,-19.08753 c -0.85526,-2.22879 -0.7871,-2.41247 0.89522,-2.41247 0.825,0 1.5,0.64844 1.5,1.44098 0,2.11561 -1.69272,2.80217 -2.39522,0.97149 z m -0.60478,-6.85345 c 0,-0.79254 0.45,-1.7191 1,-2.05902 0.55,-0.33992 1,0.30852 1,1.44098 0,1.13246 -0.45,2.05902 -1,2.05902 -0.55,0 -1,-0.64844 -1,-1.44098 z m 1,-10.05902 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m -2,-40.08333 c 0,-0.87084 0.53437,-1.40521 1.1875,-1.1875 1.85422,0.61807 2.16176,2.77083 0.39583,2.77083 -0.87083,0 -1.58333,-0.7125 -1.58333,-1.58333 z M 60.642883,677.35715 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z M 2.42228,673.64286 c -0.539286,-1.40535 -4.279397,-1.80073 -4.279397,-0.45238 0,1.28868 0.734019,1.7381 2.838767,1.7381 1.165013,0 1.737831,-0.51122 1.44063,-1.28572 z m -2.279397,-3.22669 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 2.41655,-4.41589 c -0.34679,-0.90372 -1.048215,-1.64313 -1.558723,-1.64313 -0.51083,0 -0.426291,0.93781 0.18801,2.08565 1.273339,2.37925 2.323439,2.04024 1.370713,-0.44252 z m 41.16723,-0.39313 c 0.94964,-0.9625 3.56929,-2.26832 5.82142,-2.90182 2.25214,-0.63351 3.3073,-1.19601 2.3448,-1.25 -0.9625,-0.054 -1.75,-0.77318 -1.75,-1.59818 0,-2.14122 -2.30388,-1.85324 -4,0.5 -0.79284,1.1 -2.04373,2 -2.77978,2 -0.73604,0 -1.08928,0.40285 -0.78498,0.89522 0.3043,0.49236 -0.14766,1.16419 -1.00437,1.49293 -0.8567,0.32875 -1.27755,1.0509 -0.93524,1.60479 0.83483,1.35077 1.08078,1.2916 3.08815,-0.74294 z m 191.864797,-3.6949 c 1.4393,-0.15799 2.86468,-0.53503 3.1675,-0.83785 0.88457,-0.88456 -3.97116,-5.23696 -5.46091,-4.89485 -0.78629,0.18056 -1.06518,-0.159 -0.66388,-0.8083 0.38059,-0.61582 1.21325,-0.93936 1.85035,-0.71899 2.0409,0.70596 5.66044,-4.17971 5.62795,-7.59663 -0.0253,-2.65694 -0.20298,-2.90218 -1.04969,-1.44848 -2.15689,3.70316 -4.9199,1.45335 -4.9199,-4.0061 v -2.59253 l 2.5,2.34863 c 2.78008,2.61175 3.22383,1.62381 1.10504,-2.46017 -0.76722,-1.47883 -1.66767,-2.24751 -2.00099,-1.70818 -0.71006,1.1489 -4.60405,0.34687 -4.60405,-0.94828 0,-0.48585 0.87344,-0.88337 1.94098,-0.88337 2.43804,0 3.63995,-1.81907 2.17189,-3.28713 -1.5677,-1.5677 -1.38337,-2.7539 0.32602,-2.09795 0.79139,0.30369 1.72715,1.86457 2.07946,3.46862 0.35231,1.60405 1.05481,2.91646 1.56111,2.91646 1.28999,0 1.15324,-3.73815 -0.16659,-4.55385 -0.78285,-0.48382 -0.78285,-0.97617 0,-1.75902 2.5422,-2.5422 1.21945,-7.34315 -3.16287,-11.47974 -1.87317,-1.76814 -2.40954,-6.20739 -0.75,-6.20739 0.55,0 1,0.9 1,2 0,1.1 0.61312,2 1.36249,2 1.39324,0 1.45188,-2.91931 0.12538,-6.24157 -0.4572,-1.14505 -0.14606,-1.95236 0.90838,-2.35699 2.18368,-0.83796 2.27708,-8.40144 0.10375,-8.40144 -0.83333,0 -1.5,-0.88889 -1.5,-2 0,-1.1 -0.45,-2 -1,-2 -0.55,0 -0.98569,-0.7875 -0.9682,-1.75 0.0289,-1.58906 0.16588,-1.57278 1.48967,0.177 1.87654,2.4804 2.71545,1.56865 2.86148,-3.10992 0.0883,-2.82763 -0.31351,-3.83811 -1.63295,-4.10704 -1.21865,-0.24839 -1.75,0.27283 -1.75,1.71664 0,1.14032 -0.45,2.07332 -1,2.07332 -0.55,0 -1,-2.475 -1,-5.5 0,-3.025 0.45,-5.5 1,-5.5 0.55,0 1,-0.675 1,-1.5 0,-1.76925 1.15924,-1.94076 2.70047,-0.39953 1.22308,1.22308 1.39769,0.18782 1.55491,-9.21899 0.0738,-4.41651 0.50964,-5.87815 2.03716,-6.8321 1.3938,-0.87044 2.24922,-0.90762 3.02536,-0.13148 1.36126,1.36126 4.01498,1.42973 3.1821,0.0821 -0.33992,-0.55 -0.40328,-1 -0.1408,-1 0.26247,0 1.24138,-0.29323 2.17535,-0.65163 1.45152,-0.557 1.53668,-0.34999 0.58646,1.42552 -0.6714,1.25453 -0.78424,2.96228 -0.2849,4.3121 0.70064,1.89401 0.92396,1.98165 1.46394,0.57448 0.35045,-0.91326 1.3263,-1.66047 2.16857,-1.66047 1.98884,0 1.99009,-2.88675 0.002,-3.64981 -0.96547,-0.37049 -1.30951,-1.28113 -0.93261,-2.46861 0.32963,-1.03991 0.1193,-1.88158 -0.47062,-1.88158 -0.58707,0 -1.06739,-0.64844 -1.06739,-1.44098 0,-1.55446 -1.80634,-3.08602 -2.64755,-2.2448 -0.28297,0.28297 -0.031,1.41792 0.55996,2.52212 0.93591,1.74876 0.71647,2.08626 -1.70172,2.61738 -3.67718,0.80765 -10.29647,-2.26658 -7.84012,-3.64122 0.89618,-0.50154 1.62943,-2.01452 1.62943,-3.36219 0,-1.53371 0.57286,-2.45031 1.53138,-2.45031 1.87422,0 3.1681,-2.94967 1.69362,-3.86094 -0.58654,-0.3625 -1.39446,-1.96608 -1.79539,-3.5635 -0.61496,-2.45017 -0.4696,-2.80488 0.9294,-2.26804 0.9121,0.35001 2.77945,0.21014 4.14967,-0.31082 3.17527,-1.20724 3.41852,-5.43011 0.40567,-7.04254 -2.42973,-1.30035 -3.82237,-0.46218 -2.09768,1.26251 1.57709,1.57709 1.52587,5.06298 -0.0667,4.53769 -0.6875,-0.22676 -1.75738,-1.42111 -2.3775,-2.65411 -1.10488,-2.19683 -1.15112,-2.17518 -2.30434,1.07897 -1.07535,3.03442 -1.29014,3.16892 -2.49085,1.55969 -1.51202,-2.02646 -2.83092,-0.96665 -4.05835,3.26109 -0.68489,2.35904 -0.64356,2.39217 0.73301,0.58752 1.00611,-1.31899 2.04675,-1.68473 3.35342,-1.17858 1.65206,0.63995 1.70258,0.88478 0.39461,1.91248 -0.825,0.64822 -1.5,2.07858 -1.5,3.17858 0,3.16184 -3.75626,3.07744 -5.2222,-0.11734 -0.67222,-1.46498 -0.91396,-3.16234 -0.53722,-3.77193 0.37675,-0.60958 0.70174,-2.00083 0.72221,-3.09165 0.022,-1.17391 0.85343,-2.13656 2.03721,-2.35881 4.10431,-0.77055 6.16993,-4.16027 2.53521,-4.16027 -2.03221,0 -4.03518,-2.69744 -4.03518,-5.43426 0,-1.95628 1.94347,-1.99527 5.57382,-0.11182 2.56122,1.32878 2.91803,1.28888 4.14551,-0.4636 1.09414,-1.5621 1.10736,-2.29497 0.0713,-3.95392 -0.69943,-1.12002 -1.56099,-2.0364 -1.91455,-2.0364 -0.35355,0 -0.89346,-0.95845 -1.19979,-2.12988 -0.37699,-1.4416 -1.06099,-1.92633 -2.11663,-1.5 -0.85782,0.34643 -2.18916,0.88557 -2.95855,1.19807 -1.06783,0.43372 -1.49636,-0.69038 -1.81075,-4.75 -0.22653,-2.92501 -0.27203,-5.50569 -0.10112,-5.73486 0.17092,-0.22916 1.68799,-0.41666 3.37127,-0.41666 2.34914,0 3.40106,-0.65856 4.52568,-2.83334 l 1.46517,-2.83333 h -7.02568 -7.02568 v 5.5 c 0,3.69123 0.41108,5.52596 1.25,5.57895 1,0.0632 1,0.17982 0,0.58333 -1.48421,0.59889 -1.68935,3.33772 -0.25,3.33772 1.27221,0 1.31661,2.72205 0.0516,3.16667 -1.13527,0.39903 -1.20511,2.40596 -1.16826,33.56882 0.0254,21.43114 0.20732,24.16693 1.57264,23.64301 2.10925,-0.8094 2.03417,2.24779 -0.0843,3.43336 -1.45714,0.81545 -1.61457,4.36817 -1.49779,33.79969 0.0718,18.08865 -0.28908,34.35095 -0.8019,36.13845 -0.8223,2.8662 -0.70447,3.25 0.99779,3.25 1.0616,0 1.93019,0.45 1.93019,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,2.54474 -1,5.65499 0,5.50883 0.0495,5.61017 1.91583,3.92118 1.05371,-0.95359 3.09345,-1.86307 4.53275,-2.02107 z m -5.44858,-22.5551 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 4,-14.55902 c 0,-0.85746 0.45,-1.2809 1,-0.94098 0.55,0.33992 1,1.04148 1,1.55902 0,0.51754 -0.45,0.94098 -1,0.94098 -0.55,0 -1,-0.70156 -1,-1.55902 z m 0,-22.52431 c 0,-3.82597 2.35554,-3.48268 2.81642,0.41045 0.22425,1.89427 -0.13987,2.67288 -1.25,2.67288 -1.08321,0 -1.56642,-0.95115 -1.56642,-3.08333 z m 0.66667,-29.58334 c -1.37111,-1.3711 -0.67253,-5.33333 0.94032,-5.33333 1.00201,0 1.39492,0.55264 1.04367,1.46797 -0.30982,0.80739 -0.13297,1.73395 0.39301,2.05902 0.52598,0.32508 0.95633,1.01449 0.95633,1.53203 0,1.07834 -2.33698,1.27066 -3.33333,0.27431 z m 1.83333,-13.33333 c -0.33992,-0.55 -0.16803,-1 0.38197,-1 0.55,0 1.27811,0.45 1.61803,1 0.33992,0.55 0.16803,1 -0.38197,1 -0.55,0 -1.27811,-0.45 -1.61803,-1 z m -3.5,-1.10178 c -1.12837,-0.79022 -1.19031,-1.17614 -0.25,-1.55768 0.6875,-0.27897 1.25,-1.14471 1.25,-1.92387 0,-0.77917 0.9,-1.41667 2,-1.41667 1.1,0 2,0.45 2,1 0,0.55 -0.6437,1 -1.43045,1 -0.78675,0 -1.57425,0.88846 -1.75,1.97435 -0.24881,1.53731 -0.65159,1.74182 -1.81955,0.92387 z m 1.5,-6.89822 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m 3.5,-28.5 c 0,-0.825 0.66088,-1.5 1.46862,-1.5 0.89459,0 1.24363,0.58629 0.89301,1.5 -0.31659,0.825 -0.97746,1.5 -1.46862,1.5 -0.49115,0 -0.89301,-0.675 -0.89301,-1.5 z m -4,-3.89301 c 0,-0.21616 0.675,-0.65203 1.5,-0.96862 0.825,-0.31658 1.5,-0.13972 1.5,0.39301 0,0.53274 -0.675,0.96862 -1.5,0.96862 -0.825,0 -1.5,-0.17686 -1.5,-0.39301 z m 36,145.39301 c -1.97012,-1.27319 -4.28687,-1.27319 -3.5,0 0.33992,0.55 1.60398,0.99311 2.80902,0.98469 1.78123,-0.0125 1.91046,-0.1966 0.69098,-0.98469 z m 60,0 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -65,-0.98658 c 0,-1.58554 -6.17549,-3.64972 -10.24805,-3.42544 -3.41378,0.188 -3.81921,-0.0682 -4.54594,-2.87277 -0.43884,-1.69354 -1.30431,-3.24798 -1.92327,-3.4543 -0.67933,-0.22644 -0.92385,0.39548 -0.61694,1.56913 0.71707,2.74207 -1.34102,3.64533 -2.6658,1.16996 -0.60519,-1.13081 -1.51847,-1.7976 -2.02951,-1.48176 -0.51103,0.31583 -1.77929,0.11927 -2.81834,-0.43681 -1.03905,-0.55609 -2.14687,-0.75338 -2.46181,-0.43843 -0.98892,0.98892 1.70986,4.357 3.49119,4.357 0.93524,0 1.94504,0.39578 2.244,0.87951 0.29896,0.48373 4.03802,1.65678 8.30902,2.60679 4.271,0.95001 8.21545,1.86871 8.76545,2.04155 2.1805,0.68524 4.5,0.42008 4.5,-0.51443 z M 3.593427,660.20133 c -0.379761,-1.19652 0.01207,-2.69788 0.984551,-3.77246 1.45627,-1.60916 1.462767,-1.9116 0.06597,-3.07084 -0.852167,-0.70723 -1.782763,-1.05251 -2.067992,-0.76728 -0.928344,0.92834 -1.696885,7.63653 -1.063886,9.2861 0.880212,2.29379 2.840354,0.71586 2.08136,-1.67552 z m 328.549453,-0.67751 c 0,-1.30208 -1.18877,-2.16804 -2.15579,-1.57039 -1.03422,0.63919 -0.14245,2.40372 1.21481,2.40372 0.51754,0 0.94098,-0.375 0.94098,-0.83333 z M 38.142883,656.22631 c 0,-1.87463 0.41864,-2.06291 3.48168,-1.56585 3.26844,0.5304 5.52461,-0.63035 4.06408,-2.09088 -0.35998,-0.35998 -0.9885,-0.1141 -1.39671,0.5464 -0.91194,1.47555 -8.14905,-4.14753 -8.14905,-6.33163 0,-1.63886 1.58388,-1.90951 2.5,-0.4272 1.13852,1.84217 2.5,1.02528 2.5,-1.5 0,-1.72012 -0.54592,-2.49522 -1.75,-2.48469 -2.73404,0.0239 -4.03604,1.25485 -4.75424,4.49471 -0.36454,1.64449 -0.9127,3.66498 -1.21813,4.48998 -1.09721,2.96373 -0.95709,5.09098 0.30348,4.60725 0.68936,-0.26453 1.50149,0.16562 1.80475,0.95589 0.83876,2.18579 2.61414,1.71447 2.61414,-0.69398 z m -12,0.13084 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 26.77106,-1.81318 c 0.24358,-0.73075 -0.21359,-0.95424 -1.1875,-0.58051 -0.87096,0.33422 -1.58356,1.04702 -1.58356,1.58401 0,1.31439 2.27278,0.49134 2.77106,-1.0035 z M 0.12757,652.10715 c 0.008422,-0.4125 -0.434687,-0.75 -0.984687,-0.75 -0.55,0 -0.993109,1.0125 -0.984687,2.25 0.01238,1.81944 0.200813,1.96296 0.984687,0.75 0.533156,-0.825 0.976265,-1.8375 0.984687,-2.25 z m 112.8597,-1.75 c 3.38559,0 6.15561,-0.1882 6.15561,-0.41821 0,-0.23002 0.2751,-1.13512 0.61134,-2.01134 0.45158,-1.17681 0.18052,-1.42781 -1.03724,-0.96051 -0.94333,0.36199 -2.48341,-0.12287 -3.60002,-1.1334 -1.55107,-1.4037 -1.82495,-2.55695 -1.33494,-5.62128 0.38151,-2.38587 0.22231,-3.85526 -0.41771,-3.85526 -0.56881,0 -0.79884,-0.9 -0.51118,-2 0.28947,-1.10692 1.36402,-2 2.40638,-2 2.78068,0 2.28935,-2.86 -0.61663,-3.58936 -1.375,-0.3451 -2.5,-1.059 -2.5,-1.58644 0,-0.52743 0.85935,-0.68623 1.90967,-0.35287 1.53845,0.48828 2.14695,-0.13039 3.13032,-3.18261 0.67136,-2.0838 1.55694,-4.23872 1.96794,-4.78872 0.41101,-0.55 1.0813,-2.08689 1.48954,-3.41531 0.40823,-1.32842 1.85677,-3.52984 3.21898,-4.89204 1.87802,-1.87803 2.34095,-3.15566 1.91502,-5.28528 -0.67443,-3.37215 3.00218,-12.90737 4.97686,-12.90737 0.94239,0 1.17168,-0.84997 0.77045,-2.85609 -0.41302,-2.06511 -0.12915,-3.02572 1.025,-3.46861 0.87792,-0.33689 1.59622,-1.1088 1.59622,-1.71534 0,-0.60655 0.675,-1.77782 1.5,-2.60282 1.72426,-1.72426 1.96334,-3.35714 0.49153,-3.35714 -0.64588,0 -0.67617,-0.62921 -0.0842,-1.75 0.50833,-0.9625 1.90873,-4.84465 3.112,-8.627 1.79961,-5.65687 1.94762,-7.02917 0.83423,-7.73468 -2.43449,-1.54267 -3.43219,-0.94401 -4.76916,2.86168 -0.72458,2.0625 -4.377,11.625 -8.1165,21.25 -10.35578,26.65451 -15.15793,39.24654 -16.0173,42 -0.42915,1.375 -3.06859,8.05354 -5.86542,14.8412 -2.79686,6.78765 -5.08518,12.77306 -5.08518,13.30089 0,0.52783 1.50498,-0.18821 3.34439,-1.5912 2.74806,-2.09605 4.44198,-2.55089 9.5,-2.55089 z m -4.84439,-2.38197 c 0,-0.825 0.45,-1.77811 1,-2.11803 0.55,-0.33992 1,0.057 1,0.88197 0,0.825 -0.45,1.77811 -1,2.11803 -0.55,0.33992 -1,-0.057 -1,-0.88197 z m 32.72917,5.7778 c -0.3323,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 28.27083,-0.93951 c 4.125,-0.84773 9.40351,-1.80471 11.73003,-2.12662 2.32652,-0.32192 3.96896,-1.00773 3.64986,-1.52404 -0.68484,-1.1081 2.7331,-3.85386 3.89976,-3.13283 0.44094,0.27252 0.52808,1.35761 0.19364,2.41133 -0.33992,1.07098 -0.13736,1.91584 0.45932,1.91584 0.58707,0 1.06739,-1.125 1.06739,-2.5 0,-3.11104 1.74569,-3.31119 2.18045,-0.25 0.22521,1.58571 1.10103,2.34048 2.9665,2.55648 3.71722,0.4304 9.93144,-2.39024 10.5598,-4.79311 0.6034,-2.30738 3.29325,-2.75543 3.29325,-0.54855 0,1.71539 2.94728,3.46311 4.75,2.81672 0.6875,-0.24651 1.25,0.19497 1.25,0.98107 0,1.2101 3.63986,1.58108 7.81398,0.79641 0.1727,-0.0325 -0.62759,-1.74652 -1.77842,-3.80902 -1.15082,-2.0625 -2.64211,-5.96664 -3.31398,-8.67587 -0.9344,-3.76787 -1.92684,-5.32341 -4.22158,-6.61692 -3.78756,-2.13499 -4.59212,-1.66782 -3.81546,2.21549 0.47501,2.37507 0.29646,2.98763 -0.76748,2.63299 -1.98451,-0.66151 -2.19675,-6.05735 -0.29449,-7.48701 0.86451,-0.64972 2.20309,-0.93908 2.97463,-0.64301 0.93422,0.35849 1.4028,-0.17598 1.4028,-1.60007 0,-1.1761 -0.68841,-2.40254 -1.5298,-2.72541 -0.96547,-0.37049 -1.30951,-1.28113 -0.93261,-2.46861 1.16672,-3.67603 -5.17111,-1.21064 -10.78759,4.19632 -4.33329,4.17165 -4.44559,4.50694 -1.74587,5.21293 1.33695,0.34962 1.80068,1.05424 1.39301,2.11663 -0.33612,0.8759 -0.16112,1.59254 0.38888,1.59254 1.38493,0 2.17893,-2.41801 1.56496,-4.76583 -0.36523,-1.39666 0.0932,-2.11707 1.59758,-2.51047 1.94203,-0.50785 2.05728,-0.26036 1.44928,3.11229 -0.36328,2.0152 -0.93892,4.11401 -1.27918,4.66401 -0.34026,0.55 -0.61866,2.12089 -0.61866,3.49087 0,1.71989 -0.55197,2.4937 -1.78328,2.5 -0.9808,0.005 -2.13744,0.57985 -2.57031,1.2774 -1.19218,1.92116 -6.72717,3.25097 -8.04523,1.93291 -1.8854,-1.8854 -1.21298,-2.94606 1.44481,-2.27899 3.61752,0.90794 4.44301,0.009 3.14628,-3.42651 -1.32822,-3.51885 -1.71501,-3.6076 -4.80778,-1.10323 -2.33416,1.89009 -2.33955,1.88852 -4.30445,-1.25 -1.51329,-2.41716 -2.05226,-2.75274 -2.33518,-1.45393 -0.20231,0.92868 -1.12766,1.87035 -2.05634,2.09261 -1.30211,0.31161 -1.08142,0.65484 0.96434,1.4998 1.45907,0.60264 2.89278,1.4839 3.18601,1.95836 1.20639,1.95198 -13.54284,10.89957 -22.83887,13.85516 -5.55567,1.76637 -2.4456,1.70028 6.5,-0.13813 z m 30,-8.95632 c 0,-0.86218 0.90249,-1.5 2.12244,-1.5 1.77324,0 1.91763,0.2468 0.87756,1.5 -0.68469,0.825 -1.63979,1.5 -2.12244,1.5 -0.48266,0 -0.87756,-0.675 -0.87756,-1.5 z m 8,-21 c 0,-0.825 0.25714,-1.5 0.57143,-1.5 0.31428,0 1.24643,0.675 2.07143,1.5 1.33333,1.33333 1.26984,1.5 -0.57143,1.5 -1.1746,0 -2.07143,-0.64943 -2.07143,-1.5 z m -70,30.10699 c 0,-0.21616 -0.69837,-0.661 -1.55194,-0.98855 -0.88992,-0.34149 -1.29132,-0.17385 -0.94098,0.39301 0.58726,0.95021 2.49292,1.40545 2.49292,0.59554 z M 0.142883,649.35715 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 30.86221,-1.7506 c -0.15868,-1.51283 0.059,-3.31283 0.48365,-4 0.4247,-0.68717 0.45834,-1.75719 0.0748,-2.37782 -0.47681,-0.77149 -0.98564,-0.61334 -1.6087,0.5 -1.19447,2.13434 -2.81196,2.08494 -2.81196,-0.0859 0,-2.80804 -2.633428,0.60813 -3.314809,4.30008 -0.537333,2.91146 -0.401084,3.07578 2.411561,2.90845 1.639588,-0.0975 3.215118,0.20136 3.501178,0.66421 1.00748,1.63014 1.54965,0.81148 1.26428,-1.90905 z m 22.13779,0.33239 c 0,-4.84722 -0.73829,-5.44894 -4.51661,-3.68113 -3.79134,1.7739 -4.47808,3.09934 -1.60583,3.09934 1.03265,0 2.43775,0.675 3.12244,1.5 1.82202,2.1954 3,1.83485 3,-0.91821 z m -34,-0.14081 c 0,-0.85746 -0.45734,-1.27636 -1.016312,-0.9309 -0.558971,0.34546 -0.757414,1.04702 -0.440983,1.55902 0.85724,1.38704 1.457295,1.12841 1.457295,-0.62812 z m -16,-1.00672 c 0,-2.46866 -1.929233,-5.43426 -3.535184,-5.43426 -1.922837,0 -1.894815,2.89776 0.03518,3.63837 0.825,0.31659 1.5,1.20246 1.5,1.96862 0,0.76615 0.45,1.39301 1,1.39301 0.55,0 1,-0.70458 1,-1.56574 z m 5,-1.43426 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 12.749221,-2.60636 c 1.914296,-1.9143 0.636542,-4.7251 -2.356404,-5.18362 -1.785874,-0.27359 -1.793943,-0.21087 -0.142817,1.11024 2.204293,1.76372 2.318543,4.11189 0.159758,3.28348 -1.910572,-0.73315 -3.670032,0.16611 -2.867053,1.46536 0.886579,1.43451 3.425986,1.10507 5.206516,-0.67546 z m 26.250779,-2.83462 c 0,-1.34254 -0.45,-2.7191 -1,-3.05902 -0.55,-0.33992 -1,0.046 -1,0.85765 0,0.81163 -0.52967,1.65224 -1.17705,1.86803 -1.5405,0.5135 -0.12576,2.77432 1.73607,2.77432 0.86109,0 1.44098,-0.98232 1.44098,-2.44098 z m -43.542287,-0.4906 c 0.316661,-0.51237 -0.248916,-1.52487 -1.256837,-2.25 -3.083414,-2.21831 -3.253198,-4.46223 -0.630098,-8.32758 2.840565,-4.18581 2.543454,-5.4265 -1.131277,-4.72403 -2.511699,0.48015 -2.59778,0.72501 -2.325801,6.61589 0.328644,7.11824 3.31399,11.97037 5.344013,8.68572 z m 33.542287,-0.0684 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z m 4.80833,-2.075 c -0.19708,-0.59125 -0.78583,-1.075 -1.30833,-1.075 -0.5225,0 -1.11125,0.48375 -1.30833,1.075 -0.19709,0.59125 0.39166,1.075 1.30833,1.075 0.91667,0 1.50542,-0.48375 1.30833,-1.075 z m 8.11778,-2.33597 c 1.356,-1.63387 0.65059,-2.16677 -3.17611,-2.39943 -3.17571,-0.19308 -3.47778,0.53745 -1,2.41835 2.24105,1.7012 2.75045,1.69889 4.17611,-0.0189 z m -44.92611,-1.03001 c 0,-1.05548 -1.919113,-1.49891 -2.489919,-0.57533 -0.345463,0.55897 0.073443,1.01631 0.930902,1.01631 0.857459,0 1.559017,-0.19844 1.559017,-0.44098 z m 47.68311,-1.74652 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19292,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m -40.235896,-0.89791 c -0.321976,-0.52097 -1.011657,-0.68378 -1.532624,-0.3618 -0.520968,0.32197 -0.683779,1.01165 -0.361804,1.53262 0.321976,0.52097 1.011657,0.68378 1.532624,0.3618 0.520968,-0.32197 0.683779,-1.01165 0.361804,-1.53262 z m 12.581543,-0.0865 c 1.619016,-1.31964 1.867742,-1.82057 0.721243,-1.45257 -1.110019,0.35628 -1.75,0.0412 -1.75,-0.86146 0,-0.94372 -0.842205,-0.58096 -2.5,1.07684 -2.980285,2.98028 -2.972785,2.94787 -0.721243,3.11747 0.978316,0.0737 2.890816,-0.77243 4.25,-1.88028 z m 168.02406,0.67191 c -0.0784,-1.48429 -2.31562,-1.2116 -2.83465,0.3455 -0.28038,0.84112 0.17677,1.21599 1.21948,1 0.9174,-0.19002 1.64422,-0.7955 1.61517,-1.3455 z m -151.052817,-1.5 c 0,-2.10908 -1.45488,-2.69104 -2.5,-1 -0.7292,1.17987 0.21667,3 1.55902,3 0.51754,0 0.94098,-0.9 0.94098,-2 z m 145.499997,-2 c 0.68569,-2.16041 2.01,-2.60185 3,-1 1.0191,1.64893 2.60933,1.12898 2.29384,-0.75 -0.22944,-1.36645 0.30889,-1.68691 2.45616,-1.46215 3.6176,0.37866 3.50808,-1.34447 -0.20756,-3.26591 -2.7649,-1.42978 -3.08359,-1.39415 -4.892,0.54696 -1.06394,1.142 -2.77053,2.20292 -3.79244,2.3576 -1.26593,0.19161 -1.759,0.96101 -1.54732,2.4145 0.27468,1.88613 -0.0439,2.06235 -2.75,1.52114 -1.96325,-0.39265 -3.06068,-0.20876 -3.06068,0.51286 0,0.64262 1.68623,1.125 3.93261,1.125 3.05436,0 4.07438,-0.44665 4.56739,-2 z m 114.35676,-2.10969 c -2.15703,-1.36676 -3.21528,-1.02722 -1.8659,0.59868 0.67967,0.81894 1.68281,1.21269 2.22921,0.875 0.60346,-0.37296 0.46084,-0.95147 -0.36331,-1.47368 z m -117.47132,-2.45237 c 0.60024,-1.5642 -2.6672,-3.77858 -3.91428,-2.65276 -0.4355,0.39315 -0.4496,0.12238 -0.0314,-0.60171 0.4562,-0.78978 0.0841,-1.81111 -0.92997,-2.55262 -1.54986,-1.13328 -1.55663,-1.34713 -0.0814,-2.57148 1.36277,-1.131 1.93523,-1.04641 3.74003,0.55262 2.12141,1.87953 2.12805,1.87593 1.47758,-0.8007 -0.35938,-1.4788 -0.20176,-2.96786 0.35026,-3.30902 0.55209,-0.34117 1.00374,-1.52407 1.00374,-2.62867 0,-1.5533 0.45318,-1.86454 2,-1.3736 2.54082,0.80642 2.57459,-0.56354 0.0668,-2.71075 -1.75422,-1.50201 -2.05393,-1.50971 -3.23782,-0.0832 -0.71757,0.8646 -1.17107,2.59147 -1.00779,3.83747 0.16329,1.24601 -0.2505,2.60376 -0.91951,3.01724 -0.92225,0.56998 -1.05858,-0.39963 -0.56377,-4.00967 0.54571,-3.98134 0.40765,-4.66743 -0.84265,-4.18764 -1.00482,0.38558 -1.49529,-0.0515 -1.49529,-1.33268 0,-1.195 0.65307,-1.86141 1.75,-1.78573 0.9625,0.0664 2.99738,-0.19762 4.52196,-0.58671 2.03349,-0.51898 2.92781,-0.30129 3.35699,0.81712 0.32176,0.83851 1.21188,1.52456 1.97804,1.52456 1.66991,0 1.83289,2.16012 0.28014,3.71287 -0.61207,0.61207 -0.77268,1.66329 -0.35691,2.33603 0.54277,0.87822 1.24094,0.58022 2.47565,-1.05669 1.76314,-2.33744 3.99413,-2.02084 3.99413,0.56681 0,1.58505 2.54986,1.97833 3.44423,0.53122 1.03531,-1.67513 -0.63483,-4.09025 -2.8285,-4.09025 -1.19368,0 -3.35494,-1.35 -4.80279,-3 -1.44785,-1.65 -2.22305,-3 -1.72268,-3 0.50037,0 0.90977,-0.675 0.90977,-1.5 0,-1.69817 -1.56593,-2.01136 -2.5,-0.5 -0.33992,0.55 -1.13148,1 -1.75902,1 -0.82185,0 -0.80535,-0.33563 0.059,-1.2 0.66,-0.66 1.2,-1.51186 1.2,-1.89301 0,-1.35528 -3.27582,-1.92297 -4.62675,-0.8018 -1.06835,0.88667 -1.37323,0.77949 -1.37323,-0.48275 0,-0.89234 -0.66535,-1.62244 -1.47856,-1.62244 -1.21489,0 -1.27508,0.44659 -0.33756,2.50423 1.44141,3.16355 0.28209,4.47927 -1.69421,1.92277 -1.46827,-1.89932 -1.51178,-1.89834 -3.02916,0.0681 -1.19507,1.54878 -1.72058,1.70211 -2.34897,0.68535 -0.44521,-0.72037 -0.62262,-2.29318 -0.39424,-3.49513 0.35847,-1.88657 -0.0773,-2.21984 -3.18742,-2.43761 -3.2449,-0.22721 -3.50294,-0.0659 -2.59845,1.62413 0.77451,1.4472 0.5541,2.28374 -0.96361,3.65725 -1.0823,0.97947 -1.96782,2.68086 -1.96782,3.78086 0,1.87518 0.11428,1.89658 1.83115,0.34283 1.00713,-0.91145 2.13213,-1.35619 2.5,-0.98833 0.36787,0.36787 0.66885,0.0539 0.66885,-0.69781 0,-1.10377 0.24046,-1.12245 1.25,-0.0971 1.00311,1.01881 0.68806,1.75629 -1.59506,3.7338 -2.83704,2.45729 -2.84056,2.47547 -1.25,6.45067 0.87728,2.19255 1.59506,4.19339 1.59506,4.44632 0,0.25293 -9.55662,0.58132 -21.23693,0.72976 -17.96204,0.22827 -21.27421,0.5012 -21.47863,1.76989 -0.31914,1.9806 3.64663,6.5935 6.38268,7.4242 1.78794,0.54284 2.0789,0.32058 1.66289,-1.27026 -0.68773,-2.62987 1.09547,-3.48824 5.48488,-2.64024 3.25415,0.62868 3.43395,0.80749 1.53744,1.52904 -4.01853,1.52889 -3.68297,2.95726 0.69473,2.95726 3.25171,0 4.59635,-0.54824 6.1316,-2.5 2.17304,-2.76258 3.89159,-3.09759 6.7459,-1.31504 1.46238,0.91327 2.8042,0.91327 5.85245,0 6.69389,-2.00554 10.72886,-1.56487 12.04104,1.31504 0.62649,1.375 1.76862,2.5 2.53807,2.5 0.76944,0 1.93699,0.64825 2.59455,1.44056 1.34946,1.626 3.62335,1.11191 4.43477,-1.00262 z m -11.67519,-15.43794 c -0.33146,-1.26749 -0.0307,-2 0.82122,-2 0.73933,0 1.27644,0.9 1.19358,2 -0.0829,1.1 -0.45241,2 -0.82122,2 -0.36881,0 -0.90592,-0.9 -1.19358,-2 z m -140.644507,13.9648 c 1.92572,-1.03062 2.71693,-3.96482 1.06912,-3.96482 -0.47583,0 -1.93833,0.8328 -3.25,1.85067 -1.31167,1.01787 -2.94736,1.65537 -3.63486,1.41667 -0.6875,-0.2387 -1.25,0.0535 -1.25,0.64933 0,1.3769 4.52533,1.40773 7.06574,0.0481 z m 129.934257,0.0352 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 9,-0.5 c 0,-0.97829 -0.95647,-1.48768 -2.75,-1.46456 l -2.75,0.0354 2.5,1.42913 c 3.12885,1.78861 3,1.78861 3,0 z M 11.797871,620.52841 c -0.910244,-1.00581 -1.654988,-2.35581 -1.654988,-3 0,-0.64419 -0.45,-1.17126 -1,-1.17126 -0.55,0 -1,0.52707 -1,1.17126 0,1.4834 2.985942,4.82874 4.309975,4.82874 0.55,0 0.255256,-0.82293 -0.654987,-1.82874 z m 113.112939,-0.17126 c -1.26178,-2.02042 -2.76793,-2.6734 -2.76793,-1.2 0,1.03903 2.1667,3.2 3.20847,3.2 0.44466,0 0.24642,-0.9 -0.44054,-2 z m -83.018067,-1.58347 c -0.95295,-0.95296 -2.86349,0.5906 -2.1533,1.7397 0.42212,0.683 0.98146,0.66575 1.69964,-0.0524 0.58876,-0.58876 0.79291,-1.34803 0.45366,-1.68727 z m 113.250137,1.58347 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 34,-0.60699 c 0,-0.21615 -0.675,-0.39301 -1.5,-0.39301 -0.825,0 -1.5,0.43588 -1.5,0.96862 0,0.53273 0.675,0.70959 1.5,0.39301 0.825,-0.31659 1.5,-0.75246 1.5,-0.96862 z M 1.749872,618.77536 c -0.333844,-0.86998 -0.606989,-1.99498 -0.606989,-2.5 0,-0.50501 -0.675,-0.91821 -1.5,-0.91821 -1.800266,0 -1.968539,2.13146 -0.3,3.8 1.708834,1.70883 3.123151,1.4845 2.406989,-0.38179 z m 17.309678,-1.13524 c 0.229166,-0.15563 -0.285189,-0.28297 -1.143012,-0.28297 -0.857822,0 -1.843124,0.73865 -2.189558,1.64144 -0.548374,1.42904 -0.400467,1.46566 1.143011,0.28297 0.975091,-0.74716 1.960392,-1.48581 2.189559,-1.64144 z m 178.62062,-2.07901 c -0.87994,-0.87994 -2.54925,1.96767 -1.83292,3.12671 0.31482,0.50939 1.00137,0.15962 1.52568,-0.77726 0.5243,-0.93688 0.66256,-1.99413 0.30724,-2.34945 z m -151.537287,1.79604 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 146.591047,0.14732 c -0.28984,-0.46897 0.11929,-1.70647 0.90918,-2.75 2.00938,-2.6546 1.83927,-3.63985 -0.50023,-2.89732 -1.14731,0.36414 -2,0.1797 -2,-0.43261 0,-0.58707 -0.45,-1.06739 -1,-1.06739 -1.74852,0 -1.11634,5.83286 0.75,6.9199 2.17546,1.26709 2.50907,1.3083 1.84105,0.22742 z m 9.14705,-0.8378 c -0.92977,-0.92976 -1.97126,-1.4097 -2.31443,-1.06653 -0.98418,0.98419 0.52669,2.75701 2.34963,2.75701 1.52648,0 1.52374,-0.13153 -0.0352,-1.69048 z M 6.22467,615.35715 c 0.505017,0 0.918213,-0.45 0.918213,-1 0,-0.55 -0.812158,-1 -1.804796,-1 -1.495708,0 -1.77869,-0.77311 -1.652363,-4.5143 0.08384,-2.48287 0.439001,-4.80088 0.789252,-5.15113 0.350251,-0.35025 -0.125878,-1.19451 -1.058065,-1.87615 -1.404646,-1.0271 -1.498507,-1.67033 -0.548117,-3.75621 2.483034,-5.44966 -0.466053,-21.52372 -3.975911,-21.67079 -0.4125,-0.0173 -0.75,2.71672 -0.75,6.07557 0,5.01759 0.267578,6.00431 1.5,5.53138 0.825,-0.31658 1.5,-0.13972 1.5,0.39301 0,0.53274 -0.675,0.96862 -1.5,0.96862 -1.88817,0 -2.104661,9.57881 -0.305726,13.52704 0.9257,2.03169 0.9257,3.0512 0,4.53348 -1.281179,2.0515 -1.618713,3.69725 -0.536283,2.61482 0.792529,-0.79253 3.342009,1.16324 3.342009,2.56374 0,0.5468 -0.9,0.75883 -2,0.47117 -1.1,-0.28766 -2,-0.22185 -2,0.14624 0,1.05186 4.354846,2.93153 5.831787,2.51716 0.732484,-0.20551 1.744984,-0.37365 2.25,-0.37365 z m 18.918213,-1 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m 4.88219,-2 c 2.16401,0 5.84791,-2.60323 4.95188,-3.49926 -0.36453,-0.36453 -1.60132,-0.16049 -2.74842,0.45342 -2.73862,1.46566 -2.79697,-0.36468 -0.0857,-2.68619 1.1,-0.94185 2,-2.06244 2,-2.49021 0,-1.63447 -2.75091,-0.6718 -5.03847,1.76319 -2.329222,2.47934 -2.405395,2.49146 -3.142087,0.5 -1.108587,-2.99694 -2.819393,-2.48576 -2.819393,0.84242 0,2.10097 0.577937,3.0345 2.129881,3.44034 1.352919,0.3538 1.92524,1.09026 1.568901,2.01887 -0.308539,0.80404 -0.254485,1.77125 0.120119,2.14937 0.374604,0.37811 0.826595,-0.0279 1.004423,-0.90224 0.177826,-0.87434 1.104316,-1.58971 2.058866,-1.58971 z m 268.117807,2.05902 c 0,-0.51754 -0.47185,-1.23261 -1.04856,-1.58903 -0.72696,-0.44929 -0.71637,-1.0483 0.0345,-1.95307 0.7909,-0.95298 0.70978,-1.67832 -0.30069,-2.68879 -1.6527,-1.6527 -1.52853,-6.04704 0.18702,-6.61889 0.83822,-0.27941 1.02126,0.36673 0.5903,2.08379 -0.34869,1.38931 -0.14708,2.78393 0.45638,3.15689 0.69804,0.43141 1.08103,-0.60392 1.08103,-2.92229 0,-2.26898 -0.55207,-3.80225 -1.5,-4.166 -2.22668,-0.85446 -1.81969,-2.59787 0.4391,-1.88096 1.3423,0.42603 2.27643,-0.0149 3.03518,-1.43261 0.93888,-1.75431 0.80223,-2.04806 -0.95267,-2.04806 -1.12681,0 -2.92218,0.54547 -3.9897,1.21215 -1.06752,0.66667 -2.22751,0.92559 -2.57774,0.57536 -1.18223,-1.18224 0.59302,-4.55619 2.32634,-4.42131 1.17488,0.0914 1.81971,-0.7372 2.03591,-2.6162 0.18111,-1.574 0.92947,-2.75 1.75,-2.75 1.69836,0 1.85698,1.1766 0.36036,2.67322 -0.76428,0.76428 -0.30235,1.26669 1.60478,1.74534 2.0364,0.51111 2.55552,1.14043 2.16683,2.62679 -0.69911,2.67341 0.99763,2.48777 1.85151,-0.20258 0.50223,-1.58237 0.0821,-2.61172 -1.57643,-3.86278 -1.34376,-1.0136 -1.95909,-2.19425 -1.51667,-2.91008 0.46744,-0.75634 -0.0372,-1.40892 -1.35618,-1.75385 -1.2115,-0.31682 -2.1006,-1.35976 -2.1006,-2.46408 0,-1.05311 -0.675,-2.17377 -1.5,-2.49035 -0.825,-0.31659 -1.5,-1.17214 -1.5,-1.90123 0,-0.72909 -0.9,-1.61127 -2,-1.9604 -2.42674,-0.77022 -2.56891,-2.08224 -0.3596,-3.31863 2.00271,-1.12078 0.94303,-3.18137 -1.63606,-3.18137 -1.38493,0 -1.95985,0.84815 -2.19098,3.23227 -0.28307,2.91984 -1.00609,3.57228 -7.4802,6.75 -6.58836,3.2338 -7.28964,3.88095 -8.68829,8.01773 -0.83681,2.475 -1.54923,3.7125 -1.58317,2.75 -0.0339,-0.9625 -0.3992,-1.78037 -0.8117,-1.81749 -0.4125,-0.0371 -2.325,-0.25284 -4.25,-0.47939 -3.267,-0.38447 -3.37078,-0.31341 -1.55887,1.06749 1.06762,0.81367 2.53012,1.47939 3.25,1.47939 0.71988,0 1.30887,0.825 1.30887,1.83333 0,2.62945 0.88221,3.16195 3.55496,2.14578 1.87135,-0.71149 2.23556,-0.59678 1.79019,0.56384 -0.4243,1.10568 0.28812,1.45705 2.95424,1.45705 2.951,0 3.43438,-0.30207 3.01987,-1.88714 -0.27142,-1.03793 -0.004,-2.18949 0.59362,-2.55902 0.59792,-0.36953 1.08712,-0.007 1.08712,0.80536 0,0.81247 0.27314,2.18903 0.60699,3.05901 0.46649,1.21567 -0.0565,1.58179 -2.25945,1.58179 -4.0346,0 -5.679,2.87244 -3.31541,5.79135 2.06116,2.54543 2.96787,2.79461 2.96787,0.81564 0,-0.76616 0.64239,-1.63952 1.42752,-1.9408 1.1146,-0.42771 1.31237,0.16184 0.9022,2.68939 -0.35458,2.18507 -0.0349,3.64417 0.98345,4.48937 1.98855,1.65034 3.34122,-0.35153 1.63042,-2.41292 -1.61508,-1.94605 -0.42355,-3.07525 1.53224,-1.45209 1.7659,1.46557 1.88002,0.74765 0.59398,-3.73654 -0.83196,-2.90087 -0.71506,-3.2434 1.10698,-3.2434 1.43781,0 1.86045,0.46057 1.43649,1.56539 -0.46113,1.20169 -0.13747,1.41837 1.39301,0.93261 1.55276,-0.49282 1.99371,-0.17553 1.99371,1.43461 0,1.17101 -0.65037,2.06739 -1.5,2.06739 -2.1428,0 -1.85265,1.7409 0.5,3 1.9094,1.02188 2.82392,3.13009 1.25,2.88158 -3.42824,-0.5413 -4.81792,3.56203 -1.5,4.42909 3.11449,0.81391 5.25,0.71154 5.25,-0.25165 z M 285.4984,590.83074 c -0.928,-1.96642 -0.79678,-2.66926 0.76166,-4.07964 1.7901,-1.62001 1.88282,-1.59448 1.88282,0.51845 0,1.81939 0.39009,2.09857 2.15127,1.53959 1.74372,-0.55344 2.02789,-0.36126 1.5,1.0144 -0.3582,0.93345 -0.65127,1.91194 -0.65127,2.17441 0,0.26248 -0.46971,0.18694 -1.0438,-0.16787 -0.5741,-0.35481 -1.59185,-0.19028 -2.26167,0.36563 -0.87693,0.72779 -1.53172,0.34568 -2.33901,-1.36497 z m -7.78045,-1.35213 c -0.48389,-0.78294 2.09117,-7.12146 2.89314,-7.12146 0.17694,0 0.49338,1.8 0.70318,4 0.31108,3.26202 0.0646,4 -1.33595,4 -0.94457,0 -1.96174,-0.39534 -2.26037,-0.87854 z m 14.23404,-3.26524 c -1.43138,-1.79234 -1.48071,-2.32748 -0.32143,-3.48676 0.75321,-0.7532 2.18911,-1.35515 3.19089,-1.33766 1.70761,0.0298 1.69981,0.12379 -0.12482,1.50375 -1.51037,1.14228 -1.67834,1.73986 -0.75,2.6682 0.65794,0.65794 1.19625,1.55625 1.19625,1.99625 0,1.43489 -1.46428,0.81823 -3.19089,-1.34378 z M 44.618813,609.35715 c 0.8445,0 1.14422,-0.73656 0.81382,-2 -0.28766,-1.1 -1.09307,-2 -1.7898,-2 -1.47532,0 -2.58677,4.65568 -1.65598,6.93662 0.48989,1.20051 0.71423,1.04114 0.96655,-0.68662 0.18072,-1.2375 0.93016,-2.25 1.66541,-2.25 z m 163.332397,1.925 c -0.19708,-0.59125 -0.78583,-1.075 -1.30833,-1.075 -0.5225,0 -1.11125,0.48375 -1.30833,1.075 -0.19709,0.59125 0.39166,1.075 1.30833,1.075 0.91667,0 1.50542,-0.48375 1.30833,-1.075 z M 18.142883,607.79813 c 0,-1.34254 -0.476558,-2.44098 -1.059017,-2.44098 -0.582459,0 -0.780902,-0.45 -0.440983,-1 0.339919,-0.55 0.141476,-1 -0.440983,-1 -1.132081,0 -1.490141,6.23554 -0.419537,7.30615 1.133446,1.13344 2.36052,-0.35596 2.36052,-2.86517 z m 147.992267,2.30902 c -0.004,-0.1375 -3.57315,-9.0236 -7.93088,-19.7469 -7.0581,-17.36821 -8.03096,-19.22428 -8.9106,-17 -4.14569,10.48298 -14.15079,36.41194 -14.15079,36.67284 0,0.17823 6.975,0.32406 15.5,0.32406 8.525,0 15.49652,-0.1125 15.49227,-0.25 z m -24.99227,-4.78381 c 0,-1.71321 8.42426,-22.96619 9.10334,-22.96619 0.87958,0 5.03154,10.19846 4.40644,10.82355 -0.28038,0.28038 -0.50978,-0.0703 -0.50978,-0.77933 0,-2.62717 -2.78985,1.01032 -5.05462,6.59037 -1.88876,4.6536 -2.02685,5.70046 -0.8502,6.4454 0.94924,0.60096 0.0266,0.89435 -2.84518,0.9047 -2.3375,0.008 -4.25,-0.4499 -4.25,-1.0185 z m 15.25,-0.0463 c 0.9625,-0.5606 1.78163,-1.78442 1.82029,-2.71959 0.0577,-1.39711 0.22354,-1.34367 0.92971,0.29969 1.35346,3.14966 1.17577,3.50194 -1.75,3.46959 -2.35103,-0.026 -2.49611,-0.17828 -1,-1.04969 z M 11.142883,602.85715 c 0,-1.375 -0.45,-2.5 -1,-2.5 -0.55,0 -1,1.125 -1,2.5 0,1.375 0.45,2.5 1,2.5 0.55,0 1,-1.125 1,-2.5 z m 36,0.5 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m -24,-2 c 0,-0.55 -0.198442,-1 -0.440983,-1 -0.242541,0 -0.719098,0.45 -1.059017,1 -0.339919,0.55 -0.141476,1 0.440983,1 0.582459,0 1.059017,-0.45 1.059017,-1 z m 10.019,-0.52289 c 1.05678,-1.27335 0.99492,-1.41968 -0.37756,-0.89301 -0.90279,0.34643 -1.64144,1.03173 -1.64144,1.52289 0,1.28596 0.57887,1.10536 2.019,-0.62988 z m 164.751827,-0.66461 c -0.61807,-1.85422 -2.77083,-2.16176 -2.77083,-0.39583 0,0.87083 0.7125,1.58333 1.58333,1.58333 0.87084,0 1.40521,-0.53438 1.1875,-1.1875 z m 77.22917,-1.8125 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z M 12.729906,595.99097 c 0.288339,-0.7514 2.294053,-2.2139 4.457142,-3.25 4.519252,-2.16468 5.182293,-4.38382 1.309812,-4.38382 h -2.646022 l 2.646022,-2.45225 c 3.150829,-2.92009 3.466174,-4.99549 0.647019,-4.25826 -1.099452,0.28751 -2.25101,0.115 -2.559017,-0.38337 -0.885769,-1.4332 -2.441979,-1.05474 -2.441979,0.59388 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,0.64468 -1,1.43261 0,0.78794 -0.9,1.71826 -2,2.06739 -1.139393,0.36163 -2,1.51303 -2,2.6758 0,1.72229 0.425207,1.9343 2.722846,1.35763 2.624409,-0.65869 2.660561,-0.61457 1,1.22033 -1.897633,2.09686 -2.312725,5.24624 -0.691461,5.24624 0.567261,0 1.267298,-0.61478 1.555638,-1.36618 z m 17.954097,-0.70035 c 1.07627,-1.74144 -0.14952,-2.11024 -1.52106,-0.45764 -0.78875,0.95039 -0.86462,1.52417 -0.20152,1.52417 0.58488,0 1.36004,-0.47994 1.72258,-1.06653 z m 5.55266,-5.23969 c -0.79171,-0.79171 -1.09378,-0.76237 -1.09378,0.10622 0,0.66 -0.45,1.2 -1,1.2 -0.55,0 -1.00689,-0.7875 -1.01531,-1.75 -0.0124,-1.41599 -0.18593,-1.48047 -0.90925,-0.33782 -0.95473,1.50821 0.33485,3.38122 2.94242,4.27364 1.80113,0.61643 2.59801,-1.96995 1.07592,-3.49204 z m 158.084397,-2.94378 c -1.54505,-4.95227 -2.69374,-6.69928 -4.42818,-6.73469 -1.4476,-0.0296 -0.73263,2.77738 0.86345,3.38985 1.06066,0.40702 1.42503,1.33969 1.06349,2.72222 -0.61336,2.34549 1.17144,5.87262 2.97167,5.87262 0.83028,0 0.6944,-1.51644 -0.47043,-5.25 z m -148.086607,1.5 c -0.60914,-2.27766 -2.09157,-3.518 -2.09157,-1.75 0,0.275 0,1.4 0,2.5 0,1.1 0.63608,2 1.41352,2 1.05364,0 1.22627,-0.70013 0.67805,-2.75 z m 118.908427,1.75 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 22,-1.58333 c 0,-3.13272 -2.34847,-2.78984 -2.81955,0.41166 -0.21221,1.44221 0.20766,2.17167 1.25,2.17167 1.02102,0 1.56955,-0.90283 1.56955,-2.58333 z M 24.142883,587.35715 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 154.999997,-0.5 c -1.39353,-1.6791 -3,-1.98611 -3,-0.57332 0,0.50967 0.7875,1.13247 1.75,1.38399 0.9625,0.25153 1.9176,0.50953 2.12244,0.57333 0.20485,0.0638 -0.18775,-0.559 -0.87244,-1.384 z m -10,-1 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -0.825,0 -1.5,0.675 -1.5,1.5 0,0.825 0.675,1.5 1.5,1.5 0.825,0 1.5,-0.675 1.5,-1.5 z M 271.39,583.00039 c -0.27342,-0.47122 -0.8634,-0.26412 -1.31107,0.46023 -0.64651,1.04608 -1.23721,0.93396 -2.87147,-0.54503 -1.68636,-1.52613 -1.83267,-2.13456 -0.81105,-3.37285 1.01738,-1.23315 0.9808,-1.42302 -0.19901,-1.03305 -0.79501,0.26278 -1.7672,1.68073 -2.16041,3.15099 -0.60159,2.24945 -0.29319,2.884 1.94548,4.00288 2.2802,1.13964 2.89223,1.10558 4.28253,-0.23837 0.89217,-0.86242 1.39842,-1.95358 1.125,-2.4248 z M 53.142883,581.85715 c 0,-2.73961 -1.05177,-3.70408 -2.8365,-2.60105 -0.92264,0.57022 -0.975,1.46664 -0.20413,3.49419 1.19657,3.14721 3.04063,2.60554 3.04063,-0.89314 z m -45.526992,1.54367 c 0.325073,-0.52598 1.210977,-0.71843 1.968675,-0.42767 0.798204,0.30629 1.641002,-0.30116 2.00381,-1.44426 0.680989,-2.14561 4.452399,-3.53189 6.975044,-2.56386 1.136362,0.43606 1.579463,0.005 1.579463,-1.53607 0,-1.87341 -0.266261,-1.99968 -2.122168,-1.00643 -1.167193,0.62467 -3.392036,0.88178 -4.944096,0.57137 -2.216099,-0.44322 -2.955739,-0.14278 -3.445219,1.39943 -0.739141,2.32883 -2.320055,2.5664 -3.124687,0.46956 -0.832911,-2.17053 -2.078914,-0.9813 -1.783164,1.70192 0.138967,1.26079 0.290167,2.62984 0.336001,3.04234 0.118751,1.06876 1.854899,0.92863 2.556341,-0.20633 z m 26.970152,-1.29367 c -0.80688,-2.62499 -1.2672,-3.2593 -1.9035,-2.623 -0.76388,0.76389 0.62271,4.873 1.64436,4.873 0.52422,0 0.64048,-1.0094 0.25914,-2.25 z m 142.556837,0.23469 c 1.00906,-0.66241 1.14883,-1.23016 0.42706,-1.73469 -0.59012,-0.4125 -1.3635,-1.5375 -1.71862,-2.5 -0.89379,-2.4225 -2.60222,-2.18839 -3.64885,0.5 -0.64246,1.65023 -0.44964,2.58321 0.72335,3.5 1.90997,1.4928 2.27002,1.51284 4.21706,0.23469 z m 5.77083,-0.79719 c 0.21771,-0.65313 -0.31666,-1.1875 -1.1875,-1.1875 -0.87083,0 -1.58333,0.7125 -1.58333,1.58333 0,1.76593 2.15276,1.45839 2.77083,-0.39583 z m -80.31354,-0.1184 c 0.31644,-0.512 0.11799,-1.21356 -0.44098,-1.55902 -1.52496,-0.94248 -1.22289,-2.51008 0.48369,-2.51008 0.825,0 1.5,-0.675 1.5,-1.5 0,-0.94045 -0.94948,-1.5 -2.54531,-1.5 -2.367327,0 -2.499397,-0.24474 -1.888707,-3.5 0.554067,-2.95346 0.373757,-3.5 -1.15469,-3.5 -1.40878,0 -1.54462,0.26667 -0.61129,1.2 1.94921,1.94921 1.40076,2.604 -2.05,2.44745 -2.85374,-0.12947 -3.36666,0.24881 -4.2068,3.10255 -0.52623,1.7875 -1.31373,3.25 -1.75,3.25 -0.43626,0 -0.7932,0.85787 -0.7932,1.90638 0,1.41405 0.51651,1.77131 2,1.38337 1.11819,-0.29241 2,-0.0307 2,0.59362 0,1.35727 8.628507,1.52672 9.457287,0.18573 z m 159.51091,-0.3191 c -0.0175,-0.6875 -0.64929,-2.06443 -1.404,-3.05984 -1.6439,-2.1682 -3.00097,-0.64166 -2.06136,2.31879 0.68766,2.16662 3.51702,2.77166 3.46536,0.74105 z m -233.652347,-4 c -0.691211,-1.19481 -4.31585,-0.86747 -4.31585,0.38976 0,0.62686 0.7875,1.71839 1.75,2.42562 1.469966,1.0801 1.849991,1.01773 2.37487,-0.38976 0.34368,-0.92159 0.42962,-2.01312 0.19098,-2.42562 z m 11.76081,1.44222 c -0.62845,-0.20948 -1.90268,-0.0892 -2.83162,0.26725 -1.42492,0.54679 -1.46409,0.78711 -0.25055,1.53712 0.89381,0.55241 1.96593,0.45122 2.83162,-0.26724 0.96097,-0.79753 1.0387,-1.27441 0.25055,-1.53713 z m 17.42334,1.80778 c -0.33992,-0.55 -1.04148,-1 -1.55902,-1 -0.51754,0 -0.94098,0.45 -0.94098,1 0,0.55 0.70156,1 1.55902,1 0.85746,0 1.2809,-0.45 0.94098,-1 z m 15.5,0.60699 c 0,-0.21616 -0.675,-0.65203 -1.5,-0.96862 -0.825,-0.31658 -1.5,-0.13972 -1.5,0.39301 0,0.53274 0.675,0.96862 1.5,0.96862 0.825,0 1.5,-0.17686 1.5,-0.39301 z m 5.34937,-4.51193 c -2.02945,-2.37022 -3.34937,-2.69817 -3.34937,-0.83219 0,1.10596 3.96331,3.68101 4.82161,3.1327 0.17688,-0.113 -0.48563,-1.14823 -1.47224,-2.30051 z m 8.65063,1.90494 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m 99.999997,-1.05902 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 4.15,0.55902 c 0,-0.5225 -0.48375,-1.11125 -1.075,-1.30833 -0.59125,-0.19709 -1.075,0.39166 -1.075,1.30833 0,0.91667 0.48375,1.50542 1.075,1.30833 0.59125,-0.19708 1.075,-0.78583 1.075,-1.30833 z m 86.85,0.5 c 0,-0.55 -0.70156,-1 -1.55902,-1 -0.85746,0 -1.2809,0.45 -0.94098,1 0.33992,0.55 1.04148,1 1.55902,1 0.51754,0 0.94098,-0.45 0.94098,-1 z m 5,-3.00837 c 0,-0.4171 1.0125,-1.10409 2.25,-1.52665 2.00065,-0.68314 1.86507,-0.81575 -1.22333,-1.19664 -2.05641,-0.25362 -3.6274,0.0338 -3.851,0.70465 -0.2297,0.68911 -0.89375,0.42724 -1.69491,-0.66842 -1.73859,-2.37765 -2.97358,-1.06657 -1.38756,1.47305 1.16429,1.86433 5.9068,2.83905 5.9068,1.21401 z M 10.715307,570.62233 c -2.239833,-0.67915 -4.184924,-1.24165 -4.322424,-1.25 -0.1375,-0.008 -0.25,0.79482 -0.25,1.78482 0,3.25238 1.823583,4.03294 5.371711,2.29929 l 3.273137,-1.59929 z m 77.427576,3.84181 c 0,-0.49116 -0.75025,-1.18091 -1.66722,-1.53278 -1.27071,-0.48762 -1.38962,-0.91737 -0.5,-1.80699 1.60288,-1.60288 1.46286,-2.76722 -0.33278,-2.76722 -1.74043,0 -1.95053,2.28967 -0.46482,5.06574 1.05872,1.97823 2.96482,2.64766 2.96482,1.04125 z m 87.999997,-1.16601 c 0,-0.51754 -0.675,-0.94098 -1.5,-0.94098 -1.54641,0 -1.9867,1.17996 -0.86052,2.30615 0.79893,0.79893 2.36052,-0.10419 2.36052,-1.36517 z m 6.47285,1.10295 c 0.65588,-1.06124 -4.2061,-4.64402 -5.09536,-3.75475 -0.30806,0.30805 -0.26369,1.49401 0.0986,2.63546 0.67217,2.11782 3.92879,2.84731 4.99677,1.11929 z M 1.797401,572.14403 c -0.342701,-1.31049 0.04627,-2.90376 0.953704,-3.90646 2.30759,-2.54986 1.464344,-8.16273 -1.32824,-8.84112 -1.588172,-0.38581 -1.974487,-0.93359 -1.357334,-1.92465 0.571768,-0.91817 1.741935,-1.16467 3.470018,-0.73095 2.140978,0.53736 2.607334,0.30621 2.607334,-1.2923 0,-1.30289 1.293121,-2.51723 3.910003,-3.67179 4.120631,-1.81802 4.601168,-4.41961 0.816342,-4.41961 -1.132823,0 -1.72176,-0.3375 -1.308748,-0.75 0.413012,-0.4125 2.842223,-0.75 5.398247,-0.75 3.831112,0 4.71495,-0.34688 5.032405,-1.97507 0.211798,-1.08628 1.120087,-2.53479 2.018419,-3.2189 1.357335,-1.03366 1.944043,-0.87389 3.472102,0.94548 1.124899,1.33935 1.416074,2.33021 0.75,2.55223 -2.725088,0.90837 -0.646136,2.20427 3.66123,2.28221 4.44346,0.0804 4.5564,0.14512 1.75,1.00271 -1.65,0.50421 -4.222926,0.65798 -5.717613,0.3417 -2.344512,-0.4961 -2.927661,-0.11892 -4.247561,2.7473 l -1.529946,3.32234 0.324367,-3.25 c 0.339262,-3.39924 -0.679378,-4.38591 -1.722258,-1.66821 -1.686045,4.39376 0.590074,7.70245 4.580774,6.65886 1.14876,-0.30041 2.453711,0.24715 3.290646,1.38076 1.10368,1.49491 1.643081,1.626 2.641031,0.64183 1.00333,-0.98947 0.78274,-1.73847 -1.10329,-3.74605 -2.910596,-3.09819 -2.335823,-3.91448 1.39382,-1.97952 3.55228,1.84295 3.74163,1.83016 3.38387,-0.22841 -0.21225,-1.22128 0.7474,-1.94302 3.45616,-2.59934 3.68191,-0.8921 5.32757,-3.70992 2.16667,-3.70992 -0.87084,0 -1.40521,-0.53437 -1.1875,-1.1875 0.60809,-1.82427 2.15722,-1.98167 4.27352,-0.43419 1.62668,1.18946 1.71847,1.65028 0.59769,3.00074 -1.82501,2.19901 -0.65201,4.66193 2.07895,4.36512 1.77084,-0.19247 2.36029,0.37126 2.78362,2.66217 0.49049,2.65437 0.65908,2.75906 1.94467,1.20761 1.06618,-1.28667 1.12682,-1.97951 0.25,-2.85633 -1.70906,-1.70906 -1.41119,-2.75762 0.78336,-2.75762 1.06754,0 2.2191,-0.45 2.55902,-1 0.63499,-1.02744 -0.17427,-1.28401 -4.48211,-1.42104 -1.67181,-0.0532 -2.58868,-0.73187 -2.80855,-2.07896 -0.17954,-1.1 -0.59425,-2.675 -0.92158,-3.5 -0.32732,-0.825 -0.49509,-2.30286 -0.37281,-3.28413 0.22953,-1.84191 -3.50134,-5.62381 -5.60593,-5.6826 -0.65504,-0.0183 -1.49336,-0.52251 -1.86292,-1.12048 -0.4326,-0.69997 0.34779,-1.01841 2.19098,-0.89404 4.57416,0.30864 5.36292,0.0766 5.36292,-1.57777 0,-0.85746 0.45,-1.2809 1,-0.94098 1.54499,0.95485 1.18139,3.5 -0.5,3.5 -0.825,0 -1.5,0.54817 -1.5,1.21816 0,1.94002 5.08683,5.78184 7.65554,5.78184 2.19878,0 2.34446,-0.37282 2.34446,-6 0,-3.3 -0.4132,-6 -0.91821,-6 -0.50502,0 -1.63002,-0.27314 -2.5,-0.60699 -1.06662,-0.4093 -1.58179,-0.0437 -1.58179,1.12245 0,1.39217 -0.28092,1.49628 -1.44056,0.53387 -0.79231,-0.65756 -1.19283,-1.84113 -0.89005,-2.63016 0.30278,-0.78904 -0.14971,-2.50329 -1.00555,-3.80946 -1.34878,-2.0585 -1.36766,-2.6236 -0.14175,-4.24228 1.3493,-1.78161 1.41576,-1.78391 1.44611,-0.05 0.0238,1.35763 0.53775,1.6568 2.0318,1.18261 2.18618,-0.69387 2.64626,0.45374 0.88713,2.21287 -1.40228,1.40228 -0.52072,2.88818 2.12381,3.57974 1.99961,0.52291 2.03996,0.18211 1.93865,-16.3733 -0.10126,-16.54545 -0.146,-16.88456 -2.09045,-15.84392 -1.43071,0.76569 -2.37559,0.74088 -3.37507,-0.0886 -0.76345,-0.63361 -2.30969,-0.85951 -3.43608,-0.50201 -3.07715,0.97665 -2.50983,-1.35868 0.61904,-2.54827 1.46687,-0.5577 2.92937,-0.65907 3.25,-0.22525 0.88969,1.20375 5.91749,0.85424 7.27764,-0.50591 0.66293,-0.66294 2.69033,-1.20534 4.50533,-1.20534 2.26667,0 3.3,-0.4697 3.3,-1.5 0,-1.83336 1.59979,-1.98532 2.27857,-0.21644 0.66314,1.72811 17.72143,2.30717 17.72143,0.60158 0,-0.81157 -1.54101,-0.98121 -5.09243,-0.5606 -4.20932,0.49853 -4.89783,0.36865 -3.97031,-0.74895 0.67775,-0.81663 0.87105,-2.92214 0.48813,-5.31681 -0.49781,-3.1131 -0.28938,-4.097 0.97031,-4.58038 0.88237,-0.3386 1.6043,-1.30475 1.6043,-2.14702 0,-0.84226 0.45,-1.53138 1,-1.53138 0.55,0 1,0.87448 1,1.9433 0,1.06881 0.95916,2.61511 2.13146,3.43622 1.30031,0.91078 1.89747,2.10272 1.53138,3.05671 -0.3764,0.9809 -0.05267,1.56377 0.86854,1.56377 0.80774,0 1.46862,0.45 1.46862,1 0,0.55 1.6875,1.0118 3.75,1.02622 l 3.75,0.0262 -4,1.89283 -4,1.89283 6.30902,0.081 c 3.97011,0.0509 6.07989,-0.28978 5.69098,-0.91905 -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,1.93862 2.692287,0.97078 3.748587,-1.34757 0.88035,-1.93214 0.6726,-2.84549 -1.17397,-5.16131 -2.525847,-3.16772 -4.574617,-2.68566 -4.574617,1.07637 0,2.20314 -0.20211,2.32324 -2.00987,1.19427 -1.10543,-0.69035 -1.55543,-1.40666 -1,-1.5918 0.55543,-0.18515 1.00987,-1.14453 1.00987,-2.13197 0,-1.04326 1.22972,-2.30472 2.93553,-3.01129 2.48651,-1.02994 3.404277,-0.93904 5.999997,0.59429 3.0144,1.78065 4.02754,4.66577 2.06447,5.87901 -2.0014,1.23693 -0.91817,4.48319 2.6534,7.95186 3.69318,3.58677 5.3466,4.37478 5.3466,2.54814 0,-0.55 -0.68912,-1 -1.53138,-1 -2.40048,0 -2.94692,-2.92385 -0.84405,-4.51624 2.43286,-1.84226 3.37543,-1.83773 3.37543,0.0162 0,0.825 0.4199,1.5 0.93312,1.5 0.51321,0 0.89473,1.35 0.84782,3 -0.0692,2.43467 -0.51661,3 -2.3741,3 -3.22543,0 -3.86549,1.65106 -1.83904,4.74382 l 1.7402,2.65588 0.916,-2.44985 0.916,-2.44985 1.39456,2.5 c 1.27485,2.28539 1.39761,1.71523 1.43,-6.64159 0.0339,-8.75106 -0.064,-9.16656 -2.29312,-9.72603 -1.28071,-0.32143 -2.83137,-1.68798 -3.44592,-3.03676 -0.72453,-1.59018 -2.10318,-2.56542 -3.92144,-2.77398 -2.20984,-0.25348 -2.80408,-0.83378 -2.80408,-2.73831 0,-1.32916 0.5625,-2.60416 1.25,-2.83333 0.73333,-0.24444 1.25,0.44444 1.25,1.66667 0,1.14583 0.49878,2.08333 1.10841,2.08333 0.68296,0 0.86756,-0.9596 0.48095,-2.5 -0.56551,-2.25317 -0.32939,-2.5 2.39159,-2.5 2.48365,0 3.01905,0.40789 3.01905,2.3 0,1.265 -0.52937,2.82937 -1.17637,3.47637 -0.90183,0.90183 -0.74897,1.64865 0.65499,3.2 2.76681,3.05729 3.25376,2.53094 3.30863,-3.57638 0.039,-4.34282 0.51755,-6.0353 2.13154,-7.53896 1.14466,-1.06642 2.08121,-2.21948 2.08121,-2.56235 0,-0.72553 -164.11252,0.48051 -164.843417,1.21141 -0.269452,0.26945 0.147587,0.51207 0.926753,0.53915 6.698199,0.23279 23.117262,4.03819 27.0684,6.27357 3.70328,2.09514 4.761775,2.34497 5.191438,1.22528 0.385055,-1.00343 1.325817,-1.19621 3.283108,-0.67275 3.430936,0.91758 4.350644,3.12466 1.302067,3.12466 -2.174979,0 -2.187101,0.0566 -0.428346,2 2.280611,2.52005 3.130742,2.52005 3.789749,0 0.382607,-1.46309 1.420618,-2.03097 3.866631,-2.11535 1.838991,-0.0634 3.979881,-0.17594 4.757532,-0.25 1.981578,-0.18871 2.603051,-2.63465 0.669421,-2.63465 -0.870833,0 -1.583333,-0.45 -1.583333,-1 0,-1.60648 1.914603,-1.15747 4.21904,0.98944 2.576567,2.40044 2.184141,2.91242 -2.845137,3.71192 -2.130647,0.33871 -4.877618,1.26547 -6.104381,2.05946 -1.825455,1.18148 -2.037964,1.80333 -1.170296,3.42459 0.81205,1.51732 0.687317,2.39298 -0.532937,3.74134 -1.388049,1.53378 -1.583836,5.70657 -1.520995,32.41681 0.043396,18.44516 0.447066,30.65644 1.013415,30.65644 0.51771,0 0.941291,0.675 0.941291,1.5 0,0.825 -0.434987,1.5 -0.966638,1.5 -0.561082,0 -0.90716,3.77598 -0.824874,9 0.07797,4.95 0.543282,9 1.034026,9 0.490744,0 0.606612,0.9 0.257486,2 -0.463239,1.45954 -0.1797,2 1.049244,2 1.245746,0 1.533398,-0.57597 1.105274,-2.21312 z m 2.005787,-20.45991 c -1.04126,-1.04126 -0.770186,-4.14103 0.426827,-4.88082 2.034308,-1.25727 3.249668,1.23491 1.688903,3.46322 -0.800484,1.14285 -1.752562,1.78077 -2.11573,1.4176 z m 0.391912,-8.2294 c -0.642042,-1.19967 -1.687036,-1.7912 -2.567471,-1.45334 -0.933405,0.35818 -1.484746,-0.027 -1.484746,-1.03724 0,-2.44747 5.048895,-1.47906 5.238687,1.00481 0.03733,0.48851 0.94863,0.73899 2.025118,0.55662 1.275844,-0.21615 1.802885,0.132 1.513856,1 -0.71872,2.15843 -3.555128,2.1159 -4.725444,-0.0708 z m 26.982483,0.164 c -2.41633,-0.94287 -4.994337,-4.65767 -3.963717,-5.71157 0.585231,-0.59845 1.373077,-0.50594 2.129017,0.25 1.79555,1.79555 2.7468,1.47013 3.8,-1.3 1.15995,-3.0509 2.63736,-3.21794 3.53195,-0.39934 0.45427,1.43129 0.99255,1.77484 1.68924,1.07815 1.26827,-1.26827 3.77881,-0.40742 3.77881,1.29573 0,0.8313 -1.29845,1.18729 -3.81303,1.04541 -3.23365,-0.18245 -3.80345,0.0882 -3.75,1.78125 0.0686,2.17398 -1.11178,2.85413 -3.40227,1.96037 z M 9.536633,536.1384 c 1.006146,-5.03073 2.504456,-5.63215 2.292326,-0.92015 -0.123735,2.7485 -0.64674,4.13421 -1.561076,4.13608 -1.015459,0.002 -1.206669,-0.83883 -0.73125,-3.21593 z m 10.614052,1.96875 c 0.01098,-1.75849 4.793706,-3.88018 5.6443,-2.50389 0.720249,1.16538 -2.274638,3.75389 -4.343232,3.75389 -0.719878,0 -1.305359,-0.5625 -1.301068,-1.25 z M 4.569882,532.91414 c -1.463119,-1.07995 -1.648392,-1.70513 -0.76964,-2.59703 0.883351,-0.89657 1.435227,-0.65548 2.331021,1.01833 1.493985,2.79153 0.898072,3.39406 -1.561381,1.5787 z m 14.573001,-2.39032 c 0,-0.45834 0.675,-0.83334 1.5,-0.83334 0.825,0 1.5,0.375 1.5,0.83334 0,0.45833 -0.675,0.83333 -1.5,0.83333 -0.825,0 -1.5,-0.375 -1.5,-0.83333 z m -9.85088,-1.83644 c -1.532887,-1.65875 -1.002791,-2.67065 1.13606,-2.16863 0.87474,0.20532 1.20047,0.98572 0.82827,1.98441 -0.536332,1.43909 -0.783271,1.46225 -1.96433,0.18422 z m 9.10088,-1.04784 c -1.759466,-0.63208 -1.556069,-2.95096 0.322055,-3.67167 1.023707,-0.39283 1.459719,-1.55156 1.25,-3.32195 -0.51576,-4.3539 6.038073,-6.70161 7.569241,-2.71145 0.381231,0.99347 -0.198827,1.42268 -1.922681,1.42268 -2.839634,0 -3.171484,1.56586 -0.870654,4.10825 1.831016,2.02325 0.948274,4.31534 -1.32586,3.44267 -0.839078,-0.32198 -2.031061,-0.18808 -2.648849,0.29755 -0.617789,0.48564 -1.685752,0.68091 -2.373252,0.43392 z m 19.28684,-0.22278 c -0.69932,-1.13153 3.30026,-5.05961 5.15172,-5.05961 1.78132,0 1.60028,1.07401 -0.63212,3.75 -1.9952,2.39165 -3.56902,2.84769 -4.5196,1.30961 z m -10.91184,-3.85736 c -0.571296,-0.92437 0.220349,-2.19198 2.45833,-3.93637 1.36643,-1.06506 1.58334,-0.82533 1.58334,1.75 0,2.19093 -0.47162,2.98412 -1.77432,2.98412 -0.975874,0 -1.996181,-0.35899 -2.26735,-0.79775 z m 11.90922,-3.14688 c -0.35874,-0.58045 -0.35046,-1.54368 0.0184,-2.1405 0.36885,-0.59681 -0.15593,-2.61997 -1.16618,-4.49591 -1.33,-2.46965 -2.32481,-3.2559 -3.60534,-2.84948 -2.22558,0.70637 -1.38457,-2.12392 0.89053,-2.99696 1.6313,-0.62599 6.74007,4.19729 6.94937,6.56103 0.0665,0.75155 0.29155,2.48036 0.5,3.8418 0.3976,2.59677 -2.30042,4.16138 -3.58677,2.08002 z M 8.600749,519.28898 c -0.363092,-0.5875 -1.366172,-0.79726 -2.229067,-0.46613 -2.089105,0.80166 -3.424461,-1.52269 -1.921597,-3.34478 0.927914,-1.12501 0.915211,-1.53959 -0.057202,-1.86688 -0.6875,-0.23139 -1.25,-1.73321 -1.25,-3.33737 0,-3.12696 2.482659,-4.03401 4.772874,-1.7438 0.874767,0.87477 1.793823,0.88996 3.615936,0.0597 1.970316,-0.89773 2.554715,-0.82217 3.020063,0.39051 0.317351,0.827 1.03018,1.22356 1.584064,0.88124 1.506571,-0.93111 2.998989,0.3531 2.3564,2.02766 -0.739822,1.92795 -4.349337,1.90137 -4.349337,-0.032 0,-0.825 -0.5625,-1.5 -1.25,-1.5 -0.6875,0 -1.25,1.07845 -1.25,2.39656 0,2.16777 0.325102,2.3438 3.405475,1.84393 3.610622,-0.58593 3.658646,0.084 0.287433,4.00951 -1.664173,1.93781 -5.705921,2.34698 -6.735042,0.68183 z m 2.365458,-6.2647 c 0.191373,-0.98676 -0.318761,-1.66713 -1.25,-1.66713 -0.927635,0 -1.573324,0.855 -1.573324,2.08333 0,2.43705 2.336773,2.09257 2.823324,-0.4162 z m 33.307796,-0.009 c -0.61257,-0.7381 -0.84778,-1.608 -0.52267,-1.9331 0.76139,-0.76139 5.39155,1.33028 5.39155,2.43563 0,1.34435 -3.64865,0.96777 -4.86888,-0.50253 z m -19.63112,-1.65803 c -0.339919,-0.55 0.110081,-1 1,-1 0.889919,0 1.339919,0.45 1,1 -0.339919,0.55 -0.789919,1 -1,1 -0.210081,0 -0.660081,-0.45 -1,-1 z m -7.915738,-4.64101 c -0.411338,-1.07193 0.06956,-2.45726 1.269571,-3.65727 1.908965,-1.90896 1.928646,-1.89259 1.670462,1.38944 -0.289886,3.68503 -1.915131,4.93868 -2.940033,2.26783 z m 6.32163,-0.53483 c -1.439388,-2.68952 -0.347031,-3.53336 1.919129,-1.48251 1.010505,0.91449 2.138264,1.36173 2.506131,0.99386 0.367866,-0.36786 0.668848,-0.19633 0.668848,0.38119 0,2.09064 -3.987722,2.17476 -5.094108,0.10746 z m 8.094108,-2.32416 c 0,-1.55556 0.56667,-2.5 1.5,-2.5 0.825,0 1.5,0.49814 1.5,1.10699 0,0.60884 0.66059,0.8535 1.46797,0.54367 1.95863,-0.75159 3.16227,1.33606 1.41015,2.44583 -0.75797,0.48009 -2.39062,0.87977 -3.62812,0.8882 -1.73742,0.0118 -2.25,-0.55423 -2.25,-2.48469 z m -27,-0.12245 c 0,-1.15831 0.357586,-1.33975 1.25,-0.63427 0.6875,0.5435 1.925,1.23807 2.75,1.5435 0.854939,0.31651 0.317388,0.58928 -1.25,0.63427 -1.902458,0.0546 -2.75,-0.42108 -2.75,-1.5435 z m 10,-5.91128 c 0,-0.84354 -1.575,-2.46299 -3.5,-3.59877 -3.613603,-2.13208 -4.257147,-3.28152 -2.459323,-4.39264 0.572373,-0.35375 0.791012,-1.4298 0.485864,-2.39124 -0.320619,-1.01018 0.226302,-2.45496 1.295671,-3.42272 1.745957,-1.58007 1.91284,-1.53781 2.954395,0.74815 0.877354,1.92558 0.808325,2.53625 -0.336348,2.9755 -3.869184,1.48475 0.08669,8.57999 4.821172,8.64725 2.18364,0.031 2.190938,0.0678 0.297439,1.5 -2.485252,1.87975 -3.55887,1.85999 -3.55887,-0.0655 z m 26,0.53373 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -36.41655,-2.64313 c -0.34679,-0.90372 -0.459342,-1.81431 -0.250117,-2.02354 0.813776,-0.81377 3.666667,0.95527 3.666667,2.27366 0,1.94202 -2.649788,1.74803 -3.41655,-0.25012 z M 22.8011,494.58954 c 0.637019,-0.40533 1.468707,-2.39203 1.848196,-4.41488 0.578684,-3.08465 0.351532,-3.88928 -1.408216,-4.98826 -1.154009,-0.72069 -2.098197,-1.85054 -2.098197,-2.51078 0,-2.29429 -1.940018,-2.37845 -4.138916,-0.17955 -2.139947,2.13994 -2.236392,2.14926 -2.966189,0.28647 -0.414879,-1.05896 -0.785953,-2.44344 -0.82461,-3.07661 -0.09142,-1.49739 6.844288,-5.82529 9.429715,-5.88417 1.322148,-0.0301 1.900411,-0.62495 1.706163,-1.75508 -0.401962,-2.3386 1.497926,-2.15622 3.02591,0.29047 0.686961,1.1 1.815777,2 2.508477,2 0.6927,0 1.25945,0.675 1.25945,1.5 0,1.98143 -0.98754,1.8993 -2.53021,-0.21043 -1.099054,-1.50304 -1.597404,-1.54777 -4.110243,-0.36889 -1.62829,0.76391 -2.321325,1.53626 -1.609547,1.79376 0.6875,0.24873 1.25,1.53973 1.25,2.86889 0,1.32917 0.45,2.41667 1,2.41667 0.55,0 1,-0.39375 1,-0.875 0,-0.48125 1.303081,-1.13562 2.89574,-1.45415 2.06689,-0.41338 3.42647,-1.65003 4.75,-4.32054 2.09879,-4.23478 4.35426,-5.53855 4.35426,-2.51698 0,1.1 0.5625,2.20163 1.25,2.44806 0.96567,0.34614 0.90881,1.03425 -0.25,3.02516 -0.825,1.41742 -1.95,2.63014 -2.5,2.69495 -0.55,0.0648 -1.323,0.99098 -1.71778,2.05817 -0.84703,2.28975 -2.78222,2.59603 -2.78222,0.44033 0,-0.825 -0.675,-1.5 -1.5,-1.5 -1.34282,0 -1.93537,1.16808 -1.63042,3.21401 0.0585,0.39271 -0.56317,0.45706 -1.381576,0.14301 -0.936916,-0.35953 -1.488004,0.0242 -1.488004,1.03599 0,1.03709 0.865659,1.60699 2.44098,1.60699 3.21292,0 4.20527,1.78244 2.14118,3.84596 -1.45479,1.4544 -1.76742,1.47299 -2.590132,0.15404 -0.792418,-1.27038 -1.178258,-1.15557 -2.52054,0.75 -0.871693,1.2375 -2.121879,2.24311 -2.778192,2.23469 -0.89289,-0.0115 -0.901721,-0.20085 -0.03508,-0.7523 z m 9.529283,-1.29489 c 0.24062,-0.72188 1.02813,-1.50938 1.75,-1.75 0.75,-0.25 1.125,0.125 0.875,0.875 -0.24062,0.72187 -1.02813,1.50938 -1.75,1.75 -0.75,0.25 -1.125,-0.125 -0.875,-0.875 z m 6.8125,0.0625 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -35,-3 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 18,-0.94098 c 0,-0.51754 0.444846,-1.21592 0.988546,-1.55194 0.56686,-0.35034 0.734507,0.0511 0.393011,0.94098 -0.664791,1.73242 -1.381557,2.04939 -1.381557,0.61096 z m -3,-2.05902 c 0,-0.55 0.476558,-1 1.059017,-1 0.582459,0 0.780902,0.45 0.440983,1 -0.339919,0.55 -0.816476,1 -1.059017,1 -0.242541,0 -0.440983,-0.45 -0.440983,-1 z m 86.999997,-3.5 c 0,-0.825 0.40186,-1.5 0.89301,-1.5 0.49116,0 1.15203,0.675 1.46862,1.5 0.35062,0.91371 0.002,1.5 -0.89301,1.5 -0.80774,0 -1.46862,-0.675 -1.46862,-1.5 z m -54.501487,-3.7536 c 0.5675,-5.30322 2.79975,-8.17271 6.52805,-8.39164 1.36039,-0.0799 3.50511,-0.47488 4.76603,-0.87777 1.26092,-0.40289 2.16092,-0.33753 2,0.14524 -0.16092,0.48277 0.71991,1.89027 1.95741,3.12777 2.87752,2.87752 2.92065,4.59763 0.0928,3.7001 -1.59127,-0.50505 -2.61635,-0.076 -3.90725,1.63538 -1.57797,2.09197 -2.02148,2.19638 -4.51114,1.06202 -2.53675,-1.15582 -2.95098,-1.0301 -5.09783,1.54723 l -2.33675,2.80527 z m 12.50149,-4.68738 c 0,-1.17986 -1.95035,-2.442 -2.66667,-1.72569 -0.71631,0.71632 0.54583,2.66667 1.72569,2.66667 0.51754,0 0.94098,-0.42344 0.94098,-0.94098 z m 3.45888,7.87445 c -0.36253,-0.58659 -0.41903,-1.30665 -0.12555,-1.60014 0.71632,-0.71631 2.66667,0.54583 2.66667,1.72569 0,1.27797 -1.72641,1.19267 -2.54112,-0.12555 z m -23.80096,-3.4844 c 0.30583,-0.79699 0.95791,-1.44907 1.44907,-1.44907 1.43762,0 1.02567,1.73512 -0.55606,2.34208 -0.96852,0.37166 -1.26467,0.0755 -0.89301,-0.89301 z m 45.73435,-4.02229 c -0.45993,-1.83251 -0.95477,-2.26428 -1.71905,-1.5 -1.27382,1.27382 -2.67322,1.40546 -2.67322,0.25148 0,-0.45196 2.16889,-1.80196 4.81975,-3 5.34129,-2.41396 12.615897,-2.98522 11.933187,-0.93709 -0.24862,0.74588 -2.066917,1.20031 -4.556557,1.13879 -2.27857,-0.0563 -3.90137,0.28835 -3.60623,0.7659 0.29514,0.47755 -0.18032,1.14338 -1.05657,1.47963 -1.02228,0.39228 -1.37919,1.2856 -0.99599,2.49293 0.32845,1.03487 0.12543,1.88158 -0.45115,1.88158 -0.57658,0 -1.33896,-1.15795 -1.69417,-2.57322 z m -49.70477,-2.07261 c -1.3041,-1.3041 -0.68149,-2.35417 1.39583,-2.35417 1.16375,0 1.90861,0.52417 1.6875,1.1875 -0.48711,1.46134 -2.15686,2.09314 -3.08333,1.16667 z m 30.30627,0.64583 c -0.68866,-2.34563 -0.67861,-4.07675 0.0262,-4.51234 1.31463,-0.81249 1.81217,0.8075 0.92518,3.01234 -0.44252,1.1 -0.87064,1.775 -0.95138,1.5 z m -67.18127,-3.68311 c 0.721875,-0.28888 1.584375,-0.25335 1.916667,0.079 0.332291,0.33229 -0.258334,0.56864 -1.3125,0.52522 -1.164943,-0.048 -1.4019,-0.28495 -0.604167,-0.60417 z m 28.1875,102.38311 c 0,-0.715 -0.54,-1.84 -1.2,-2.5 -0.93333,-0.93333 -0.92408,-1.47592 0.0416,-2.44164 0.98886,-0.98886 1.41399,-0.96277 2.0882,0.12811 1.08249,1.75151 3.16698,0.52942 2.4195,-1.4185 -0.32144,-0.83766 -1.91284,-1.49519 -3.70633,-1.53136 -2.884543,-0.0582 -2.95798,-0.13776 -0.89301,-0.96777 1.2375,-0.49742 2.25,-1.19204 2.25,-1.5436 0,-0.35157 -0.7076,-0.36769 -1.57244,-0.0358 -0.86485,0.33187 -2.39486,0.16325 -3.400041,-0.3747 -2.014262,-1.078 -2.962884,0.27066 -3.611657,5.1347 -0.282362,2.11696 0.135686,2.77218 2.08008,3.2602 1.627298,0.40842 2.244073,1.10431 1.861773,2.10056 -0.394918,1.02924 0.07971,1.4898 1.535335,1.4898 1.15885,0 2.10699,-0.585 2.10699,-1.3 z m 26.71097,-0.23641 c 1.4895,0.37384 2.28126,0.13125 2.26679,-0.69454 -0.0337,-1.9225 -3.73511,-6.34503 -4.5927,-5.48744 -0.41345,0.41345 -0.21923,1.28422 0.43161,1.93506 2.98075,2.98075 -0.38788,3.77682 -5.25092,1.24088 -3.00253,-1.56573 -5.56575,-1.33037 -5.56575,0.51107 0,0.56726 1.125,1.03138 2.5,1.03138 1.53691,0 2.5,0.56832 2.5,1.47525 0,1.19101 0.52232,1.27666 2.71097,0.44454 1.49103,-0.56689 3.74103,-0.77218 5,-0.4562 z M 266.14288,571.9317 c 0,-0.65576 -0.64286,-2.0658 -1.42858,-3.13342 -1.33135,-1.80902 -1.47475,-1.82202 -2.10699,-0.19113 -0.37312,0.9625 -1.30908,1.75 -2.07989,1.75 -1.10917,0 -1.16245,0.38275 -0.25549,1.83504 1.26285,2.02213 5.87095,1.81768 5.87095,-0.26049 z m -103.39583,-1.30372 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69479 0.14921,-1.53513 -0.18308,-1.86742 z m -92.116097,-3.29013 c -0.7192,-1.16369 4.86306,-1.92647 6.1729,-0.84348 0.69067,0.57104 1.38935,0.59037 1.72474,0.0477 0.31007,-0.50171 2.40377,-0.91219 4.65267,-0.91219 4.40716,0 6.54252,-1.31653 5.69933,-3.51386 -0.40602,-1.05807 -3.74148,-1.43624 -14.45123,-1.63844 -11.65665,-0.22007 -14.13567,-0.007 -15.22737,1.30835 -1.04861,1.2635 -1.05804,1.86758 -0.0481,3.08442 0.69071,0.83226 1.75831,1.41904 2.37244,1.30395 2.53151,-0.4744 5.6166,1.39602 5.6166,3.40523 0,2.01595 0.0678,2.02621 1.97642,0.29896 1.08703,-0.98375 1.76727,-2.12704 1.51165,-2.54064 z m 9.51193,3.0193 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 172.457287,-1.0691 c -0.94036,-1.52154 -2.44282,-1.05677 -1.82112,0.56336 0.31537,0.82184 0.98359,1.24074 1.48493,0.9309 0.50134,-0.30985 0.65263,-0.98226 0.33619,-1.49426 z m -76.45729,-0.4309 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 7.15833,-2.41069 c -1.30874,-3.15948 -3.6658,-6.08931 -4.89888,-6.08931 -0.6927,0 -1.25945,0.25458 -1.25945,0.56574 0,1.24854 2.37465,4.98309 3.64598,5.73395 0.74471,0.43983 1.36091,1.56483 1.36933,2.5 0.0125,1.38532 0.18075,1.43897 0.90833,0.28962 0.49116,-0.77589 0.59677,-2.12589 0.23469,-3 z m 65.54582,2.16069 c -0.15581,-0.9625 -0.81431,-2.65 -1.46332,-3.75 -1.08556,-1.83991 -1.18245,-1.75319 -1.21042,1.08333 -0.0167,1.69584 0.26959,3.38334 0.63626,3.75 1.2455,1.24551 2.32184,0.67321 2.03748,-1.08333 z m 38.0061,-0.25 c -0.59811,-2.28719 -0.32467,-2.3992 2.35549,-0.96482 1.66392,0.89051 1.93426,0.69798 1.93426,-1.37755 0,-1.32701 -0.64362,-2.9469 -1.43026,-3.59975 -1.14616,-0.95123 -1.65907,-0.75948 -2.58217,0.96534 -0.87042,1.6264 -1.74273,2.00406 -3.56974,1.54551 -2.85047,-0.71542 -2.95711,-0.32141 -0.80282,2.96645 1.98857,3.03494 4.85234,3.35999 4.09524,0.46482 z m -247.210247,0 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -24.5,-1 c 0,-0.55 -0.198442,-1 -0.440983,-1 -0.242541,0 -0.719098,0.45 -1.059017,1 -0.339919,0.55 -0.141476,1 0.440983,1 0.582459,0 1.059017,-0.45 1.059017,-1 z m 6,-1.55902 c 0,-0.79254 -0.5625,-1.45099 -1.25,-1.46322 -0.6875,-0.0122 -2.371777,-0.88409 -3.742838,-1.93747 -2.258202,-1.73497 -2.384033,-2.2035 -1.336864,-4.97776 0.998964,-2.64656 0.930079,-3.07325 -0.507162,-3.14148 -1.039075,-0.0493 -1.194096,-0.26821 -0.413136,-0.58333 2.047203,-0.82607 1.416764,-2.19409 -0.75,-1.62747 -2.160024,0.56486 -2.602527,1.79933 -1,2.78975 1.787322,1.10463 1.066847,2.07405 -2.5,3.36384 -4.681968,1.69302 -4.752527,4.21368 -0.0968,3.45816 2.769146,-0.44937 3.614099,-0.1582 4.535183,1.56287 0.622592,1.16332 1.743008,2.11513 2.489813,2.11513 0.746805,0 1.627794,0.70352 1.957753,1.56338 0.697518,1.81771 2.614051,0.9948 2.614051,-1.1224 z m 78.25714,0.20285 c 3.922027,-0.0919 7.600147,-2.42667 7.709587,-4.89383 0.0183,-0.4125 -3.28663,-0.75 -7.344287,-0.75 -8.63836,0 -10.7042,1.33037 -8.74454,5.63137 0.96836,2.12531 1.42944,2.35845 2.65417,1.34202 0.81522,-0.67657 3.3915,-1.27487 5.72507,-1.32956 z m 159.742857,1.35617 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 15.84076,-7.83565 c 0.7267,-1.2846 0.99821,-2.6346 0.60336,-3 -0.39486,-0.36539 -0.92724,-0.0766 -1.18306,0.64175 -0.25582,0.71836 -1.36331,2.14289 -2.46108,3.16562 -1.60641,1.4966 -1.84498,2.51028 -1.2224,5.1939 l 0.77355,3.33438 1.08417,-3.5 c 0.59629,-1.925 1.67875,-4.55104 2.40546,-5.83565 z M 9.642883,566.35715 c 0.339919,-0.55 -0.08352,-1 -0.940983,-1 -0.857459,0 -1.559017,0.45 -1.559017,1 0,0.55 0.423442,1 0.940983,1 0.517541,0 1.219098,-0.45 1.559017,-1 z m 144.499997,-1 c -0.79314,-0.49019 -1.66708,-0.66625 -1.94208,-0.39125 -0.275,0.275 0.14894,0.90106 0.94208,1.39125 0.79314,0.49019 1.66708,0.66625 1.94208,0.39125 0.275,-0.275 -0.14894,-0.90106 -0.94208,-1.39125 z m 7.50437,-0.007 c 0.34231,-0.55389 -0.10054,-1.28448 -0.98412,-1.62354 -1.91464,-0.73472 -2.98171,0.0749 -2.06137,1.56407 0.83038,1.34358 2.23491,1.37101 3.04549,0.0595 z m 11.49563,0.11399 c 0,-1.01369 -3.04579,-2.39454 -3.74326,-1.69706 -0.25136,0.25135 -0.16039,0.93695 0.20214,1.52354 0.79781,1.29088 3.54112,1.42531 3.54112,0.17352 z m -7,-4.16601 c 0,-0.51754 -0.675,-0.94098 -1.5,-0.94098 -1.54641,0 -1.9867,1.17996 -0.86052,2.30615 0.79893,0.79893 2.36052,-0.10419 2.36052,-1.36517 z m 98.5,1.05902 c -0.33992,-0.55 -1.06803,-1 -1.61803,-1 -0.55,0 -0.72189,0.45 -0.38197,1 0.33992,0.55 1.06803,1 1.61803,1 0.55,0 0.72189,-0.45 0.38197,-1 z m -218.999997,-2 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 125.973287,-2.08416 c -0.4942,-1.55708 -0.0805,-1.94787 2.20932,-2.08689 1.54957,-0.0941 3.50403,-0.22292 4.34326,-0.28631 0.83923,-0.0634 2.62685,-0.88642 3.97251,-1.82895 2.34219,-1.64054 2.35632,-1.71369 0.33112,-1.71369 -2.21465,0 -4.21916,-3.20345 -2.38673,-3.81426 0.58148,-0.19382 1.04105,-1.10241 1.02127,-2.01907 -0.0261,-1.21096 -0.70834,-0.84639 -2.49504,1.33333 -1.35248,1.65 -2.4613,3.51436 -2.46403,4.14301 -0.006,1.45013 -2.3482,2.35699 -6.08676,2.35699 -3.41804,0 -3.35472,-0.18228 -1.33972,3.85687 1.65511,3.31777 3.9439,3.36439 2.8948,0.059 z m 93.02671,1.08416 c 0.33992,-0.55 -0.11008,-1 -1,-1 -0.88992,0 -1.33992,0.45 -1,1 0.33992,0.55 0.78992,1 1,1 0.21008,0 0.66008,-0.45 1,-1 z m -119.46592,-7.69446 c 1.84193,-4.7796 2.95308,-6.33649 4.86478,-6.81629 1.36269,-0.34201 3.05935,-1.37951 3.77037,-2.30555 1.13469,-1.47782 1.41549,-1.50028 2.29645,-0.1837 0.87324,1.30503 1.00568,1.28645 1.01901,-0.14301 0.0161,-1.72331 -2.62672,-3.33478 -3.17008,-1.933 -0.17304,0.4464 -1.39518,1.14805 -2.71588,1.55922 -2.07752,0.64679 -2.29525,0.49608 -1.61494,-1.11781 0.43248,-1.02597 1.35871,-3.4404 2.0583,-5.3654 0.94202,-2.59212 1.8581,-3.5 3.5316,-3.5 1.24281,0 2.44714,0.5625 2.67631,1.25 0.23963,0.7189 -0.42305,1.25 -1.55968,1.25 -1.08699,0 -2.23536,0.675 -2.55195,1.5 -0.63915,1.66561 0.88778,2.07572 1.86163,0.5 1.19213,-1.92891 4.39797,-0.98543 5.69543,1.67616 1.90946,3.91702 3.80457,4.11984 3.80457,0.40717 0,-1.69583 -0.36515,-3.08333 -0.81144,-3.08333 -1.6572,0 -5.30554,-4.25277 -4.79336,-5.58749 0.43657,-1.13767 0.17689,-1.16393 -1.46271,-0.14788 -1.61841,1.00292 -2.15837,0.97045 -2.86961,-0.17254 -0.89365,-1.43612 0.56474,-6.00281 2.31248,-7.24117 0.50384,-0.35699 0.59336,-1.48199 0.19894,-2.5 -0.63434,-1.63722 -0.85321,-1.67353 -1.89572,-0.31452 -0.64822,0.84502 -1.93735,1.38006 -2.86473,1.18897 -1.18147,-0.24344 -1.97556,0.64358 -2.6531,2.9636 -0.53182,1.82107 -3.52667,9.98136 -6.65521,18.13399 -5.41595,14.11339 -5.6001,14.88804 -3.84689,16.18268 2.25824,1.66756 2.41163,1.49064 5.37543,-6.2001 z m 15.50704,6.62793 c 1.17263,-1.89735 -0.53762,-2.36554 -2.27922,-0.62395 -1.55894,1.55895 -1.56168,1.69048 -0.0352,1.69048 0.9104,0 1.95188,-0.47994 2.31442,-1.06653 z m 119.95888,0.0665 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 5.10417,-1.72917 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69479 0.14921,-1.53513 -0.18308,-1.86742 z m -129.61948,-2.96181 c 0.008,-1.20504 -0.50032,-2.50966 -1.13053,-2.89916 -0.80332,-0.49647 -0.95169,0.0654 -0.49633,1.8797 0.35723,1.42333 0.19052,2.87154 -0.37047,3.21825 -0.56099,0.34671 -0.73139,1.09734 -0.37867,1.66805 0.86379,1.39764 2.35618,-1.03117 2.376,-3.86684 z m 106.94142,1.28001 c 0.80051,-0.96456 0.83925,-1.61601 0.12245,-2.05902 -1.39636,-0.863 -3.04856,0.23665 -3.04856,2.02901 0,1.83608 1.41516,1.85059 2.92611,0.03 z m -218.926107,-0.589 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -4,-2 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 235.716487,-1.63616 c 0.83618,-1.80129 0.90677,-3.19927 0.2258,-4.47168 -0.54488,-1.01812 -0.72446,-2.91187 -0.39907,-4.20834 0.54403,-2.16759 0.33613,-2.31973 -2.58426,-1.8911 -2.95826,0.43418 -3.12431,0.3036 -2.42318,-1.90546 0.65733,-2.07107 0.55459,-2.20715 -0.81081,-1.07397 -1.30658,1.08437 -1.75187,1.00091 -2.7096,-0.50784 -0.93403,-1.4714 -1.04351,-1.06535 -0.59173,2.19455 0.30489,2.2 0.5593,4.81406 0.56535,5.80902 0.006,0.99496 0.41904,1.55684 0.91775,1.24862 0.49871,-0.30822 0.69369,0.25431 0.43329,1.25007 -0.32336,1.23656 0.3402,2.18119 2.09326,2.97994 1.41169,0.64321 2.56671,1.62912 2.56671,2.19091 0,1.90586 1.49461,1.01744 2.71649,-1.61472 z m 5.8363,1.72157 c -0.31089,-0.50302 5e-5,-1.16368 0.69098,-1.46811 0.69093,-0.30444 -0.0591,-0.45538 -1.66665,-0.33541 -3.75702,0.28036 -4.74485,2.71811 -1.10144,2.71811 1.4533,0 2.38799,-0.41157 2.07711,-0.91459 z m -20.53273,-1.60958 c 2.06068,-2.48297 0.11665,-3.05699 -2.27006,-0.67027 -1.76363,1.76363 -1.88038,2.19444 -0.59467,2.19444 0.87988,0 2.16901,-0.68587 2.86473,-1.52417 z m -12.02006,-1.53485 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 10,-3.33399 c 0,-1.421 -2.88006,-3.06026 -3.78563,-2.15469 -0.63835,0.63835 1.74646,3.5477 2.90807,3.5477 0.48266,0 0.87756,-0.62686 0.87756,-1.39301 z M 23.142883,544.35715 c 0,-0.55 -0.476558,-1 -1.059017,-1 -0.582459,0 -0.780902,0.45 -0.440983,1 0.339919,0.55 0.816476,1 1.059017,1 0.242541,0 0.440983,-0.45 0.440983,-1 z m 29,-1.60699 c 0,-1.05452 -0.5438,-1.39831 -1.58179,-1 -0.86998,0.33385 -1.79654,0.60699 -2.05901,0.60699 -0.26248,0 -0.19912,0.45 0.1408,1 0.98476,1.59337 3.5,1.15716 3.5,-0.60699 z m 120.499997,-0.39301 c 0.35052,-0.56716 -0.48962,-1 -1.94098,-1 -1.40746,0 -2.55902,0.45 -2.55902,1 0,0.55 0.87344,1 1.94098,1 1.06754,0 2.2191,-0.45 2.55902,-1 z m 77.75,-0.39205 c 2.28005,-1.7308 2.21675,-2.51881 -0.18779,-2.33768 -1.06579,0.0803 -2.14866,0.95231 -2.40638,1.93785 -0.55214,2.11136 0.18903,2.2256 2.59417,0.39983 z m 12.75,-1.99137 c 0,-1.64048 -4.3074,-2.67173 -6.18535,-1.48086 -0.93403,0.59229 -0.68031,0.83809 0.87633,0.84897 1.20504,0.008 2.4691,0.46531 2.80902,1.01531 0.90508,1.46445 2.5,1.21984 2.5,-0.38342 z m -142.33772,-7.86658 c -0.27741,-0.6875 -0.50439,-0.125 -0.50439,1.25 0,1.375 0.22698,1.9375 0.50439,1.25 0.27741,-0.6875 0.27741,-1.8125 0,-2.5 z m 140.96801,0 c -0.33164,-1.2375 -0.64075,-2.7 -0.68692,-3.25 -0.10484,-1.249 -1.77725,2.54568 -1.87308,4.25 -0.0387,0.6875 0.65719,1.25 1.54634,1.25 1.1885,0 1.45695,-0.59587 1.01366,-2.25 z m 7.86971,1.25 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -94.69313,-2.52646 c -0.30789,-0.30789 -0.86705,0.24711 -1.24258,1.23333 -0.54268,1.4252 -0.42782,1.54006 0.5598,0.5598 0.68342,-0.67834 0.99067,-1.48524 0.68278,-1.79313 z m 82.76822,-2.72064 c 0.15832,-1.51091 -0.401,-3.43595 -1.24293,-4.27788 -1.23365,-1.23365 -1.28974,-1.82121 -0.28897,-3.02706 0.683,-0.82296 0.95269,-1.78542 0.59931,-2.13879 -0.35337,-0.35338 -0.6425,-0.1175 -0.6425,0.52416 0,0.64167 -0.9,1.16667 -2,1.16667 -1.1,0 -2,0.45 -2,1 0,0.55 0.43417,1 0.96482,1 0.53065,0 1.48762,0.97688 2.12661,2.17083 0.94604,1.76769 0.85971,2.39173 -0.46482,3.36025 -2.32239,1.69817 -2.01307,3.66563 0.51701,3.28847 1.5027,-0.22401 2.22968,-1.1409 2.43147,-3.06665 z m -85.57509,1.2471 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -5.5,-3 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m 82.5,0.55902 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m -129,-5.55902 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 41.71025,-6 c 0.36147,-1.38226 1.36402,-2 3.24587,-2 1.93395,0 3.05288,-0.72433 3.86193,-2.5 l 1.13907,-2.5 -21.72856,0.14983 c -11.95071,0.0824 -20.37856,0.30634 -18.72856,0.49762 5.06384,0.58706 13.81551,2.50751 17.5,3.84018 1.925,0.69627 4.92979,1.05011 6.67731,0.78632 2.46512,-0.37211 3.47166,-0.008 4.49054,1.62322 1.64984,2.64181 2.86919,2.6772 3.5424,0.10283 z m 6.28975,1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 83,0.44798 c 0,-0.30361 -1.35,-1.02263 -3,-1.59782 -1.78959,-0.62386 -3,-1.75075 -3,-2.793 0,-0.96095 -0.90183,-2.56333 -2.00406,-3.56084 -1.65591,-1.49857 -2.43767,-1.61608 -4.5,-0.67642 -1.37277,0.62547 -2.49594,1.89161 -2.49594,2.81365 0,1.54223 0.15505,1.5361 1.93699,-0.0765 1.87385,-1.69582 4.06301,-1.42535 4.06301,0.50199 0,1.16273 3.26383,4.49791 5.125,5.23703 1.87459,0.74446 3.875,0.82289 3.875,0.15193 z m 4.36163,-0.94798 c -0.31659,-0.825 -1.03256,-1.5 -1.59106,-1.5 -0.58531,0 -0.48812,0.63541 0.22943,1.5 0.68469,0.825 1.40067,1.5 1.59106,1.5 0.19039,0 0.0871,-0.675 -0.22943,-1.5 z m 92.63001,-2.47367 c 1.12751,-0.71284 1.20981,-1.22488 0.33713,-2.09756 -1.36893,-1.36893 -3.32877,-0.40911 -3.32877,1.63025 0,1.6637 0.88149,1.80139 2.99164,0.46731 z m -233.30853,-2.21383 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19292,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 1.7351,-2.41949 c 2.24571,-0.86176 1.96225,-2.29737 -0.41821,-2.11806 -1.1,0.0829 -2,0.7299 -2,1.43785 0,1.46257 0.21893,1.52416 2.41821,0.68021 z m 234.08844,-3.87732 4.99335,-4.48432 -23,0.0836 c -25.14442,0.0914 -24.97234,-0.0983 -4,4.40875 4.4,0.94557 8.45,2.07146 9,2.50195 0.86618,0.67798 3.45934,1.3583 7.00665,1.83818 0.55366,0.0749 3.25366,-1.88176 6,-4.34813 z m -238.00665,-1.51569 c 0.33992,-0.55 -0.11008,-1 -1,-1 -0.88992,0 -1.33992,0.45 -1,1 0.33992,0.55 0.78992,1 1,1 0.21008,0 0.66008,-0.45 1,-1 z M 79.142883,478.4796 c 0,-1.24732 -2.56789,-3.22123 -3.27311,-2.51601 -0.96625,0.96626 0.37852,3.39356 1.8801,3.39356 0.76615,0 1.39301,-0.3949 1.39301,-0.87755 z M 333.10864,681.60715 c -12.51114,-13.03122 -16.38567,-17.25 -15.84242,-17.25 0.30148,0 5.60888,5.4 11.79423,12 6.18534,6.6 11.08469,12 10.88743,12 -0.19725,0 -3.27491,-3.0375 -6.83924,-6.75 z m 703.78426,1.99177 c -3.2434,-2.01089 -3.3557,-3.31068 -0.7769,-8.99177 l 1.9291,-4.25 h 33.9922 33.9922 l 1.5567,2.22251 c 0.8562,1.22237 1.5569,2.45987 1.5572,2.75 3e-4,0.29012 -14.6331,0.40292 -32.5186,0.25067 l -32.5192,-0.27683 -2.5865,2.58654 c -1.8096,1.80958 -2.4464,3.31955 -2.12,5.02682 0.2565,1.34216 0.4164,2.42832 0.3551,2.41368 -0.061,-0.0146 -1.3488,-0.79386 -2.8613,-1.73162 z m 71.9812,-3.32193 c 0.3536,-1.3522 0.8069,-1.8055 1.0566,-1.05655 0.2404,0.72144 -0.038,1.78716 -0.6194,2.36826 -0.742,0.74207 -0.8722,0.35164 -0.4372,-1.31171 z m 156.0813,-0.60295 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z M 230.64288,678.43738 c -1.1,-0.46429 -2.75615,-1.68478 -3.68033,-2.7122 -1.63688,-1.81972 -1.02919,-1.86128 23.5,-1.60688 28.53684,0.29596 29.4502,0.11278 31.23979,-6.2656 1.05597,-3.76367 1.17594,-3.85848 2.27761,-1.79998 1.87866,3.51031 1.42626,8.75591 -0.94002,10.89944 -1.93089,1.74913 -4.07851,1.92235 -26.25,2.11719 -13.28088,0.11671 -25.04705,-0.16767 -26.14705,-0.63197 z m 1045.10012,0.15446 c 0.605,-0.40408 1.357,-1.40969 1.671,-2.23469 0.3815,-1.00229 0.5972,-0.75344 0.65,0.75 0.053,1.51164 -0.4954,2.24497 -1.6711,2.23469 -1.0794,-0.009 -1.3285,-0.29683 -0.6499,-0.75 z m -766.96417,-3.53646 -2.86405,-2.29184 2.36405,-4.9532 2.36405,-4.95319 34.2311,-0.26311 34.23111,-0.2631 1.39981,3.35021 c 2.50026,5.98398 2.75601,7.41673 1.41568,7.93106 -0.87416,0.33545 -1.28124,-0.5016 -1.2798,-2.63157 l 0.002,-3.12349 -31.67802,-0.26395 -31.67802,-0.26395 -2.66391,2.2914 c -1.53188,1.31767 -2.73108,3.44805 -2.82198,5.01325 -0.0869,1.49701 -0.15807,2.71992 -0.15807,2.71758 0,-0.002 -1.28882,-1.03559 -2.86405,-2.2961 z m 742.97877,-4.8346 c -16.0967,-17.78749 -25.7142,-50.68389 -24.3316,-83.22544 0.9555,-22.48727 5.1485,-39.48727 14.3336,-58.1138 7.7685,-15.75393 19.104,-27.52439 26.5072,-27.52439 4.2515,0 11.3237,3.65989 16.6779,8.63089 l 4.6982,4.36196 -5.9184,-3.4827 c -10.201,-6.00284 -14.7537,-5.68803 -23.0471,1.59366 -8.0762,7.09104 -19.2527,27.81155 -23.947,44.39619 -11.4861,40.58016 -4.6969,88.66218 15.9568,113.00865 6.9707,8.21697 6.3869,8.43991 -0.9296,0.35498 z m -786.3057,2.88637 c -0.91498,-1.41372 -1.70939,-145.53357 -0.82897,-150.38981 0.62795,-3.4637 2.98222,-4.61774 7.55469,-3.70324 2.56832,0.51366 5.76697,4.87468 4.5027,6.13894 -0.29559,0.2956 -0.53744,0.0124 -0.53744,-0.62922 0,-1.87445 -3.82323,-1.34344 -6,0.83333 -1.96299,1.96299 -2,3.33333 -2,74.05902 0,52.14271 0.30396,71.87115 1.09977,71.37932 0.77295,-0.47771 0.76249,-0.0495 -0.0352,1.44098 -1.28598,2.40289 -2.57107,2.70082 -3.75556,0.87068 z M 67.215463,670.72229 c -2.00675,-2.55117 -2.07215,-3.73426 -2.05893,-37.25 0.008,-19.03833 0.285,-35.62764 0.61664,-36.86514 0.6026,-2.24861 0.61685,-2.25 23.05208,-2.25 12.730997,0 23.240907,-0.42376 24.278187,-0.97889 3.12954,-1.67488 3.82544,-5.98996 3.27832,-20.32808 -0.28738,-7.53117 -0.24525,-13.69303 0.0936,-13.69303 1.68124,0 3.66749,6.50406 3.66749,12.00936 0,3.86396 0.37168,5.87897 1.01146,5.48356 0.55631,-0.34382 0.0529,1.76712 -1.11865,4.69098 -1.17157,2.92385 -3.22486,8.2411 -4.56288,11.8161 l -2.43276,6.5 -19.908677,-0.2899 c -18.98772,-0.27649 -20.00421,-0.19438 -21.97363,1.77504 -2.0189,2.0189 -2.05882,2.84498 -1.78991,37.04034 0.15128,19.23647 0.19521,34.9752 0.0976,34.97496 -0.0976,-2.4e-4 -1.11008,-1.18613 -2.25,-2.6353 z m 1355.534437,1.05307 c -0.3339,-0.86998 -0.607,-15.25415 -0.607,-31.96481 0,-29.01536 0.087,-30.42963 1.9343,-31.41822 1.1494,-0.61514 10.0946,-1.03518 22.0454,-1.03518 20.0193,0 20.1224,-0.0112 22.5658,-2.45455 2.3841,-2.38417 2.4547,-2.87875 2.4611,-17.25 l 0.01,-14.79545 1.9868,3 c 1.7296,2.61161 1.9877,4.70931 1.9934,16.20295 0.01,14.19663 -0.7744,17.42059 -4.6507,19.18678 -1.5121,0.68893 -9.6294,1.11027 -21.3898,1.11027 -17.6196,0 -19.0936,0.1407 -20.9529,2 -1.9045,1.90448 -2,3.33333 -2,29.91667 0,21.39766 0.2919,28.03445 1.25,28.42105 0.6875,0.27741 0.061,0.53991 -1.393,0.58333 -1.5436,0.0461 -2.8955,-0.57905 -3.25,-1.50284 z m 42.393,1.18878 c 0,-0.21616 0.6984,-0.661 1.5519,-0.98855 0.89,-0.34149 1.2914,-0.17385 0.941,0.39301 -0.5872,0.95021 -2.4929,1.40545 -2.4929,0.59554 z M 221.14288,668.35715 c 0,-0.64442 -10.65536,-1 -29.96607,-1 -25.91379,0 -30.43911,-0.22557 -33.46407,-1.66808 -3.23923,-1.54468 -3.77806,-1.54796 -7.28393,-0.0444 -3.05235,1.30905 -8.28314,1.6807 -26.99569,1.91808 -20.88912,0.26499 -23.3828,0.12184 -24.940467,-1.43176 -0.9519,-0.94941 -1.46766,-1.98925 -1.14614,-2.31077 0.32152,-0.32152 11.300347,-0.8549 24.397397,-1.18528 23.10116,-0.58274 23.88134,-0.66922 26.10589,-2.89377 2.44332,-2.44332 2.90593,-5.37036 1.31776,-8.33787 -0.80213,-1.4988 -0.54349,-1.90495 1.45652,-2.28728 2.07995,-0.39761 2.29343,-0.20625 1.47532,1.3224 -1.66604,3.11302 -1.09223,7.71442 1.23204,9.8798 2.10588,1.96193 3.38092,2.03954 33.75,2.05427 17.35879,0.008 32.05465,0.34592 32.65747,0.75 1.14302,0.76616 2.82972,6.23466 1.92302,6.23466 -0.28548,0 -0.51905,-0.45 -0.51905,-1 z m 75.80252,-25.72639 c -32.77059,-35.18794 -36.2483,-38.76365 -38.01717,-39.08853 -2.61346,-0.48 -2.89842,2.32955 -2.57812,25.41861 0.27005,19.46618 0.1638,21.02305 -1.36936,20.06433 -0.91418,-0.57165 -1.92668,-2.36206 -2.25,-3.97869 -0.77336,-3.86678 -0.75952,-40.15789 0.0175,-45.82667 l 0.60534,-4.41648 7.19349,7.52691 c 3.95642,4.1398 15.23393,16.30191 25.06115,27.02691 9.82721,10.725 21.04397,22.7625 24.92613,26.75 3.88217,3.9875 6.75588,7.25 6.38604,7.25 -0.36985,0 -9.35859,-9.32688 -19.97498,-20.72639 z m 387.00998,11.04328 c 0.72187,-0.28887 1.58438,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m -7.78343,-4.28782 c -2.18401,-2.18401 -5.27107,-6.57151 -6.86012,-9.75 -4.51513,-9.03132 -9.93296,-27.60195 -8.89826,-30.50045 0.74202,-2.07861 3.44096,5.03056 5.77867,15.22138 2.88911,12.59456 6.63244,20.61325 11.78734,25.25 2.29298,2.0625 3.71777,3.75 3.16618,3.75 -0.55158,0 -2.7898,-1.78692 -4.97381,-3.97093 z m 263.02793,-1.62379 c -2.9937,-0.8047 -7.7187,-2.77596 -10.5,-4.38058 -5.53209,-3.19157 -16.10826,-12.06624 -19.09708,-16.0247 -1.03819,-1.375 0.87428,-0.013 4.24993,3.02674 6.38444,5.74905 15.91285,11.15493 22.79015,12.9298 5.3836,1.38939 19.517,1.31754 25.3072,-0.12866 9.5798,-2.39274 21.2635,-9.89202 26.9479,-17.29671 8.2508,-10.74779 11.21502,-19.42335 11.23302,-32.87726 0.014,-10.41512 -1.73312,-17.18742 -6.45822,-25.03431 -1.8759,-3.11518 -2.9943,-5.40662 -2.4854,-5.09209 1.726,1.06675 9.08112,14.52453 11.02332,20.16967 2.1734,6.31692 2.5896,19.73609 0.8469,27.30282 -4.01472,17.4315 -20.48322,33.90005 -37.91472,37.91471 -6.382,1.46985 -19.541,1.21146 -25.943,-0.50943 z m -807.0726,-5.27398 c -2.08225,-1.11672 -3.4844,-2.62576 -3.4844,-3.75 0,-1.77633 1.22355,-1.89637 21.92862,-2.1513 16.44336,-0.20246 22.11758,0.0357 22.68402,0.95225 1.01007,1.63433 0.34088,2.53187 -3.28612,4.40746 -1.67566,0.86652 -2.73857,1.07701 -2.36204,0.46776 0.49268,-0.79718 -3.89195,-1.0306 -15.63993,-0.8326 -12.41111,0.20917 -16.26462,0.57479 -16.07455,1.52513 0.31798,1.58991 0.36788,1.59811 -3.7656,-0.6187 z m 797.1561,-6.12271 c -10.22838,-4.94632 -17.20862,-11.7251 -22.66271,-22.00859 l -3.97779,-7.5 v -13.5 -13.5 l 3.97779,-7.5 c 5.37248,-10.12961 12.05989,-16.64549 22.38801,-21.81372 l 8.3658,-4.18628 h 11.6871 c 11.6029,0 11.7471,0.029 20.0149,4.02725 10.7678,5.20718 18.1582,12.5807 23.4154,23.36198 l 3.8061,7.80545 -0.3276,12.68138 c -0.3125,12.09982 -0.4846,13.00109 -3.7524,19.65266 -4.7701,9.70947 -13.3045,18.03431 -23.3633,22.78949 -7.5991,3.59242 -8.0737,3.68179 -19.5529,3.68179 -11.676,0 -11.8269,-0.0301 -20.0184,-3.99141 z m 19.6828,-7.11293 c 1.4722,-0.0574 4.4767,-0.28077 6.6767,-0.49641 2.2,-0.21565 5.2469,-0.42353 6.7708,-0.46196 1.5456,-0.039 3.8708,-1.16983 5.2584,-2.55742 1.3682,-1.36815 2.9282,-2.21524 3.4667,-1.88243 1.1574,0.71536 10.0041,-8.09826 10.0041,-9.96677 0,-0.70718 0.7063,-1.87195 1.5695,-2.58837 0.8633,-0.71642 1.3813,-2.02231 1.1513,-2.90197 -0.23,-0.87966 0.2191,-2.19477 0.9981,-2.92245 0.8549,-0.79863 1.1196,-1.97606 0.6677,-2.97047 -1.5506,-3.41194 -1.1409,-9.22065 1.1036,-15.64741 0.562,-1.60927 0.4877,-1.70695 -0.3806,-0.5 -0.9446,1.31321 -1.0809,1.29733 -1.0943,-0.12756 -0.01,-0.89515 -0.5778,-2.09448 -1.2653,-2.66518 -0.9854,-0.81794 -1.25,1.00868 -1.25,8.62756 0,7.82048 -0.4159,10.56551 -2.1793,14.38241 -3.0545,6.6117 -10.5802,14.2872 -16.9742,17.31206 -7.5686,3.5805 -18.5148,4.03109 -26.8262,1.10427 -3.3112,-1.16601 -6.3237,-2.54453 -6.6946,-3.06337 -0.415,-0.58045 -1.569,-0.51292 -3.00003,0.17555 -2.28297,1.09836 -2.28608,1.12014 -0.16929,1.18658 1.60172,0.0503 2.03042,0.54948 1.66652,1.94074 -0.38904,1.48784 0.2196,2.00613 2.9594,2.52013 1.8971,0.35589 4.2971,0.37056 5.3335,0.0326 1.5857,-0.51713 1.6466,-0.43176 0.3842,0.53891 -1.1702,0.89982 -0.5508,1.00864 2.8176,0.49501 3.9452,-0.60157 4.3731,-0.45568 4.9596,1.69095 0.5086,1.86153 0.7174,1.98597 1.0057,0.59933 0.2295,-1.10426 1.3514,-1.7885 3.0404,-1.85434 z m -24.8233,-9.39566 c 0,-0.825 -0.42344,-1.5 -0.94098,-1.5 -1.26098,0 -2.1641,1.56159 -1.36517,2.36052 1.12619,1.12618 2.30615,0.68589 2.30615,-0.86052 z m -6.5,-1.5 c 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,0.45 -1.55902,1 0,0.55 0.42344,1 0.94098,1 0.51754,0 1.2191,-0.45 1.55902,-1 z m 49.4572,-1.21432 c 1.8474,-1.25712 4.2648,-3.50872 5.3721,-5.00355 2.4401,-3.29411 3.0144,-10.36903 1.1197,-13.79224 -1.0461,-1.89 -1.3867,-2.06826 -1.4136,-0.73989 -0.045,2.20799 -0.9548,2.16804 -3.7496,-0.1646 -1.8723,-1.56268 -2.0753,-2.33261 -1.3143,-4.98602 0.5554,-1.93646 0.5417,-2.91654 -0.036,-2.55966 -0.5146,0.31807 -0.9357,0.0979 -0.9357,-0.48918 0,-0.69614 -0.6957,-0.63299 -2,0.18153 -1.1,0.68696 -2,1.9907 -2,2.89719 0,1.07684 -1.1578,1.86536 -3.3401,2.27476 -4.7966,0.89986 -7.5861,4.37311 -8.5934,10.70002 -0.8856,5.56292 -0.68,6.89596 1.0639,6.89596 0.5569,0 1.7283,0.71584 2.6032,1.59075 1.3518,1.35177 1.3786,1.72735 0.1786,2.5 -2.0806,1.33962 0.1646,2.48774 5.3942,2.75845 3.0895,0.15992 5.233,-0.41821 7.6508,-2.06352 z m -46.9572,-4.4462 c 0,-0.73671 -0.68625,-1.33948 -1.525,-1.33948 -0.90497,0 -1.77677,-1.25883 -2.14423,-3.09615 -0.56311,-2.81556 -0.8891,-3.04218 -3.59694,-2.50062 -2.52237,0.50448 -2.79351,0.3736 -1.77315,-0.85585 1.50769,-1.81666 0.58544,-4.85506 -2.47647,-8.15892 -2.67155,-2.88265 -2.29276,-5.77986 0.63421,-4.85087 1.89131,0.60027 2.29853,-0.19369 1.93605,-3.77475 -0.0967,-0.95544 1.02638,-3.31335 2.49575,-5.2398 1.47551,-1.93448 2.41214,-4.17876 2.09207,-5.01283 -0.31874,-0.83062 -0.14364,-1.51021 0.38909,-1.51021 0.53274,0 0.96862,-0.88417 0.96862,-1.96482 0,-1.08065 0.93854,-2.4671 2.08565,-3.08102 1.1471,-0.61391 1.84353,-1.35831 1.54762,-1.65423 -0.67345,-0.67344 1.87861,-3.29993 3.20641,-3.29993 0.54039,0 2.11848,-1.35 3.50687,-3 1.38835,-1.65 3.39825,-3 4.46645,-3 1.0682,0 2.5107,-0.68516 3.2057,-1.52258 0.695,-0.83742 2.0468,-1.27401 3.0041,-0.9702 1.0683,0.33908 1.9837,-0.0819 2.3706,-1.09004 0.482,-1.25613 0.9491,-1.37784 1.9858,-0.51747 1.025,0.85067 1.6627,0.75472 2.6157,-0.39354 0.713,-0.85918 2.616,-1.44012 4.3827,-1.33798 4.0356,0.23332 5.1732,0.86813 3.4792,1.9415 -1.1049,0.70009 -1.0783,0.85662 0.1432,0.84319 1.9736,-0.0217 5.1531,-2.46645 4.3075,-3.31209 -0.3638,-0.3638 0.2057,-1.31749 1.2655,-2.11932 1.7995,-1.36143 1.6789,-1.45997 -1.823,-1.48967 -2.0625,-0.0175 -3.75,0.4182 -3.75,0.9682 0,0.55 -0.9481,1 -2.107,1 -1.4815,0 -1.9325,-0.45474 -1.5191,-1.5319 0.4991,-1.30074 -0.2015,-1.43854 -4.643,-0.91316 -11.248,1.33051 -19.71511,5.55922 -27.3795,13.67413 -6.12162,6.48145 -9.92494,14.30339 -11.45255,23.55336 -1.27312,7.70909 -0.67524,12.21757 1.6202,12.21757 1.80129,0 1.96319,1.63875 0.23095,2.33772 -0.6875,0.27741 -0.35,0.55422 0.75,0.61514 1.88892,0.1046 1.90157,0.18543 0.22779,1.45543 -1.42755,1.08316 -1.57822,1.8549 -0.77475,3.96819 0.55461,1.45874 1.78541,2.63032 2.77221,2.63883 1.39823,0.0121 1.48238,0.2005 0.39663,0.8882 -1.74777,1.10702 -0.55083,3.19832 1.40172,2.44906 0.80345,-0.30831 1.72588,0.13398 2.05203,0.98393 0.47889,1.24797 1.05574,1.33295 3.00843,0.44324 1.32877,-0.60542 2.41594,-1.70354 2.41594,-2.44026 z m 0.52172,-33.97341 c 4.97599,-10.17055 14.34878,-16.22686 26.97828,-17.43223 l 8,-0.76353 -8,0.18049 c -9.6219,0.21709 -15.8046,2.82803 -22.14497,9.35175 -5.67104,5.83507 -8.4689,11.97789 -8.90978,19.56174 l -0.36251,6.23571 0.95057,-5.97338 c 0.52282,-3.28537 2.0926,-8.30761 3.48841,-11.16055 z m 18.24608,1.084 c 2.0912,-1.46469 2.1246,-1.6847 0.6075,-4 -2.2375,-3.41484 -6.1237,-3.3008 -7.0037,0.20552 -0.491,1.95622 -0.1823,3.00966 1.1721,4 2.3102,1.68925 2.5314,1.68055 5.2241,-0.20552 z m 46.2322,0.54993 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m -5,-9.55902 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m -3,-2.44098 c 0,-1.11111 -0.6667,-2 -1.5,-2 -1.6831,0 -1.7507,0.18315 -0.893,2.41821 0.8574,2.2344 2.393,1.96604 2.393,-0.41821 z m -2,-3.96862 c 0,-0.53273 -0.675,-0.70959 -1.5,-0.39301 -0.9498,0.36449 -1.5,-0.0138 -1.5,-1.03138 0,-1.64831 -1.1542,-2.11948 -2.3247,-0.949 -0.3619,0.3619 -0.1568,1.2619 0.4558,2 1.2807,1.54308 4.8689,1.81826 4.8689,0.37339 z m 2,-4.03138 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -9,-2 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -3,-0.8 c 0,-0.44 -0.5625,-1.37214 -1.25,-2.07143 -0.6875,-0.69928 -0.8,-1.18599 -0.25,-1.08158 0.55,0.10442 1.5891,0.13656 2.309,0.0714 2.027,-0.18337 0.5023,-1.82576 -2.169,-2.33641 -2.1422,-0.40951 -2.3622,-0.1372 -2.1244,2.63059 0.1458,1.69807 0.3145,3.1999 0.3748,3.3374 0.2856,0.65144 3.1096,0.15197 3.1096,-0.55 z m 311.93852,75.85725 c -0.522,-2.90788 -10.5437,-8.39175 -21.8663,-11.96522 -6.0209,-1.90022 -11.8923,-5.60526 -10.7279,-6.76963 0.6972,-0.69725 13.5789,4.01441 21.2648,7.77793 9.3609,4.58373 12.7328,7.64789 12.1618,11.05181 l -0.3939,2.34786 z m -567.89133,-2.96907 c -0.56274,-1.0515 -6.7361,-5.439 -13.71857,-9.75 -9.74892,-6.01902 -15.1478,-10.24631 -23.26201,-18.21404 -8.83647,-8.67694 -9.15876,-9.08629 -1.96837,-2.5 4.72903,4.33172 13.72903,11.02586 20,14.87586 11.51557,7.06987 18.18855,12.29884 19.9894,15.66375 0.5405,1.00994 0.75773,1.83625 0.48273,1.83625 -0.275,0 -0.96043,-0.86032 -1.52318,-1.91182 z M 642.237,622.10715 c -0.47101,-1.2375 -1.98942,-4.95 -3.37423,-8.25 -1.38482,-3.3 -6.88243,-16.8 -12.21691,-30 -5.33448,-13.2 -17.30494,-42.74628 -26.60102,-65.6584 -9.29608,-22.91212 -16.90196,-42.02474 -16.90196,-42.4725 0,-3.00906 5.30452,9.04903 21.05778,47.86794 9.87939,24.34463 22.31038,54.95046 27.62442,68.01296 5.78751,14.22633 10.1944,23.75 10.98985,23.75 0.9072,0 1.32795,1.42579 1.32795,4.5 0,4.96432 -0.60219,5.67524 -1.90588,2.25 z m 259.05014,-8.5 c -1.0912,-2.55004 -1.06651,-2.60886 0.33949,-0.80887 0.83394,1.06762 1.51625,2.30512 1.51625,2.75 0,1.51991 -0.67833,0.81036 -1.85574,-1.94113 z m -682.38965,-8 c -3.13736,-7.59645 -24.22308,-59.34149 -31.86899,-78.20756 -4.33709,-10.70165 -7.87804,-19.70165 -7.86877,-20 0.10233,-3.29502 11.86937,24.34105 35.21568,82.70756 2.25497,5.6375 4.44525,10.25 4.86729,10.25 0.42203,0 0.9548,-1.2375 1.18393,-2.75 0.22912,-1.5125 0.48401,0.5125 0.56642,4.5 0.0824,3.9875 -0.007,7.25 -0.19848,7.25 -0.19157,0 -1.04525,-1.6875 -1.89708,-3.75 z m 938.30961,-6.5 c -0.4874,-1.2375 -5.6895,-13.95 -11.5603,-28.25 -10.9829,-26.75225 -34.3539,-84.83216 -35.2095,-87.5 -0.2646,-0.825 0.4655,-0.10001 1.6225,1.61108 1.157,1.7111 9.49,21.5111 18.5179,44 21.1353,52.64951 25.2725,62.58235 26.3655,63.30029 0.9842,0.6465 2.551,9.08863 1.6868,9.08863 -0.2951,0 -0.9354,-1.0125 -1.4229,-2.25 z M 329.17121,589.0225 c -2.23177,-2.67771 -2.5659,-3.36177 -0.93555,-1.91535 1.39487,1.2375 3.06962,2.25 3.72167,2.25 0.65205,0 1.18555,0.9 1.18555,2 0,2.52157 0.14863,2.60894 -3.97167,-2.33465 z m 330.84411,0.58465 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37756 1.66575,1.30637 2.19548,2.12756 1.37244,2.12756 -0.20765,0 -0.99515,-0.7875 -1.75,-1.75 z m 652.99618,-3.73633 c -4.105,-2.26709 -4.2442,-4.11367 -0.3102,-4.11367 5.3142,0 6.9844,-2.41679 9.8278,-14.22069 2.8916,-12.00433 11.8041,-49.12274 14.2695,-59.42931 0.8881,-3.7125 2.1408,-6.75 2.7837,-6.75 0.643,0 3.2821,1.34009 5.8648,2.97798 5.2074,3.3024 6.3873,5.61562 2.0169,3.95399 -5.1528,-1.95908 -5.0579,-2.20512 -14.6832,38.06803 -1.9061,7.975 -4.6713,19.53069 -6.1449,25.67931 -1.4805,6.17743 -3.4206,11.84721 -4.3361,12.67208 -2.5416,2.28985 -6.3775,2.76986 -9.2883,1.16228 z m -992.99618,-7.26367 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37756 0.9625,0.75485 1.75,1.54235 1.75,1.75 0,0.82304 -0.82119,0.29331 -2.12756,-1.37244 z m 470.32916,-2.77194 c -1.19658,-2.46293 -1.9656,-4.47806 -1.70893,-4.47806 0.67743,0 4.71808,8.12258 4.2657,8.57497 -0.20964,0.20963 -1.36018,-1.63398 -2.55677,-4.09691 z m -475.79661,-3.72806 -1.90499,-2.25 2.25,1.90499 c 2.11444,1.79022 2.70524,2.59501 1.90499,2.59501 -0.18976,0 -1.20226,-1.0125 -2.25,-2.25 z m 178.68577,-6.15339 -2.25787,-2.40339 3.60693,0.10224 c 2.49149,0.0706 4.2955,-0.58601 5.83355,-2.12333 2.21013,-2.20908 2.22875,-2.49737 2.51286,-38.90421 0.27502,-35.24337 0.20864,-36.78358 -1.69637,-39.36025 -1.86326,-2.5202 -1.83599,-3.90767 0.0768,-3.90767 0.45833,0 0.83333,0.60526 0.83333,1.34501 0,2.2609 3.1557,4.14916 11,6.58201 12.11887,3.75858 24.68669,10.71962 22.78577,12.62054 -0.27458,0.27458 -2.4762,-0.63929 -4.8925,-2.03083 -7.97277,-4.59148 -20.52393,-7.93825 -23.10045,-6.15974 -0.11395,0.0787 -0.45145,16.49584 -0.75,36.48263 l -0.54282,36.33963 -2.36078,1.91037 c -3.32326,2.68922 -8.26612,2.46866 -11.04846,-0.49301 z m 982.00316,0.003 -2.2546,-2.4 h 3.7026 c 2.4433,0 4.4262,-0.72364 5.8303,-2.12778 2.0992,-2.09913 2.1278,-2.6639 2.1278,-41.95347 v -39.8257 l 2,3.10347 c 1.8899,2.93259 2.0165,5.08578 2.3004,39.10348 0.1652,19.8 0.028,37.4876 -0.3058,39.30578 -1.2866,7.01662 -8.7907,9.7013 -13.4007,4.79422 z m -52.4869,-0.18179 c -0.3339,-0.86959 -0.607,-11.85779 -0.607,-24.41782 0,-12.56003 0.2731,-23.54823 0.607,-24.41821 0.5179,-1.34959 2.9152,-1.58179 16.331,-1.58179 h 15.724 l 1.3719,2.75 c 2.2395,4.48949 2.3228,4.80874 0.9128,3.5 -0.9317,-0.86475 -5.2916,-1.25 -14.1467,-1.25 -17.8911,0 -16.8,-1.61826 -16.8,24.91667 0,15.79766 0.3059,21.0401 1.25,21.42105 0.6875,0.27741 0.061,0.53991 -1.393,0.58333 -1.5436,0.0461 -2.8955,-0.57905 -3.25,-1.50284 z m -1116.20203,-2.66782 -1.90499,-2.25 2.25,1.90499 c 1.2375,1.04774 2.25,2.06024 2.25,2.25 0,0.80025 -0.80479,0.20945 -2.59501,-1.90499 z m 446.47612,-3.56492 -3.15044,-2.81492 3.5774,0.41764 c 2.8383,0.33136 4.10574,-0.1107 6.13466,-2.13962 2.51179,-2.51179 2.55727,-2.81952 2.55727,-17.30273 0,-8.37673 0.37414,-14.33514 0.86623,-13.79545 0.47643,0.5225 2.53949,4.1 4.58458,7.95 2.04509,3.85 2.98751,6.10219 2.09428,5.00487 -2.52292,-3.09936 -3.51204,-0.38175 -3.52978,9.69808 -0.0171,9.70765 -1.08048,13.05008 -4.67263,14.68678 -3.64396,1.66029 -5.00166,1.38677 -8.46157,-1.70465 z m -451.47612,-2.43508 -1.90499,-2.25 2.25,1.90499 c 1.2375,1.04774 2.25,2.06024 2.25,2.25 0,0.80025 -0.80479,0.20945 -2.59501,-1.90499 z m -175.0289,-3.55134 c -2.74607,-0.20065 -4.85273,-1.07712 -6.30526,-2.62326 l -2.18133,-2.32193 3.9714,0.10414 c 2.60278,0.0682 4.68954,-0.54578 6.05525,-1.78173 1.87456,-1.69645 2.09091,-3.05041 2.15414,-13.48087 0.0948,-15.64329 0.10627,-15.6649 6.68444,-12.61719 5.46089,2.53007 5.85099,3.0375 4.24527,5.52218 -0.64625,1 -0.97448,1.08333 -0.98469,0.25 -0.0223,-1.81994 -4.69257,-1.53343 -5.40832,0.33179 -1.04877,2.73305 -0.70385,14.59611 0.40447,13.91113 0.83924,-0.51868 -0.83373,4.46096 -3.86595,11.50708 -0.45815,1.06462 -1.84249,1.41254 -4.76942,1.19866 z m -60.745797,-2.44866 c -0.99271,-3.70429 -0.68079,-49.12167 0.34855,-50.75 0.77887,-1.23211 3.82795,-1.5 17.07304,-1.5 15.73974,0 16.17048,0.0564 18.036467,2.36078 2.12762,2.62749 2.70388,5.33145 0.71165,3.33922 -0.81739,-0.81739 -5.599997,-1.2 -14.999997,-1.2 -19.14095,0 -17.8,-1.99008 -17.8,26.41667 0,16.99766 0.30218,22.53859 1.25,22.92105 0.6875,0.27741 0.065,0.53991 -1.38337,0.58333 -1.92173,0.0576 -2.79631,-0.52908 -3.23634,-2.17105 z m 227.774697,-3 -1.90499,-2.25 2.25,1.90499 c 1.2375,1.04774 2.25,2.06024 2.25,2.25 0,0.80025 -0.80479,0.20945 -2.59501,-1.90499 z m -5.53255,-6.5 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37756 0.9625,0.75485 1.75,1.54235 1.75,1.75 0,0.82304 -0.82119,0.29331 -2.12756,-1.37244 z m 418.90214,-2.5 c -4.07311,-5.37502 -4.77502,-7.35406 -4.76481,-13.43426 0.0122,-7.24804 3.21532,-14.55017 8.36657,-19.07302 3.05337,-2.68089 4.51404,-3.24272 8.43061,-3.24272 3.81509,0 5.46442,0.5993 8.47197,3.07838 2.05403,1.69311 4.24931,4.04012 4.8784,5.21558 0.98969,1.84925 0.70897,1.77132 -2.08349,-0.57838 -4.76136,-4.00642 -10.76362,-3.80486 -15.69749,0.52714 -7.75479,6.8088 -10.80684,20.08858 -6.29478,27.38925 2.64918,4.28646 1.90286,4.35386 -1.30698,0.11803 z m -426.90214,-6.5 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37756 1.66575,1.30637 2.19548,2.12756 1.37244,2.12756 -0.20765,0 -0.99515,-0.7875 -1.75,-1.75 z m 566.19565,-3.15437 c -1.13745,-1.5974 -2.06809,-3.10806 -2.06809,-3.35701 0,-0.24895 -3.41565,-6.70448 -7.59033,-14.34563 -12.18358,-22.30025 -15.66901,-29.02655 -13.93539,-26.89299 0.8938,1.1 3.68903,5.825 6.21162,10.5 16.72377,30.99333 18.64122,34.14772 20.46706,33.67025 1.51065,-0.39504 1.64291,-0.15734 0.79451,1.42791 -1.31744,2.46165 -1.43413,2.4315 -3.87938,-1.00253 z m -571.19565,-2.84563 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37756 1.66575,1.30637 2.19548,2.12756 1.37244,2.12756 -0.20765,0 -0.99515,-0.7875 -1.75,-1.75 z m 52.12756,-6.74822 c -2.475,-1.32432 -7.26021,-3.34828 -10.6338,-4.49768 -3.37359,-1.1494 -6.97359,-3.03924 -8,-4.19963 -1.86437,-2.10775 -1.86277,-2.10919 1.6338,-1.47706 4.40628,0.7966 22.24855,9.74537 22.7746,11.42259 0.55274,1.76226 -0.62352,1.508 -5.7746,-1.24822 z m -59.59501,-1.75178 -1.90499,-2.25 2.25,1.90499 c 2.11444,1.79022 2.70524,2.59501 1.90499,2.59501 -0.18976,0 -1.20226,-1.0125 -2.25,-2.25 z m 1023.10633,-0.37312 c -0.9453,-1.44272 -1.2245,-2.31766 -0.6204,-1.94431 1.1544,0.71345 3.4827,4.56743 2.7593,4.56743 -0.2311,0 -1.1936,-1.18041 -2.1389,-2.62312 z m -1029.10633,-6.62688 -1.90499,-2.25 2.25,1.90499 c 2.11444,1.79022 2.70524,2.59501 1.90499,2.59501 -0.18976,0 -1.20226,-1.0125 -2.25,-2.25 z m 800.67393,-2.55503 c -0.088,-1.44831 -6.6095,-4.54254 -18.3887,-8.72425 -4.4294,-1.57247 -8.2019,-3.55836 -8.7676,-4.61539 -0.5461,-1.02043 -0.6377,-1.85533 -0.2035,-1.85533 1.7125,0 15.1297,5.24293 21.1509,8.26494 6.41,3.21714 7.7525,4.58899 6.8033,6.95207 -0.4135,1.02941 -0.531,1.02506 -0.5944,-0.022 z m -201.20787,-2.05625 c -0.20408,-0.59817 -4.97856,-2.82483 -10.60997,-4.94814 -8.94859,-3.37404 -15.00064,-6.78435 -13.9335,-7.85149 1.04685,-1.04685 24.90252,8.60617 26.11437,10.56699 0.23435,0.37917 0.0602,1.28134 -0.38688,2.00482 -0.52634,0.85164 -0.94379,0.93196 -1.18402,0.22782 z m -606.99861,-3.88872 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37755 1.66575,1.30636 2.19548,2.12755 1.37244,2.12755 -0.20765,0 -0.99515,-0.7875 -1.75,-1.75 z m -123.26545,-3.83179 c -0.33385,-0.86998 -0.60699,-9.29141 -0.60699,-18.71428 0,-16.31567 0.0834,-17.04919 1.75,-15.38513 1.50137,1.49912 1.79487,4.15791 2.06585,18.71429 0.26707,14.34671 0.0906,16.96691 -1.14301,16.96691 -0.80238,0 -1.73201,-0.7118 -2.06585,-1.58179 z m -140.785822,-5.09944 c -0.711226,-2.59441 -11.474681,-8.31628 -23.112041,-12.28641 -7.652448,-2.61065 -13.231918,-6.02476 -11.039965,-6.75541 1.570126,-0.52338 13.866449,3.90949 21.827751,7.86898 8.684184,4.31901 13.871934,8.74593 13.330069,11.3751 -0.385352,1.86976 -0.440857,1.8586 -1.005814,-0.20226 z m 364.178832,-1.01275 c 0.825,-0.29485 2.0625,-1.24533 2.75,-2.11218 1.09922,-1.38598 1.25,-1.31179 1.25,0.61503 0,1.7428 -0.56269,2.17498 -2.75,2.11218 -1.5198,-0.0436 -2.07898,-0.31876 -1.25,-0.61503 z m 377.8125,-15.98913 c 0.72187,-0.28888 1.58438,-0.25335 1.91667,0.079 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28495 -0.60417,-0.60417 z\"\n         id=\"path80\"\n         inkscape:connector-curvature=\"0\" />\n      <path\n         style=\"fill:#767676;fill-opacity:1\"\n         d=\"m 1260.6429,716.68054 c -9.9647,-2.21517 -18.4868,-4.80634 -25.4087,-7.72564 -8.2993,-3.50019 -26.1981,-14.80883 -29.7012,-18.7655 -1.0396,-1.17412 0.2072,-0.54872 2.7705,1.38977 21.3503,16.14601 48.5211,23.94279 75.8394,21.76239 5.225,-0.41703 16.025,-1.92128 24,-3.34279 7.975,-1.4215 19.1429,-3.01556 24.8175,-3.54233 11.6089,-1.07766 14.604,-2.45662 15.544,-7.15656 1.0521,-5.26063 0.744,-92.53509 -0.3367,-95.37763 -0.7738,-2.03501 -0.6704,-2.5651 0.5,-2.5651 1.2819,0 1.4752,7.00205 1.4752,53.43261 0,50.01964 -0.1118,53.46647 -1.75,53.96259 -0.9625,0.29149 -7.375,1.21918 -14.25,2.06153 -6.875,0.84236 -18.7768,2.6592 -26.4484,4.03742 -11.2917,2.02858 -16.9104,2.48376 -29.5,2.38985 -8.5534,-0.0638 -16.4516,-0.31607 -17.5516,-0.56061 z m 96.2259,-1.07339 c -1.5074,-1.66526 1.5963,-1.73584 64.095,-1.4575 36.1235,0.16087 67.1667,0.0233 68.9849,-0.30578 1.8182,-0.32905 4.1807,-1.47317 5.25,-2.5425 1.8595,-1.85948 1.9442,-3.65233 1.9442,-41.13535 0,-34.674 0.1692,-38.9674 1.4682,-37.25 1.2322,1.62914 1.4733,8.30506 1.5,41.53614 0.03,37.11201 -0.083,39.6988 -1.7969,41.25 -1.6645,1.50633 -8.028,1.65499 -70.8451,1.65499 -64.4596,0 -69.1208,-0.11554 -70.6003,-1.75 z M 995.13378,713.5509 c -2.276,-1.84304 -2.0727,-1.87517 16.01222,-2.53025 10.0746,-0.36492 25.6908,-0.6635 34.7027,-0.6635 16.0632,0 16.4333,-0.0482 18.8397,-2.45455 1.3767,-1.3767 2.4826,-3.68209 2.5185,-5.25 l 0.064,-2.79545 1.5698,3.14923 c 0.9524,1.91073 1.3142,4.16705 0.9201,5.73735 -1.2891,5.13626 -2.5358,5.33032 -38.7197,6.02698 -31.85132,0.61324 -33.72192,0.5497 -35.90722,-1.21981 z m 88.75912,-0.27385 c -0.9625,-0.5606 -1.75,-1.44692 -1.75,-1.96959 0,-0.58905 21.2035,-0.95031 55.7775,-0.95031 62.2086,0 60.2225,0.21556 60.2225,-6.53609 0,-1.88248 -2.4533,-9.60368 -5.4518,-17.15821 -2.9984,-7.55454 -5.3609,-13.78843 -5.25,-13.8531 0.111,-0.0647 3.8018,3.50457 8.2018,7.93164 4.4,4.42707 6.4694,6.7984 4.5986,5.26963 -3.027,-2.47357 -3.567,-2.61407 -4.9049,-1.27614 -1.3379,1.33793 -1.1011,2.55469 2.1514,11.05215 4.2755,11.1701 4.5817,14.80753 1.4324,17.01342 -1.9481,1.36448 -9.0789,1.55295 -57.75,1.52629 -35.8515,-0.0196 -56.1476,-0.39159 -57.2775,-1.04969 z m -320.88924,-3.91443 -2.36078,-1.99452 47.5,0.0403 c 26.125,0.0222 48.2875,0.0197 49.25,-0.005 0.9625,-0.0252 2.65,-0.94576 3.75,-2.04576 1.95669,-1.95669 2,-3.33333 2,-63.56728 v -61.56727 l 23.94326,-47.64706 c 22.14971,-44.07788 24.02057,-47.44372 24.97525,-44.93272 0.69757,1.83474 0.70606,3.60548 0.0262,5.46433 -0.55319,1.5125 -11.00455,22.55 -23.22525,46.75 l -22.21946,43.99951 -0.5,62.09742 c -0.40749,50.6083 -0.75393,62.40318 -1.87244,63.75 -1.24193,1.49542 -6.01018,1.65258 -50.13922,1.65258 -47.26642,0 -48.8394,-0.0614 -51.12756,-1.99453 z m 497.63924,-0.11397 c -35.848,-5.1658 -67.1187,-28.05049 -84.3462,-61.72677 -24.7691,-48.41824 -15.8887,-107.61776 21.7826,-145.21042 18.7086,-18.66956 40.9361,-29.19318 67.4723,-31.94484 15.4066,-1.59759 36.2799,1.41595 49.2591,7.11167 4.8293,2.11926 4.8795,2.12017 83.044,1.50991 49.3811,-0.38553 79.1474,-0.25489 80.75,0.35441 l 2.5382,0.96504 v 38.98957 c 0,38.20701 -0.041,39.01145 -2.0378,40.08015 -2.5236,1.35059 -5.6952,0.44171 -6.3558,-1.82137 -0.2727,-0.93437 -1.3924,-5.55292 -2.4883,-10.26344 -2.4276,-10.43452 -5.36,-19.0946 -9.7134,-28.68541 l -3.2909,-7.25 h -19.0569 -19.0569 v 30 30 h 23.393 c 20.4089,0 23.4705,0.20178 24,1.58179 0.3339,0.86998 0.607,7.82915 0.607,15.46481 0,12.70229 -0.1645,13.97107 -1.9343,14.91822 -1.1657,0.62386 -10.7018,1.03518 -24,1.03518 h -22.0657 v 36.5 36.5 h 25.352 25.3519 l 3.0831,-6.75 c 5.2753,-11.54949 8.3807,-21.14339 11.1422,-34.42272 1.3436,-6.46123 2.9728,-8.31968 6.514,-7.43089 1.7995,0.45166 2.6303,1.49895 3.0634,3.86167 0.3267,1.78307 0.459,19.57119 0.2938,39.52916 -0.2562,30.94287 -0.5213,36.42676 -1.8004,37.23469 -2.3767,1.5012 -135.2925,1.28559 -136.8,-0.22191 -0.9174,-0.91745 -1.2,-24.91466 -1.2,-101.91597 V 506.52521 l -3.75,-2.93809 c -4.6694,-3.65842 -13.3189,-8.49443 -13.9909,-7.82243 -0.2758,0.27584 -4.7808,18.40949 -10.0111,40.297 -5.2303,21.8875 -9.9559,40.35796 -10.5013,41.04546 -1.4544,1.83334 -5.5346,1.52344 -6.5832,-0.5 -0.4989,-0.9625 -1.1531,-7.825 -1.4539,-15.25 -0.644,-15.89737 -2.8913,-25.59739 -8.7209,-37.64126 -9.0099,-18.6144 -25.1352,-29.20304 -37.2663,-24.47078 -4.2194,1.64595 -12.2709,9.66391 -17.2982,17.22611 -15.5111,23.33193 -23.5767,58.70419 -20.496,89.88593 2.8464,28.8095 13.0607,54.70319 27.128,68.7705 7.2961,7.29611 12.5768,9.65729 19.8889,8.89303 3.1702,-0.33136 6.9545,-1.05507 8.4095,-1.60825 l 2.6454,-1.00578 v -26.40606 -26.40606 l -3.6638,-2.79455 c -5.6524,-4.31128 -17.5578,-10.15252 -25.5818,-12.55137 -8.4595,-2.52905 -9.7544,-3.36722 -9.7544,-6.3139 0,-4.60461 -0.3023,-4.57756 51.1648,-4.57756 47.6399,0 48.7894,0.0459 49.8286,1.98759 1.6943,3.16589 0.9139,95.83478 -0.8161,96.90333 -0.7275,0.44934 -5.4525,1.09552 -10.5,1.43594 -5.0475,0.34043 -14.1273,1.54701 -20.1773,2.68129 -26.0963,4.89267 -38.5447,5.8223 -52,3.88335 z m 100.5,-5.3915 c 2.244,-2.38863 2.8665,-2.5 13.9743,-2.5 7.5595,0 12.0359,0.41022 12.7986,1.17287 0.8971,0.89717 1.7859,0.89354 3.7809,-0.0154 1.8918,-0.86193 15.0714,-1.1886 47.9848,-1.18935 l 45.3767,-0.001 -0.01,-14.58566 c -0.01,-12.88412 0.201,-14.74501 1.7923,-15.95172 1.734,-1.31486 1.7335,-1.36727 -0.012,-1.39788 -1.6235,-0.0285 -1.7465,-0.68463 -1.1751,-6.26957 0.3511,-3.43078 1.0623,-6.74874 1.5806,-7.37326 0.5183,-0.62451 0.6602,-1.87098 0.3152,-2.76994 -0.345,-0.89896 0.1076,-2.756 1.0058,-4.12675 0.9512,-1.45171 1.1806,-2.49228 0.5494,-2.49228 -0.7302,0 -0.9004,-2.36478 -0.5218,-7.25 0.5984,-7.72285 -0.2246,-6.60456 -2.3919,3.25 -2.069,9.40741 -6.1264,21.15366 -10.2761,29.75 l -3.9826,8.25 h -27.4303 c -23.3607,0 -27.7893,0.23532 -29.851,1.5862 -1.3315,0.8724 -2.8906,1.29585 -3.4648,0.94098 -0.6689,-0.41336 -1.044,-7.81091 -1.044,-20.5862 l 10e-4,-19.94104 h 2.5 c 2.2536,0 2.5,-0.39765 2.5,-4.03518 0,-3.67959 -0.1705,-3.94396 -1.9343,-3 -1.0638,0.56935 -2.1888,1.03518 -2.5,1.03518 -1.0503,0 -0.5983,-37.07051 0.4765,-39.07884 0.9873,-1.84483 2.2328,-1.94383 23.6578,-1.8805 17.558,0.0519 22.8005,-0.22472 23.4425,-1.23691 0.4548,-0.71706 0.8338,-3.783 0.8422,-6.8132 0.013,-4.50191 0.3989,-5.74899 2.1127,-6.81929 1.1535,-0.72041 1.8394,-1.56778 1.5241,-1.88305 -0.3152,-0.31527 -1.354,0.0534 -2.3083,0.81929 -1.1868,0.95247 -1.0149,0.36549 0.544,-1.8575 l 2.279,-3.25 h -23.1604 c -21.7591,0 -23.3165,0.1228 -25.7407,2.02971 -2.001,1.57397 -2.7627,1.74237 -3.3924,0.75 -1.0118,-1.59438 -1.0858,-69.86982 -0.077,-71.38001 1.8516,-2.77297 5.2243,-3.20998 21.7518,-2.81838 9.3406,0.22132 20.1329,0.40606 23.9829,0.41054 l 7,0.008 v 2.91666 c 0,1.60417 -0.3375,3.25417 -0.75,3.66667 -0.4125,0.4125 -0.75,-0.09 -0.75,-1.11667 0,-1.33886 -0.306,-1.5607 -1.0821,-0.78456 -1.6516,1.65163 1.041,5.59686 2.8151,4.12456 1.9349,-1.60588 2.9121,-0.0231 1.1027,1.7862 -1.3936,1.39364 -1.249,2.26492 1.4746,8.88148 4.9085,11.92476 5.6897,9.9165 5.6897,-14.62679 0,-20.89763 0,-20.94325 2.4545,-23.39301 l 2.4542,-2.4545 h -79.5346 -79.5346 l -8.1699,-2.88216 c -18.2468,-6.43698 -38.7673,-7.7818 -56.67,-3.71387 -20.6209,4.68555 -37.1978,13.77872 -52.0811,28.5687 -16.403,16.30017 -26.1315,33.79379 -32.1184,57.75496 -1.8394,7.36197 -2.1978,11.66636 -2.2288,26.77237 -0.039,18.97458 0.5286,23.5 2.9474,23.5 1.6826,0 1.9847,1.57058 0.4809,2.5 -2.1415,1.32352 -1.0319,4.36222 1.75,4.79249 2.6519,0.41016 2.6697,0.45236 0.5,1.18305 -2.5805,0.86904 -2.6152,0.97356 -1.1998,3.61821 0.5776,1.07925 1.4885,1.69132 2.0244,1.36016 1.2468,-0.77055 7.083,0.4821 6.5165,1.39867 -0.2345,0.37941 -2.0608,0.61296 -4.0586,0.519 -2.3522,-0.11064 -3.4972,0.23429 -3.249,0.97879 0.2107,0.6323 0.8707,1.14963 1.4665,1.14963 0.5958,0 1.4208,0.3375 1.8333,0.75 0.4125,0.4125 0,0.75 -0.9166,0.75 -2.1565,0 -2.1923,-0.193 1.4876,8.03688 2.1948,4.90847 3.4724,6.73639 4.2,6.00881 0.5751,-0.57513 1.7432,-1.03138 2.5957,-1.01389 1.3043,0.0268 1.2726,0.2424 -0.2,1.36025 -0.9625,0.73064 -1.75,2.12258 -1.75,3.09319 0,1.41334 0.5766,1.64945 2.8954,1.18568 2.3487,-0.46975 2.997,-0.19026 3.4339,1.48036 0.681,2.60404 3.1606,1.87913 3.2007,-0.93569 0.049,-3.40249 1.2943,-3.70873 3.5291,-0.86755 1.5994,2.03327 2.6543,2.51101 4.514,2.04425 2.0194,-0.50683 2.4269,-0.23899 2.4269,1.59501 0,1.21226 -0.7638,3.4972 -1.6974,5.07764 -1.8004,3.0478 -0.9499,5.47193 1.0292,2.93349 0.6425,-0.82414 1.7307,-1.54343 2.4182,-1.59843 2.7658,-0.22126 3.25,-0.44578 3.25,-1.50699 0,-0.61554 -0.7287,-0.82735 -1.6414,-0.47711 -1.3186,0.50596 -1.4119,0.35325 -0.4745,-0.77622 0.914,-1.10134 0.8119,-1.54237 -0.4712,-2.03473 -1.3415,-0.5148 -1.4105,-0.90288 -0.381,-2.14339 1.2858,-1.54933 1.7398,-1.12009 4.5359,4.28844 1.0276,1.98785 -0.3224,4.25 -2.5364,4.25 -1.1173,0 -1.9189,0.5625 -1.7814,1.25 0.1541,0.77074 -0.6548,1.1512 -2.1099,0.99231 -1.7975,-0.19627 -2.2146,0.12114 -1.75,1.33179 0.3354,0.87421 0.6099,2.24179 0.6099,3.03907 0,0.79728 0.7501,1.73745 1.6669,2.08926 2.8129,1.0794 7.3612,6.69071 6.9283,8.54757 -0.3043,1.30535 0.2212,1.75 2.0682,1.75 1.362,0 4.3573,1.27483 6.6564,2.83295 3.8252,2.59234 12.2754,7.15927 18.7966,10.15861 1.439,0.66186 3.7583,1.27202 5.154,1.35591 1.3957,0.0839 2.3609,0.43887 2.1449,0.78884 -0.216,0.34997 0.6146,0.93309 1.8459,1.29582 12.0764,3.55754 16.9652,4.30091 29.4574,4.47914 5.0949,0.0727 6.1146,0.35979 5.643,1.58873 -0.3166,0.825 -0.1256,1.5 0.4244,1.5 0.55,0 1.2211,-0.57619 1.4914,-1.28043 0.276,-0.71931 3.9383,-1.84438 8.357,-2.56731 4.3261,-0.70778 10.7906,-1.92304 14.3656,-2.70057 3.575,-0.77753 10.325,-1.88053 15,-2.45112 4.675,-0.57058 10.1875,-1.29369 12.25,-1.6069 l 3.75,-0.56947 v -5.47111 c 0,-3.39277 -0.3799,-5.23635 -1,-4.85309 -0.55,0.33992 -1,0.14148 -1,-0.44098 0,-0.58246 0.45,-1.05902 1,-1.05902 0.55,0 1,-2.23588 1,-4.96862 0,-4.27263 -0.2451,-4.89239 -1.75,-4.42449 -1.6667,0.51821 -1.6667,0.49054 0,-0.58107 1.5463,-0.9942 1.75,-2.97856 1.75,-17.04413 0,-14.28131 -0.1671,-15.85479 -1.6244,-15.29556 -1.4858,0.57015 -1.4909,0.41809 -0.059,-1.78139 1.1897,-1.8277 1.5771,-5.26273 1.6146,-14.31515 0.035,-8.52519 0.4353,-12.3622 1.4071,-13.5 3.6014,-4.21651 4.9601,-4.08959 -43.7791,-4.08959 -25.6074,0 -46.559,0.34514 -46.559,0.76697 0,0.42183 5.2875,1.60804 11.75,2.63603 10.7317,1.70709 14.8868,2.85728 16.25,4.4983 0.275,0.33104 1.625,1.19235 3,1.91402 1.375,0.72168 4.285,2.82777 6.4667,4.68021 3.7954,3.22267 3.8926,3.44998 2.25,5.26502 -1.538,1.69943 -1.7167,4.87224 -1.7167,30.47419 v 28.57726 l -4.6781,1.594 c -2.573,0.8767 -7.821,1.594 -11.6622,1.594 -5.709,0 -7.7903,-0.47254 -11.401,-2.58854 -2.928,-1.71595 -5.2124,-2.38891 -6.7766,-1.99633 -1.2977,0.32572 -2.6432,0.13322 -2.9899,-0.42777 -0.3467,-0.56099 -1.0169,-0.78111 -1.4893,-0.48915 -0.4724,0.29196 -1.1707,-0.45152 -1.5518,-1.65217 -0.381,-1.20065 -2.8884,-4.37861 -5.572,-7.06214 -2.6835,-2.68353 -4.8791,-5.35495 -4.8791,-5.93649 0,-0.58155 -1.2579,-2.92262 -2.7953,-5.20239 -4.2269,-6.26793 -11.3284,-24.81125 -12.6934,-33.14502 -1.3707,-8.36861 -3.7399,-20.01876 -4.1609,-20.46092 -0.2414,-0.25351 -1.4712,0.83374 -2.733,2.41611 -1.3501,1.69316 -2.5607,2.44556 -2.9421,1.82846 -0.9495,-1.5364 3.2947,-6.50916 4.9977,-5.85563 1.1731,0.45014 1.3441,-0.48898 0.9452,-5.18921 -0.2678,-3.15634 -0.5165,-6.12877 -0.5526,-6.60539 -0.036,-0.47661 -1.2084,-0.64811 -2.6052,-0.38109 -1.6028,0.30638 -2.4039,0.0727 -2.1717,-0.63343 0.2024,-0.61539 1.3452,-1.2627 2.5396,-1.43845 2.5598,-0.37665 2.9408,-3.67311 0.7096,-6.13859 -0.8747,-0.96655 -1.2207,-2.53869 -0.8613,-3.91327 0.405,-1.54882 0.8461,-1.9008 1.3534,-1.07998 0.473,0.76525 0.9788,0.0536 1.3613,-1.91547 1.9587,-10.08198 1.982,-9.38639 -0.29,-8.6653 -1.5011,0.47644 -2.1013,0.2361 -2.1013,-0.84144 0,-0.8296 0.5182,-1.82861 1.1515,-2.22003 0.8069,-0.4987 0.6394,-1.08612 -0.5599,-1.96301 -1.221,-0.89289 -1.3756,-1.45879 -0.5396,-1.97547 0.6444,-0.39827 1.5713,-0.10397 2.0598,0.65399 0.7451,1.15602 1.0469,1.13638 1.8729,-0.12188 0.5416,-0.825 0.9847,-1.95 0.9847,-2.5 0,-0.55 -0.4362,-0.325 -0.9694,0.5 -0.8208,1.27007 -0.9717,1.22109 -0.9847,-0.31955 -0.011,-1.31175 -0.6432,-1.73037 -2.2653,-1.5 -1.6725,0.23753 -2.2622,1.00074 -2.2977,2.97332 -0.026,1.45957 -0.6137,3.33575 -1.3054,4.16928 -1.0233,1.23298 -0.9763,1.67305 0.2523,2.3606 2.3139,1.29495 0.3402,3.68579 -2.3405,2.835 -1.7364,-0.55113 -2.1253,-1.3338 -1.8748,-3.77291 0.3551,-3.45735 -1.7727,-4.99464 -2.8774,-2.0789 -1.0338,2.7285 -3.187,4.593 -4.654,4.03007 -0.7128,-0.27354 -1.8222,0.34517 -2.4653,1.37493 -0.6751,1.08097 -1.807,1.62755 -2.6782,1.29323 -0.83,-0.31848 -1.509,-0.0809 -1.509,0.52794 0,0.60885 -0.483,1.10699 -1.0733,1.10699 -1.6531,0 -0.6006,-3.48299 1.0866,-3.59589 4.0075,-0.26816 4.0915,-0.33971 2.9361,-2.49874 -1.0007,-1.86979 -0.8972,-2.02356 0.9648,-1.43261 1.5253,0.48412 2.0858,0.22904 2.0858,-0.94921 0,-0.88617 0.5625,-1.50327 1.25,-1.37134 3.6589,0.70217 9.75,-3.25003 9.75,-6.32625 0,-1.41715 0.5394,-1.74211 2.25,-1.35542 5.0853,1.1496 7.75,1.35185 7.75,0.58824 0,-0.44483 0.2829,-2.22311 0.6286,-3.95174 0.5262,-2.6308 0.3632,-3.04112 -1,-2.51801 -0.8957,0.34372 -1.6286,0.1819 -1.6286,-0.3596 0,-1.27534 2.5223,-3.37379 3.2185,-2.67763 0.2939,0.29395 0.803,-0.16552 1.1313,-1.02104 0.4704,-1.22569 0.09,-1.42824 -1.7943,-0.95534 -1.7502,0.43929 -2.673,0.0735 -3.4427,-1.36472 -0.9429,-1.76185 -0.6538,-2.02849 2.7987,-2.58056 3.5632,-0.56977 4.0199,-1.03355 6.1242,-6.21821 1.9069,-4.69818 2.0472,-5.75059 0.8691,-6.51981 -1.1219,-0.73259 -0.7692,-1.46845 1.7518,-3.6547 3.1203,-2.70588 8.6311,-11.96296 7.8622,-13.20701 -0.2186,-0.35363 1.3753,-2.36341 3.5419,-4.46617 2.1666,-2.10276 3.9393,-4.34464 3.9393,-4.98196 0,-0.63731 2.0549,-2.87648 4.5665,-4.97591 2.9961,-2.50443 4.3658,-4.34036 3.9828,-5.33851 -0.3211,-0.83675 -0.099,-2.10594 0.4943,-2.82042 0.593,-0.71448 0.9625,-1.89495 0.8212,-2.62325 -0.4345,-2.23844 1.1931,-5.82419 2.6434,-5.82419 2.1088,0 2.6405,1.63158 0.9806,3.00914 -1.2482,1.03594 -2.2216,6.99086 -1.1426,6.99086 0.1905,0 1.653,-0.6395 3.25,-1.4211 4.86,-2.37859 10.3378,-2.73995 16.1077,-1.06258 2.9504,0.85769 5.8672,1.24864 6.4818,0.86878 0.6146,-0.37986 1.7759,0.1656 2.5806,1.21212 1.0241,1.33194 1.6036,1.52778 1.9316,0.65278 0.2577,-0.6875 0.9292,-1.25 1.4922,-1.25 0.563,0 0.7647,0.675 0.4481,1.5 -0.4103,1.06917 0.094,1.5 1.7573,1.5 1.7556,0 2.7136,-0.92794 3.8714,-3.75 l 1.5385,-3.75 0.097,3.77475 c 0.082,3.17344 -0.3106,3.92981 -2.463,4.74813 -2.8514,1.08417 -2.4201,2.97712 0.6784,2.97712 1.1,0 1.7411,0.41891 1.4247,0.9309 -0.8017,1.29725 0.9451,2.1883 4.4875,2.28902 2.7342,0.0777 2.8687,0.2343 1.5003,1.74639 -0.8563,0.94623 -1.1343,2.06393 -0.646,2.59734 0.4715,0.51499 1.149,2.17385 1.5054,3.68635 0.4897,2.07756 0.2768,2.75 -0.8708,2.75 -1.6582,0 -2.0554,1.55053 -0.6239,2.43524 0.4924,0.3043 1.1533,-0.11914 1.4686,-0.94098 0.3154,-0.82184 1.2929,-1.49426 2.1722,-1.49426 1.1781,0 1.4202,0.56257 0.9203,2.13782 -0.5966,1.87972 -0.3633,2.07756 1.9326,1.63867 2.0584,-0.39349 2.6111,-0.10514 2.6111,1.36218 0,1.02373 -0.4766,1.86133 -1.059,1.86133 -0.5825,0 -0.8124,0.39901 -0.511,0.88669 0.3014,0.48768 -0.1221,1.44278 -0.941,2.12245 -1.9364,1.60703 -1.9027,3.89488 0.068,4.65129 0.8566,0.32871 1.316,1.22673 1.021,1.9956 -0.295,0.76887 0.075,3.2983 0.8227,5.62096 2.7153,8.43642 4.2803,19.30615 4.6394,32.22301 l 0.1946,7 0.8465,-5 c 0.4655,-2.75 1.105,-9.275 1.4212,-14.5 0.3409,-5.6354 2.0112,-15.36959 4.1058,-23.92867 1.9421,-7.93576 3.3168,-15.24826 3.0548,-16.25 -0.2614,-1.00173 -0.098,-1.82133 0.3632,-1.82133 0.9761,0 1.2365,-0.84924 3.4746,-11.33217 1.5203,-7.12092 1.9367,-7.92437 4.5845,-8.84741 1.6018,-0.55838 2.6613,-1.42141 2.3545,-1.91783 -0.3068,-0.49643 0.1498,-0.90259 1.0148,-0.90259 0.8649,0 2.4331,-0.53742 3.4849,-1.19427 1.4823,-0.9257 2.5018,-0.9257 4.5335,0 1.4416,0.65685 3.2545,1.19427 4.0286,1.19427 1.2909,0 3.432,1.64874 9.1036,7.00997 1.1579,1.09452 2.4583,1.99003 2.8898,1.99003 1.0391,0 3.4329,3.19732 3.4732,4.63889 0.017,0.62639 -0.7557,1.07639 -1.7182,1 -1.6545,-0.13131 -1.764,5.38617 -2.0067,101.11111 -0.1411,55.6875 0.1179,101.25 0.5757,101.25 0.4578,0 1.8893,-1.125 3.181,-2.5 z m 43.5,-5.5 c 0.5472,-1.72395 0.1769,-2.00211 -2.6826,-2.01531 -2.529,-0.0117 -2.9609,-0.24932 -1.8174,-1 1.2583,-0.826 1.2779,-1.12783 0.1219,-1.87289 -0.758,-0.4885 -1.0679,-1.39016 -0.6887,-2.00367 0.9006,-1.45727 5.7073,-0.26383 7.2265,1.79424 1.0429,1.41295 1.3677,1.38283 3.2264,-0.29929 1.1367,-1.02871 1.8136,-2.27994 1.5042,-2.78053 -0.7441,-1.20405 1.5822,-3.95761 2.7393,-3.24244 0.4967,0.30695 0.6422,0.98017 0.3233,1.49605 -0.9402,1.52137 2.4371,2.26003 4.084,0.89321 0.8313,-0.6899 1.7947,-0.97115 2.1408,-0.625 0.6336,0.6336 -5.7046,3.65563 -7.667,3.65563 -0.5795,0 -1.6009,1.2375 -2.2699,2.75 -2.0892,4.72315 -7.623,7.60502 -6.2408,3.25 z m -133,0 c 0.3399,-0.55 1.293,-1 2.118,-1 0.825,0 1.2219,0.45 0.882,1 -0.3399,0.55 -1.293,1 -2.118,1 -0.825,0 -1.2219,-0.45 -0.882,-1 z m 169.3116,-1.51417 c -0.8283,-1.81779 -1.3822,-2.18055 -1.9434,-1.27257 -0.5384,0.87107 -1.1084,0.94657 -1.8146,0.24036 -0.7062,-0.70621 -0.4295,-1.54347 0.8807,-2.66532 1.5915,-1.3627 2.0004,-1.40089 2.4501,-0.22884 0.3002,0.78208 1.2228,1.14476 2.0777,0.81669 1.084,-0.41594 1.5379,0.0318 1.5379,1.51686 0,1.75956 0.6046,2.10699 3.6667,2.10699 4.6231,0 4.0688,0.53241 -1.4317,1.37505 -3.8943,0.59659 -4.3656,0.43242 -5.4234,-1.88922 z m -27.8116,-1.48583 c 0.825,-0.53316 1.95,-0.96937 2.5,-0.96937 0.55,0 0.325,0.43621 -0.5,0.96937 -0.825,0.53316 -1.95,0.96937 -2.5,0.96937 -0.55,0 -0.325,-0.43621 0.5,-0.96937 z m 34.6762,-0.40146 c -0.3197,-0.83316 0.2447,-1.60611 1.392,-1.90612 2.356,-0.6161 3.7193,1.19471 1.8099,2.40407 -1.9249,1.2192 -2.5822,1.11698 -3.2019,-0.49795 z m 19.3238,0.40146 c 0,-0.55 0.7016,-1 1.559,-1 0.8575,0 1.2809,0.45 0.941,1 -0.3399,0.55 -1.0415,1 -1.559,1 -0.5176,0 -0.941,-0.45 -0.941,-1 z m -73.408,-3.5 c -1.2061,-1.84068 -1.3024,-2.50829 -0.3651,-2.53142 0.7002,-0.0173 2.0816,-1.14229 3.0698,-2.5 l 1.7967,-2.46858 h -3.0819 c -2.8021,0 -2.9818,-0.18705 -1.9792,-2.06033 1.0894,-2.0355 4.3416,-2.33652 4.6022,-0.42597 0.4067,2.98181 1.768,5.4863 2.9821,5.4863 0.7609,0 1.3834,0.40787 1.3834,0.90638 0,0.49851 -0.7875,0.70196 -1.75,0.45211 -2.1627,-0.56139 -6.367,2.51023 -4.5,3.28766 0.6875,0.28629 1.25,0.93302 1.25,1.43718 0,1.73553 -1.7732,0.91171 -3.408,-1.58333 z m 38.408,0.5 c 0,-0.55 0.4234,-1 0.941,-1 0.5175,0 1.2191,0.45 1.559,1 0.3399,0.55 -0.083,1 -0.941,1 -0.8574,0 -1.559,-0.45 -1.559,-1 z m -9.4472,-0.91459 c -0.322,-0.52097 -0.1592,-1.21065 0.3618,-1.53262 0.521,-0.32198 1.2106,-0.15917 1.5326,0.3618 0.322,0.52097 0.1592,1.21065 -0.3618,1.53262 -0.521,0.32198 -1.2106,0.15917 -1.5326,-0.3618 z m 5.4472,-3.66874 c 0,-1.42084 0.4838,-2.42209 1.075,-2.225 0.5913,0.19708 1.0413,0.68458 1,1.08333 -0.041,0.39875 -0.075,1.4 -0.075,2.225 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-1.1625 -1,-2.58333 z m 9,1.20693 c 0,-0.9275 0.6944,-1.95284 1.5431,-2.27852 2.4266,-0.93115 2.6616,0.15973 0.463,2.14937 -1.8307,1.65677 -2.0061,1.66806 -2.0061,0.12915 z m 19.8125,-2.30671 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m -129.6547,-4.21937 c -1.0416,-0.64371 -0.9556,-0.96115 0.4015,-1.4819 2.0596,-0.79034 3.191,0.0341 1.8657,1.35941 -0.518,0.51793 -1.5382,0.57305 -2.2672,0.12249 z m 76.3422,-0.0975 c 0.3399,-0.55 1.2665,-1 2.059,-1 0.7926,0 1.441,0.45 1.441,1 0,0.55 -0.9266,1 -2.059,1 -1.1325,0 -1.7809,-0.45 -1.441,-1 z m 0.5,-2.83333 c 0,-1.409 1.1264,-2.0554 2.5978,-1.49078 2.0869,0.80084 1.6951,2.32411 -0.5978,2.32411 -1.1,0 -2,-0.375 -2,-0.83333 z m -171.7711,-1.35349 c 0.4983,-1.49484 2.7711,-2.31789 2.7711,-1.0035 0,0.53699 -0.7126,1.24979 -1.5836,1.58401 -0.9739,0.37373 -1.431,0.15024 -1.1875,-0.58051 z m 168.7711,0.30485 c 0,-0.55 0.45,-1.27811 1,-1.61803 0.55,-0.33992 1,-0.16803 1,0.38197 0,0.55 -0.45,1.27811 -1,1.61803 -0.55,0.33992 -1,0.16803 -1,-0.38197 z m -4.4573,-1.04893 c -0.3164,-0.512 -0.118,-1.21356 0.441,-1.55902 0.559,-0.34546 1.0163,0.0734 1.0163,0.9309 0,1.75653 -0.6001,2.01516 -1.4573,0.62812 z m -19.1016,-2.6009 c 2.5266,-1.91098 4.1545,-1.89075 2.5589,0.0318 -0.6847,0.825 -1.9773,1.48569 -2.8724,1.4682 -1.3674,-0.0267 -1.3172,-0.26656 0.3135,-1.5 z m -75.6286,-1.15131 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m 6.1875,-0.25787 c 0,-0.51754 0.45,-1.2191 1,-1.55902 0.55,-0.33992 1,0.0835 1,0.94098 0,0.85746 -0.45,1.55902 -1,1.55902 -0.55,0 -1,-0.42344 -1,-0.94098 z m -102,-4.94099 c 0,-0.55 0.45,-1.27811 1,-1.61803 0.55,-0.33992 1,-0.16803 1,0.38197 0,0.55 -0.45,1.27811 -1,1.61803 -0.55,0.33992 -1,0.16803 -1,-0.38197 z m 109,0.28484 c 0,-0.29389 0.4726,-1.41737 1.0502,-2.49662 1.155,-2.15821 3.1841,-1.68035 2.3288,0.54846 -0.5215,1.35896 -3.379,3.00647 -3.379,1.94816 z m -104.4972,-6.39392 c -0.7292,-2.29765 0.1942,-4.31425 1.5826,-3.45616 0.521,0.32197 0.6585,1.05252 0.3057,1.62344 -0.4136,0.6692 0.1441,0.78869 1.5695,0.33628 1.9961,-0.63355 2.1021,-0.49816 1.09,1.39286 -1.417,2.64779 -3.7236,2.70032 -4.5478,0.10358 z m 11.5169,-2.9968 c -1.2414,-0.76723 -1.1957,-1.0074 0.3015,-1.58189 2.0864,-0.80066 3.4488,0.1997 2.1038,1.54477 -0.568,0.56802 -1.5225,0.58275 -2.4053,0.0371 z m 102.5769,-0.85592 c -0.3461,-0.55992 -0.1419,-1.31919 0.4536,-1.68727 1.5375,-0.95021 2.5295,0.35135 1.246,1.63484 -0.7182,0.71818 -1.2775,0.73543 -1.6996,0.0524 z m 56.4034,-3.5729 c 0,-0.87083 0.7125,-1.58333 1.5833,-1.58333 0.8709,0 1.4052,0.53437 1.1875,1.1875 -0.618,1.85422 -2.7708,2.16176 -2.7708,0.39583 z m -170.3395,-1.02567 c -0.3044,-0.79328 -0.2823,-3.11324 0.049,-5.15547 0.3653,-2.25134 0.227,-3.48107 -0.3513,-3.12365 -0.5246,0.32422 -1.6073,0.17608 -2.406,-0.32921 -1.1406,-0.72152 -0.982,-0.92199 0.7387,-0.93402 1.205,-0.008 2.4857,-0.49224 2.846,-1.07515 0.4139,-0.66978 1.16,-0.39375 2.0272,0.75 1.2607,1.66283 1.3748,1.67055 1.404,0.095 0.017,-0.94315 -0.8682,-2.19648 -1.9682,-2.78518 -2.3527,-1.2591 -2.6428,-3 -0.5,-3 0.825,0 1.3875,0.3375 1.25,0.75 -0.1375,0.4125 0.018,0.75 0.3463,0.75 1.4665,0 3.9037,2.92281 3.9037,4.68146 0,1.06512 0.399,1.68997 0.8867,1.38857 0.4877,-0.30141 1.4065,0.0783 2.0417,0.84373 0.8825,1.06335 0.8503,1.5082 -0.1367,1.88528 -0.8974,0.34287 -0.5997,1.00399 0.975,2.16567 3.2535,2.40004 1.7987,3.74262 -3.2371,2.98745 -2.7051,-0.40565 -4.5436,-0.23845 -4.9704,0.45203 -0.9414,1.52322 -2.2408,1.36788 -2.8987,-0.34653 z m 106.4706,-7.89967 c -1.4153,-1.70532 -0.4681,-2.65799 2.6426,-2.65799 1.7946,0 2.2827,-0.41063 1.8447,-1.55194 -0.3275,-0.85356 -0.1817,-1.29622 0.324,-0.98369 0.5057,0.31254 1.2021,0.11091 1.5475,-0.44806 0.9326,-1.50888 2.5101,-1.23032 2.5101,0.44322 0,1.67823 -4.9194,6.54047 -6.6173,6.54047 -0.6258,0 -1.639,-0.6039 -2.2516,-1.34201 z m -13.6011,-0.60943 c -0.863,-1.39636 0.2367,-3.04856 2.029,-3.04856 1.8361,0 1.8506,1.41516 0.03,2.92611 -0.9645,0.80051 -1.616,0.83925 -2.059,0.12245 z m 28.97,-0.0486 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m -133.5,-1.03138 c 0,-0.53274 0.675,-0.96862 1.5,-0.96862 0.825,0 1.5,0.17686 1.5,0.39301 0,0.21616 -0.675,0.65203 -1.5,0.96862 -0.825,0.31658 -1.5,0.13972 -1.5,-0.39301 z m 96.57,-1.85531 c -0.3014,-0.48768 0.1221,-1.44278 0.941,-2.12245 1.2391,-1.02837 1.489,-0.87956 1.489,0.8867 0,2.14536 -1.4211,2.86807 -2.43,1.23575 z m 95.1403,-2.11331 c -0.34,-1.29986 -0.031,-2 0.8833,-2 0.7735,0 1.4064,0.9 1.4064,2 0,1.1 -0.3975,2 -0.8834,2 -0.4858,0 -1.1187,-0.9 -1.4063,-2 z m -214.7103,-2.37756 c 0,-0.20765 0.675,-0.93775 1.5,-1.62244 1.2285,-1.01957 1.5,-0.95124 1.5,0.37756 0,0.89234 -0.675,1.62244 -1.5,1.62244 -0.825,0 -1.5,-0.1699 -1.5,-0.37756 z m 4,-2.12244 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m 32,-3.39301 c 0,-0.49116 0.7118,-1.16616 1.5818,-1.5 2.4463,-0.93873 2.7695,-0.7352 1.4182,0.89301 -1.3797,1.66238 -3,1.99022 -3,0.60699 z m -21.5813,-1.02366 c -0.2303,-0.22916 -0.4044,-1.35416 -0.3869,-2.5 0.031,-2.01398 0.079,-2.0209 1.452,-0.2079 0.9391,1.24023 2.0291,1.63941 3.2182,1.17858 1.6954,-0.65709 1.6839,-0.78603 -0.202,-2.25996 -1.6273,-1.27185 -1.6722,-1.45009 -0.241,-0.95652 1.1336,0.39095 2.1968,-0.0945 2.9905,-1.36547 1.5602,-2.49818 4.9321,-2.53388 7.1566,-0.0758 1.3336,1.47352 1.4239,2.01328 0.405,2.42105 -0.7211,0.28862 -0.2986,0.56029 0.9389,0.60371 2.8171,0.0988 3.0448,3.07895 0.2353,3.07895 -1.1757,0 -2.7905,-1.27566 -3.8776,-3.06332 l -1.8629,-3.06332 -2.1224,2.69818 c -1.1673,1.484 -2.1224,3.03989 -2.1224,3.45753 0,0.77109 -4.8139,0.81789 -5.5813,0.0543 z m -5.8914,-2.03918 c -0.3301,-0.53416 0.3392,-1.91063 1.4874,-3.05882 1.1482,-1.14819 2.5273,-3.0771 3.0647,-4.28647 0.9134,-2.05565 0.9393,-2.03604 0.3986,0.30114 -0.3181,1.375 -0.6854,2.99925 -0.8162,3.60944 -0.4088,1.90702 -3.4944,4.47038 -4.1345,3.43471 z m -2.8449,-4.42935 c -0.2923,-0.76186 0.1216,-2.31763 0.9198,-3.45728 1.2872,-1.83768 1.2535,-2.30318 -0.2977,-4.11481 -2.2646,-2.6449 -3.5109,-2.59919 -3.1174,0.11434 0.1816,1.25184 -0.3166,2.35841 -1.1871,2.6369 -0.825,0.26392 -1.1664,0.12216 -0.7587,-0.31504 0.4078,-0.43719 0.2243,-1.41787 -0.4076,-2.17928 -1.3722,-1.65344 -0.4519,-2.66009 3.6663,-4.01017 4.0725,-1.33511 5.5,-0.64169 5.5,2.67175 0,2.57622 -2.5322,10.03879 -3.4064,10.03879 -0.2088,0 -0.6188,-0.62334 -0.9112,-1.3852 z m 24.8603,-3.5457 c -0.3164,-0.512 -0.1586,-1.18846 0.3507,-1.50325 1.3043,-0.80608 4.2107,0.45674 3.5418,1.53893 -0.7243,1.172 -3.1599,1.14967 -3.8925,-0.0357 z m -13.9598,-1.93489 c -0.4307,-0.697 -0.5131,-1.53733 -0.183,-1.86741 0.8949,-0.89496 1.8707,0.4213 1.3874,1.87145 -0.3388,1.01617 -0.5743,1.01538 -1.2044,-0.004 z m 4.0528,-1.64135 c -2.0345,-2.03452 -2.0758,-2.59898 -0.1357,-1.85449 0.825,0.31659 1.5,0.12561 1.5,-0.42439 0,-0.55 0.7044,-1.27032 1.5654,-1.6007 1.2367,-0.47456 1.4231,-0.12955 0.8876,1.64301 -1.0405,3.44432 -2.0299,4.024 -3.8173,2.23657 z m 168.3643,0.50714 c 0,-0.55 0.9,-1 2,-1 1.1,0 2,0.45 2,1 0,0.55 -0.9,1 -2,1 -1.1,0 -2,-0.45 -2,-1 z m -178,-4.55255 c 0,-1.77345 2.0496,-2.7398 4.8285,-2.27653 1.62,0.27006 1.364,0.63914 -1.4272,2.05792 -2.9371,1.49289 -3.4013,1.52273 -3.4013,0.21861 z m 15.5,-0.44745 c -0.3399,-0.55 -0.1415,-1 0.441,-1 0.5824,0 1.059,0.45 1.059,1 0,0.55 -0.1984,1 -0.441,1 -0.2425,0 -0.7191,-0.45 -1.059,-1 z m 161.2056,0.37228 c -0.7811,-0.78111 1.7776,-3.37228 3.33,-3.37228 0.6481,0 0.9194,-0.675 0.6028,-1.5 -0.4026,-1.04916 0.076,-1.5 1.593,-1.5 1.6378,0 1.8863,0.28227 1.0154,1.1532 -0.763,0.76297 -0.8365,1.7449 -0.2173,2.90184 0.7718,1.44216 0.5874,1.65753 -1.0522,1.22878 -1.0934,-0.28593 -2.5895,-0.0207 -3.3246,0.58948 -0.7352,0.61014 -1.6114,0.83468 -1.9471,0.49898 z m -187.7056,-2.26387 c 0,-0.49038 1.233,-1.20106 2.74,-1.57929 3.0148,-0.75667 4.2214,-2.11515 4.2447,-4.77912 0.021,-2.35647 -2.2068,-2.21673 -3.9847,0.25 -1.9494,2.7047 -2.5862,2.51662 -2.5394,-0.75 0.033,-2.32005 -0.3366,-2.70847 -2.3653,-2.48438 l -2.4047,0.26563 2.4047,-1.87806 c 3.7903,-2.96017 6.6041,-3.51279 7.7213,-1.51642 0.906,1.61892 1.0684,1.62104 2.6548,0.0346 1.9098,-1.90972 3.7319,-1.36482 2.8779,0.86062 -0.6577,1.71404 0.9685,1.90343 3.7164,0.43279 2.2854,-1.22309 2.4473,-0.22712 0.4025,2.47631 -2.0793,2.74904 -1.8738,3.22775 1.6915,3.94081 1.7379,0.34757 2.8796,0.91212 2.5371,1.25456 -1.0663,1.06637 -8.6968,1.36059 -8.6968,0.33533 0,-1.69371 -1.9967,-1.05582 -4.7834,1.52817 -2.641,2.44889 -6.2166,3.37399 -6.2166,1.60841 z m 24,-4.10841 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m 4,-0.5 c 0,-0.825 0.675,-1.5 1.5,-1.5 0.825,0 1.5,-0.64844 1.5,-1.44098 0,-2.5043 1.9813,-2.78366 2.8618,-0.40351 0.6917,1.86965 0.3973,2.51626 -1.6227,3.56425 -3.2165,1.66873 -4.2391,1.61572 -4.2391,-0.21976 z m -11,-1.94898 c 0,-0.38163 0.675,-1.36888 1.5,-2.19388 0.825,-0.825 1.5,-1.07295 1.5,-0.55101 0,0.52194 -0.675,1.50918 -1.5,2.19387 -0.825,0.68469 -1.5,0.93265 -1.5,0.55102 z m 212,-1.55102 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m -210.1875,-3.68311 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m 172.4375,-1.60943 c -2.5674,-1.15599 -2.8792,-2.25205 -0.861,-3.02651 0.764,-0.29316 2.1752,-2.59131 3.1359,-5.10699 1.6089,-4.21291 3.6208,-5.76528 4.8643,-3.75331 0.2789,0.45136 -0.4416,2.36386 -1.6011,4.25 -1.1596,1.88614 -2.3738,4.60397 -2.6982,6.03963 -0.5169,2.2871 -0.8685,2.48484 -2.8399,1.59718 z m 37.25,-0.70746 c 0.3399,-0.55 1.2665,-1 2.059,-1 0.7926,0 1.441,0.45 1.441,1 0,0.55 -0.9266,1 -2.059,1 -1.1325,0 -1.7809,-0.45 -1.441,-1 z m -223.2505,-2.25 c 0.2289,-0.6875 1.2646,-1.4144 2.3015,-1.61534 1.6311,-0.31608 1.7046,-0.14754 0.5447,1.25 -1.5862,1.91126 -3.4401,2.14923 -2.8462,0.36534 z m 12.6644,-3.05099 c 0.4465,-1.20945 1.661,-2.3295 2.699,-2.48899 1.7727,-0.2724 1.782,-0.2058 0.1526,1.09888 -0.9539,0.76387 -1.497,1.62627 -1.2068,1.91644 0.2901,0.29017 -0.1439,0.78523 -0.9645,1.10013 -1.1746,0.45076 -1.3193,0.10478 -0.6803,-1.62646 z m 6.409,0.70007 c -0.6096,-1.58872 1.4349,-3.66678 2.7861,-2.83172 0.3875,0.23947 0.4643,-0.48321 0.1707,-1.60596 -0.5046,-1.92936 -0.6366,-1.94837 -2.4068,-0.34639 -1.7099,1.54746 -1.8729,1.5526 -1.8729,0.059 0,-1.58528 0.9017,-1.94492 7.7112,-3.07541 4.0458,-0.67168 5.2996,1.06655 1.7443,2.41827 -2.157,0.8201 -2.5509,1.46682 -2.0673,3.39387 0.4127,1.64421 0.1104,2.56765 -0.9771,2.98497 -2.6687,1.02409 -4.4464,0.67589 -5.0882,-0.99666 z m -28.9637,-0.89287 c 0.3525,-0.91838 0.6408,-1.85798 0.6408,-2.088 0,-0.23001 0.6375,-0.41821 1.4167,-0.41821 0.7791,0 1.6648,-0.5625 1.9681,-1.25 0.3033,-0.6875 0.4533,0.1 0.3333,1.75 -0.169,2.32448 -0.7564,3.07611 -2.6089,3.338 -1.8866,0.26673 -2.2556,-0.0141 -1.75,-1.33179 z m 266.1408,-0.50621 c 0.3399,-0.55 1.0415,-1 1.559,-1 0.5176,0 0.941,0.45 0.941,1 0,0.55 -0.7016,1 -1.559,1 -0.8575,0 -1.2809,-0.45 -0.941,-1 z m -249.6152,-1.75 c -0.063,-0.4125 -0.035,-1.5375 0.063,-2.5 0.2208,-2.1707 0.31,-2.17611 -4.4863,0.27211 l -3.9614,2.02211 -0.5438,-2.26686 c -0.6923,-2.8856 -3.5463,-3.45825 -6.0306,-1.21003 -1.6384,1.48275 -1.9256,1.51409 -1.9256,0.2101 0,-2.0006 2.6082,-4.13763 4,-3.27743 1.2808,0.79158 4.2086,-1.35344 3.4727,-2.54421 -1.2413,-2.0084 1.5596,-1.74783 2.9778,0.27704 1.408,2.01014 1.4175,2.39054 0.084,3.36561 -1.6144,1.18048 -1.0388,2.40156 1.1322,2.40156 0.7333,0 1.3333,-1.05277 1.3333,-2.33948 0,-1.5557 0.8809,-2.74084 2.6292,-3.53745 1.4461,-0.65887 2.7542,-1.0686 2.9068,-0.91051 0.3258,0.33737 0.7118,6.50763 0.5653,9.03744 -0.098,1.68501 -1.9808,2.53468 -2.2165,1 z m 8.2972,-5.75 c 0.6264,-1.375 1.7418,-2.5 2.4785,-2.5 1.8298,0 1.6859,0.6536 -0.6605,3 -2.6663,2.6663 -3.1945,2.52103 -1.818,-0.5 z m 246.4418,0.96215 c -0.644,-1.67847 1.6317,-3.04033 3.3283,-1.99175 0.5764,0.3562 1.0479,1.29608 1.0479,2.08862 0,1.9293 -3.6295,1.84896 -4.3762,-0.0969 z m -239.6238,-2.33971 c 0,-0.48265 0.675,-1.43775 1.5,-2.12244 1.2532,-1.04007 1.5,-0.89568 1.5,0.87756 0,1.21995 -0.6378,2.12244 -1.5,2.12244 -0.825,0 -1.5,-0.3949 -1.5,-0.87756 z m 165,-1.62244 c 0,-0.825 -0.034,-1.82625 -0.075,-2.225 -0.119,-1.15062 1.4451,-1.32463 3.0107,-0.33496 1.1898,0.75212 1.2117,1.17745 0.1276,2.48374 -1.6516,1.99004 -3.0633,2.02517 -3.0633,0.0762 z m -195,-0.5 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m 26.7191,-1.70947 c -1.3296,-1.32965 -1.8934,-1.39072 -3.1571,-0.342 -1.2716,1.05531 -1.6485,0.98958 -2.1737,-0.37903 -0.7776,-2.02631 -0.5892,-2.22999 2.8637,-3.09662 1.6741,-0.42016 2.748,-0.28444 2.748,0.34728 0,0.57034 0.6785,1.71543 1.5077,2.54465 0.8292,0.82922 1.1302,1.74095 0.6689,2.02606 -0.4613,0.28511 -1.5672,-0.21005 -2.4575,-1.10034 z m 194.7809,0.70947 c -0.3399,-0.55 -0.168,-1 0.382,-1 0.55,0 1.2781,0.45 1.618,1 0.3399,0.55 0.168,1 -0.382,1 -0.55,0 -1.2781,-0.45 -1.618,-1 z m -5.1377,-0.69561 c 1.0808,-1.08081 3.6377,-1.23257 3.6377,-0.21591 0,0.50134 -0.975,0.91152 -2.1667,0.91152 -1.1916,0 -1.8536,-0.31302 -1.471,-0.69561 z m 18.6377,-1.36341 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -236,-1 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 0,-2.83841 c 0,-1.62926 3.7513,-3.31403 4.5394,-2.03874 0.7962,1.28816 0.6012,1.49081 -2.2894,2.37933 -1.3268,0.40785 -2.25,0.2681 -2.25,-0.34059 z m 8.0955,-0.0435 c -0.9945,-0.61466 -1.0222,-0.98628 -0.1151,-1.54689 0.6566,-0.40582 1.6439,-0.28787 2.1939,0.26213 1.3032,1.30322 -0.3729,2.33908 -2.0788,1.28476 z m 194.0545,-0.009 c 0.4297,-1.28914 1.8013,-1.5207 1.925,-0.325 0.041,0.39875 -0.465,0.905 -1.125,1.125 -0.66,0.22 -1.02,-0.14 -0.8,-0.8 z m -185.034,-4.3 c -0.1336,-2.01594 -1.735,-2.35015 -2.3958,-0.5 -0.2455,0.6875 -0.8187,0.90179 -1.2738,0.47619 -0.455,-0.42559 -0.07,-1.53131 0.856,-2.45714 2.0198,-2.01986 4.1554,-0.53149 3.4074,2.37473 -0.425,1.6511 -0.4906,1.66284 -0.5938,0.10622 z m -15.116,-0.78222 c 0,-1.03417 4.1543,-3.05113 4.8925,-2.37539 0.2159,0.1976 -0.1767,1.04515 -0.8724,1.88344 -1.4366,1.73095 -4.0201,2.0471 -4.0201,0.49195 z m 190.5,-0.96778 c 0.3399,-0.55 1.0415,-1 1.559,-1 0.5176,0 0.941,0.45 0.941,1 0,0.55 -0.7016,1 -1.559,1 -0.8575,0 -1.2809,-0.45 -0.941,-1 z m 27.75,-0.71828 c -1.9734,-0.70787 -1.4561,-2.28172 0.75,-2.28172 1.1,0 2,0.42344 2,0.94098 0,1.28004 -1.2374,1.88333 -2.75,1.34074 z m -218.25,-2.7227 c 0,-0.85746 0.45,-1.55902 1,-1.55902 0.55,0 1,0.42344 1,0.94098 0,0.51754 -0.45,1.2191 -1,1.55902 -0.55,0.33992 -1,-0.0835 -1,-0.94098 z m 21.0153,-0.30902 c 0.028,-1.36867 1.8663,-3.70172 2.4539,-3.11417 0.7877,0.78775 -0.4671,3.86417 -1.5762,3.86417 -0.4911,0 -0.8861,-0.3375 -0.8777,-0.75 z m -9.3668,-1.72372 c -0.3087,-0.80423 -0.14,-1.7225 0.3747,-2.04062 0.5555,-0.34334 0.4464,-1.36215 -0.2686,-2.50706 -0.9419,-1.5082 -0.9375,-2.19574 0.02,-3.15364 1.7732,-1.77315 1.5066,-2.82496 -0.716,-2.82496 -2.2512,0 -3.5612,1.57161 -2.0753,2.48992 1.1706,0.72346 1.3888,2.61221 0.2663,2.30448 -0.4125,-0.11308 -2.2781,0.60739 -4.1458,1.60106 -3.0971,1.64779 -3.339,1.65868 -2.75,0.12381 0.3552,-0.92556 0.6458,-2.04356 0.6458,-2.48443 0,-0.44087 1.0125,-1.08646 2.25,-1.43464 2.1109,-0.59394 2.1408,-0.71691 0.4826,-1.98958 -3.1122,-2.38874 -1.1181,-4.74798 3.6395,-4.30584 3.6229,0.33668 4.1891,0.72904 4.6279,3.20692 0.275,1.55282 1.1308,3.0332 1.9018,3.28973 1.0843,0.3608 1.26,-0.24264 0.7755,-2.66476 -0.5691,-2.84558 -0.3186,-3.2597 2.7461,-4.54023 1.8548,-0.77497 3.8346,-2.23496 4.3995,-3.24441 1.3899,-2.48369 2.5718,-1.06073 1.7705,2.13173 -0.4541,1.80923 -1.5061,2.74878 -3.5315,3.15386 -3.0032,0.60065 -4.023,2.51812 -4.0482,7.61238 -0.01,1.5125 -0.4637,2.75 -1.0137,2.75 -0.55,0 -1,-0.47656 -1,-1.05902 0,-0.58246 -0.45,-0.7809 -1,-0.44098 -0.55,0.33992 -1,1.46492 -1,2.5 0,2.39982 -1.6143,3.44758 -2.3515,1.52628 z m -5.1485,-1.52628 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 207.5,-0.93261 c 0,-1.21526 3.6888,-2.37777 4.9911,-1.57292 1.9792,1.22324 0.9602,2.50553 -1.9911,2.50553 -1.65,0 -3,-0.41968 -3,-0.93261 z m -194,-0.86915 c 0,-1.01476 5.4245,-4.19824 7.1536,-4.19824 1.0502,0 1.0629,1.11093 0.031,2.73494 -1.0281,1.61856 -7.185,2.87249 -7.185,1.4633 z m 9.5411,-4.26477 c 0.3626,-0.5866 -0.1098,-1.62884 -1.0497,-2.3161 -2.1334,-1.55996 -1.5881,-4.97506 0.8699,-5.44843 1.5778,-0.30387 1.7408,0.0896 1.1505,2.77732 l -0.6878,3.13135 3.338,-2.03507 c 4.2435,-2.58713 6.1272,-2.61536 2.838,-0.0425 l -2.5,1.95553 3.3724,0.0222 c 2.8833,0.019 3.1919,0.23981 2.1276,1.52224 -1.631,1.96523 -3.7424,1.90045 -5.8214,-0.17859 -1.5715,-1.57146 -1.6992,-1.57146 -2.0019,0 -0.1779,0.92322 -0.7669,1.67859 -1.309,1.67859 -0.5422,0 -0.6891,-0.47994 -0.3266,-1.06653 z m 190.4742,-0.68347 c -0.01,-1.2375 0.4347,-2.25 0.9847,-2.25 1.2529,0 1.2529,1.06124 0,3 -0.7839,1.21296 -0.9723,1.06944 -0.9847,-0.75 z m 3.9847,0.75 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m -200.5,-3 c -0.3399,-0.55 -0.1415,-1 0.441,-1 0.5824,0 1.059,0.45 1.059,1 0,0.55 -0.1984,1 -0.441,1 -0.2425,0 -0.7191,-0.45 -1.059,-1 z m -10.5,-5.81854 c 0,-1.20855 1.8972,-2.61759 2.5907,-1.9241 0.2517,0.2517 -0.2282,1.02686 -1.0665,1.72258 -0.9504,0.78875 -1.5242,0.86462 -1.5242,0.20152 z m 20.6308,-0.70127 c -0.4649,-1.21156 -0.1098,-1.53789 1.4138,-1.29909 2.3298,0.36517 2.7672,2.1709 0.634,2.61799 -0.7848,0.1645 -1.7063,-0.429 -2.0478,-1.3189 z m -25.6308,-3.8732 c 0,-0.94863 2.9934,-1.42672 3.527,-0.56332 0.3251,0.52598 -0.3355,0.95633 -1.468,0.95633 -1.1324,0 -2.059,-0.17686 -2.059,-0.39301 z m 5.8,-1.80699 c 0.66,-0.66 1.2,-2.01 1.2,-3 0,-0.99 0.675,-1.8 1.5,-1.8 1.7066,0 2.0087,1.5676 0.4837,2.51008 -0.559,0.34546 -0.7866,0.99987 -0.5058,1.45423 0.2809,0.45437 -0.1986,1.09827 -1.0654,1.43091 -2.4059,0.92322 -2.9355,0.72775 -1.6125,-0.59522 z m 23.2,-2.83138 c 0,-2.49986 -0.3948,-2.96862 -2.5,-2.96862 -1.8493,0 -2.5,0.53074 -2.5,2.03896 v 2.03895 l -2.1772,-2.02839 c -2.6025,-2.42459 -2.547,-2.48857 3.1638,-3.6446 3.3246,-0.67299 4.5688,-1.42581 4.8038,-2.90657 0.2557,-1.61167 0.1237,-1.7137 -0.6823,-0.52731 -1.5691,2.3097 -2.2882,0.59842 -0.8707,-2.07226 2.6793,-5.04817 2.8996,-5.18864 4.2014,-2.67932 2.211,4.26167 2.6272,8.75214 1.0873,11.73003 -2.1633,4.18346 -4.5261,4.71547 -4.5261,1.01913 z m -13.8125,0.96888 c 0.2406,-0.72187 1.0281,-1.50938 1.75,-1.75 0.75,-0.25 1.125,0.125 0.875,0.875 -0.2406,0.72187 -1.0281,1.50938 -1.75,1.75 -0.75,0.25 -1.125,-0.125 -0.875,-0.875 z m 171.3125,-1.9375 c 0.3399,-0.55 1.068,-1 1.618,-1 0.55,0 0.7219,0.45 0.382,1 -0.3399,0.55 -1.068,1 -1.618,1 -0.55,0 -0.7219,-0.45 -0.382,-1 z m -169.5,-5.44098 c 0,-1.34254 0.4028,-2.68996 0.8952,-2.99426 1.1767,-0.72721 2.2009,2.02132 1.4664,3.93524 -0.8992,2.34345 -2.3616,1.76077 -2.3616,-0.94098 z m -10.4634,-1.62987 c 1.9389,-3.74942 5.4292,-5.77363 5.5423,-3.21433 0.049,1.10354 0.2759,1.29505 0.5946,0.50156 0.2836,-0.70599 -0.09,-2.02775 -0.829,-2.93723 -1.1737,-1.44356 -1.1118,-1.56631 0.4873,-0.96638 1.0075,0.37798 2.5251,0.68723 3.3724,0.68723 1.3194,0 1.3436,0.23633 0.1682,1.64559 -0.7548,0.90507 -1.8984,2.81757 -2.5412,4.25 -0.9999,2.22821 -1.1851,2.31552 -1.2818,0.60441 -0.1001,-1.77181 -0.252,-1.82013 -1.3312,-0.42353 -0.67,0.86705 -2.2189,1.83433 -3.4419,2.1495 -2.1511,0.55434 -2.1753,0.47937 -0.7397,-2.29682 z m 176.9547,1.07085 c 0.9839,-3.24862 1.335,-3.57369 2.549,-2.3597 0.6759,0.67594 0.2981,1.6402 -1.1496,2.93333 -2.1541,1.92421 -2.1557,1.92356 -1.3994,-0.57363 z m -146.9439,-0.85054 c -0.6426,-2.02493 1.2058,-6.14946 2.756,-6.14946 0.4523,0 0.7422,-0.7875 0.6443,-1.75 -0.3097,-3.04505 0.019,-4.25 1.1593,-4.25 0.6088,0 0.848,0.675 0.5314,1.5 -0.3166,0.825 -0.2022,1.5 0.2543,1.5 0.9247,0 0.1863,5.21387 -0.8497,6 -0.3624,0.275 -1.3776,1.55161 -2.256,2.83691 -1.5555,2.27609 -1.6138,2.28422 -2.2396,0.31255 z m -14.7655,-0.81016 c 0.5213,-1.01161 0.7646,-2.34636 0.5407,-2.96609 -0.4305,-1.19136 2.5807,-2.80329 3.5067,-1.87724 1.0684,1.06839 -1.4056,5.99134 -3.1829,6.33362 -1.4689,0.28288 -1.6327,4.8e-4 -0.8645,-1.49029 z m 12.7181,-4.3393 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 10.5153,-1.75979 c 0.032,-1.56435 1.8049,-3.4668 2.8924,-3.10432 0.6887,0.22957 0.339,1.06459 -0.8844,2.1121 -1.1128,0.95284 -2.0164,1.39934 -2.008,0.99222 z m -23.3513,-1.99021 c -0.2498,-0.4125 0.1737,-1.33024 0.941,-2.03943 1.1588,-1.07113 1.395,-0.94415 1.395,0.75 0,1.99251 -1.4319,2.78287 -2.336,1.28943 z m 5.336,-0.80902 c 0,-0.85746 0.4573,-1.27636 1.0163,-0.9309 0.559,0.34546 0.7574,1.04702 0.441,1.55902 -0.8572,1.38704 -1.4573,1.12841 -1.4573,-0.62812 z m 154.5,-2.44098 c 0.3399,-0.55 1.0415,-1 1.559,-1 0.5176,0 0.941,0.45 0.941,1 0,0.55 -0.7016,1 -1.559,1 -0.8575,0 -1.2809,-0.45 -0.941,-1 z m -156.2972,-1.25559 c -0.5731,-0.69058 -1.3441,-2.45915 -1.7133,-3.93015 -0.5976,-2.38093 -0.4329,-2.61221 1.5002,-2.10669 1.4837,0.38798 2.0226,1.13729 1.7014,2.36556 -0.2628,1.00495 0.1706,2.04356 0.9828,2.35522 0.7991,0.30664 1.1728,1.0107 0.8305,1.56459 -0.8395,1.35835 -2.0432,1.26774 -3.3016,-0.24853 z m 109.7972,-0.015 c 0,-0.8335 0.675,-1.77447 1.5,-2.09106 0.825,-0.31658 1.5,-0.19482 1.5,0.27057 0,0.46539 -0.675,1.40637 -1.5,2.09106 -1.2211,1.01343 -1.5,0.96312 -1.5,-0.27057 z m -91.5,-1.79185 c -1.5769,-0.62839 -1.6474,-0.81188 -0.3333,-0.8673 0.9166,-0.0387 1.8675,-0.63278 2.1131,-1.32028 0.2455,-0.6875 0.7742,-0.94625 1.175,-0.575 1.4779,1.36931 -0.8916,3.58477 -2.9548,2.76258 z m -7.8333,-0.60425 c -1.2715,-1.27145 -0.6516,-2.28975 2.3333,-3.83333 1.7962,-0.92887 3,-1.12721 3,-0.4943 0,0.58139 -0.675,1.31609 -1.5,1.63267 -0.825,0.31659 -1.5,1.20246 -1.5,1.96862 0,1.47024 -1.2121,1.84756 -2.3333,0.72634 z m 90.0833,0.004 c 0.6875,-0.27741 1.25,-0.96503 1.25,-1.52804 0,-0.56301 -0.675,-0.76463 -1.5,-0.44805 -2.1891,0.84005 -1.8342,-0.67185 0.5,-2.12955 1.1,-0.68696 2,-2.09707 2,-3.13356 0,-1.0365 0.6606,-2.13803 1.468,-2.44785 1.6558,-0.63542 3.2645,1.22677 1.9101,2.21114 -0.4829,0.35101 -1.6583,2.32569 -2.6119,4.38819 -0.9536,2.0625 -2.3036,3.71448 -3,3.67106 -1.0019,-0.0625 -1.0053,-0.18423 -0.016,-0.58334 z m -94.1186,-4.12518 c -0.8165,-1.32099 1.7961,-8.21255 3.1133,-8.21255 0.6904,0 1.2614,0.3375 1.269,0.75 0.01,0.4125 0.2657,1.68896 0.5738,2.83657 0.4029,1.50056 -0.1479,2.55063 -1.9615,3.73889 -1.3869,0.90877 -2.7345,1.30795 -2.9946,0.88707 z m 16.0353,0.1208 c -1.3792,-1.37917 -0.5794,-2.33335 1.9557,-2.33335 2.2177,0 2.4303,0.23152 1.3776,1.5 -1.3546,1.63222 -2.2985,1.86818 -3.3333,0.83333 z m -2.6266,-5.30857 c -1.1243,-0.69486 -1.0718,-1.13594 0.2986,-2.50634 1.0882,-1.08813 1.4525,-2.50236 1.0538,-4.09075 -0.6694,-2.66717 1.0223,-3.39513 1.9956,-0.85873 0.4146,1.08059 1.2651,1.35851 2.7322,0.89287 1.4342,-0.45519 1.9066,-0.31436 1.4459,0.43105 -0.3763,0.60891 -1.5577,1.10712 -2.6252,1.10712 -1.3912,0 -1.941,0.69141 -1.941,2.44098 0,2.85377 -1.0459,3.76674 -2.9599,2.58379 z m 89.8415,0.38022 c -0.065,-0.49774 -0.049,-1.28985 0.035,-1.76025 0.084,-0.47039 -0.3342,-1.44283 -0.9302,-2.16097 -0.7582,-0.91365 -0.7661,-1.50196 -0.026,-1.95929 1.5194,-0.93905 5.0396,0.37966 5.0396,1.88792 0,1.50062 -3.9442,5.32428 -4.1184,3.99259 z m -19.4863,-5.01882 c -1.2197,-0.50346 -0.6401,-5.38618 0.6395,-5.38618 2.5856,0 3.8808,1.28925 2.9821,2.96848 -0.5206,0.9727 -0.6624,2.05272 -0.315,2.40004 0.708,0.70805 -1.6039,0.72039 -3.3066,0.0177 z m -57.6274,-2.16569 c -0.2559,-0.97875 0.1416,-2.34649 0.8834,-3.03943 1.0946,-1.0225 1.3487,-0.95871 1.3487,0.33854 0,0.87915 0.45,1.32033 1,0.98041 0.55,-0.33992 1,0.0354 1,0.834 0,0.79861 -0.7118,1.72517 -1.5818,2.05901 -2.1525,0.82599 -2.1244,0.83841 -2.6503,-1.17253 z m 70.2321,-0.22049 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,-0.49814 -1.5,-1.10699 0,-0.60884 0.7118,-0.83384 1.5818,-0.5 0.87,0.33384 1.995,0.60699 2.5,0.60699 0.505,0 0.9182,0.675 0.9182,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.45 -1,-1 z m 150.6384,-3.5 c 0.3166,-0.825 1.5399,-1.4478 2.7186,-1.384 1.6904,0.0915 1.7734,0.21259 0.393,0.57333 -0.9625,0.25152 -1.75,0.87432 -1.75,1.38399 0,0.50968 -0.4359,0.92668 -0.9686,0.92668 -0.5328,0 -0.7096,-0.675 -0.393,-1.5 z m -234.6384,0.12245 c 0,-0.20766 0.7875,-0.99516 1.75,-1.75 1.5861,-1.24388 1.6214,-1.20851 0.3776,0.37755 -1.3064,1.66575 -2.1276,2.19548 -2.1276,1.37245 z m 100.3426,-2.17211 c -0.9536,-2.48503 1.9284,-4.64151 5.7122,-4.27417 l 3.3357,0.32383 -4.2159,2.77788 c -3.6311,2.39249 -4.3014,2.55515 -4.832,1.17246 z m 118.1574,0.54966 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m -202.5,-2.90218 c 0,-2.32557 0.596,-3.10995 3,-3.94798 2.3954,-0.83503 3,-0.76587 3,0.34316 0,0.76393 -0.45,1.66708 -1,2.007 -0.55,0.33992 -1,1.49148 -1,2.55902 0,1.27431 -0.6869,1.94098 -2,1.94098 -1.5406,0 -2,-0.66667 -2,-2.90218 z m 149,0.90218 c 0,-0.55 0.9266,-1 2.059,-1 1.1325,0 1.7809,0.45 1.441,1 -0.3399,0.55 -1.2665,1 -2.059,1 -0.7926,0 -1.441,-0.45 -1.441,-1 z m 74.5157,0.0254 c -0.8081,-1.30756 1.4935,-2.41626 2.6386,-1.27107 0.6402,0.64011 0.4476,1.18443 -0.5551,1.56919 -0.8443,0.32401 -1.7819,0.18986 -2.0835,-0.29812 z m -184.9887,-0.98175 c -0.3251,-0.52598 -1.2516,-0.70283 -2.059,-0.39301 -0.9154,0.35124 -1.468,-0.0417 -1.468,-1.04368 0,-1.78559 1.5404,-2.1596 2.5,-0.60698 0.3399,0.55 1.6677,1 2.9506,1 1.6541,0 2.5151,-0.72719 2.96,-2.5 0.3451,-1.375 1.3243,-2.5 2.1758,-2.5 1.1434,0 1.368,0.58845 0.8586,2.25 -0.3794,1.2375 -1.1398,2.8125 -1.6898,3.5 -1.1774,1.47168 -5.3778,1.66973 -6.2282,0.29367 z m 126.2855,0.27321 c 0.7219,-0.28887 1.5844,-0.25334 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60417 z m 49.1875,0.29975 c 0,-0.88773 4.0457,-1.35173 4.558,-0.52275 0.308,0.49837 -0.5915,0.90612 -1.999,0.90612 -1.4074,0 -2.559,-0.17252 -2.559,-0.38337 z m -165,-3.61663 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m -21.8083,-2.075 c 0.197,-0.59125 0.7858,-1.075 1.3083,-1.075 0.5225,0 1.1113,0.48375 1.3083,1.075 0.1971,0.59125 -0.3916,1.075 -1.3083,1.075 -0.9167,0 -1.5054,-0.48375 -1.3083,-1.075 z m 5.8236,0.29361 c -0.022,-1.82807 2.8995,-2.70554 4.3019,-1.29215 0.9134,0.92052 0.7612,1.03146 -0.6681,0.48707 -1.1497,-0.43787 -2.1858,-0.17616 -2.7347,0.69075 -0.6609,1.04371 -0.8876,1.07254 -0.8991,0.11433 z m -15.4079,-1.63797 c 0.301,-0.7843 1.2519,-1.69639 2.113,-2.02686 2.5994,-0.99747 2.506,0.0679 -0.1591,1.81409 -1.9816,1.29842 -2.3874,1.34261 -1.9539,0.21277 z m 20.8926,-1.58064 c -0.3399,-0.55 -0.168,-1 0.382,-1 0.55,0 1.2781,0.45 1.618,1 0.3399,0.55 0.168,1 -0.382,1 -0.55,0 -1.2781,-0.45 -1.618,-1 z m 177.3568,225.10969 c 1.0309,-0.65322 1.0679,-1.03821 0.154,-1.60301 -0.6626,-0.40953 -1.9295,-0.0166 -2.821,0.875 -1.3494,1.34935 -1.375,1.61577 -0.1541,1.60301 0.8054,-0.008 2.0748,-0.40217 2.8211,-0.875 z m 31.2389,-29.72503 c 1.1599,-1.39754 1.0864,-1.56608 -0.5447,-1.25 -1.0369,0.20094 -2.0726,0.92784 -2.3015,1.61534 -0.5939,1.78389 1.26,1.54592 2.8462,-0.36534 z m -247.5546,-4.45119 c 1.0763,-1.74144 -0.1495,-2.11024 -1.521,-0.45764 -0.7888,0.95039 -0.8647,1.52417 -0.2016,1.52417 0.5849,0 1.3601,-0.47994 1.7226,-1.06653 z m -44.5763,-14.86773 c 1.5314,-2.86151 1.312,-3.23043 -1.7148,-2.88216 -1.969,0.22656 -2.8408,0.95541 -3.0696,2.56642 -0.4116,2.89846 3.2721,3.14156 4.7844,0.31574 z m -10.5075,-2.99664 c 0.7395,-1.1966 -1.1416,-2.38223 -2.4736,-1.55902 -1.1184,0.69118 -0.3842,2.48992 1.0163,2.48992 0.4851,0 1.1409,-0.41891 1.4573,-0.9309 z m 258.5427,-54.03772 c 0,-0.53273 -0.675,-0.70959 -1.5,-0.39301 -0.825,0.31659 -1.5,0.75246 -1.5,0.96862 0,0.21615 0.675,0.39301 1.5,0.39301 0.825,0 1.5,-0.43588 1.5,-0.96862 z m 13.5411,-0.0979 c 0.3626,-0.58659 0.4213,-1.30442 0.1305,-1.59516 -0.8207,-0.82078 -6.6716,0.70616 -6.6716,1.74115 0,1.28519 5.7357,1.15718 6.5411,-0.14599 z m 16.8673,-54.43348 c -1.8232,-12.42606 -2.5134,-14.68142 -4.1766,-13.64766 -0.9964,0.61923 -0.7283,2.86643 1.25,10.48045 1.385,5.33072 2.5182,10.90159 2.5182,12.37971 0,1.68153 0.351,2.3319 0.9378,1.7375 0.5842,-0.59174 0.3845,-4.72114 -0.5294,-10.95 z M -0.904783,707.51964 c -2.211408,-1.79069 -0.909111,-1.85545 51.106106,-2.5413 58.791497,-0.7752 56.008707,-0.43635 57.814317,-7.03986 l 0.84254,-3.08133 1.26926,2.67626 c 1.39638,2.94427 0.78844,6.90788 -1.39432,9.09065 -1.54339,1.54338 -37.848897,2.72767 -83.729453,2.73125 -21.454107,0.002 -23.848974,-0.16801 -25.90845,-1.83567 z m 404.868693,-1.7748 c -1.6428,-1.84702 -0.68401,-1.89082 44.5,-2.0329 53.94253,-0.16963 83.07692,-1.01477 86.92897,-2.52165 1.5125,-0.59168 2.75678,-1.13369 2.76506,-1.20446 0.008,-0.0708 0.61452,-1.85037 1.3472,-3.95467 l 1.33215,-3.82599 1.26607,3.05658 c 1.61721,3.90429 0.67573,7.63243 -2.44359,9.67629 -2.16592,1.41916 -10.11114,1.66955 -68.23412,2.15034 -63.58823,0.526 -65.83878,0.48118 -67.46174,-1.34354 z m 588.92897,1.0749 c -1.4472,-1.53584 -0.6854,-4.14269 7.15052,-24.4689 4.3452,-11.27153 20.1406,-52.21869 35.1009,-90.99369 14.9603,-38.775 28.5684,-74.05027 30.2403,-78.38949 l 3.0399,-7.88949 -2.3908,-1.83146 c -4.4741,-3.42734 -13.4395,-7.77024 -21.9323,-10.62415 -4.66,-1.56594 -9.032,-3.19283 -9.7156,-3.61531 -1.6615,-1.02687 -1.583,-5.12293 0.1254,-6.54076 0.9771,-0.81097 11.3387,-1.06035 36.25,-0.87245 l 34.8817,0.26311 10.7327,26.5 c 5.9029,14.575 17.4627,43.15 25.6884,63.5 8.2257,20.35 18.6099,46 23.0762,57 27.5458,67.84342 30.1311,74.64033 28.9377,76.07837 -0.9941,1.19781 -9.9805,1.42163 -57.0789,1.42163 H 1081.1 l -1.0893,-2.39084 c -1.7899,-3.92843 0.1545,-5.62808 10.4262,-9.11365 9.6897,-3.28811 21.3659,-9.17583 23.6465,-11.92377 1.0153,-1.2234 0.7197,-2.80251 -1.5973,-8.53443 l -2.8432,-7.03327 -37.4508,0.24798 -37.4507,0.24798 -2.8466,7.45996 -2.8467,7.45996 2.2974,1.75201 c 4.0587,3.09518 14.1517,7.84041 22.7542,10.69788 8.8358,2.93496 10.5319,4.61872 8.9453,8.88019 -0.8041,2.15992 -1.3129,2.25 -12.7083,2.25 -6.5288,0 -21.9558,0.28317 -34.2822,0.62926 -12.3264,0.34609 -22.74912,0.27109 -23.16162,-0.16667 z m 5.3989,-3.37059 c -0.9743,-0.60211 -0.4091,-1.38607 2.13062,-2.95573 4.0428,-2.4986 6.7205,-2.75211 6.7205,-0.63627 0,1.86637 0.943,1.85765 3.4411,-0.0318 1.0677,-0.80751 2.7749,-1.4682 3.7939,-1.4682 1.019,0 1.7796,-0.5625 1.6904,-1.25 -0.4795,-3.69231 0.2071,-6.75 1.5156,-6.75 2.0127,0 3.006,1.95296 1.6719,3.28713 -0.6121,0.61208 -1.1129,1.9387 -1.1129,2.94805 0,1.54815 0.325,1.66128 2.0776,0.72331 1.1426,-0.61153 1.848,-1.71008 1.5674,-2.44123 -0.2806,-0.73114 0.3153,-2.07639 1.3242,-2.98943 2.2077,-1.99787 1.9771,-5.14903 -0.3462,-4.73092 -0.9074,0.1633 -1.9169,-0.3992 -2.2434,-1.25 -0.3265,-0.8508 -1.2902,-1.54691 -2.1416,-1.54691 -1.3292,0 -1.3013,-0.27258 0.1971,-1.92834 1.1148,-1.23175 1.5076,-2.67669 1.0876,-4 -0.3847,-1.21231 -0.2147,-2.07166 0.4099,-2.07166 0.5871,0 1.0674,-0.94754 1.0674,-2.10564 0,-1.15811 1.125,-3.44263 2.5,-5.07673 2.3002,-2.73362 3.0268,-5.19777 2.5535,-8.65985 -0.101,-0.73822 0.4753,-1.86322 1.2805,-2.5 0.8052,-0.63678 1.7648,-2.17028 2.1324,-3.40778 0.5416,-1.82331 0.2763,-2.25 -1.399,-2.25 -1.1371,0 -2.0674,-0.45715 -2.0674,-1.01588 0,-1.42462 5.8884,-0.8235 7.1802,0.73299 1.7004,2.04892 4.3707,1.49047 5.8198,-1.21711 0.7846,-1.466 2.2193,-2.5 3.469,-2.5 1.172,0 2.6138,-0.48278 3.2038,-1.07284 0.5901,-0.59007 2.5597,-0.92757 4.377,-0.75 l 3.3041,0.32284 -2.427,2.7305 c -1.5403,1.73302 -3.7055,2.87048 -5.9269,3.11368 -1.925,0.21075 -4.7336,0.8819 -6.2413,1.49145 -1.5077,0.60954 -3.4087,0.85218 -4.2243,0.53919 -1.5147,-0.58124 -5.2156,2.27728 -4.2276,3.26531 0.2997,0.2997 3.01,-0.17173 6.023,-1.04762 7.1602,-2.08155 10.0751,-2.09006 9.2835,-0.0271 -0.4776,1.24443 -0.1407,1.41724 1.643,0.84282 1.234,-0.39741 2.8062,-0.72684 3.4937,-0.73206 0.6875,-0.005 1.25,-0.38448 1.25,-0.84282 0,-0.45833 0.45,-0.83333 1,-0.83333 0.55,0 1,0.56427 1,1.25393 0,0.88873 2.492,1.32428 8.5562,1.49546 5.6513,0.15952 8.3409,-0.10687 7.922,-0.78462 -0.3737,-0.60475 -2.0988,-0.75137 -4.2007,-0.35704 -2.5481,0.47802 -3.3657,0.34399 -2.863,-0.46932 0.3869,-0.62613 1.2395,-1.13842 1.8945,-1.13844 0.6551,-2e-5 2.4477,-1.57502 3.9836,-3.5 1.536,-1.92498 3.2235,-3.49997 3.75,-3.49997 1.3322,0 1.2056,5.72858 -0.1451,6.56332 -0.6537,0.40407 0.169,1.29712 2.0217,2.19441 2.8236,1.36749 3.298,1.35572 4.9312,-0.12234 2.3442,-2.12144 5.2957,-2.17978 4.4934,-0.0888 -0.5155,1.3433 0.4415,1.47096 7.2813,0.97124 11.7252,-0.85664 11.6233,-0.85642 15.1249,-0.0325 2.7646,0.6505 3.2673,0.48467 3.366,-1.11029 0.1037,-1.67688 0.1643,-1.69009 0.5733,-0.125 0.2516,0.9625 0.7619,1.75689 1.134,1.76531 0.3722,0.008 1.3338,0.43095 2.1369,0.93895 1.2537,0.79299 1.2056,1.20505 -0.3401,2.91303 -1.7076,1.88687 -1.4979,6.79326 0.2443,5.71651 0.3962,-0.24488 0.7793,0.31108 0.8513,1.23548 0.2466,3.16638 4.2673,11.30928 5.2762,10.68572 2.0383,-1.25971 0.928,1.30235 -1.7056,3.93599 -5.0742,5.07414 -21.0518,13.24204 -30.5363,15.61035 -2.6125,0.65235 -4.75,1.61299 -4.75,2.13476 0,0.52177 0.7875,0.73118 1.75,0.46535 0.9625,-0.26583 4,-0.78599 6.75,-1.15591 2.75,-0.36992 7.475,-1.33923 10.5,-2.15402 3.025,-0.81479 7.9038,-1.45113 10.8418,-1.4141 4.3549,0.0549 5.6943,-0.34787 7.2494,-2.18004 1.7946,-2.11446 1.988,-2.14388 3.2684,-0.49738 1.3841,1.77981 3.2156,2.48977 2.2052,0.85478 -0.7366,-1.19184 2.2765,-2.28993 4.4182,-1.61016 1.2843,0.4076 2.158,-0.56744 3.5642,-3.97733 1.1393,-2.76282 2.4998,-4.51729 3.5028,-4.51729 0.902,0 2.4545,-0.9 3.45,-2 0.9955,-1.1 2.7244,-2 3.8421,-2 1.8477,0 1.7655,0.28061 -0.905,3.09216 -2.5324,2.66607 -2.6615,3.04846 -0.9371,2.77496 1.1,-0.17446 2.5625,0.0356 3.25,0.46686 1.9243,1.20702 3.3205,-0.2048 2.6894,-2.71947 -0.3566,-1.42074 0.025,-2.75513 1.0256,-3.58549 1.3494,-1.11987 1.9438,-0.99355 3.8788,0.82421 2.5768,2.42078 4.1212,2.801 3.3642,0.82822 -0.3212,-0.83706 0.241,-1.29351 1.5396,-1.25 1.4831,0.0497 2.1009,-0.61885 2.2472,-2.43145 0.1109,-1.375 0.5424,-3.28574 0.9589,-4.2461 0.6556,-1.5117 0.3404,-1.66272 -2.3482,-1.125 -2.0018,0.40035 -3.1055,0.22126 -3.1055,-0.5039 0,-0.61875 0.6592,-1.125 1.4648,-1.125 0.8057,0 1.9465,-0.9 2.5352,-2 0.5887,-1.1 1.6744,-2 2.4127,-2 2.4845,0 3.8476,-2.64516 2.5819,-5.01013 -0.9809,-1.83278 -0.848,-2.21543 0.9306,-2.68056 2.3148,-0.60532 2.4845,-1.12795 1.0748,-3.30931 -0.8284,-1.2819 -0.9716,-1.24555 -0.9847,0.25 -0.011,1.25535 -0.7926,1.73087 -2.7653,1.68232 -2.7488,-0.0677 -2.749,-0.0682 -0.4313,-1.18345 1.5355,-0.73893 2.1581,-1.72976 1.8432,-2.9337 -0.2615,-0.99986 -0.067,-1.56575 0.4314,-1.25753 1.6632,1.02795 0.9335,-0.45477 -1.2039,-2.44601 -1.1608,-1.08145 -2.212,-3.23648 -2.336,-4.78895 -0.1241,-1.55247 -0.7754,-4.48345 -1.4474,-6.51328 -1.1695,-3.53222 -1.3052,-3.61924 -3.1639,-2.02776 -1.0682,0.91456 -1.9421,2.23783 -1.9421,2.9406 0,1.49903 -2.6073,1.72216 -3.4872,0.29843 -0.9913,-1.60394 1.3668,-4.95236 3.9431,-5.59895 l 2.3981,-0.6019 -2.1264,-5.90991 c -1.1695,-3.25045 -2.4867,-5.90991 -2.927,-5.90991 -1.1475,0 -0.99,2.76493 0.1994,3.5 1.5731,0.97224 1.2051,7.20733 -0.4632,7.84751 -1.6614,0.63755 -3.2092,-5.15298 -2.1294,-7.96673 0.3449,-0.89885 0.098,-2.27131 -0.5478,-3.04991 -0.8899,-1.07225 -0.894,-1.69643 -0.017,-2.57325 0.6367,-0.63669 1.1576,-1.75845 1.1576,-2.4928 0,-1.02531 -0.4642,-1.08677 -2,-0.26482 -1.6955,0.90739 -2,0.76049 -2,-0.96482 0,-1.11935 0.4588,-2.03518 1.0196,-2.03518 1.4465,0 -0.8204,-9.79794 -2.8567,-12.34692 -0.5067,-0.63419 -1.9166,-3.91272 -3.1332,-7.28562 -1.9082,-5.29024 -2.5085,-6.07055 -4.3709,-5.6812 -1.9253,0.40253 -1.9695,0.33038 -0.4088,-0.66715 2.3862,-1.52511 2.2019,-3.01911 -0.3724,-3.01911 -1.6299,0 -1.8717,-0.30221 -1.0419,-1.30204 1.1814,-1.4235 0.467,-5.69796 -0.9523,-5.69796 -0.4859,0 -0.8834,0.675 -0.8834,1.5 0,1.72459 -0.8672,1.87286 -3,0.51288 -1.2733,-0.81196 -1.16,-1.19599 0.75,-2.54139 2.8997,-2.04251 2.8431,-2.82867 -0.7186,-9.99695 -1.6328,-3.286 -2.9828,-6.56245 -3,-7.281 -0.033,-1.38033 -6.3393,-17.41884 -16.0003,-40.69354 -3.1961,-7.7 -6.5682,-16.25 -7.4935,-19 -0.9253,-2.75 -2.3965,-6.50545 -3.2692,-8.34544 -1.4637,-3.08588 -1.4537,-3.57079 0.1289,-6.25 l 1.7156,-2.90462 h -33.5566 c -18.4561,0 -33.5565,0.34505 -33.5565,0.76678 0,0.42173 5.2625,1.5786 11.6944,2.57083 10.1791,1.5703 12.5789,2.32954 18.5211,5.85972 7.6401,4.5389 9.303,6.52583 7.3664,8.80204 -0.7021,0.82535 -8.5208,20.40063 -17.3747,43.50063 -24.4769,63.86035 -57.02712,148.44315 -59.09022,153.5477 -1.8318,4.53227 -1.8309,4.54824 0.2599,4.70574 1.4692,0.11067 1.7005,-0.0876 0.772,-0.66144 z m 7.85112,-10.51876 c 0,-1.09975 6.4597,-3.51351 7.2603,-2.71291 0.5216,0.5216 -0.4463,1.35745 -2.3338,2.01543 -3.4045,1.18685 -4.9265,1.40232 -4.9265,0.69748 z m 3,-6.40657 c 0,-1.00834 0.6507,-1.83334 1.446,-1.83334 1.0923,0 1.206,0.44845 0.4648,1.83334 -0.5396,1.00833 -1.1903,1.83333 -1.446,1.83333 -0.2556,0 -0.4648,-0.825 -0.4648,-1.83333 z m 121.5427,-1.09757 c -0.3164,-0.512 -0.118,-1.21356 0.441,-1.55902 0.559,-0.34546 1.0163,0.0734 1.0163,0.9309 0,1.75653 -0.6001,2.01516 -1.4573,0.62812 z m 5.4573,-2.0691 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 17.0883,-4.70549 c -0.9345,-2.05099 -1.7469,-2.42566 -4.8553,-2.23906 -2.0531,0.12326 -4.2955,0.1612 -4.983,0.0843 -2.1217,-0.23725 -1.3802,-1.89027 1.1305,-2.52043 1.3093,-0.32861 2.707,-1.6149 3.106,-2.85841 0.6889,-2.14695 0.7508,-2.16011 1.2271,-0.26094 0.7832,3.12278 2.4358,4.75057 3.6204,3.56601 0.6917,-0.69167 0.4308,-1.66846 -0.8126,-3.04238 -1.7814,-1.96833 -1.7759,-2.0236 0.1986,-2.0236 1.4705,0 2.201,0.85518 2.6505,3.10271 0.3413,1.70648 0.371,3.50648 0.066,4 -0.4801,0.77683 0.7519,1.27548 2.6468,1.07127 1.4493,-0.15619 0.3946,2.72928 -1.1447,3.13181 -1.1283,0.29506 -2.1175,-0.40296 -2.8503,-2.01128 z m -138.3187,-0.29451 c 1.1807,-1.1 2.4603,-2 2.8436,-2 0.3832,0 -0.1177,0.9 -1.1132,2 -0.9955,1.1 -2.2751,2 -2.8435,2 -0.5685,0 -0.068,-0.9 1.1131,-2 z m 117.2304,1.05576 c 0,-1.55781 4.7743,-6.61115 5.532,-5.85532 0.3862,0.38524 -0.363,2.04784 -1.6649,3.69467 -2.4089,3.04705 -3.8671,3.86181 -3.8671,2.16065 z m 15.7333,-0.17985 c 0.6784,-0.68342 1.4853,-0.99067 1.7932,-0.68278 0.3078,0.30789 -0.2472,0.86705 -1.2334,1.24258 -1.4252,0.54268 -1.54,0.42782 -0.5598,-0.5598 z m -28.1607,-2.75837 c -0.2999,-0.48536 0.3338,-2.0001 1.4083,-3.36609 1.0745,-1.36599 1.6308,-2.84103 1.2363,-3.27786 -0.3944,-0.43683 -0.1547,-0.47054 0.5328,-0.0749 1.5901,0.91506 1.6207,4.83064 0.05,6.40131 -1.4236,1.42364 -2.4795,1.52753 -3.2274,0.31754 z m -105.5726,-5.11754 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 115.5,0 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m -111.4211,-2.58333 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m 136.4211,-0.96542 -3,-2.44132 3,0.0104 c 4.3235,0.0149 5.8317,1.16295 4.2499,3.23497 -1.1377,1.49034 -1.5192,1.41817 -4.2499,-0.804 z m -32.1568,-0.99929 c -0.3444,-0.89742 0.1942,-2.12703 1.2814,-2.92563 1.6267,-1.19492 1.9565,-1.15541 2.487,0.29805 0.3364,0.92159 0.4008,2.23812 0.143,2.92562 -0.6572,1.75303 -3.1987,1.55938 -3.9114,-0.29804 z m 21.0385,-0.004 c 0.3277,-0.85381 -0.099,-2.61214 -0.9473,-3.9074 -1.0965,-1.67345 -1.2182,-2.55578 -0.4206,-3.04875 0.6174,-0.38156 0.872,-1.34661 0.5658,-2.14454 -0.3109,-0.81016 -0.1202,-1.18101 0.4319,-0.83983 0.5437,0.33602 0.9885,0.1344 0.9885,-0.44806 0,-0.58246 1.0125,-1.02349 2.25,-0.98007 1.2375,0.0434 1.6875,0.30592 1,0.58333 -1.5022,0.60615 -1.687,4.33772 -0.2148,4.33772 0.6877,0 0.6605,0.70014 -0.081,2.08565 -2.1251,3.97063 0.558,3.18172 2.7958,-0.82208 0.6875,-1.23004 1.25,-3.14254 1.25,-4.25 0,-1.10746 0.3975,-2.01357 0.8834,-2.01357 1.2334,0 2.2366,4.30783 1.1583,4.97424 -0.4857,0.30019 -1.1852,1.74918 -1.5543,3.21999 -0.447,1.78089 -1.6925,3.03021 -3.7285,3.73998 -4.1485,1.44615 -5.0791,1.34269 -4.3772,-0.48661 z m -6.8817,-0.44796 c -0.3399,-0.55 0.1101,-1 1,-1 0.8899,0 1.3399,0.45 1,1 -0.3399,0.55 -0.7899,1 -1,1 -0.2101,0 -0.6601,-0.45 -1,-1 z m -8.4847,-0.75 c 0.01,-0.4125 0.4385,-1.41933 0.9557,-2.23739 0.7391,-1.16897 0.9044,-1.0084 0.7719,0.75 -0.1493,1.98285 -1.7661,3.37483 -1.7276,1.48739 z m -110.2028,-3.93311 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m 113.5019,-1.06689 c -0.3425,-0.9625 -0.8327,-2.1324 -1.0893,-2.59977 -0.2565,-0.46737 0.4711,-0.34801 1.617,0.26526 1.2456,0.66663 1.8543,1.71208 1.5137,2.59976 -0.7459,1.94375 -1.2799,1.87436 -2.0414,-0.26525 z m -5.8144,-1.25 c 0.3399,-0.55 1.0415,-1 1.559,-1 0.5176,0 0.941,0.45 0.941,1 0,0.55 -0.7016,1 -1.559,1 -0.8575,0 -1.2809,-0.45 -0.941,-1 z m 30.5,-0.3 c 0,-1.38086 1.9361,-3.7 3.0889,-3.7 0.3789,0 0.6264,0.7875 0.55,1.75 -0.2203,2.7757 -3.6389,4.60765 -3.6389,1.95 z m -65,-3.95139 c 0,-2.16136 -0.3514,-2.47082 -2.25,-1.98158 -1.9815,0.5106 -2.0905,0.3853 -0.9139,-1.04981 1.6234,-1.98009 0.7378,-3.71722 -1.8951,-3.71722 -1.0676,0 -1.941,-0.36958 -1.941,-0.82129 0,-0.45171 2.3625,-0.92156 5.25,-1.04412 5.0611,-0.21482 5.169,-0.16524 3,1.37799 -3.0365,2.16041 -2.8308,3.17517 0.75,3.70073 2.0472,0.30046 3,0.0189 3,-0.8865 0,-0.72975 0.6483,-1.32681 1.4407,-1.32681 1.1816,0 1.2266,0.41268 0.25,2.29507 -0.6549,1.26229 -1.481,2.27479 -1.8357,2.25 -0.3548,-0.0248 -1.5923,0.81217 -2.75,1.85992 -2.0879,1.88955 -2.105,1.88423 -2.105,-0.65638 z m 29.5,1.25139 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m -95.5,-1 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 31.5486,-3.68031 c 1.1268,-1.00083 2.3502,-2.60719 2.7186,-3.56969 0.777,-2.0295 3.7328,-2.3788 3.7328,-0.44113 0,2.28778 -2.4018,4.56122 -5.5,5.20609 -2.9729,0.61877 -2.9815,0.60796 -0.9514,-1.19527 z m 7.4832,1.05275 c 0.017,-0.47984 0.6925,-1.74595 1.5,-2.81357 1.1754,-1.55395 1.4682,-1.62824 1.4682,-0.37244 0,0.86277 -0.675,2.12888 -1.5,2.81357 -0.825,0.68469 -1.4857,0.85229 -1.4682,0.37244 z m 16.9682,-1.37244 c 0,-1.86667 0.2667,-2.13333 1.2,-1.2 0.9333,0.93333 0.9333,1.46667 0,2.4 -0.9333,0.93333 -1.2,0.66667 -1.2,-1.2 z m 50.5,1 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 13.2483,0.41499 c -1.0325,-1.03255 1.3951,-6.41499 2.8934,-6.41499 0.7953,0 1.3729,-0.5625 1.2837,-1.25 -0.4215,-3.2456 0.033,-4.02969 1.5869,-2.73977 1.098,0.91121 1.2205,1.60674 0.4474,2.53835 -0.7965,0.95971 -0.5475,1.44747 0.9877,1.93471 2.122,0.67351 2.7623,2.96008 1.1141,3.97873 -0.5162,0.31902 -1.3475,-0.15065 -1.8473,-1.04373 -1.1419,-2.0405 -4.7098,-1.45365 -4.727,0.77749 -0.015,1.93486 -0.8972,3.06093 -1.7389,2.21921 z m -41.0816,-4.08166 c -1.2678,-1.26779 -0.6589,-2.33333 1.3333,-2.33333 1.4029,0 2.0046,-0.67177 2.0153,-2.25 0.025,-3.64088 1.359,-4.98161 2.7464,-2.75993 1.0009,1.60267 0.7798,2.40141 -1.3732,4.96011 -2.6129,3.10517 -3.5346,3.57039 -4.7218,2.38315 z m 10.3333,-1.33333 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 26.1545,-0.55197 c 0.19,-0.98026 0.951,-1.98391 1.691,-2.23033 0.8606,-0.28658 1.221,0.19425 1,1.33427 -0.19,0.98026 -0.951,1.98391 -1.691,2.23033 -0.8606,0.28658 -1.221,-0.19425 -1,-1.33427 z m -102.9221,-1.48992 c 0.2998,-0.84804 -0.059,-2.36857 -0.7982,-3.37896 -1.1474,-1.56919 -1.0583,-2.39571 0.6113,-5.66827 1.075,-2.10716 1.9545,-4.65913 1.9545,-5.67104 0,-1.01191 0.4218,-2.26734 0.9374,-2.78984 1.3275,-1.34528 7.1746,-16.221 7.4719,-19.00935 0.1362,-1.27728 0.8299,-3.02395 1.5416,-3.88149 1.4548,-1.75295 0.048,-2.15829 -1.638,-0.47203 -0.7829,0.78285 -1.2755,0.78232 -1.7602,-0.002 -0.3814,-0.6171 0.41,-1.50078 1.8263,-2.03926 2.4747,-0.94087 4.621,-3.78635 4.621,-6.12628 0,-0.66647 -1.1035,-0.0211 -2.4523,1.43426 -1.6109,1.73826 -3.4904,2.64602 -5.4785,2.64602 -2.8652,0 -2.9657,-0.13313 -1.8872,-2.5 0.7164,-1.57239 1.9616,-2.5 3.3561,-2.5 1.2193,0 2.8032,-0.70629 3.5196,-1.56952 0.7164,-0.86324 2.0462,-1.37507 2.9551,-1.13739 1.1088,0.28996 2.0079,-0.50964 2.733,-2.43048 0.6057,-1.60466 0.6792,-2.86261 0.1673,-2.86261 -0.5022,0 -0.9131,-0.45 -0.9131,-1 0,-0.55 0.6227,-1 1.3839,-1 1.3203,0 3.8042,-5.27979 7.0351,-14.95385 1.0659,-3.19131 1.1854,-4.81791 0.4216,-5.73817 -0.7892,-0.95092 -0.6022,-1.46225 0.7204,-1.96976 0.9824,-0.37699 2.6081,-1.50731 3.6126,-2.51183 1.0045,-1.00451 2.9033,-1.82639 4.2194,-1.82639 3.018,0 4.2352,2.82015 1.9412,4.49755 -1.5895,1.16231 -1.5615,1.5944 0.4301,6.62294 1.8313,4.62366 2.2242,5.06495 2.7968,3.14076 0.3665,-1.23132 1.0683,-1.99029 1.5597,-1.68662 0.4913,0.30367 1.1397,-0.09 1.4409,-0.87488 0.3463,-0.90237 1.9982,-1.42702 4.493,-1.42702 3.2305,0 3.9453,0.34956 3.9453,1.92938 0,2.78834 -1.835,5.79789 -3.5352,5.79789 -0.8056,0 -1.4648,-0.62686 -1.4648,-1.39301 0,-1.19724 -1.9955,-2.60699 -3.6902,-2.60699 -0.2896,0 -0.23,1.18192 0.1326,2.62648 0.5299,2.11151 0.3551,2.5098 -0.8916,2.03139 -1.7253,-0.66207 -2.2061,1.81907 -0.5508,2.84213 0.55,0.33992 1,1.25221 1,2.02731 0,1.23788 4.714,13.04729 9.9684,24.97269 0.9693,2.2 2.3631,5.68655 3.0971,7.74788 0.8543,2.39889 1.8926,3.65866 2.8846,3.5 1.1707,-0.18724 1.4889,0.53947 1.3004,2.97055 -0.1953,2.51886 0.079,3.0923 1.2627,2.63813 0.8318,-0.31917 2.1415,-0.0581 2.9105,0.58012 0.9574,0.79455 1.6026,0.82982 2.0463,0.11188 1.5058,-2.43645 9.53,-0.62495 9.53,2.15144 0,1.42335 -2.768,0.84696 -3.3616,-0.7 -0.68,-1.77193 -2.6384,-2.01595 -2.6384,-0.32874 0,0.64419 -0.6139,1.88169 -1.3643,2.75 -0.8642,1.00009 -1.187,2.98452 -0.8806,5.41415 0.3917,3.10643 0.8297,3.74491 2.3045,3.35925 1.5304,-0.40021 1.6425,-0.19046 0.7024,1.31481 -0.6151,0.98503 -1.6677,1.58019 -2.3391,1.32258 -0.6713,-0.25762 -1.5177,0.0123 -1.8808,0.59978 -0.4447,0.71962 -10.5695,1.06817 -31.0285,1.06817 h -30.3684 l -2.2289,2.75 c -1.2259,1.5125 -1.9837,2.05615 -1.6839,1.20811 z m 59.312,-9.70811 c -4.9962,-13.05743 -25.1139,-61.25 -25.5684,-61.25 -0.595,0 -24.009,60.76281 -23.9871,62.25 0.01,0.4125 11.3092,0.75 25.1181,0.75 23.4998,0 25.0641,-0.11202 24.4374,-1.75 z m -42.1581,-8.5 c 1.303,-3.4375 5.1775,-13.675 8.61,-22.75 8.3486,-22.07232 7.7919,-21.18884 10.1006,-16.03235 1.8646,4.16473 1.8635,4.24465 -0.08,5.87724 -1.0836,0.91031 -4.4259,8.18011 -7.4273,16.15511 -8.8264,23.45299 -8.6052,23 -11.2327,23 h -2.3397 z m 35.1137,5.25 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 11.5,0.059 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m -17,-61.059 c 0,-0.55 -0.4234,-1 -0.941,-1 -0.5175,0 -1.2191,0.45 -1.559,1 -0.3399,0.55 0.083,1 0.941,1 0.8574,0 1.559,-0.45 1.559,-1 z m 53.1774,71.32936 c 0.1774,-0.915 0.8851,-1.85092 1.5726,-2.07983 1.8387,-0.6122 1.526,2.43058 -0.3226,3.13997 -1.0967,0.42084 -1.475,0.1 -1.25,-1.06014 z m 18.8226,0.17064 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m -125.4352,-2.39522 c -0.3043,-0.49236 0.1425,-1.16221 0.9929,-1.48854 0.8504,-0.32633 1.295,-0.18692 0.988,0.3098 -0.307,0.49673 0.01,1.13105 0.6981,1.4096 0.7809,0.31483 0.6164,0.53634 -0.4348,0.58541 -0.93,0.0434 -1.9399,-0.3239 -2.2442,-0.81627 z m 116.9995,-1.39791 c 0.3755,-0.98622 0.9347,-1.54122 1.2426,-1.23333 0.3079,0.30789 6e-4,1.11479 -0.6828,1.79313 -0.9876,0.98026 -1.1025,0.8654 -0.5598,-0.5598 z m -35.5643,-1.70687 c -0.9013,-0.58246 -1.0246,-0.97549 -0.309,-0.98469 0.655,-0.008 1.4691,0.43469 1.809,0.98469 0.7673,1.24153 0.4211,1.24153 -1.5,0 z m 28.5,-4 c -0.3399,-0.55 -0.1415,-1 0.441,-1 0.5824,0 1.059,0.45 1.059,1 0,0.55 -0.1984,1 -0.441,1 -0.2425,0 -0.7191,-0.45 -1.059,-1 z m 3.2103,-2 c 0.2876,-1.1 1.1033,-2 1.8127,-2 0.7974,0 1.0901,0.76345 0.7667,2 -0.2876,1.1 -1.1033,2 -1.8127,2 -0.7974,0 -1.0901,-0.76345 -0.7667,-2 z m -109.7103,-1 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 98,-1.45031 c 0,-0.79767 -0.7875,-1.90899 -1.75,-2.46959 -2.3033,-1.34158 -0.682,-1.38168 1.8157,-0.0449 2.0072,1.0742 2.6883,3.96482 0.9343,3.96482 -0.55,0 -1,-0.65264 -1,-1.45031 z m -16,-3.04969 c 0,-1.02996 0.6554,-1.52043 1.75,-1.30963 2.1078,0.40593 1.9749,2.18068 -0.1972,2.63295 -0.906,0.18865 -1.5528,-0.36259 -1.5528,-1.32332 z m 18.1875,-3.5625 c 0.2406,-0.72188 1.0281,-1.50938 1.75,-1.75 0.75,-0.25 1.125,0.125 0.875,0.875 -0.2406,0.72187 -1.0281,1.50937 -1.75,1.75 -0.75,0.25 -1.125,-0.125 -0.875,-0.875 z m 6.8125,-0.4375 c 0,-0.95201 0.958,-1.5 2.6224,-1.5 2.2177,0 2.4303,0.23152 1.3776,1.5 -0.6847,0.825 -1.8648,1.5 -2.6224,1.5 -0.7577,0 -1.3776,-0.675 -1.3776,-1.5 z m -25,-0.55902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 5.1917,-0.016 c 0.197,-0.59125 0.7858,-1.075 1.3083,-1.075 0.5225,0 1.1113,0.48375 1.3083,1.075 0.1971,0.59125 -0.3916,1.075 -1.3083,1.075 -0.9167,0 -1.5054,-0.48375 -1.3083,-1.075 z m -10.6917,-0.92498 c -0.3992,-0.64585 -0.2757,-1.62426 0.2743,-2.17426 0.6666,-0.66667 1.2419,-0.60858 1.7257,0.17426 0.3992,0.64585 0.2757,1.62426 -0.2743,2.17426 -0.6666,0.66667 -1.2419,0.60858 -1.7257,-0.17426 z m -8.5,-3.54405 c 0,-1.09431 0.6689,-1.32617 2.5,-0.86659 1.7126,0.42982 2.5,0.21534 2.5,-0.68095 0,-1.00741 0.2722,-1.03619 1.1833,-0.12508 1.4738,1.47375 1.1268,1.77519 -2.9333,2.54803 -2.4925,0.47445 -3.25,0.27042 -3.25,-0.87541 z m 30.5101,0.52774 c 0.3454,-0.55897 1.047,-0.75742 1.559,-0.44098 1.387,0.85723 1.1284,1.45729 -0.6281,1.45729 -0.8575,0 -1.2764,-0.45734 -0.9309,-1.01631 z m -17.5101,-3.51507 c 0,-0.80774 0.675,-1.46862 1.5,-1.46862 0.825,0 1.5,0.40186 1.5,0.89301 0,0.49116 -0.675,1.15203 -1.5,1.46862 -0.9137,0.35062 -1.5,0.002 -1.5,-0.89301 z m 7.3272,-0.29067 c -0.5817,-0.37287 -1.3736,-1.69045 -1.7598,-2.92795 -0.6232,-1.99693 -0.3572,-2.25 2.3652,-2.25 1.8042,0 3.0543,0.51476 3.0356,1.25 -0.052,2.02693 -2.4948,4.66268 -3.641,3.92795 z m -16.6888,-1.67795 c 0.3166,-0.825 0.7043,-1.5 0.8616,-1.5 0.1573,0 0.545,0.675 0.8616,1.5 0.3471,0.90455 0.01,1.5 -0.8616,1.5 -0.8667,0 -1.2087,-0.59545 -0.8616,-1.5 z m 4.3616,0.18806 c 0,-1.71542 5.7555,-5.95722 7.0214,-5.17482 0.5382,0.33264 0.9786,1.53072 0.9786,2.66241 0,1.55244 -0.482,1.93157 -1.9632,1.54422 -1.0798,-0.28237 -2.4849,0.11514 -3.1225,0.88336 -1.4597,1.75892 -2.9143,1.80125 -2.9143,0.0848 z m 32.5,0.31194 c -0.3399,-0.55 0.083,-1 0.941,-1 0.8574,0 1.559,0.45 1.559,1 0,0.55 -0.4234,1 -0.941,1 -0.5175,0 -1.2191,-0.45 -1.559,-1 z m -14.8103,-2.07847 c -0.3416,-1.30646 0.012,-1.92153 1.1039,-1.92153 1.188,0 1.314,-0.29244 0.4837,-1.12267 -0.8302,-0.83023 -0.8202,-1.78637 0.038,-3.67059 0.9009,-1.97723 0.8835,-2.64036 -0.077,-2.96066 -2.4797,-0.82657 -1.2851,-3.12986 1.5118,-2.91488 2.3372,0.17964 2.75,0.65849 2.75,3.19009 0,2.22311 -0.4439,2.94348 -1.75,2.83982 -2.5386,-0.20148 -2.2724,3.68952 0.2984,4.3618 2.8687,0.75018 2.008,3.49804 -1.2023,3.83861 -1.9193,0.20362 -2.793,-0.25028 -3.1564,-1.63999 z m -35.6897,-0.92153 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m 11,-2.53138 c 0,-0.80774 0.675,-1.46862 1.5,-1.46862 0.825,0 1.5,0.40186 1.5,0.89301 0,0.49116 -0.675,1.15203 -1.5,1.46862 -0.9137,0.35062 -1.5,0.002 -1.5,-0.89301 z m -12,-0.96862 c 0,-0.825 0.1769,-1.5 0.393,-1.5 0.2162,0 0.652,0.675 0.9686,1.5 0.3166,0.825 0.1398,1.5 -0.393,1.5 -0.5327,0 -0.9686,-0.675 -0.9686,-1.5 z m 21.345,-3.32874 c 0.9103,-1.00581 1.655,-2.35581 1.655,-3 0,-0.64419 0.6609,-1.17126 1.4686,-1.17126 0.9697,0 1.2567,0.59454 0.8448,1.75 -0.9796,2.74788 -2.4255,4.25 -4.0908,4.25 -1.3321,0 -1.3161,-0.2392 0.1224,-1.82874 z m -23.1083,-4.61523 c 0.152,-3.49375 0.4681,-4.21595 1.4783,-3.37756 0.7068,0.58653 1.285,1.88476 1.285,2.88496 0,1.00019 0.45,2.09665 1,2.43657 1.8361,1.13479 1.0288,2.5 -1.4784,2.5 -2.295,0 -2.464,-0.32872 -2.2849,-4.44397 z m 46.7323,0.38606 c -1.5185,-2.83744 -0.257,-4.1691 2.0656,-2.1804 2.3523,2.01408 2.4619,2.83379 0.4807,3.59408 -0.8755,0.33594 -1.9204,-0.24421 -2.5463,-1.41368 z m -37.9613,0.30791 c 0.01,-0.94184 8.0094,-5.56625 8.6027,-4.97296 1.1261,1.12608 -1.077,3.72296 -3.1584,3.72296 -1.2837,0 -2.6121,0.45 -2.952,1 -0.7211,1.16669 -2.5035,1.34549 -2.4923,0.25 z m 12.5024,-2.23369 c -0.3455,-0.55897 -0.2906,-1.01631 0.122,-1.01631 0.4126,0 -0.1233,-0.66069 -1.191,-1.4682 -1.0676,-0.8075 -1.4627,-1.4825 -0.878,-1.5 0.5848,-0.0175 1.173,-2.15425 1.3073,-4.74836 0.2543,-4.91304 1.4538,-7.28344 3.6856,-7.28344 0.7211,0 1.4986,-1.2375 1.7277,-2.75 l 0.4166,-2.75 0.1499,2.88976 c 0.087,1.68119 -0.5447,3.39757 -1.5107,4.10398 -1.9313,1.41215 -3.575,11.3996 -2.1671,13.16723 0.5714,0.71735 0.5504,1.39229 -0.055,1.76631 -0.5387,0.33294 -1.2622,0.148 -1.6076,-0.41097 z m 11.5854,-0.95729 c -0.9945,-0.61466 -1.0222,-0.98628 -0.1151,-1.54689 0.6566,-0.40582 1.6439,-0.28787 2.1939,0.26213 1.3032,1.30322 -0.3729,2.33908 -2.0788,1.28476 z m -24.9455,-2.00902 c 0.4297,-1.28914 1.8013,-1.5207 1.925,-0.325 0.041,0.39875 -0.465,0.905 -1.125,1.125 -0.66,0.22 -1.02,-0.14 -0.8,-0.8 z m 19.9362,-3.35064 c 0.7926,-2.76345 2.4035,-4.64298 4.0146,-4.68405 1.3707,-0.0349 -1.6911,6.90578 -3.2231,7.30641 -1.4206,0.3715 -1.5383,-0.0184 -0.7915,-2.62236 z m -22.5862,-0.69936 c -0.3399,-0.55 -0.1415,-1 0.441,-1 0.5824,0 1.059,0.45 1.059,1 0,0.55 -0.1984,1 -0.441,1 -0.2425,0 -0.7191,-0.45 -1.059,-1 z m 7.9956,-0.007 c -0.8236,-1.3326 2.0466,-2.3826 4.2264,-1.54613 1.4751,0.56605 1.5109,0.79423 0.25,1.59167 -1.9327,1.22227 -3.704,1.20424 -4.4764,-0.0455 z m 25.4953,-1.48193 c 0.6796,-0.81894 1.6421,-1.23785 2.1387,-0.9309 1.2765,0.7889 0.056,2.41989 -1.8111,2.41989 -1.2712,0 -1.3324,-0.27832 -0.3276,-1.48899 z m -36.2005,-3.53619 c 0.3407,-2.32129 0.7417,-2.77809 1.7236,-1.96323 1.5084,1.25188 0.7913,4.98841 -0.9574,4.98841 -0.7781,0 -1.0517,-1.0802 -0.7662,-3.02518 z m 8.328,2.27518 c 0.3167,-2.00553 -0.274,-2.37771 -1.8684,-1.17721 -1.6388,1.23398 -1.6449,1.20249 -0.096,-0.49588 0.9098,-0.99746 2.1473,-1.50876 2.75,-1.13622 1.3714,0.84755 1.4445,3.55931 0.096,3.55931 -0.55,0 -0.9467,-0.3375 -0.8816,-0.75 z m 24.8816,-5.25006 c 0,-0.55 0.4234,-1 0.941,-1 0.5175,0 1.2191,0.45 1.559,1 0.3399,0.55 -0.083,1 -0.941,1 -0.8574,0 -1.559,-0.45 -1.559,-1 z m -19,-1.3764 c 0,-0.9275 -0.6402,-1.93204 -1.4227,-2.2323 -2.7904,-1.07079 -2.5656,-3.34596 0.4865,-4.92428 3.488,-1.80371 4.2839,-1.481 6.2962,2.55286 1.3382,2.68246 1.3274,2.98012 -0.1079,2.98012 -0.877,0 -2.4176,0.74474 -3.4234,1.65499 -1.7029,1.54116 -1.8287,1.539 -1.8287,-0.0314 z m 3,-5.06458 c 0,-1.05548 -1.9191,-1.49891 -2.4899,-0.57533 -0.3455,0.55897 0.073,1.01631 0.9309,1.01631 0.8574,0 1.559,-0.19844 1.559,-0.44098 z m -11.4744,1.48248 c -0.3588,-0.5806 0.071,-1.33304 0.9541,-1.6721 2.1999,-0.84418 2.8843,0.0836 1.1335,1.53666 -0.9856,0.81795 -1.6395,0.86038 -2.0876,0.13544 z m 25.9744,-1.0415 c 0.3399,-0.55 1.068,-1 1.618,-1 0.55,0 0.7219,0.45 0.382,1 -0.3399,0.55 -1.068,1 -1.618,1 -0.55,0 -0.7219,-0.45 -0.382,-1 z m -29,-4 c 0.3399,-0.55 1.068,-1 1.618,-1 0.55,0 0.7219,0.45 0.382,1 -0.3399,0.55 -1.068,1 -1.618,1 -0.55,0 -0.7219,-0.45 -0.382,-1 z m 19.1143,-0.81505 c -0.6172,-0.99869 3.3074,-5.59662 4.1003,-4.80373 0.2824,0.2824 -0.402,1.67723 -1.5209,3.09962 -1.1188,1.4224 -2.2796,2.18924 -2.5794,1.70411 z m 12.3857,-1.04278 c 0,-1.02776 3.0289,-2.44663 3.7288,-1.74673 0.2434,0.24339 -0.496,0.94481 -1.6432,1.55872 -1.1478,0.6143 -2.0856,0.69884 -2.0856,0.18801 z m -70.5,-2.14217 c 0.3399,-0.55 1.0415,-1 1.559,-1 0.5176,0 0.941,0.45 0.941,1 0,0.55 -0.7016,1 -1.559,1 -0.8575,0 -1.2809,-0.45 -0.941,-1 z m 50.2148,-0.98265 c -0.441,-1.68647 -0.2344,-1.8306 1.3834,-0.96482 2.2145,1.18516 2.5245,2.94747 0.5184,2.94747 -0.7608,0 -1.6167,-0.89219 -1.9018,-1.98265 z m -21.2148,-0.0173 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 9.25,-0.39205 c -0.9625,-0.73064 -1.75,-1.8499 -1.75,-2.48724 0,-0.72262 -0.9,-0.93294 -2.3909,-0.55873 -2.459,0.61716 -4.4395,-0.93073 -2.6254,-2.0519 1.8211,-1.12551 1.0693,-2.66169 -0.9837,-2.01008 -1.4122,0.44821 -2,0.1797 -2,-0.91356 0,-1.74582 4.1593,-3.12302 6.6015,-2.18586 0.9466,0.36324 1.3628,1.25004 1.0137,2.15979 -0.3863,1.00663 -0.1893,1.29447 0.5662,0.82752 0.7737,-0.47816 0.9464,-0.16325 0.5199,0.94807 -0.4472,1.1655 -0.1087,1.66404 1.1301,1.66404 0.9727,0 2.3086,0.54 2.9686,1.2 0.9333,0.93333 1.2,0.77975 1.2,-0.69113 0,-1.83214 0.046,-1.83058 1.4682,0.05 1.8895,2.49809 1.8982,3.44113 0.032,3.44113 -0.825,0 -1.5,0.45 -1.5,1 0,1.39266 -2.1616,1.19326 -4.25,-0.39205 z m 26.5119,-2.29843 c 0.9298,-0.92976 2.0257,-1.35529 2.4353,-0.94562 0.4097,0.40966 0.083,1.16349 -0.7262,1.67516 -2.4345,1.53967 -3.5165,1.07785 -1.7091,-0.72954 z m -40.2619,-0.61839 c 0,-1.97246 2.6035,-5.14176 3.2991,-4.01616 0.9609,1.55472 -0.3955,5.32503 -1.9157,5.32503 -0.7609,0 -1.3834,-0.58899 -1.3834,-1.30887 z m 33.0201,-3.16696 c -0.7888,-0.95039 -0.8647,-1.52417 -0.2016,-1.52417 1.2086,0 2.6176,1.8972 1.9241,2.5907 -0.2517,0.2517 -1.0268,-0.22824 -1.7225,-1.06653 z m -50.0201,-0.36616 c 0,-0.67051 1.6013,-2.62506 3.5584,-4.34344 2.6241,-2.30401 3.2171,-3.33529 2.2584,-3.92781 -1.0354,-0.6399 -1.0473,-1.05626 -0.058,-2.04512 0.9888,-0.98885 1.2416,-0.9125 1.2416,0.37503 0,0.88916 0.546,1.79866 1.2133,2.02111 0.7352,0.24504 0.088,1.36176 -1.6432,2.83333 -1.5711,1.33589 -3.6921,3.30124 -4.7133,4.36745 -1.0669,1.1139 -1.8568,1.41995 -1.8568,0.71945 z m 57.75,-1.73497 c -0.4125,-0.416 -0.75,-1.67137 -0.75,-2.78971 0,-1.47178 0.3021,-1.73126 1.0938,-0.93955 0.6016,0.60158 0.9391,1.85695 0.75,2.78971 -0.1891,0.93276 -0.6813,1.35556 -1.0938,0.93955 z m -13.7184,-1.17304 c -0.017,-0.6875 -1.1566,-1.25 -2.5316,-1.25 -1.5556,0 -2.5,-0.56667 -2.5,-1.5 0,-0.825 -0.675,-1.5 -1.5,-1.5 -0.8333,0 -1.5,-0.88889 -1.5,-2 0,-1.6627 0.6667,-2 3.9529,-2 4.0601,0 9.0471,1.71144 9.0471,3.10475 0,1.35105 -4.9351,6.46183 -4.9684,5.14525 z m 8.6263,-15.80093 c 0.3059,-0.79699 0.9579,-1.44907 1.4491,-1.44907 1.4376,0 1.0257,1.73512 -0.5561,2.34208 -0.9685,0.37166 -1.2646,0.0755 -0.893,-0.89301 z m -9.6579,-3.94907 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m -36,-7.5 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 38,-3 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -15.4751,-19.95977 c -0.8481,-1.3722 -0.097,-2.40235 1.3806,-1.8944 0.6052,0.20803 0.6826,0.91401 0.1875,1.71093 -0.6251,1.00598 -1.0305,1.05341 -1.5681,0.18347 z m -33.5249,194.49831 c 0,-0.37869 -5.0587,-1.97653 -9.5,-3.00064 -1.2407,-0.28609 -5.9063,-2.18779 -8.8173,-3.59391 -1.8551,-0.89609 -1.9483,-0.85844 -0.6207,0.25084 0.8591,0.71785 1.8453,2.06117 2.1917,2.98516 0.4159,1.10938 2.2629,1.89518 5.4381,2.31355 2.6445,0.34846 5.4832,0.77777 6.3082,0.95401 2.5015,0.5344 5,0.57987 5,0.091 z m -31.2051,-3.79137 c 0.7339,-0.88434 0.6217,-1.82447 -0.3813,-3.19626 -1.5591,-2.13214 -2.7676,-1.44519 -3.8686,2.19909 -0.5423,1.79511 -0.2866,2.25 1.2652,2.25 1.0697,0 2.4128,-0.56378 2.9847,-1.25283 z m 10.2051,-0.0285 c 0,-0.42977 -0.6466,-1.02951 -1.4369,-1.33276 -0.7902,-0.30326 -1.1921,-1.18914 -0.893,-1.96862 0.3725,-0.9706 -0.1832,-1.41724 -1.7631,-1.41724 -1.7943,0 -2.0403,0.26667 -1.107,1.2 1.6332,1.63321 1.5082,2.8 -0.3,2.8 -0.825,0 -1.5,0.3375 -1.5,0.75 0,0.4125 1.575,0.75 3.5,0.75 1.925,0 3.5,-0.35162 3.5,-0.78138 z m 110,-0.93501 c 0,-0.56238 0.7635,-0.67812 1.75,-0.26532 5.6824,2.37776 18.25,2.56116 18.25,0.26633 0,-0.52813 -1.3208,-0.65343 -3,-0.28462 -3.9377,0.86486 -3.8121,-0.53028 0.2563,-2.84738 l 3.2437,-1.84738 -3,-1.3214 c -1.9245,-0.84767 -2.3726,-1.35052 -1.25,-1.40262 2.3165,-0.10751 2.2691,-2.08122 -0.05,-2.08122 -0.99,0 -2.3512,-0.55123 -3.025,-1.22496 -0.9666,-0.96661 -1.6592,-0.95375 -3.284,0.061 -1.1955,0.7466 -3.2458,1.02531 -4.8885,0.66452 -2.3576,-0.51782 -2.9496,-0.2362 -3.5507,1.68901 -0.3968,1.27074 -1.202,2.61843 -1.7895,2.99486 -1.3521,0.86642 -6.7069,-0.11439 -8.5995,-1.57513 -1.1611,-0.89617 -1.3059,-0.75916 -0.7536,0.71315 0.376,1.00235 0.2194,2.68985 -0.348,3.75 -1.2343,2.3063 0.2224,2.60107 2.3483,0.47518 0.7988,-0.79881 1.7095,-1.19524 2.0238,-0.88095 0.3143,0.31428 -0.086,1.22913 -0.8901,2.033 -0.8039,0.80386 -1.2598,1.78812 -1.0131,2.18724 0.6616,1.07052 7.5699,0.0636 7.5699,-1.1033 z m 1,-2.68104 c 0,-1.62926 3.7513,-3.31403 4.5394,-2.03874 0.7962,1.28816 0.6012,1.49081 -2.2894,2.37933 -1.3268,0.40785 -2.25,0.2681 -2.25,-0.34059 z m 10.5,-3.10257 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 23.9726,6.95559 c -0.3249,-0.52558 -1.3516,-0.96248 -2.2816,-0.9709 -1.3788,-0.0125 -1.4308,-0.18004 -0.2814,-0.90764 1.1793,-0.74655 1.199,-1.40066 0.1207,-4.0038 l -1.2888,-3.11147 -2.3375,3.16836 c -1.2857,1.74259 -2.1009,3.55119 -1.8118,4.01911 0.2892,0.46791 0.023,0.85075 -0.5922,0.85075 -0.6149,0 -0.9049,0.3375 -0.6443,0.75 0.2605,0.4125 2.5513,0.84251 5.0906,0.95559 2.7293,0.12153 4.3754,-0.18509 4.0263,-0.75 z m -60.9726,-0.95559 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 50.8532,-8.23745 c -0.2592,-0.4194 -0.027,-0.76255 0.5164,-0.76255 0.5431,0 1.6549,-0.66737 2.4706,-1.48303 1.1936,-1.19363 1.2724,-2.16937 0.4036,-5 -0.5936,-1.93434 -1.502,-3.51697 -2.0186,-3.51697 -0.5165,0 -0.6828,0.66814 -0.3694,1.48475 0.3386,0.88254 -0.2578,1.92762 -1.4706,2.57669 -1.1624,0.62211 -1.8053,1.70436 -1.4941,2.51525 0.3255,0.84829 -0.071,1.42331 -0.9815,1.42331 -0.8402,0 -1.2495,0.45 -0.9096,1 0.3399,0.55 0.1556,1 -0.4096,1 -1.1083,0 -0.4165,2.68043 1.2434,4.81767 0.809,1.0416 1.2819,0.83471 2.2571,-0.98746 0.6785,-1.26781 1.0216,-2.64826 0.7623,-3.06766 z m -0.028,-11.61053 c 0.2865,-1.45861 0.1056,-3.07952 -0.4021,-3.60202 -0.5765,-0.59332 -0.9255,-0.4056 -0.9294,0.5 0,0.7975 -1.3535,2.21657 -3,3.15349 -3.9606,2.25371 -3.7924,3.48816 0.4085,2.99773 2.7423,-0.32016 3.5031,-0.91149 3.923,-3.0492 z m -3.4365,-5.04073 2.2518,-2.25176 -2.6959,-2.49847 -2.6959,-2.49846 0.6185,2.46444 c 0.4162,1.65812 0.1515,2.64366 -0.8089,3.01221 -0.7851,0.30128 -1.8696,1.37392 -2.41,2.38366 -0.8212,1.53448 -0.6155,1.81981 1.2531,1.73801 1.2295,-0.0538 3.2488,-1.11116 4.4873,-2.34963 z m -614.39342,32.63871 -2.61623,-2.25 56.58958,0.26634 56.58958,0.26633 2.57178,-2.57177 c 3.19445,-3.19446 2.89975,-5.2992 -2.64158,-18.86608 -2.19364,-5.37069 -3.98843,-10.21832 -3.98843,-10.77252 0,-0.5542 2.19827,0.96879 4.88504,3.38443 21.83288,19.62964 59.7938,19.77141 84.36704,0.31508 9.65295,-7.6429 17.02237,-19.32959 20.82938,-33.03194 3.04597,-10.96317 3.09616,-29.78897 0.1066,-39.97548 -1.12759,-3.84209 -1.91502,-7.12076 -1.74984,-7.28594 0.43557,-0.43558 4.25901,9.50641 5.68077,14.77155 0.66833,2.475 1.22025,10.125 1.22649,17 0.009,9.85411 -0.45337,14.15594 -2.18409,20.3232 -6.73715,24.00716 -22.03442,38.71807 -46.65343,44.86516 -6.37675,1.59221 -10.24864,1.90956 -19.00796,1.55795 -12.94975,-0.51981 -20.82214,-2.75349 -30.69877,-8.71037 -10.73143,-6.47242 -12.69927,-5.06837 -8.36823,5.97073 3.21567,8.1962 3.50673,12.29746 1.06428,14.99634 -1.76521,1.95053 -3.10526,1.99699 -57.5965,1.99699 h -55.78925 z m -200.63452,-0.71673 -2.36078,-1.96673 3.59501,-0.0333 c 7.31329,-0.0677 6.90499,4.08542 6.90499,-70.23417 v -66.54345 l 3.9829,-0.63689 c 5.02457,-0.80347 6.49725,-2.99251 8.50428,-12.64112 1.87262,-9.00242 3.77491,-15.09035 7.72662,-24.72761 l 2.97284,-7.25 h 4.98 c 4.20326,0 4.92799,0.27295 4.64647,1.75 -0.18345,0.9625 -1.33223,1.89259 -2.55285,2.06687 -4.3905,0.62686 -8.90764,10.2599 -13.66952,29.15102 -3.3339,13.22607 -3.06902,12.80961 -11.22016,17.64081 -1.79254,1.06245 -1.8819,3.83435 -2.14203,66.44496 -0.24432,58.80642 -0.43471,65.51666 -1.90499,67.1413 -2.14559,2.37085 -6.51238,2.29624 -9.46278,-0.16169 z m 427.74677,-0.004 c -19.00987,-0.45978 -22.03116,-0.7497 -22.9459,-2.20184 -1.72455,-2.73771 0.60358,-6.46414 4.50946,-7.21786 5.90426,-1.13937 19.14416,-7.02314 26.07889,-11.58938 l 6.75,-4.4446 -0.002,-49.53791 -0.002,-49.53791 -12.0857,-22.5 c -6.64713,-12.375 -14.60355,-27.225 -17.68094,-33 -10.19314,-19.12838 -9.1506,-19.84664 -9.4596,6.51729 l -0.26976,22.98294 -3.16453,0.30698 c -2.3599,0.22893 -3.29542,-0.15246 -3.67933,-1.5 -0.28314,-0.99384 -1.4813,-5.76674 -2.66258,-10.60644 -4.77718,-19.57211 -13.75218,-35.86333 -22.1939,-40.28586 -6.21264,-3.25474 -15.73513,-0.67117 -20.58631,5.58532 -5.94725,7.67009 -8.67045,19.05491 -6.28602,26.27982 2.77884,8.41996 12.25966,17.28227 28.07267,26.24124 17.3384,9.82319 22.72141,13.50604 28.31967,19.37523 17.24594,18.08057 20.62602,49.99077 7.95534,75.10371 -3.69599,7.32536 -16.10776,19.69419 -23.81012,23.72775 -13.20017,6.91265 -32.0061,9.54559 -45.46489,6.36534 -8.47289,-2.0021 -19.20918,-7.68587 -25.82193,-13.67007 -3.29595,-2.98266 -6.27519,-5.42302 -6.62054,-5.42302 -0.34534,0 -1.70176,0.70362 -3.01425,1.5636 l -2.38636,1.5636 5.46191,13.15909 c 3.00405,7.2375 5.33124,14.07138 5.17154,15.1864 -0.28775,2.00901 -0.7993,2.02731 -56.68138,2.02731 -61.57547,0 -59.2605,0.2241 -57.79993,-5.59522 0.49023,-1.95323 1.83634,-2.75783 7.16881,-4.28496 7.53355,-2.15749 16.93452,-6.41825 23.68406,-10.73422 l 4.66193,-2.98106 -3.0352,-7.45227 -3.03521,-7.45227 h -37.2893 -37.2893 l -2.73425,7.15545 c -1.96982,5.15497 -2.45716,7.59474 -1.74313,8.72671 1.52574,2.4188 13.89994,8.78729 22.80253,11.73552 4.4,1.45713 8.5625,3.09435 9.25,3.63826 1.63269,1.29172 1.6041,5.2053 -0.048,6.57646 -2.58489,2.14527 -130.83585,4.13129 -133.32605,2.06461 -1.14955,-0.954 -1.37595,-16.17783 -1.37595,-92.51945 v -91.37756 h -7.86084 -7.86084 l -3.53832,7.75 c -3.94557,8.64199 -7.04373,18.29715 -9.19551,28.65703 -1.41441,6.80977 -2.54782,8.54756 -5.59449,8.57766 -3.80936,0.0376 -3.95,-1.34065 -3.95,-38.70944 v -36.32475 l 2.5651,-0.97525 c 3.46015,-1.31555 128.40965,-1.31555 131.8698,0 l 2.5651,0.97525 v 36.4023 c 0,39.47041 -0.0199,39.61197 -5.38519,38.26537 -2.08481,-0.52325 -2.63669,-1.65499 -4.07746,-8.36166 -2.24978,-10.47251 -5.10624,-19.22011 -9.30859,-28.50651 l -3.50708,-7.75 h -7.86084 -7.86084 l 0.0213,79.75 0.0213,79.75 4.05728,2.87137 c 2.2315,1.57926 4.39663,2.47926 4.8114,2 0.41477,-0.47925 1.77927,-3.57137 3.03221,-6.87137 4.08144,-10.74969 11.73575,-30.6203 19.06778,-49.5 3.95152,-10.175 8.89605,-23 10.98785,-28.5 2.09181,-5.5 9.29194,-24.175 16.00029,-41.5 6.70835,-17.325 13.218,-34.2 14.46589,-37.5 1.24789,-3.3 3.40811,-8.97003 4.8005,-12.60007 l 2.53161,-6.60008 -5.14876,-3.10921 c -6.81895,-4.11781 -16.82616,-8.56146 -23.78043,-10.5596 -5.991,-1.72136 -7.75714,-4.10176 -5.7818,-7.79271 0.92621,-1.73044 3.02882,-1.83833 35.82632,-1.83833 26.66962,0 35.07881,0.2932 35.85039,1.25 0.55441,0.6875 9.11535,21.275 19.02431,45.75 22.14707,54.70295 37.82514,93.35623 44.81967,110.5 l 5.30391,13 0.0445,-17.31574 c 0.0255,-9.93202 0.48591,-18.14054 1.07967,-19.25 1.16546,-2.17767 5.19065,-2.58668 6.734,-0.68426 0.55773,0.6875 1.54812,3.95 2.20086,7.25 4.41838,22.33757 12.79275,38.21645 22.47415,42.61387 5.86772,2.6652 14.77562,2.46273 21.09391,-0.47946 6.33233,-2.94873 12.87286,-10.23806 14.311,-15.94941 2.35214,-9.34121 -2.97983,-16.39115 -20.2391,-26.76016 -29.25056,-17.57313 -41.76082,-35.46719 -45.67223,-65.32731 -1.79539,-13.70622 0.49726,-28.64537 6.08083,-39.62332 12.79336,-25.15322 44.66031,-39.02528 68.54939,-29.84034 5.78602,2.22463 6.97606,2.28849 48.35533,2.59484 28.22814,0.20898 42.85494,0.6723 43.71326,1.38464 0.70948,0.58882 3.61932,5.41669 6.46631,10.72861 2.84699,5.31192 6.39657,11.90804 7.88794,14.65804 14.98275,27.6272 18.22791,33.5 18.51127,33.5 0.18056,0 4.65644,-8.5504 9.94641,-19.00089 l 9.61814,-19.00089 -4.74043,-3.00629 c -4.42335,-2.8052 -19.04189,-8.99193 -21.24692,-8.99193 -0.54186,0 -2.13138,-0.52223 -3.53226,-1.16051 -2.86441,-1.30512 -3.54425,-5.767 -1.17792,-7.73088 0.97552,-0.80961 10.79071,-1.06043 34.14141,-0.87244 30.10802,0.24238 32.86241,0.40781 33.88087,2.03484 0.91734,1.46548 -2.90841,9.74617 -22.17646,48 l -23.28505,46.22899 0.0351,61.67857 c 0.0311,54.76857 -0.141,61.85462 -1.53638,63.25 -1.36034,1.36034 -5.08797,1.54181 -27.75,1.35093 -14.39821,-0.12127 -36.03017,-0.45877 -48.07102,-0.75 z m -9.60755,-5.57859 c 3.025,-0.36363 7.85981,-1.31994 10.74402,-2.12513 3.99182,-1.11441 8.17058,-1.30918 17.5,-0.81566 6.74079,0.35658 15.29348,0.60493 19.00598,0.55187 5.41002,-0.0773 6.75,0.20475 6.75,1.42089 0,1.93724 1.39991,1.94534 3,0.0174 0.9355,-1.1272 3.45124,-1.5 10.12244,-1.5 5.25171,0 8.87756,0.40843 8.87756,1 0,0.55 0.72314,1 1.60699,1 1.05452,0 1.39831,-0.5438 1,-1.58179 -0.33385,-0.87003 -0.60699,-4.23091 -0.60699,-7.46866 0,-4.8219 -0.27135,-5.7827 -1.5,-5.31123 -1.05691,0.40558 -1.5,-0.0829 -1.5,-1.65383 0,-1.97437 0.19715,-2.07242 1.72329,-0.85698 1.10521,0.8802 0.93077,0.34397 -0.48638,-1.4951 -2.31862,-3.00894 -2.18409,-4.93316 0.27884,-3.98804 1.20158,0.46109 1.41142,-0.73862 1.21797,-6.96341 -0.20023,-6.44283 -0.5882,-7.89777 -2.70752,-10.15342 -1.63591,-1.74115 -2.09699,-2.86912 -1.36132,-3.33026 1.30936,-0.82074 3.19458,-7.18238 2.62432,-8.85569 -0.21713,-0.6371 0.079,-1.45115 0.65801,-1.80902 0.57904,-0.35786 1.05279,-1.69421 1.05279,-2.96966 0,-1.27546 1.0125,-3.0253 2.25,-3.88854 l 2.25,-1.56952 -2.14301,-0.0524 c -2.52299,-0.0617 -3.5954,-2.25436 -2.75003,-5.6226 0.44902,-1.78903 0.12625,-2.58269 -1.25089,-3.07577 -2.84813,-1.01975 -4.39637,-2.47985 -3.74578,-3.53253 0.33137,-0.53617 1.42098,-0.19824 2.49512,0.77384 2.33519,2.11332 3.76517,1.02827 2.11891,-1.6078 -0.77519,-1.24129 -0.89359,-2.72963 -0.33447,-4.20452 1.57945,-4.16641 0.84829,-7.04974 -1.88985,-7.4526 -1.375,-0.20231 -2.95,-0.9383 -3.5,-1.63555 -0.55,-0.69724 -1.7875,-1.10584 -2.75,-0.90799 -1.21963,0.2507 -1.75,-0.26864 -1.75,-1.71361 0,-1.14037 -0.41968,-2.07337 -0.93261,-2.07337 -0.51294,0 -1.21826,-0.9 -1.56739,-2 -0.73468,-2.31478 -4.5,-2.73315 -4.5,-0.5 0,0.825 -0.62777,1.5 -1.39504,1.5 -0.76727,0 -2.44329,1.08913 -3.72448,2.42028 -1.28119,1.33116 -2.70535,2.18796 -3.1648,1.904 -0.45945,-0.28395 -0.0647,-1.07981 0.87725,-1.76858 2.32383,-1.69922 0.93922,-3.5557 -2.65195,-3.5557 -3.90798,0 -3.72972,-1.31301 0.38002,-2.79911 4.37861,-1.58333 4.58111,-1.54255 3.96875,0.79911 -0.68993,2.63828 1.33275,2.57388 2.75723,-0.0878 1.11012,-2.07426 2.62803,-2.12536 7.508,-0.25274 1.4574,0.55926 1.65552,0.22203 1.21707,-2.07156 -0.37373,-1.95509 -0.21564,-2.4315 0.55213,-1.66373 0.5917,0.59171 1.88582,1.07583 2.87582,1.07583 2.44122,0 2.28925,2.0593 -0.2,2.71025 -2.08571,0.54543 -2.7931,2.28975 -0.92857,2.28975 1.35281,0 3.92857,2.53158 3.92857,3.86118 0,1.68894 4.157,2.49913 5.10953,0.99583 1.48757,-2.34769 1.07667,-5.86569 -0.60953,-5.21864 -0.94984,0.36449 -1.5,-0.0138 -1.5,-1.03138 0,-0.88385 0.675,-1.60699 1.5,-1.60699 1.59588,0 1.92295,-3.67379 1.52615,-17.142 -0.17758,-6.02724 0.19081,-7.39269 3.98022,-14.75268 2.29675,-4.46088 4.59224,-7.85339 5.10108,-7.53891 0.50885,0.31448 0.69221,0.94873 0.40748,1.40943 -0.28473,0.4607 0.40485,0.59639 1.5324,0.30153 1.16465,-0.30456 3.10881,-2.62538 4.50138,-5.3735 3.02766,-5.9748 3.02664,-6.08638 -0.0487,-5.31451 -1.375,0.3451 -2.49898,0.24117 -2.49772,-0.23095 10e-4,-0.47213 2.92625,-6.66132 6.5,-13.75377 3.57373,-7.09245 6.49771,-13.72995 6.49771,-14.75 0,-1.02005 0.42546,-1.85464 0.94547,-1.85464 0.52001,0 2.59762,-3.14404 4.61691,-6.98676 2.0193,-3.84272 4.06883,-6.74116 4.55453,-6.44099 0.4857,0.30018 0.88309,-0.6341 0.88309,-2.07618 0,-1.44208 1.21775,-5.10894 2.70611,-8.14857 2.51374,-5.13373 4.14825,-6.97002 8.93556,-10.03869 1.45897,-0.93521 -4.91106,-1.18147 -29.64167,-1.14594 -34.23465,0.0492 -33.45958,-0.20265 -12.19574,3.96247 4.45228,0.8721 5.11203,1.2706 4.1075,2.48099 -1.60398,1.93267 -0.36378,3.0137 1.59369,1.38915 1.19254,-0.98972 2.12812,-1.02784 4.02416,-0.16394 1.35872,0.61907 2.47039,1.58523 2.47039,2.14702 0,0.56179 0.66088,1.02144 1.46862,1.02144 0.89949,0 1.24386,0.58568 0.88865,1.51134 -0.43358,1.12991 -0.12443,1.33654 1.22499,0.81872 1.64995,-0.63315 1.62785,-0.39799 -0.25744,2.73866 -1.13431,1.8872 -7.14411,13.33128 -13.35512,25.43128 -6.21102,12.1 -11.78257,22.33061 -12.38123,22.73469 -2.33879,1.57861 -4.18355,0.57666 -6.43106,-3.49294 -8.29753,-15.02446 -7.82685,-13.77908 -5.77482,-15.27956 1.15627,-0.84548 1.6254,-1.99898 1.231,-3.02677 -0.49245,-1.2833 -0.94975,-1.40132 -2.01242,-0.51939 -1.08245,0.89836 -1.95726,0.4495 -4.10995,-2.10883 -4.51618,-5.36718 -6.02879,-9.33195 -4.68524,-12.28071 1.29204,-2.83573 -0.15862,-3.50264 -1.689,-0.77649 -0.81755,1.45633 -1.51287,0.61746 -4.14345,-4.99893 -1.73857,-3.71191 -3.59661,-7.01812 -4.12897,-7.34714 -0.53236,-0.32901 -1.41601,-1.77675 -1.96366,-3.21718 -0.7821,-2.05708 -1.18514,-2.31251 -1.87857,-1.19053 -0.59266,0.95895 -0.86366,0.0394 -0.8245,-2.79784 0.0321,-2.32446 0.52472,-4.51454 1.09476,-4.86685 0.6,-0.37082 0.73597,-0.1544 0.3229,0.51396 -0.39244,0.63498 -0.18882,1.15451 0.45248,1.15451 0.6524,0 0.89864,-0.69675 0.55902,-1.58179 -0.33385,-0.86998 -0.60699,-2.04607 -0.60699,-2.61354 0,-1.06281 -75.54163,-0.30666 -83.31765,0.83398 -3.24353,0.47579 -3.89698,0.25661 -4.34521,-1.45744 -0.90023,-3.44249 -5.85903,-4.68772 -18.33714,-4.60473 -9.23551,0.0614 -12.68148,0.51014 -17.5,2.27877 -18.23988,6.69491 -32.75678,23.72526 -36.08675,42.3348 -1.54109,8.61235 -1.81021,19.80995 -0.47612,19.80995 0.51542,0 0.68551,1.55057 0.37797,3.44571 -0.77297,4.76325 0.27718,8.36677 2.3881,8.19459 0.9461,-0.0772 1.88291,0.6472 2.08181,1.6097 0.22285,1.07837 -0.24218,1.75 -1.21169,1.75 -0.86532,0 -1.57332,0.47656 -1.57332,1.05902 0,0.58246 0.41891,0.80012 0.9309,0.48369 0.512,-0.31644 1.24465,-0.0677 1.62812,0.55278 0.38346,0.62046 0.11658,1.48697 -0.59309,1.92556 -1.01595,0.6279 -0.80281,1.933 1.00247,6.1382 2.54342,5.92465 5.4428,10.09622 6.37163,9.16739 0.33304,-0.33305 2.2568,0.65394 4.27501,2.19331 3.25497,2.48268 3.48396,2.93449 2.02722,3.99969 -2.48306,1.81565 -2.0013,3.70162 1.88098,7.36348 3.00963,2.83876 3.75428,3.13145 5.10821,2.00779 1.33472,-1.10772 1.79904,-1.02267 2.9407,0.53865 0.74565,1.01973 1.56269,2.35275 1.81566,2.96225 0.3178,0.76575 0.73796,0.71463 1.35968,-0.16544 0.69936,-0.98998 1.28993,-0.8425 2.65161,0.66214 1.3557,1.49803 1.45212,2.03625 0.42638,2.38011 -0.72902,0.24438 -0.46468,0.30688 0.5874,0.13888 1.98246,-0.31656 12.50977,4.83177 15.87725,7.76469 1.05597,0.9197 3.22268,2.2118 4.81491,2.87132 1.59223,0.65952 2.89496,1.7473 2.89496,2.4173 0,0.66999 1.13404,1.73486 2.52008,2.36638 3.44346,1.56895 4.65701,5.17647 5.10108,15.164 0.3335,7.5008 0.0825,9.09412 -2.15159,13.66054 -8.041,16.4352 -28.49639,22.05424 -43.27585,11.88775 -3.43451,-2.36252 -5.24424,-3.02661 -6.69966,-2.45846 -1.09673,0.42812 -1.64073,0.81004 -1.20888,0.84869 0.43185,0.0387 0.29717,0.98216 -0.2993,2.09668 -0.8644,1.61514 -0.6605,2.62183 1.0047,4.96038 1.85989,2.61197 2.35968,2.81076 4.55353,1.81118 1.35539,-0.61756 2.79994,-0.76313 3.21012,-0.32349 0.41017,0.43964 0.18327,1.00024 -0.50423,1.24578 -1.68768,0.60274 -1.57244,1.81446 0.35595,3.74285 1.21,1.21 1.93781,1.33052 2.95201,0.48881 1.72297,-1.42994 5.44204,-0.27987 5.44204,1.68288 0,1.00064 0.61164,1.30587 1.83729,0.91686 1.01051,-0.32072 3.82301,0.27587 6.25,1.32577 2.42699,1.04989 7.48373,2.22138 11.2372,2.60331 5.72964,0.58302 7.13341,0.41486 8.75,-1.04814 1.11678,-1.01066 1.92551,-1.25745 1.92551,-0.58757 0,2.36323 12.22334,0.62805 18.75,-2.66167 1.7875,-0.90098 3.25,-2.21082 3.25,-2.91074 0,-0.69993 0.98831,-1.2726 2.19625,-1.2726 7.72314,0 21.38511,-18.28025 24.70508,-33.05638 0.70303,-3.12894 0.59816,-3.94362 -0.50763,-3.94362 -0.76653,0 -1.3937,-0.66088 -1.3937,-1.46862 0,-0.8612 0.5902,-1.24213 1.427,-0.92102 2.32371,0.89169 2.61655,-16.7485 0.35693,-21.50104 -0.94384,-1.98513 -1.73134,-4.82026 -1.75,-6.3003 -0.0187,-1.48004 -0.48393,-2.9691 -1.03393,-3.30902 -0.55,-0.33992 -1,-1.51029 -1,-2.60083 0,-1.09054 -0.9,-2.94883 -2,-4.12954 -2.18358,-2.3438 -2.56182,-3.76963 -1,-3.76963 0.55,0 1,-0.84764 1,-1.88364 0,-2.3247 -7.6872,-9.45037 -9.46085,-8.76976 -0.7453,0.286 -1.23746,-0.17995 -1.16486,-1.10284 0.11892,-1.51172 -2.68238,-3.36089 -17.02328,-11.23731 -7.83509,-4.30325 -10.27193,-5.92917 -17.62427,-11.7593 -6.6564,-5.27828 -10.72674,-7.19215 -10.72674,-5.04371 0,0.59873 -1.16912,-0.1729 -2.59805,-1.71474 -6.65052,-7.17602 -8.74576,-16.6947 -6.01828,-27.34108 1.88382,-7.35328 1.97523,-8.48747 0.61633,-7.64762 -0.55,0.33992 -1,0.0933 -1,-0.54797 0,-0.64131 0.69227,-0.90036 1.53839,-0.57567 0.93825,0.36004 1.81598,-0.11122 2.25,-1.20804 1.81842,-4.59545 8.97734,-12.12321 13.63041,-14.33267 6.59593,-3.13202 16.30452,-3.2238 22.3312,-0.21111 2.3375,1.1685 4.25,1.76399 4.25,1.32332 0,-0.44067 0.5625,-0.99462 1.25,-1.23101 0.6875,-0.23639 0.42695,-0.30222 -0.57899,-0.14629 -1.20576,0.18691 -1.64905,-0.1854 -1.30093,-1.0926 0.34364,-0.89549 0.022,-1.1819 -0.92101,-0.82004 -1.60082,0.61429 -1.74145,0.26758 -0.84208,-2.07613 0.8499,-2.21481 6.76636,-2.03969 16.68981,0.49399 4.47152,1.14168 9.19446,1.8723 10.49543,1.6236 1.43107,-0.27356 2.57403,0.0915 2.89358,0.92422 0.29049,0.75702 1.15502,1.3764 1.92118,1.3764 0.76615,0 1.39301,0.9 1.39301,2 0,2.46065 -2.68008,2.66303 -3.31067,0.25 -0.34415,-1.31691 -0.48604,-1.19317 -0.57333,0.5 -0.0638,1.2375 -0.52618,2.25 -1.02752,2.25 -0.50133,0 -0.82618,0.5625 -0.72188,1.25 0.35664,2.35078 1.69676,3.66292 3.16543,3.09934 1.68091,-0.64503 1.96143,0.7572 0.45319,2.26543 -0.68636,0.68637 -0.24573,2.45014 1.36156,5.45 1.85919,3.47002 2.86937,4.37849 4.64192,4.17449 2.01884,-0.23234 2.20025,0.066 1.66564,2.73906 -0.63844,3.19217 0.21236,6.81598 1.23482,5.2595 0.87629,-1.33397 6.4516,-2.59819 5.63561,-1.2779 -0.35354,0.57204 -1.26115,1.04008 -2.0169,1.04008 -3.79115,0 1.35034,13.35134 11.93784,31 1.15482,1.925 2.728,4.7375 3.49596,6.25 0.76796,1.5125 1.96674,2.75 2.66395,2.75 0.69924,0 1.40817,1.45731 1.58102,3.25 0.19312,2.00294 0.88893,3.30167 1.81336,3.38465 3.1069,0.2789 3.44863,0.52618 1.68708,1.22079 -1.73709,0.68497 -1.7326,0.81796 0.10741,3.17972 1.83601,2.35663 1.92202,4.73443 1.95904,54.16175 l 0.0387,51.6969 -7.14613,4.87314 c -8.28282,5.64827 -16.17401,9.48107 -24.64576,11.97059 -3.29868,0.96935 -5.99822,2.14874 -5.99898,2.62087 -7.7e-4,0.47212 1.01111,0.60978 2.24861,0.30591 1.2375,-0.30387 4.725,-0.85001 7.75,-1.21364 z m 23.97994,-5.97485 c -0.69572,-0.83829 -1.01228,-1.77683 -0.70346,-2.08564 0.30881,-0.30882 1.06377,0.37706 1.67768,1.52416 1.30985,2.44747 0.8236,2.72772 -0.97422,0.56148 z m 8.28196,-1.16631 c 0.92977,-0.92976 1.97126,-1.4097 2.31443,-1.06653 0.98418,0.98419 -0.52669,2.75701 -2.34963,2.75701 -1.52648,0 -1.52374,-0.13153 0.0352,-1.69048 z m 29.40477,1.02381 c -0.36667,-0.36666 -0.66667,-1.32176 -0.66667,-2.12244 0,-1.18064 0.28349,-1.2205 1.5,-0.21089 0.825,0.68469 1.5,1.63979 1.5,2.12244 0,1.03552 -1.38365,1.16058 -2.33333,0.21089 z m 6.33333,-1.33333 c 0,-0.55 0.42344,-1 0.94098,-1 0.51754,0 1.2191,0.45 1.55902,1 0.33992,0.55 -0.0835,1 -0.94098,1 -0.85746,0 -1.55902,-0.45 -1.55902,-1 z m -6.82669,-5.56647 c 0.17968,-1.52861 0.8302,-2.94433 1.44559,-3.14605 0.70718,-0.23179 0.93923,0.5732 0.6306,2.18766 -0.68125,3.56375 -2.48004,4.39409 -2.07619,0.95839 z m -23.71544,-0.5017 c -0.3631,-0.5875 -1.28965,-0.82662 -2.05902,-0.53139 -2.0168,0.77392 -1.72155,-1.79843 0.42989,-3.74545 2.59035,-2.34423 2.97126,-2.1077 2.97126,1.84501 0,3.69303 -0.26543,4.17397 -1.34213,2.43183 z m 12.1481,-0.76037 c -0.6167,-0.99784 4.83914,-7.17146 6.33766,-7.17146 1.84246,0 1.13894,1.83902 -0.95815,2.50461 -1.10799,0.35166 -1.74425,1.0767 -1.41391,1.61119 0.64485,1.04339 -1.28233,3.8842 -2.635,3.8842 -0.45019,0 -1.04897,-0.37284 -1.3306,-0.82854 z m -4.59066,-2.92146 c 0.008,-0.4125 0.43396,-1.41197 0.94563,-2.22104 1.15213,-1.82179 2.5038,-0.68243 1.69398,1.42791 -0.59808,1.55857 -2.66793,2.18051 -2.63961,0.79313 z m 12.98469,-3.50511 c 0,-0.825 -0.675,-2.0602 -1.5,-2.74489 -2.19585,-1.82239 -1.83774,-3.52508 1.01473,-4.82476 1.3831,-0.63018 3.03033,-2.27741 3.66051,-3.66051 1.16821,-2.56393 4.0448,-3.53407 3.75011,-1.26473 -0.59184,4.55771 1.30572,5.02058 3.07465,0.75 1.22302,-2.95264 3,-4.06824 3,-1.88342 0,0.65179 1.04065,0.91764 2.5,0.63867 1.67641,-0.32047 2.5,-0.0294 2.5,0.88342 0,0.74873 -0.6375,1.36133 -1.41667,1.36133 -0.77916,0 -1.60598,0.5625 -1.83738,1.25 -0.32938,0.97864 -0.77602,0.95672 -2.05747,-0.10099 -1.43392,-1.18355 -1.90007,-0.90471 -3.7614,2.25 -1.16855,1.98055 -2.80767,3.60099 -3.64249,3.60099 -1.02587,0 -1.34821,0.6487 -0.99448,2.00138 0.29507,1.12834 0.10873,1.74511 -0.42717,1.41391 -0.5228,-0.32311 -1.60584,-0.0436 -2.40674,0.62106 -1.16486,0.96675 -1.4562,0.90844 -1.4562,-0.29146 z m 10.37429,-0.2119 c -0.30962,-0.80686 -0.33103,-2.04436 -0.0476,-2.75 0.28346,-0.70564 0.55091,-0.30799 0.59433,0.88368 0.0434,1.19166 0.64145,2.39364 1.32895,2.67105 0.97906,0.39506 0.97226,0.5215 -0.0314,0.58333 -0.70477,0.0434 -1.53471,-0.5812 -1.84433,-1.38806 z m -29.19761,-1.08581 c 0.45227,-2.17211 2.22702,-2.30502 2.63295,-0.19718 0.2108,1.0946 -0.27967,1.75 -1.30963,1.75 -0.96073,0 -1.51197,-0.64684 -1.32332,-1.55282 z m 7.82332,-0.44718 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -115.62,-3.45211 c -0.58277,-1.51869 0.24253,-3.55887 1.42902,-3.53258 1.7965,0.0398 3.19503,1.81057 2.61786,3.31464 -0.78853,2.05488 -3.29028,2.18961 -4.04688,0.21794 z m 102.72472,-0.48317 c -1.58379,-0.97883 -1.07122,-12.25291 0.58184,-12.7979 0.89355,-0.29459 0.93421,0.52277 0.16464,3.3099 -0.87185,3.1576 -0.72131,4.10769 1.02514,6.4699 1.54627,2.09144 1.72845,2.89106 0.74468,3.26857 -0.71631,0.27487 -1.84865,0.16216 -2.5163,-0.25047 z m -99.60472,-6.06472 c 0.33992,-0.55 1.06803,-1 1.61803,-1 0.55,0 0.72189,0.45 0.38197,1 -0.33992,0.55 -1.06803,1 -1.61803,1 -0.55,0 -0.72189,-0.45 -0.38197,-1 z m 121.5,-0.37756 c 0,-0.75765 0.64825,-1.91555 1.44056,-2.57311 0.79231,-0.65756 1.19416,-1.83766 0.89301,-2.62244 -0.30115,-0.78479 -0.0494,-1.42689 0.55944,-1.42689 1.39476,0 1.43638,3.51601 0.0718,6.06574 -1.19803,2.23856 -2.96481,2.57031 -2.96481,0.5567 z m -107.5,-1.62244 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -53.6875,-2.68311 c 0.72187,-0.28887 1.58438,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 67.1875,-0.87591 c 0,-0.85746 0.45734,-1.27636 1.01631,-0.9309 0.55897,0.34546 0.75742,1.04702 0.44098,1.55902 -0.85723,1.38704 -1.45729,1.12841 -1.45729,-0.62812 z m 10,-3.74293 c 0,-1.95122 0.39599,-2.48333 1.52552,-2.04988 1.24366,0.47723 1.29594,0.88716 0.28297,2.21861 -0.6834,0.89827 -1.36989,1.82072 -1.52552,2.04989 -0.15563,0.22916 -0.28297,-0.76921 -0.28297,-2.21862 z m 98.5,1.30195 c 0.33992,-0.55 1.04148,-1 1.55902,-1 0.51754,0 0.94098,0.45 0.94098,1 0,0.55 -0.70156,1 -1.55902,1 -0.85746,0 -1.2809,-0.45 -0.94098,-1 z m -0.30833,-6.075 c 0.19708,-0.59125 0.78583,-1.075 1.30833,-1.075 0.5225,0 1.11125,0.48375 1.30833,1.075 0.19709,0.59125 -0.39166,1.075 -1.30833,1.075 -0.91667,0 -1.50542,-0.48375 -1.30833,-1.075 z m -91.19167,-6.48402 c 0,-0.85746 0.45,-1.2809 1,-0.94098 0.55,0.33992 1,1.04148 1,1.55902 0,0.51754 -0.45,0.94098 -1,0.94098 -0.55,0 -1,-0.70156 -1,-1.55902 z m 65.51008,-1.45729 c 0.34546,-0.55897 1.04702,-0.75742 1.55902,-0.44098 1.38704,0.85723 1.12841,1.45729 -0.62812,1.45729 -0.85746,0 -1.27636,-0.45734 -0.9309,-1.01631 z m 5.48992,-0.98369 c 0,-1.11111 0.66667,-2 1.5,-2 1.68305,0 1.75069,0.18315 0.89301,2.41821 -0.85742,2.2344 -2.39301,1.96604 -2.39301,-0.41821 z m -14,-1 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 24.5,-0.41808 c -1.38895,-1.05443 -1.56577,-1.52803 -0.57874,-1.55012 0.78169,-0.0175 2.21071,-0.74624 3.1756,-1.61945 0.96488,-0.87321 2.57531,-1.39964 3.57874,-1.16985 1.53154,0.35073 1.39042,0.62795 -0.87911,1.72698 -1.48693,0.72005 -2.83693,1.94404 -3,2.71997 -0.25008,1.18996 -0.60954,1.17313 -2.29649,-0.10753 z m -7.25945,-3.56835 c -0.6823,-1.09254 -1.24055,-3.08004 -1.24055,-4.41667 0,-1.33663 -0.5625,-2.63648 -1.25,-2.88857 -2.33725,-0.85699 0.64671,-2.57475 3.5,-2.01483 2.49289,0.4892 4.04139,3.3065 1.81739,3.3065 -1.4797,0 -2.37948,4.08791 -1.16673,5.30066 0.60464,0.60464 1.09934,1.45934 1.09934,1.89934 0,1.46961 -1.50477,0.82264 -2.75945,-1.18643 z m 4.76442,-1.7551 c 0.003,-0.41716 1.08615,-2.10847 2.4076,-3.75847 2.39846,-2.99479 2.40179,-2.99555 1.91487,-0.44048 -0.43567,2.28614 -4.33475,6.07381 -4.32247,4.19895 z m 14.04808,-0.69455 c -1.29504,-1.56043 0.13119,-5.56392 1.98213,-5.56392 1.38636,0 1.19139,0.91628 -0.5697,2.67737 -1.18202,1.18203 -1.26875,1.85475 -0.37755,2.92858 0.63633,0.76673 0.93196,1.39405 0.65696,1.39405 -0.275,0 -1.03633,-0.64623 -1.69184,-1.43608 z M 739.14288,634.5977 c 0,-0.4177 0.9,-1.32152 2,-2.00848 1.64277,-1.02592 2,-0.99869 2,0.15247 0,0.77081 -0.7118,1.67463 -1.58179,2.00847 -2.0547,0.78847 -2.41821,0.76555 -2.41821,-0.15246 z m 100.33774,-2.57234 c 0.36424,-1.00748 0.66226,-2.91998 0.66226,-4.25 0,-1.75154 0.55137,-2.41821 2,-2.41821 2.77382,0 2.49806,2.37284 -0.66226,5.69848 -1.80516,1.89959 -2.44904,2.21179 -2,0.96973 z m -32.13473,-2.34849 c 0.93666,-0.24655 1.98323,-1.33115 2.32571,-2.41022 0.47037,-1.48198 1.40853,-1.90903 3.83489,-1.74562 1.7667,0.11898 3.87013,-0.1806 4.67429,-0.66574 1.25536,-0.75733 1.26803,-0.64281 0.0897,0.8099 -0.75489,0.93058 -2.16229,1.69196 -3.1276,1.69196 -0.96531,0 -2.31531,0.675 -3,1.5 -0.68469,0.825 -2.42729,1.4478 -3.87244,1.384 -1.60728,-0.071 -1.96628,-0.29007 -0.92455,-0.56428 z m -60.20301,-0.69728 c 0,-0.20765 0.675,-0.93775 1.5,-1.62244 1.22851,-1.01957 1.5,-0.95124 1.5,0.37756 0,0.89234 -0.675,1.62244 -1.5,1.62244 -0.825,0 -1.5,-0.1699 -1.5,-0.37756 z m 3,-5.06342 c 0,-0.85746 0.45,-1.55902 1,-1.55902 0.55,0 1,0.42344 1,0.94098 0,0.51754 -0.45,1.2191 -1,1.55902 -0.55,0.33992 -1,-0.0835 -1,-0.94098 z m -16.07697,0.39098 c -1.03407,-6.04602 -0.43682,-10.53886 1.49978,-11.28201 1.0476,-0.402 1.26579,0.61675 0.98246,4.5871 -0.20032,2.80712 -0.82346,5.5631 -1.38475,6.12439 -0.56128,0.56128 -1.05515,0.81802 -1.09749,0.57052 z m 4.16257,-0.95 c -0.0302,-0.825 0.38124,-2.175 0.9144,-3 1.18132,-1.82797 1.18132,-0.24909 0,2.5 -0.56668,1.31874 -0.87815,1.48906 -0.9144,0.5 z m 100.9144,-1 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -91.39301,-3.58179 c -0.93594,-2.43902 -0.86593,-2.48428 3.39154,-2.19237 2.44077,0.16735 3.99911,0.77337 4,1.55554 0.002,1.70149 -3.2669,2.9135 -3.77189,1.39853 -0.21632,-0.64895 -0.83236,-1.17991 -1.36899,-1.17991 -0.53663,0 -0.69757,0.45 -0.35765,1 0.33992,0.55 0.18962,1 -0.33399,1 -0.52362,0 -1.22518,-0.7118 -1.55902,-1.58179 z m 71.58468,-0.49321 c 0.19708,-0.59125 0.78583,-1.075 1.30833,-1.075 0.5225,0 1.11125,0.48375 1.30833,1.075 0.19709,0.59125 -0.39166,1.075 -1.30833,1.075 -0.91667,0 -1.50542,-0.48375 -1.30833,-1.075 z m 19.80833,-1.925 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -17.48992,-5.01631 c 0.34546,-0.55897 1.04702,-0.75742 1.55902,-0.44098 1.38704,0.85723 1.12841,1.45729 -0.62812,1.45729 -0.85746,0 -1.27636,-0.45734 -0.9309,-1.01631 z m 8.48992,-0.78369 c 0,-1.21 0.43588,-2.2 0.96862,-2.2 0.53273,0 0.70959,-0.675 0.39301,-1.5 -0.31708,-0.82629 -0.0297,-1.5 0.63979,-1.5 0.82387,0 0.99661,0.88589 0.53623,2.75 -0.91609,3.70929 -2.53765,5.27485 -2.53765,2.45 z m -11,-2.14098 c 0,-0.51754 0.44485,-1.21592 0.98855,-1.55194 0.56686,-0.35034 0.7345,0.0511 0.39301,0.94098 -0.66479,1.73242 -1.38156,2.04939 -1.38156,0.61096 z m -9,-9.11804 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 11,-5.94098 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -122,-5.94098 c 0,-0.51754 0.45,-1.2191 1,-1.55902 0.55,-0.33992 1,0.0835 1,0.94098 0,0.85746 -0.45,1.55902 -1,1.55902 -0.55,0 -1,-0.42344 -1,-0.94098 z m -23,-6.05902 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -6,-3 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 152.5,-1 c 0.33992,-0.55 1.26648,-1 2.05902,-1 0.79254,0 1.44098,0.45 1.44098,1 0,0.55 -0.92656,1 -2.05902,1 -1.13246,0 -1.7809,-0.45 -1.44098,-1 z m -158.5,-5.27057 c 0,-0.8335 0.675,-1.77447 1.5,-2.09106 0.825,-0.31658 1.5,-0.19482 1.5,0.27057 0,0.46539 -0.675,1.40637 -1.5,2.09106 -1.22111,1.01343 -1.5,0.96312 -1.5,-0.27057 z m 175.38,-3.18154 c -0.7754,-2.02068 0.3778,-3.54789 2.67902,-3.54789 2.17686,0 2.56263,1.97835 0.74098,3.8 -1.59833,1.59833 -2.74227,1.51401 -3.42,-0.25211 z m -169.38,-3.54789 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 19,-1.05902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 143,-0.38196 c 0,-0.85746 0.45,-1.55902 1,-1.55902 0.55,0 1,0.42344 1,0.94098 0,0.51754 -0.45,1.2191 -1,1.55902 -0.55,0.33992 -1,-0.0835 -1,-0.94098 z m 1.01531,-4.75 c 0.008,-0.71996 0.45153,-1.98402 0.98469,-2.80902 0.78809,-1.21948 0.97224,-1.09025 0.98469,0.69098 0.008,1.20504 -0.43469,2.4691 -0.98469,2.80902 -0.55,0.33992 -0.99311,0.029 -0.98469,-0.69098 z m 28.98469,-1.80902 c 0,-0.55 0.675,-1 1.5,-1 0.825,0 1.5,0.45 1.5,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,-0.45 -1.5,-1 z m -39,-1.44098 c 0,-0.85746 0.45,-1.55902 1,-1.55902 0.55,0 1,0.42344 1,0.94098 0,0.51754 -0.45,1.2191 -1,1.55902 -0.55,0.33992 -1,-0.0835 -1,-0.94098 z m -157,-2.05902 c 0,-0.825 0.43588,-1.5 0.96862,-1.5 0.53273,0 0.70959,0.675 0.39301,1.5 -0.31659,0.825 -0.75246,1.5 -0.96862,1.5 -0.21615,0 -0.39301,-0.675 -0.39301,-1.5 z m 18,0.5 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 106.5,-1 c -0.33992,-0.55 0.33508,-1 1.5,-1 1.16492,0 1.83992,0.45 1.5,1 -0.33992,0.55 -1.01492,1 -1.5,1 -0.48508,0 -1.16008,-0.45 -1.5,-1 z m -134.5,-1.44898 c 0,-0.38163 0.675,-1.36888 1.5,-2.19388 0.825,-0.825 1.5,-1.07295 1.5,-0.55101 0,0.52194 -0.675,1.50918 -1.5,2.19387 -0.825,0.68469 -1.5,0.93265 -1.5,0.55102 z m 174,-0.55102 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -163.45729,-0.9309 c -0.31644,-0.512 -0.11799,-1.21356 0.44098,-1.55902 0.55897,-0.34546 1.01631,0.0734 1.01631,0.9309 0,1.75653 -0.60006,2.01516 -1.45729,0.62812 z m 22.67546,-1.2236 c 0.51903,-1.5571 2.75625,-1.82979 2.83465,-0.3455 0.029,0.55 -0.69777,1.15548 -1.61517,1.3455 -1.04271,0.21599 -1.49986,-0.15888 -1.21948,-1 z m 171.4485,-1.51217 c -1.07998,-1.07997 -0.77096,-2.07933 0.83333,-2.69496 1.02029,-0.39152 1.5,0.054 1.5,1.39301 0,1.96505 -1.07205,2.56323 -2.33333,1.30195 z m -180.66667,-2.33333 c 0,-1.1 0.45,-2 1,-2 0.55,0 1,0.9 1,2 0,1.1 -0.45,2 -1,2 -0.55,0 -1,-0.9 -1,-2 z m -9.55802,-2.09388 c -0.30801,-0.49837 0.59154,-0.90612 1.999,-0.90612 3.06405,0 3.31157,0.56994 0.56002,1.28949 -1.09946,0.28751 -2.25101,0.115 -2.55902,-0.38337 z m 12.05802,-0.90612 c -0.81551,-1.31952 0.38021,-3.19207 1.5691,-2.45729 1.21461,0.75067 1.20672,3.45729 -0.0101,3.45729 -0.51754,0 -1.2191,-0.45 -1.55902,-1 z m -25.5,-3 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 20.5,0.12525 c -2.15617,-0.45862 -3.09424,-1.30242 -3.33504,-2.99986 l -0.33504,-2.36175 2.2736,2.11818 c 1.25048,1.165 3.08875,2.11818 4.08504,2.11818 0.99629,0 1.81144,0.45 1.81144,1 0,1.07767 -0.0198,1.07822 -4.5,0.12525 z m 4.5,-2.93138 c 0,-0.52194 0.675,-1.50918 1.5,-2.19387 0.825,-0.68469 1.5,-0.93265 1.5,-0.55102 0,0.38163 -0.675,1.36888 -1.5,2.19388 -0.825,0.825 -1.5,1.07295 -1.5,0.55101 z m -22,-10.69387 c 0,-1.98234 0.43925,-2.56206 1.75,-2.30963 0.9625,0.18536 1.75,1.22469 1.75,2.30963 0,1.08494 -0.7875,2.12427 -1.75,2.30963 -1.31075,0.25243 -1.75,-0.32729 -1.75,-2.30963 z m 128.60644,-1.22689 c -0.83925,-0.83925 1.38009,-3.27311 2.98462,-3.27311 0.75324,0 1.10571,0.62663 0.80024,1.42268 -0.62086,1.61794 -2.90206,2.73322 -3.78486,1.85043 z m -108.37727,-1.46061 c 0.61807,-1.85422 2.77083,-2.16176 2.77083,-0.39583 0,0.87083 -0.7125,1.58333 -1.58333,1.58333 -0.87084,0 -1.40521,-0.53437 -1.1875,-1.1875 z m 98.77083,-0.8125 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 21.21057,-0.53804 c -1.65545,-1.87696 -0.28668,-1.8341 2.23056,0.0698 1.36498,1.03242 1.51339,1.45691 0.5,1.43016 -0.79262,-0.0209 -2.02137,-0.69592 -2.73056,-1.5 z m -129.71057,-4.46196 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 7.51531,-0.25 c 0.0283,-2.30831 1.76295,-4.04907 3.40645,-3.4184 1.43956,0.55241 1.39432,0.85232 -0.39908,2.64572 -2.33981,2.33981 -3.02873,2.51681 -3.00737,0.77268 z m 120.98469,0.37244 c 0,-0.48265 0.63494,-1.4045 1.41097,-2.04855 1.56708,-1.30056 3.16989,0.17725 2.08903,1.92611 -0.76156,1.23222 -3.5,1.32803 -3.5,0.12244 z m -138,-1.06342 c 0,-1.39351 1.83834,-2.27697 3.10676,-1.49304 0.77153,0.47683 0.69581,0.94441 -0.25,1.54371 -1.78509,1.13109 -2.85676,1.11208 -2.85676,-0.0507 z m 137.36125,-7.05902 c 0.0577,-2.2 0.21463,-4 0.34877,-4 0.13413,0 0.98248,1.12725 1.88522,2.50501 1.32269,2.01867 1.40046,2.79524 0.40061,4 -2.01868,2.43235 -2.74593,1.74087 -2.6346,-2.50501 z m -25.74875,-5.1875 c -0.35062,-1.75313 -0.18188,-3.64313 0.375,-4.2 0.68333,-0.68333 1.0125,0.35293 1.0125,3.1875 0,5.00769 -0.51352,5.38242 -1.3875,1.0125 z m -104.6125,1.37863 c 0,-0.44488 0.6263,-1.66539 1.39179,-2.71225 1.14609,-1.56738 1.65997,-1.68081 2.91097,-0.64258 1.76876,1.46795 3.22176,-0.027 2.31724,-2.38419 -0.30648,-0.79866 -0.12135,-1.45211 0.41138,-1.45211 0.53274,0 0.96862,0.63287 0.96862,1.40638 0,0.94346 0.70238,1.2227 2.13388,0.84836 1.42219,-0.37191 1.9972,-0.14798 1.72406,0.67143 -0.2254,0.6762 -2.87314,2.07975 -5.88388,3.119 -6.50735,2.24621 -5.97406,2.14391 -5.97406,1.14596 z m 125.69385,0.16939 c -0.93324,-0.93324 0.19452,-2.36052 1.86517,-2.36052 0.79254,0 1.44098,0.675 1.44098,1.5 0,1.50623 -2.11099,2.05568 -3.30615,0.86052 z m 16.44939,-1.25083 c -0.94581,-0.5993 -1.02153,-1.06688 -0.25,-1.54371 0.60872,-0.37621 1.10676,-1.55746 1.10676,-2.625 0,-1.06754 0.48032,-1.94098 1.06739,-1.94098 0.59668,0 0.79924,0.84486 0.45932,1.91584 -0.33444,1.05372 -0.13242,2.20981 0.44892,2.5691 0.58135,0.35929 0.7981,1.07216 0.48166,1.58416 -0.70824,1.14596 -1.55322,1.1563 -3.31405,0.0406 z m -5.99776,-5.17952 c -1.57367,-0.6303 -2.15403,-1.4655 -1.75,-2.5184 0.33249,-0.86644 0.6182,-2.10104 0.63493,-2.74356 0.0167,-0.64251 0.48908,-0.38071 1.04969,0.58179 0.5606,0.9625 1.62377,1.75 2.3626,1.75 1.46991,0 2.77905,2.44492 1.82173,3.40223 -0.74879,0.74879 -1.19996,0.69709 -4.11895,-0.47206 z m -116.64548,-0.93017 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 11,-4 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 83.71861,-1.37071 c 0.17593,-2.12568 0.49888,-2.28391 3.12461,-1.53086 3.87736,1.11201 4.96303,2.37674 1.2803,1.49145 -2.34796,-0.56442 -2.76714,-0.40653 -2.28139,0.85932 0.36989,0.9639 0.0435,1.5508 -0.86231,1.5508 -0.92189,0 -1.38532,-0.87112 -1.26121,-2.37071 z m -95.18681,-0.41068 c 0.0664,-1.5011 2.56403,-3.95556 4.72204,-4.64048 1.84939,-0.58698 2.24616,-0.33582 2.24616,1.42187 0,1.6797 -0.42634,1.99946 -2,1.5 -1.1,-0.34913 -2,-0.2026 -2,0.32562 0,0.52822 -0.675,1.21942 -1.5,1.53601 -0.825,0.31658 -1.48569,0.25222 -1.4682,-0.14302 z m 86.53846,-0.10492 c -0.30127,-0.48747 0.34717,-1.12034 1.44099,-1.40638 1.2888,-0.33703 1.98875,-0.0251 1.98875,0.88631 0,1.54519 -2.55659,1.93286 -3.42974,0.52007 z m 26.61724,-0.17619 c 0.24063,-0.72188 1.02813,-1.50938 1.75,-1.75 0.75,-0.25 1.125,0.125 0.875,0.875 -0.24063,0.72187 -1.02813,1.50938 -1.75,1.75 -0.75,0.25 -1.125,-0.125 -0.875,-0.875 z m -102.1875,-1.4375 c 0,-0.825 0.43588,-1.5 0.96862,-1.5 0.53273,0 0.70959,0.675 0.39301,1.5 -0.31659,0.825 -0.75246,1.5 -0.96862,1.5 -0.21615,0 -0.39301,-0.675 -0.39301,-1.5 z m 22.19167,-4.575 c 0.19708,-0.59125 0.78583,-1.075 1.30833,-1.075 0.5225,0 1.11125,0.48375 1.30833,1.075 0.19709,0.59125 -0.39166,1.075 -1.30833,1.075 -0.91667,0 -1.50542,-0.48375 -1.30833,-1.075 z M 462.64288,691.12167 c 29.15,-0.27712 53.9,-0.17642 55,0.22379 1.1,0.4002 4.925,1.00255 8.5,1.33855 l 6.5,0.6109 -6,-2.00545 c -6.47724,-2.16496 -9.07439,-3.23052 -14.5,-5.94909 -1.925,-0.96454 -4.48959,-2.0534 -5.69908,-2.41969 -1.2095,-0.36629 -3.63409,-2.00648 -5.38799,-3.64487 -2.97465,-2.77873 -3.30978,-2.86949 -4.9879,-1.35081 -0.98945,0.89544 -2.27736,1.33243 -2.86202,0.97109 -1.71866,-1.06219 -1.2363,-4.76766 1.49594,-11.49173 1.40742,-3.46368 2.28363,-7.01505 1.94714,-7.89193 -0.33649,-0.87687 -0.27518,-1.2577 0.13625,-0.84627 0.41142,0.41142 1.67271,-1.1773 2.80285,-3.53048 2.02553,-4.21757 2.13525,-4.28276 7.70041,-4.57532 4.61823,-0.24278 5.73856,-0.65223 6.15638,-2.25 0.28093,-1.07427 1.05539,-1.95321 1.72103,-1.95321 0.72471,0 0.99683,0.81611 0.67829,2.03423 -0.52424,2.00468 -0.20054,2.03222 22.27935,1.89511 l 22.81131,-0.13913 0.53005,-2.6451 c 0.40133,-2.00274 1.1704,-2.68108 3.16681,-2.79323 2.47724,-0.13916 2.53827,-0.0393 1.00883,1.65072 -2.04313,2.25763 -0.17486,3.79137 2.23339,1.83349 1.42338,-1.1572 1.55561,-1.10178 0.98758,0.41391 -0.58947,1.57288 0.13133,1.75 7.12164,1.75 8.55863,0 12.58899,1.56893 9.85631,3.83686 -1.29218,1.07241 -1.02165,2.39286 2.09271,10.21438 2.42433,6.08855 3.90441,8.65507 4.59373,7.96575 0.55934,-0.55934 1.47968,-1.01699 2.04519,-1.01699 0.56552,0 -1.16837,2.01668 -3.85308,4.48151 -5.57869,5.12179 -20.11942,12.62946 -29.32512,15.14114 -3.4375,0.93789 -6.25,2.07022 -6.25,2.5163 0,0.87766 1.32517,0.69771 16.62001,-2.25684 9.88956,-1.9104 18.98091,-2.04854 62.68901,-0.95255 1.60425,0.0402 2.54395,0.49933 2.19098,1.07044 -0.33992,0.55 -0.16803,1 0.38197,1 0.55,0 1.27811,-0.45 1.61803,-1 0.33992,-0.55 4.41648,-1 9.05902,-1 4.64254,0 8.44098,-0.34987 8.44098,-0.77749 0,-0.42763 -0.61859,-1.66513 -1.37466,-2.75 -0.75606,-1.08488 -1.69544,-3.88402 -2.08752,-6.22031 -0.571,-3.40241 -0.39692,-4.36904 0.87465,-4.85699 2.48213,-0.95248 1.86042,-2.68053 -0.78261,-2.17528 -2.14014,0.40911 -2.68602,-0.31953 -5.62552,-7.50895 -1.79046,-4.37912 -4.0887,-8.79534 -5.10718,-9.81382 -1.01849,-1.01849 -1.58886,-2.537 -1.26749,-3.37448 0.40604,-1.05811 -0.0405,-1.52268 -1.46366,-1.52268 -1.12639,0 -2.32609,-0.45 -2.66601,-1 -0.33992,-0.55 0.0835,-1 0.94098,-1 2.11962,0 2.0191,-0.61446 -1.54444,-9.44017 -1.7069,-4.22744 -2.83092,-7.95879 -2.49782,-8.29189 0.33311,-0.3331 -0.10467,-1.39052 -0.97283,-2.34983 -0.86816,-0.95931 -2.64601,-4.37082 -3.95079,-7.58115 -1.30477,-3.21033 -2.84544,-5.89321 -3.42371,-5.96196 -0.57826,-0.0687 -1.50139,-0.18125 -2.05139,-0.25 -0.55,-0.0687 -1,-0.62314 -1,-1.23199 0,-0.60884 0.675,-0.84797 1.5,-0.53138 0.825,0.31658 1.5,0.43517 1.5,0.26354 0,-0.70474 -3.9602,-11.75593 -5.31145,-14.82195 -1.42285,-3.22848 -7.19779,-17.3293 -8.72465,-21.30322 -0.42265,-1.1 -2.16242,-5.00915 -3.86617,-8.68699 -1.70375,-3.67784 -3.09773,-7.16138 -3.09773,-7.7412 0,-2.42198 -6.3622,-15.1038 -7.03285,-14.01865 -0.53809,0.87065 -0.90519,0.85612 -1.47027,-0.0582 -0.41421,-0.67021 -0.19291,-1.56479 0.49177,-1.98795 1.60223,-0.99023 -0.49375,-7.9331 -2.58931,-8.57702 -4.46868,-1.37313 -4.96733,-1.76988 -2.72227,-2.16592 1.97753,-0.34886 2.07959,-0.67643 1.11352,-3.57406 -1.46362,-4.38997 -1.99337,-4.7747 -4.26564,-3.09788 -1.62321,1.19783 -1.7673,1.79016 -0.80886,3.32487 1.24976,2.00118 0.76455,3.083 -1.38276,3.083 -2.39225,0 -1.59713,-6.00466 1.07328,-8.1052 1.6123,-1.26824 2.23391,-2.55344 1.88337,-3.89392 -0.57353,-2.19317 -3.28998,-2.78244 -3.28998,-0.71368 0,0.70795 -0.9,1.35499 -2,1.43785 -1.1,0.0829 -2,-0.44128 -2,-1.16475 0,-1.97161 2.52502,-3.6798 4.38459,-2.96621 1.13886,0.43702 1.47429,0.20173 1.10062,-0.77203 -0.29561,-0.77035 -1.92813,-1.50659 -3.62783,-1.6361 -2.38656,-0.18185 -2.95964,0.10518 -2.51636,1.26034 0.60706,1.58198 -1.21196,3.87908 -4.43966,5.60649 -3.45702,1.85014 -4.01254,-0.0955 -0.91243,-3.19557 1.97462,-1.97462 3.01107,-4.01723 3.01107,-5.93414 0,-2.25641 0.45614,-2.92308 2,-2.92308 1.15583,0 2,-0.66667 2,-1.57946 0,-1.2347 -0.65481,-1.43563 -3,-0.92054 -2.29015,0.503 -3,0.3049 -3,-0.83721 0,-0.82287 -0.55047,-1.67962 -1.22327,-1.90388 -0.67281,-0.22427 -1.29633,-1.86029 -1.38562,-3.63561 -0.18429,-3.66441 -0.78709,-4.61464 -2.32458,-3.66442 -1.51145,0.93413 -1.32129,3.82204 0.40167,6.09999 0.8075,1.06762 1.4825,3.17863 1.5,4.69113 0.0215,1.85695 0.55868,2.75 1.65424,2.75 1.3288,0 1.39713,0.27149 0.37756,1.5 -1.73713,2.09311 -3.74789,1.8697 -4.5,-0.5 -0.95455,-3.00753 -2.24475,-2.4317 -4.35971,1.94577 -1.89489,3.92198 -1.89414,3.94761 0.12453,4.25 3.54562,0.53113 4.34918,3.20819 1.89826,6.32403 -1.79354,2.28013 -1.95399,3.03937 -0.9182,4.34485 0.69032,0.87006 -0.0111,0.60659 -1.5587,-0.58549 -1.54761,-1.19207 -3.49386,-1.90645 -4.32502,-1.58751 -1.07153,0.41119 -1.41663,0.0313 -1.18618,-1.30587 0.22405,-1.29995 1.40932,-2.04111 3.81534,-2.38578 2.1105,-0.30234 3.60924,-1.12574 3.79113,-2.08284 0.23494,-1.23621 -0.36517,-1.4851 -2.74032,-1.1365 -1.92829,0.28301 -3.04113,0.0127 -3.04113,-0.73859 0,-1.44145 -1.92617,-3.43693 -4.11772,-4.26588 -1.46339,-0.55352 -3.25816,-5.71661 -2.31814,-6.66869 0.70334,-0.71237 3.62825,2.26832 4.51528,4.6014 1.07525,2.82811 3.92058,3.03937 3.92058,0.2911 0,-1.1 0.45,-2 1,-2 0.55,0 1,-0.675 1,-1.5 0,-0.825 -0.62686,-1.5 -1.39301,-1.5 -0.76616,0 -1.68994,-0.77378 -2.05285,-1.71952 -0.36292,-0.94574 -0.33997,-1.39964 0.051,-1.00867 1.05205,1.05204 3.39486,-1.23975 3.39486,-3.32093 0,-0.99233 -0.7875,-2.01003 -1.75,-2.26155 -1.12826,-0.29485 -0.81649,-0.49854 0.87756,-0.57333 3.6541,-0.16132 5.62675,-2.67851 4.06228,-5.18363 -1.6888,-2.7042 -1.54795,-2.93237 1.81016,-2.93237 2.57069,0 3,-0.37528 3,-2.62245 0,-2.21767 -0.23152,-2.4303 -1.5,-1.37755 -1.19873,0.99485 -1.81041,0.98727 -3.04551,-0.0378 -0.85003,-0.70546 -1.31415,-1.88556 -1.03138,-2.62245 0.29296,-0.76346 -0.15052,-1.33978 -1.03096,-1.33978 -1.1566,0 -1.49159,0.94289 -1.33231,3.75 0.27053,4.76768 -1.51759,9.25 -3.69008,9.25 -1.55387,0 -1.54975,-0.14363 0.055,-1.91681 1.41987,-1.56895 1.52193,-2.31436 0.56234,-4.10736 -0.84783,-1.58419 -0.86989,-2.493 -0.0797,-3.28319 0.60091,-0.60095 1.0926,-2.12764 1.0926,-3.39264 0,-2.77453 3.6092,-3.2167 5.47118,-0.6703 1.03778,1.41925 1.47172,1.09242 3.36025,-2.53079 1.19271,-2.28827 2.16857,-4.37164 2.16857,-4.6297 0,-0.25807 -14.85,-0.46921 -33,-0.46921 -31.01639,0 -40.72143,0.86809 -27.02677,2.41746 14.4429,1.63403 26.54593,6.07878 31.52057,11.57569 1.7851,1.97251 1.77612,2.09063 -0.32933,4.33178 -1.19046,1.26718 -2.16447,2.75989 -2.16447,3.31711 0,0.55723 -1.18278,3.90323 -2.62841,7.43555 -1.44562,3.53233 -5.22928,13.17241 -8.40813,21.42241 -3.17885,8.25 -10.029,26.025 -15.22255,39.5 -5.19355,13.475 -13.15835,34.175 -17.69956,46 -4.5412,11.825 -11.0607,28.7 -14.48775,37.5 -3.42706,8.8 -7.91353,20.3875 -9.96994,25.75 -2.0564,5.3625 -4.17867,9.75 -4.71616,9.75 -0.53748,0 -3.72272,-1.86442 -7.07831,-4.14316 -5.05513,-3.43287 -6.41211,-3.94891 -7.91536,-3.01012 -1.45643,0.90956 -1.9973,0.78986 -2.74209,-0.60684 -0.51029,-0.95693 -0.99134,-14.45238 -1.06899,-29.98988 -0.12165,-24.34011 0.0637,-28.25 1.33901,-28.25 0.81411,0 1.80213,-0.52089 2.19559,-1.15752 0.48908,-0.79134 0.0405,-0.98103 -1.41808,-0.59961 l -2.13348,0.55792 -0.27289,-38.1504 c -0.36796,-51.4403 0.23416,-70.09487 2.32998,-72.18568 1.21522,-1.21231 3.74188,-1.61484 10.44697,-1.66434 7.73309,-0.0571 9.06839,-0.3313 10.62963,-2.18283 l 1.78555,-2.11754 0.62545,2.21688 c 0.34401,1.21928 1.49536,2.49298 2.55858,2.83043 1.09126,0.34635 2.18295,1.86272 2.5068,3.482 0.31553,1.57765 1.42204,3.6362 2.45892,4.57456 2.26615,2.05084 2.44924,4.98111 0.38346,6.13717 -1.327,0.74263 -1.30935,1.33025 0.15169,5.0497 1.76196,4.48551 2.46859,4.9763 4.18577,2.90722 1.70508,-2.05448 0.34856,-5.55891 -1.92195,-4.96515 -1.30219,0.34053 -1.91375,-0.0162 -1.91375,-1.11618 0,-0.94996 0.82476,-1.61663 2,-1.61663 1.67151,0 2,-0.66667 2,-4.05902 0,-2.2505 -0.41477,-3.80267 -0.9309,-3.48369 -0.512,0.31644 -1.21552,0.11481 -1.56338,-0.44804 -0.34787,-0.56286 0.071,-1.29334 0.9309,-1.6233 2.47125,-0.94831 2.12111,-8.07416 -0.43662,-8.88595 -2.21426,-0.70278 -2.59398,-2.01487 -0.8882,-3.0691 0.6115,-0.37792 1.5046,-0.067 1.98469,0.69098 0.57386,0.90602 0.87813,-0.1447 0.8882,-3.06716 0.0119,-3.44894 0.61758,-5.07392 2.7024,-7.25 l 2.68709,-2.80472 h -64.68709 -64.68709 l -0.16131,10.25 c -0.29124,18.50562 0.32935,59.41832 0.80773,53.25 0.47867,-6.17204 3.35784,-23.53633 4.64268,-28 0.63325,-2.2 1.10227,-4.5625 1.04225,-5.25 -0.06,-0.6875 0.28173,-1.25 0.75944,-1.25 0.47771,0 1.77918,-1.78495 2.89215,-3.96656 1.11298,-2.18162 2.89254,-4.43162 3.95458,-5 1.06205,-0.56839 7.1497,-1.03344 13.52812,-1.03344 9.60713,0 11.70033,0.26893 12.19853,1.56722 0.33077,0.86197 0.0916,2.07697 -0.53139,2.7 -0.82727,0.82727 -1.13278,25.90975 -1.13278,93.00087 v 91.8681 l 2.75,-1.9339 c 2.61161,-1.83659 5.41706,-1.95926 55.75,-2.43777 z m 155.57895,-5.34785 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58438 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m -23.38879,-2.85247 c -1.82518,-1.38383 -1.63043,-1.74324 1.55984,-2.87862 1.36226,-0.48482 1.75,-0.0759 1.75,1.8458 0,2.78939 -0.7035,3.00891 -3.30984,1.03282 z m 28.46773,-0.5642 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m 5.84211,1 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -143,-2.05902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -3.41705,-2.80677 c -0.43077,-0.697 -0.51316,-1.53733 -0.18309,-1.86741 0.89497,-0.89496 1.87077,0.4213 1.38739,1.87145 -0.33872,1.01617 -0.57427,1.01538 -1.2043,-0.004 z m 5.41705,-0.13421 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 128.56638,-1.95302 c -1.42835,-0.51854 -1.60157,-0.9072 -0.66287,-1.48735 0.69891,-0.43195 1.76405,-0.29207 2.36696,0.31084 1.47541,1.47541 0.66344,2.036 -1.70409,1.17651 z m 11.87977,-6.13411 c -0.36954,-0.59793 -0.17109,-1.58793 0.44098,-2.2 0.81716,-0.81716 1.11287,-0.52829 1.11287,1.08713 0,2.41451 -0.51946,2.78655 -1.55385,1.11287 z m -10.44615,-3.97189 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 13.25,0.29075 c -2.63912,-0.43496 -2.87161,-2.08295 -0.67584,-4.7906 0.86578,-1.06762 1.28923,-1.37863 0.94098,-0.69113 -0.37019,0.73081 0.001,1.25 0.89446,1.25 0.89796,0 1.30637,-0.57659 0.99084,-1.39885 -0.5413,-1.4106 1.2833,-3.25075 2.2574,-2.27665 1.17512,1.17513 -0.90934,4.6755 -2.78424,4.6755 -1.0954,0 -1.70898,0.45734 -1.36352,1.01631 0.34546,0.55897 1.01593,0.77663 1.48992,0.48369 0.47399,-0.29294 1.12524,-0.10638 1.44721,0.41459 0.78106,1.26377 -0.44824,1.7702 -3.19721,1.31714 z m -24.25,-5.23173 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 17,-4 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 4.66667,-1.66667 c -0.36667,-0.36666 -0.66667,-1.61732 -0.66667,-2.77924 0,-1.16191 -0.9,-2.76125 -2,-3.55409 -1.1,-0.79284 -2,-1.84466 -2,-2.33739 0,-0.49273 0.9,-0.66052 2,-0.37286 1.1,0.28766 2,0.06 2,-0.50581 0,-0.60535 0.6225,-0.5122 1.51233,0.22629 1.23145,1.02202 1.27788,1.53928 0.25,2.78507 -1.00705,1.22054 -1.00954,1.61502 -0.0123,1.95065 0.6875,0.2314 1.25,1.50822 1.25,2.83738 0,2.35498 -0.98763,3.09571 -2.33333,1.75 z m -132.66667,-4.33333 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 115,-5.05902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -54.8455,-2.37863 c 0.19002,-0.9174 0.7955,-1.64422 1.3455,-1.61517 1.48429,0.0784 1.2116,2.31562 -0.3455,2.83465 -0.84112,0.28038 -1.21599,-0.17677 -1,-1.21948 z m -12.1545,-4.00333 c 0,-0.85746 0.45,-1.55902 1,-1.55902 0.55,0 1,0.42344 1,0.94098 0,0.51754 -0.45,1.2191 -1,1.55902 -0.55,0.33992 -1,-0.0835 -1,-0.94098 z m 62,-3.11804 c 0,-0.85746 0.45,-1.2809 1,-0.94098 0.55,0.33992 1,1.04148 1,1.55902 0,0.51754 -0.45,0.94098 -1,0.94098 -0.55,0 -1,-0.70156 -1,-1.55902 z m 22,0.55902 c 0,-0.55 0.42344,-1 0.94098,-1 0.51754,0 1.2191,0.45 1.55902,1 0.33992,0.55 -0.0835,1 -0.94098,1 -0.85746,0 -1.55902,-0.45 -1.55902,-1 z m -118.43565,-3.89587 c -1.08836,-1.76102 0.45256,-8.21769 3.48537,-14.60413 1.56711,-3.3 3.95094,-9.15 5.29739,-13 3.20364,-9.16034 4.77259,-12.5 5.87242,-12.5 0.49418,0 0.61524,-0.45833 0.26903,-1.01851 -0.34621,-0.56018 1.02456,-5.28732 3.04615,-10.50475 2.02159,-5.21744 3.43171,-10.12187 3.1336,-10.89874 -0.29812,-0.77686 0.002,-1.62116 0.66641,-1.8762 0.66464,-0.25505 2.71949,-4.34834 4.56633,-9.09621 2.7142,-6.97767 3.82854,-8.7506 5.81306,-9.24868 1.60636,-0.40318 3.01856,-0.0528 4.08481,1.01344 1.50236,1.50236 1.50309,1.75621 0.009,3.24997 -1.28211,1.28212 -1.41079,2.2214 -0.61646,4.5 0.55212,1.58382 1.31408,2.87968 1.69323,2.87968 0.37915,0 0.76205,0.96482 0.85088,2.14405 0.22848,3.03319 5.37998,14.85595 6.47314,14.85595 0.49994,0 0.6715,0.38428 0.38122,0.85395 -0.29027,0.46968 0.65882,3.84468 2.10909,7.5 2.06574,5.20658 3.08778,6.64937 4.71876,6.66136 2.94283,0.0216 4.98349,1.52587 4.07162,3.0013 -0.57682,0.93332 -0.99492,0.83205 -1.68957,-0.40923 -0.5077,-0.90719 -1.34708,-1.3874 -1.86529,-1.06713 -1.06996,0.66128 -0.28606,4.74838 1.62258,8.45975 0.70712,1.375 1.54279,3.31602 1.85705,4.31338 0.31425,0.99736 0.91205,1.6041 1.32844,1.34831 0.41638,-0.2558 0.80212,0.7843 0.8572,2.31132 0.0551,1.52703 1.00869,4.74529 2.11914,7.1517 1.11045,2.40641 2.57913,5.82971 3.26374,7.60733 2.43996,6.33548 3.1315,6.1892 -29.18625,6.17363 -16.11322,-0.008 -30.25848,0.27449 -31.43391,0.62723 -1.17543,0.35273 -2.43476,0.15979 -2.79851,-0.42877 z m 53.79287,-19.85413 c -3.58164,-8.6625 -9.46868,-23.11281 -13.08233,-32.1118 -4.08725,-10.17841 -6.8464,-15.84715 -7.30097,-15 -0.40189,0.74899 -5.70002,14.4118 -11.77363,30.3618 -6.07361,15.95 -11.35147,29.7875 -11.72859,30.75 -0.64214,1.63889 0.93605,1.75 24.85595,1.75 h 25.54164 z m -37.80222,9.5 c 1.05812,-3.45148 16.53284,-44.07822 17.34014,-45.52415 0.47801,-0.85615 1.23457,-0.17705 2.3061,2.06996 1.54617,3.24235 1.49889,3.5426 -1.55327,9.86546 -1.73138,3.58674 -5.6064,13.11775 -8.61115,21.18003 -4.91213,13.18014 -5.70063,14.6587 -7.81738,14.6587 -1.97912,0 -2.24431,-0.35849 -1.66444,-2.25 z m 36.445,1.19098 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -139.45729,-3.87188 c -0.31644,-0.512 -0.11799,-1.21356 0.44098,-1.55902 0.55897,-0.34546 1.01631,0.0734 1.01631,0.9309 0,1.75653 -0.60006,2.01516 -1.45729,0.62812 z m 161.45729,-1.0691 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 20.55279,-1.91459 c -0.32198,-0.52097 -0.15917,-1.21065 0.3618,-1.53262 0.52097,-0.32198 1.21065,-0.15917 1.53262,0.3618 0.32198,0.52097 0.15917,1.21065 -0.3618,1.53262 -0.52097,0.32198 -1.21065,0.15917 -1.53262,-0.3618 z m -174.94648,-2.50185 c 0.33422,-0.87096 1.04702,-1.58356 1.58401,-1.58356 1.31439,0 0.49134,2.27278 -1.0035,2.77106 -0.73075,0.24358 -0.95424,-0.21359 -0.58051,-1.1875 z m 159.9734,0.0984 c -1.7972,-1.31414 -1.77723,-1.39703 0.47876,-1.98698 2.81156,-0.73524 2.87057,-0.68956 2.04357,1.58168 -0.56328,1.54699 -0.88933,1.59938 -2.52233,0.4053 z m 7.92029,-1.68196 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -20.5,-1 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -69.5,-2 c -0.35052,-0.56716 0.48962,-1 1.94098,-1 1.74372,0 2.58141,-0.55755 2.62931,-1.75 0.0601,-1.49644 0.19481,-1.46022 0.92971,0.25 0.47269,1.1 0.89106,2.3375 0.92971,2.75 0.10575,1.12834 -5.71779,0.90191 -6.42971,-0.25 z m 85.16667,-0.66667 c -0.9557,-0.95569 -0.82206,-2.33333 0.22634,-2.33333 0.49116,0 1.15203,0.675 1.46862,1.5 0.58492,1.52428 -0.4803,2.04799 -1.69496,0.83333 z m -8.33084,-3.90055 c -0.33077,-0.86197 -0.0354,-2.09947 0.65639,-2.75 0.96979,-0.91196 1.36272,-0.89657 1.71611,0.0672 0.25209,0.6875 1.09584,1.25 1.875,1.25 1.91348,0 1.80041,1.63877 -0.16512,2.39301 -2.48237,0.95258 -3.43429,0.72867 -4.08238,-0.96023 z m -20.33583,-3.26677 c 0,-1.86718 2.71529,-3.78405 3.80979,-2.68955 0.28795,0.28795 -10e-4,0.52354 -0.64312,0.52354 -0.64167,0 -1.16667,0.64844 -1.16667,1.44098 0,0.79254 -0.45,1.7191 -1,2.05902 -0.55,0.33992 -1,-0.26038 -1,-1.33399 z m 36.01531,-1.35699 c -0.008,-0.93004 0.43469,-1.9691 0.98469,-2.30902 1.2656,-0.78218 1.2656,0.54163 0,2.5 -0.8354,1.29269 -0.97149,1.26629 -0.98469,-0.19098 z m -10.67582,-1.40552 c -0.39355,-1.04693 -1.41843,-2.44362 -2.27752,-3.10376 -1.34092,-1.0304 -1.26667,-1.12609 0.5246,-0.67611 1.50629,0.37839 2.58303,-0.23353 3.87173,-2.20033 l 1.78515,-2.72449 -3.49893,0.5678 c -3.04709,0.49447 -3.64877,0.23895 -4.65917,-1.97863 -1.38976,-3.05018 -0.8805,-3.83377 1.58965,-2.44596 1.411,0.79275 2.32697,0.55508 4.03781,-1.04771 2.1273,-1.99295 2.315,-2.00611 4.8569,-0.34059 1.91286,1.25335 2.94639,1.43018 3.73719,0.63938 0.7908,-0.7908 0.76124,-1.0931 -0.1069,-1.0931 -0.66,0 -1.2,-0.45 -1.2,-1 0,-0.55 0.675,-1 1.5,-1 0.825,0 1.5,0.6375 1.5,1.41667 0,0.77916 0.5625,1.62131 1.25,1.87143 0.99344,0.36142 0.98599,0.84034 -0.0363,2.33333 -0.70747,1.03321 -1.81862,3.11607 -2.46923,4.62857 -0.65062,1.5125 -1.75928,2.75 -2.4637,2.75 -1.51266,0 -1.72197,-2.60929 -0.28076,-3.5 1.32774,-0.82059 1.27976,-2.5 -0.0714,-2.5 -0.58928,0 -1.76786,-0.69643 -2.61905,-1.54762 -2.23648,-2.23649 -2.97319,-0.84321 -0.81507,1.54149 1.02773,1.13562 1.31435,2.00613 0.66054,2.00613 -0.63525,0 -1.1693,1.2375 -1.18679,2.75 -0.0175,1.5125 -0.68011,3.60657 -1.47249,4.6535 -1.41633,1.87133 -1.45277,1.87133 -2.15622,0 z m -9.71,-1.88036 c 0.32147,-0.83773 1.21134,-1.52314 1.9775,-1.52314 1.95331,0 1.73358,0.74736 -0.58448,1.98796 -1.61335,0.86343 -1.86987,0.77784 -1.39302,-0.46482 z m 28.37051,-0.58216 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -5,-0.94098 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -33.32343,-0.7634 c -1.13552,-0.25628 -1.60709,-0.97528 -1.25,-1.90585 0.31539,-0.82188 0.57343,-1.64039 0.57343,-1.81892 0,-0.17852 0.9,-0.0892 2,0.19842 1.1,0.28766 2,1.11897 2,1.84736 0,1.68479 -1.01829,2.19923 -3.32343,1.67899 z m 38.32343,-6.2366 c 0,-2.83359 1.27116,-3.9883 2.39275,-2.17354 0.72158,1.16754 -0.44717,5.17354 -1.50938,5.17354 -0.48585,0 -0.88337,-1.35 -0.88337,-3 z m -31.9922,0.19258 c 0.0105,-0.93404 5.21421,-3.30391 5.85268,-2.66543 0.2784,0.2784 0.0531,0.95922 -0.50056,1.51293 -1.22566,1.22566 -5.36298,2.11657 -5.35212,1.1525 z m -13.0078,-1.69258 c 0,-0.8667 0.59545,-1.20873 1.5,-0.86163 0.825,0.31659 1.5,0.70432 1.5,0.86163 0,0.15731 -0.675,0.54504 -1.5,0.86163 -0.90455,0.3471 -1.5,0.005 -1.5,-0.86163 z m 7.66667,-2.16667 c -0.36667,-0.36666 -0.65299,-1.37916 -0.63626,-2.25 0.025,-1.3003 0.22011,-1.2571 1.09166,0.24167 1.07678,1.85169 0.76461,3.22835 -0.4554,2.00833 z m 34.33333,-2.77431 c 0,-1.40746 0.45,-2.55902 1,-2.55902 0.55,0 1,0.87344 1,1.94098 0,1.06754 -0.45,2.2191 -1,2.55902 -0.56716,0.35052 -1,-0.48962 -1,-1.94098 z m -19.91667,1.15801 c 0.22917,-0.15563 1.20417,-0.88573 2.16667,-1.62244 1.49798,-1.14658 1.75,-1.10583 1.75,0.28297 0,0.99737 -0.83473,1.62244 -2.16667,1.62244 -1.19166,0 -1.97916,-0.12734 -1.75,-0.28297 z m -20.58333,-2.71703 c -0.33992,-0.55 0.0835,-1 0.94098,-1 0.85746,0 1.55902,0.45 1.55902,1 0,0.55 -0.42344,1 -0.94098,1 -0.51754,0 -1.2191,-0.45 -1.55902,-1 z m 14.16667,0.33333 c -0.36667,-0.36666 -0.66667,-1.13166 -0.66667,-1.7 0,-0.6266 0.46577,-0.56756 1.18333,0.15 0.65084,0.65084 0.95084,1.41584 0.66667,1.7 -0.28417,0.28417 -0.81667,0.21667 -1.18333,-0.15 z m 3.33333,-1.33333 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 19.68415,0.25 c -0.23864,-0.4125 -0.0718,-1.65 0.3707,-2.75 0.7024,-1.746 0.81351,-1.65075 0.87486,0.75 0.0693,2.713 -0.3985,3.46421 -1.24556,2 z m -28.06208,-1.05249 c -0.36008,-0.58262 -0.19735,-1.34197 0.36162,-1.68743 0.55897,-0.34546 1.01631,-1.50156 1.01631,-2.5691 0,-1.06754 0.48032,-1.94098 1.06739,-1.94098 0.64421,0 0.79448,0.89204 0.37903,2.25 -1.15844,3.7866 -2.10562,5.11044 -2.82435,3.94751 z m 11.0446,-1.86418 c -1.28471,-1.2847 -0.67022,-3.27192 0.83333,-2.69496 0.825,0.31659 1.5,1.20246 1.5,1.96862 0,1.47024 -1.21212,1.84756 -2.33333,0.72634 z m -25.66667,-5.33333 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 38.68266,-0.6154 c 0.49286,-1.28439 0.17907,-1.47549 -1.53139,-0.93261 -1.1832,0.37553 -2.15127,0.25061 -2.15127,-0.27761 0,-1.50526 2.57138,-2.11604 5.55226,-1.31883 2.5666,0.68641 2.62427,0.82507 1.01319,2.43614 -2.15765,2.15765 -3.69411,2.20717 -2.88279,0.0929 z m -12.01599,-2.05127 c -0.36667,-0.36666 -0.66667,-2.61666 -0.66667,-5 0,-5.3653 -1.80644,-5.70511 -4.43007,-0.83333 -2.06699,3.83818 -5.16405,4.94725 -4.0547,1.45201 0.35931,-1.13207 0.0867,-2.72669 -0.60948,-3.56557 -1.08304,-1.30499 -0.85418,-1.47338 1.63372,-1.20202 2.48569,0.27113 3.14555,-0.21262 4.68474,-3.43442 2.05642,-4.30447 3.10327,-4.90296 2.18643,-1.25 -0.47449,1.89052 -0.23534,2.5 0.98095,2.5 1.64903,0 2.06292,1.49298 1.70743,6.15898 -0.11142,1.46244 0.27072,2.9515 0.8492,3.30902 0.57848,0.35752 1.05178,1.07348 1.05178,1.59102 0,1.07834 -2.33698,1.27066 -3.33333,0.27431 z m -13.66667,-1.83333 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m -3.45729,-0.4309 c -0.31644,-0.512 -0.11799,-1.21356 0.44098,-1.55902 0.55897,-0.34546 1.01631,0.0734 1.01631,0.9309 0,1.75653 -0.60006,2.01516 -1.45729,0.62812 z m -6.54271,-4.01008 c 0,-1.67643 1.77354,-2.09154 2.36383,-0.55328 0.3483,0.90766 -0.003,1.49426 -0.89521,1.49426 -0.80774,0 -1.46862,-0.42344 -1.46862,-0.94098 z m 29,-3.05902 c 0.5887,-1.1 1.27953,-2 1.53518,-2 0.25565,0 0.46482,0.9 0.46482,2 0,1.13148 -0.66667,2 -1.53518,2 -1.22531,0 -1.31913,-0.4037 -0.46482,-2 z m -40,-1.93785 c 0,-1.30983 0.63675,-1.88989 1.9648,-1.78985 1.8237,0.13738 1.84848,0.27654 0.34501,1.93785 -2.04348,2.25802 -2.30981,2.24096 -2.30981,-0.148 z m 15.18816,0.19933 c 0.41489,-2.15437 3.81184,-2.99366 3.81184,-0.94179 0,0.80648 -0.7118,1.73948 -1.58179,2.07332 -2.34801,0.90102 -2.59714,0.77461 -2.23005,-1.13153 z m 10.88213,-0.95246 c 0.0386,-0.44496 0.45702,-1.70902 0.92971,-2.80902 0.82859,-1.92824 0.86195,-1.92138 0.92971,0.19098 0.0387,1.20504 -0.37971,2.4691 -0.92971,2.80902 -0.55,0.33992 -0.96837,0.25398 -0.92971,-0.19098 z m -10.61601,-4.38299 c -1.10601,-1.78957 -1.14659,-6.99013 -0.0517,-6.62517 0.56095,0.18698 1.07741,1.99578 1.14769,4.01955 0.13577,3.90971 -0.0367,4.31965 -1.09599,2.60562 z m 7.15203,-0.34247 c 0.33422,-0.87096 1.04702,-1.58356 1.58401,-1.58356 1.31439,0 0.49134,2.27278 -1.0035,2.77106 -0.73075,0.24358 -0.95424,-0.21359 -0.58051,-1.1875 z m -3.60631,-2.46112 c 0,-1.16734 0.42344,-2.12244 0.94098,-2.12244 1.73246,0 2.053,1.7601 0.54801,3.00914 -1.23911,1.02837 -1.48899,0.87956 -1.48899,-0.8867 z m -18.28279,-0.46268 c -0.39803,-1.01214 -0.47068,-2.24964 -0.16144,-2.75 0.76015,-1.22994 3.44423,-1.15962 3.44423,0.0902 0,0.55 -0.417,1 -0.92668,1 -0.50967,0 -1.08546,0.7875 -1.27954,1.75 -0.32722,1.62279 -0.40547,1.61623 -1.07657,-0.0902 z m 8.28279,-2.62458 c 0,-1.94136 0.6904,-3.3343 2,-4.03518 2.35871,-1.26234 2.68106,0.18988 0.45267,2.03928 -1.12989,0.93773 -1.23022,1.48017 -0.37189,2.01065 0.6465,0.39955 0.86624,1.22677 0.48832,1.83827 -1.27548,2.06377 -2.5691,1.13072 -2.5691,-1.85302 z m 22,1.96482 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -154,-2.76038 c 0,-1.54077 0.56659,-1.81008 3.04338,-1.44656 3.64495,0.53496 3.39463,2.57764 -0.3705,3.02336 -2.06739,0.24475 -2.67288,-0.11245 -2.67288,-1.5768 z m 107.31847,-0.91948 c -0.36992,-1.00108 -1.15541,-2.14137 -1.74553,-2.53398 -0.71642,-0.47664 -0.52055,-1.26637 0.58947,-2.37669 1.55003,-1.55045 1.74797,-1.52584 2.92823,0.36406 0.69635,1.11504 1.90006,1.78353 2.67559,1.48593 1.01827,-0.39074 1.3159,0.12294 1.07177,1.84978 -0.42759,3.02445 -4.51779,3.92177 -5.51953,1.2109 z m 11.68153,-0.32014 c 0,-0.55 0.70156,-1 1.55902,-1 0.85746,0 1.2809,0.45 0.94098,1 -0.33992,0.55 -1.04148,1 -1.55902,1 -0.51754,0 -0.94098,-0.45 -0.94098,-1 z m 24.8125,-0.68311 c 0.72187,-0.28887 1.58438,-0.25335 1.91667,0.0789 0.33229,0.3323 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 19.6875,-1.31689 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -50.5,-4.5 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m 38.20267,0.64642 c -1.0325,-0.65496 -0.97281,-1.0923 0.29238,-2.14231 1.79685,-1.49126 4.22404,0.0234 3.0588,1.90876 -0.79722,1.28992 -1.59792,1.34572 -3.35118,0.23355 z m -17.20267,-2.14642 c 0,-1.11111 0.66667,-2 1.5,-2 0.83333,0 1.5,0.88889 1.5,2 0,1.11111 -0.66667,2 -1.5,2 -0.83333,0 -1.5,-0.88889 -1.5,-2 z m 23,1 c 0,-0.55 0.87344,-1 1.94098,-1 1.06754,0 2.2191,0.45 2.55902,1 0.35052,0.56716 -0.48962,1 -1.94098,1 -1.40746,0 -2.55902,-0.45 -2.55902,-1 z m -39,-0.4433 c 0,-0.3785 0.48138,-1.58765 1.06974,-2.68701 0.85425,-1.59618 1.35785,-1.75971 2.5,-0.81181 1.16928,0.97041 1.45188,0.7541 1.54874,-1.18544 0.0652,-1.30484 0.0454,-2.93494 -0.0438,-3.62244 -0.0893,-0.6875 0.35989,-1.25 0.99814,-1.25 0.68922,0 0.93585,0.85898 0.60733,2.11523 -0.6298,2.40834 1.17815,5.88477 3.06043,5.88477 0.6927,0 1.25945,0.48032 1.25945,1.06739 0,0.58706 -0.7875,0.84777 -1.75,0.57934 -0.9625,-0.26842 -2.78409,-0.78592 -4.04799,-1.15 -1.3009,-0.37474 -2.928,-0.1391 -3.75,0.5431 -0.79863,0.66278 -1.45204,0.89538 -1.45204,0.51687 z m -4.86803,-8.45398 c -1.10442,-0.69965 -0.95989,-1.2748 0.75,-2.98469 2.63083,-2.63083 2.44588,-2.64546 5.79496,0.45836 l 2.77996,2.57639 -2.61935,-0.65742 c -1.51119,-0.37928 -2.90201,-0.20007 -3.28746,0.42361 -0.801,1.29605 -1.59495,1.33873 -3.41811,0.18375 z m 33.86803,-2.10272 c 0,-0.55 0.42344,-1 0.94098,-1 0.51754,0 1.2191,0.45 1.55902,1 0.33992,0.55 -0.0835,1 -0.94098,1 -0.85746,0 -1.55902,-0.45 -1.55902,-1 z m 8,-2 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -26.443,-1.90777 c -0.34158,-0.55268 -1.34304,-0.72783 -2.22547,-0.38921 -1.07016,0.41066 -1.45446,0.16578 -1.15407,-0.73539 0.50907,-1.52722 6.82254,-2.58737 6.82254,-1.14562 0,1.57817 -2.75003,3.39147 -3.443,2.27022 z m -14.91321,-3.84223 c 1.81768,-4.42118 3.35621,-6.3236 3.35621,-4.15 0,0.825 -0.5325,2.0325 -1.18333,2.68333 -1.60522,1.60522 -0.22394,2.79956 1.54238,1.33365 1.09751,-0.91085 1.53628,-0.83214 1.99278,0.3575 0.42728,1.11347 -0.0814,1.52552 -1.88321,1.52552 -1.35774,0 -2.46862,0.45 -2.46862,1 0,0.55 -0.65204,1 -1.44897,1 -1.24881,0 -1.236,-0.51804 0.0928,-3.75 z m -119.14379,-3.25 c 0.33992,-0.55 1.04148,-1 1.55902,-1 0.51754,0 0.94098,0.45 0.94098,1 0,0.55 -0.70156,1 -1.55902,1 -0.85746,0 -1.2809,-0.45 -0.94098,-1 z m 25.5,0 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 100.15896,-3.11802 c -1.8757,-5.00941 -2.0831,-6.42909 -1.15144,-7.88198 0.7119,-1.1102 0.96583,-0.52055 0.97717,2.26905 0.0143,3.51843 0.18155,3.72733 2.51531,3.14159 3.00144,-0.75331 3.23567,0.61361 0.52543,3.06635 -1.90917,1.72777 -2.00412,1.70806 -2.86647,-0.59501 z m -111.65896,-1.88198 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -27.3,-2.2 c -1.44434,-1.44434 -1.61404,-4.17393 -0.20538,-3.30332 1.43108,0.88445 3.23159,4.50332 2.24056,4.50332 -0.45935,0 -1.37518,-0.54 -2.03518,-1.2 z m 74.8,-2.8 c 0,-0.55 0.675,-1 1.5,-1 0.825,0 1.5,0.45 1.5,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,-0.45 -1.5,-1 z m 73.73609,-0.9012 c -0.58709,-2.24504 -0.036,-3.0988 2.00013,-3.0988 0.87128,0 1.28179,0.82292 1.08333,2.17167 -0.41927,2.84935 -2.42322,3.45189 -3.08346,0.92713 z m -110.73609,-1.88553 c 0,-1.60214 4.07889,-5.21327 5.88856,-5.21327 0.8593,0 1.10155,0.33006 0.56144,0.76498 -0.5225,0.42074 -2.1875,1.84918 -3.7,3.17431 -1.5125,1.32514 -2.75,1.89843 -2.75,1.27398 z m 24.6,-2.81327 c -0.36606,-0.95394 -0.21557,-2.18443 0.33443,-2.73444 0.66667,-0.66666 1.22186,-0.42185 1.66557,0.73444 0.36606,0.95394 0.21557,2.18443 -0.33443,2.73443 -0.66667,0.66667 -1.22186,0.42186 -1.66557,-0.73443 z m 8.4,-1.50699 c 0,-2.28017 0.37972,-2.96128 1.42689,-2.55944 0.78478,0.30115 1.96488,-0.1007 2.62244,-0.89301 0.65756,-0.79231 1.6602,-1.44056 2.2281,-1.44056 0.5679,0 0.24724,0.86775 -0.71258,1.92834 -1.11472,1.23175 -1.5076,2.67669 -1.0876,4 0.54856,1.72834 0.23205,2.07166 -1.90986,2.07166 -2.20563,0 -2.56739,-0.43779 -2.56739,-3.10699 z m -47,-0.89301 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 120,-1 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -149.42997,-1.88669 c -0.30141,-0.48768 0.082,-1.40954 0.85195,-2.04856 1.55873,-1.29363 3.15488,0.19285 2.07802,1.93525 -0.7652,1.23812 -2.20049,1.29363 -2.92997,0.11331 z m 29.82298,-0.6951 c 0.33385,-0.86998 0.60699,-1.76998 0.60699,-2 0,-0.23001 0.67881,-0.41821 1.50847,-0.41821 1.25815,0 1.30121,0.33189 0.25946,2 -1.48222,2.37341 -3.24427,2.6837 -2.37492,0.41821 z m 10.95932,0.58848 c -3.01967,-1.21836 -3.89421,-3.00669 -1.47036,-3.00669 1.1,0 2.27811,0.45 2.61803,1 0.33992,0.55 1.51803,1 2.61803,1 1.1,0 1.72189,0.45 1.38197,1 -0.73309,1.18617 -2.21961,1.1881 -5.14767,0.007 z m 114.64767,-1.55 c 0,-1.19762 -0.58265,-1.53759 -2,-1.16694 -1.29986,0.33992 -2,0.0307 -2,-0.88337 0,-1.69766 0.73922,-1.74185 4.89622,-0.29271 3.29452,1.14847 3.70838,3.13996 0.77091,3.70965 -1.02606,0.199 -1.66713,-0.32652 -1.66713,-1.36663 z m -170,-0.45669 c -0.90129,-0.58246 -1.02463,-0.97549 -0.30902,-0.98469 0.65504,-0.008 1.4691,0.43469 1.80902,0.98469 0.7673,1.24152 0.42112,1.24152 -1.5,0 z m 8.8,-0.2 c 0.93333,-0.93333 1.46667,-0.93333 2.4,0 0.93333,0.93333 0.66667,1.2 -1.2,1.2 -1.86667,0 -2.13333,-0.26667 -1.2,-1.2 z m 11.2,0.2 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 446,178 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z M 653.93939,661.20054 c 2.5585,-4.74098 4.92515,-6.84339 7.70349,-6.84339 2.95026,0 2.85968,-1.31159 -0.33666,-4.87446 -1.28517,-1.43253 -2.93741,-4.04239 -3.67166,-5.79969 -1.10159,-2.63647 -4.1876,-20.07109 -5.81034,-32.82585 -0.20992,-1.65 -0.4491,9.0007 -0.53151,23.66821 -0.0824,14.66752 -0.42297,27.38002 -0.75682,28.25 -1.1197,2.91789 1.67743,1.62363 3.4035,-1.57482 z m -146.79651,-7.84339 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 182.5,-50 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -8.5,-4.37756 c 0,-0.20765 -0.7875,-0.99515 -1.75,-1.75 -1.58606,-1.24387 -1.62143,-1.2085 -0.37756,0.37756 1.30637,1.66575 2.12756,2.19548 2.12756,1.37244 z m 175,-15.31261 c 0,-1.42968 -0.23475,-1.40736 -2,0.19017 -1.1,0.99549 -2,2.20606 -2,2.69017 0,0.48411 0.9,0.39853 2,-0.19017 1.1,-0.5887 2,-1.79928 2,-2.69017 z M 494.14431,547.36971 c -0.52729,-4.62326 -1.51087,-8.70938 -2.19879,-9.13454 -0.6846,-0.4231 -1.38109,-0.6329 -1.54776,-0.46623 -0.16668,0.16668 0.69689,4.40311 1.91903,9.4143 1.22215,5.01119 2.34798,8.98536 2.50184,8.83149 0.15387,-0.15387 -0.14957,-4.04412 -0.67432,-8.64502 z M 754.0601,542.1573 c -1.01971,-2.4618 -0.98936,-3.14392 0.1732,-3.89251 1.077,-0.69349 1.12289,-1.09343 0.19448,-1.69509 -0.6683,-0.43309 -1.92667,-3.85572 -2.79638,-7.60583 -1.49409,-6.4424 -1.48223,-6.89134 0.21509,-8.14114 1.71868,-1.26552 1.71942,-1.35257 0.017,-2.01243 -1.70585,-0.66118 -1.70585,-0.74547 0,-2.03961 1.68051,-1.27492 1.68214,-1.3517 0.0294,-1.38174 -2.23448,-0.0406 -2.44844,-6.20726 -0.27788,-8.00866 1.2628,-1.04803 1.27277,-1.4211 0.0702,-2.62371 -1.08016,-1.08016 -1.16995,-2.14764 -0.39117,-4.65069 0.55593,-1.78681 1.27025,-4.10663 1.58737,-5.15517 0.47473,-1.56966 -0.24616,-1.34037 -4.08095,1.29804 -2.56165,1.76246 -4.67185,2.84535 -4.68934,2.40643 -0.0175,-0.43892 -0.72318,0.10196 -1.56814,1.20196 -1.51119,1.96733 -1.57593,1.951 -3.96323,-1 -2.55909,-3.16335 -3.40075,-2.35742 -0.9371,0.89732 0.78989,1.04353 1.15605,2.35056 0.81369,2.90451 -0.34236,0.55395 -0.13404,0.70532 0.46293,0.33637 0.59698,-0.36896 1.34885,-0.24458 1.67082,0.27639 0.32198,0.52097 0.15573,1.21277 -0.36943,1.53734 -1.35876,0.83976 -0.66706,3.46042 2.9658,11.23677 4.23628,9.06796 6.41541,15.46879 8.49183,24.94327 0.9484,4.32742 2.00341,8.31803 2.34447,8.86803 1.21756,1.96343 1.25022,-4.7717 0.0373,-7.69985 z m -262.83181,-7.24736 c 0.50302,0.31088 0.91459,-0.15044 0.91459,-1.02516 0,-1.50273 -2.60519,-3.25577 -3.50346,-2.3575 -0.22947,0.22947 -0.13119,1.51095 0.21839,2.84775 0.34958,1.3368 0.82016,1.87684 1.04574,1.2001 0.22558,-0.67674 0.82172,-0.97608 1.32474,-0.66519 z m -7.08541,-16.9458 c 0,-0.76616 -0.68541,-1.65603 -1.52314,-1.9775 -1.24266,-0.47685 -1.32825,-0.22033 -0.46482,1.39302 1.2406,2.31806 1.98796,2.53779 1.98796,0.58448 z m 100.12409,-4.87366 c -0.98762,-0.98026 -1.10248,-0.8654 -0.5598,0.5598 0.37553,0.98622 0.93469,1.54122 1.24258,1.23333 0.30789,-0.30789 6.4e-4,-1.11479 -0.68278,-1.79313 z m 301.37591,1.26667 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m -315.5,-5 c 0,-0.55 -0.675,-1 -1.5,-1 -0.825,0 -1.5,0.45 -1.5,1 0,0.55 0.675,1 1.5,1 0.825,0 1.5,-0.45 1.5,-1 z m 9.65492,-7.45687 c -0.32568,-0.84872 -1.28127,-1.54313 -2.12354,-1.54313 -2.11938,0 -1.93303,2.76401 0.21862,3.24261 2.26722,0.5043 2.62731,0.18304 1.90492,-1.69948 z m 154.56175,-3.72646 c -1.52437,-1.52437 -2.4529,-0.59584 -1.60743,1.60742 0.46511,1.21205 0.96725,1.39942 1.72354,0.64313 0.75629,-0.75629 0.72246,-1.41198 -0.11611,-2.25055 z m -738.55,202.51666 c -0.366667,-0.36666 -0.666667,-48.0419 -0.666667,-105.94496 v -105.2783 l -5.75,-4.12068 c -7.135095,-5.11329 -16.318001,-9.54663 -26.75,-12.91441 -7.546828,-2.43636 -8.017054,-2.75721 -8.301065,-5.664 -0.165586,-1.69473 0.284414,-3.54865 1,-4.11982 0.864334,-0.6899 29.228864,-1.20822 84.500865,-1.54414 71.268277,-0.43313 83.493807,-0.29971 85.249997,0.93037 1.95325,1.36811 2.0502,2.40277 2.0502,21.87931 v 20.4433 h 22.87756 c 17.12323,0 23.11908,0.31441 23.83781,1.25 0.52815,0.6875 3.22357,6.875 5.98983,13.75 20.40784,50.71969 43.58474,107.68362 44.33333,108.96197 0.54095,0.92378 0.9128,-24.44139 0.93106,-63.51197 0.023,-49.22668 0.32231,-65.3419 1.23041,-66.25 0.74715,-0.74715 4.44309,-1.2 9.7939,-1.2 h 8.5939 l 4.9561,5.86353 c 2.72586,3.22495 23.4061,27.09986 45.9561,53.05538 l 41,47.19184 0.28174,-41.80538 0.28175,-41.80537 -3.28175,-2.81117 c -3.92151,-3.35919 -15.41287,-8.93263 -22.04633,-10.69271 -3.64927,-0.96828 -4.90436,-1.82109 -5.36167,-3.64315 -1.28398,-5.11581 -0.12265,-5.35424 25.9987,-5.33766 13.27016,0.008 24.63454,0.34592 25.25417,0.75 0.81457,0.53119 1.3315,28.07806 1.86631,99.45314 l 0.73969,98.71844 -2.66874,1.21596 c -3.2947,1.50117 2.25721,7.09761 -59.94738,-60.42811 l -48.61649,-52.77526 v 32.40657 32.40657 l 3.53823,2.69874 c 4.12466,3.14604 14.12829,7.83603 20.19476,9.4679 4.76662,1.28221 6.4404,3.48569 5.18107,6.82074 l -0.84961,2.25 H 252.3751 c -17.98061,0 -25.16332,-0.3311 -26.03222,-1.2 -0.66,-0.66 -1.2,-3.135 -1.2,-5.5 v -4.3 l -29.75,-0.0876 c -16.3625,-0.0482 -32,-0.38568 -34.75,-0.75 -4.69251,-0.62165 -5.01859,-0.85314 -5.3023,-3.76415 -0.29519,-3.02879 -0.12076,-3.16621 7.41444,-5.84126 7.92069,-2.81191 15.38786,-6.91112 15.38786,-8.4474 0,-0.47593 -0.68104,-2.49529 -1.51342,-4.48746 l -1.51342,-3.62213 h -24.39258 -24.39258 l -1.59761,4.68875 c -1.26431,3.71054 -1.33608,4.86637 -0.34401,5.54015 3.31451,2.25108 10.70964,5.67634 14.75362,6.83356 5.93357,1.69793 7.16116,2.75215 6.80056,5.8401 -0.4004,3.42869 -3.13734,3.83659 -28.08265,4.1853 -16.27358,0.22749 -20.040917,0.0177 -21.241467,-1.18285 -1.27917,-1.27917 1.73448,-9.72929 24.405707,-68.43219 18.4395,-47.74562 25.57623,-67.33518 24.85892,-68.235 -1.20992,-1.51776 -12.13373,-6.73234 -15.99107,-7.63348 l -2.75,-0.64244 v 14.08479 c 0,7.79666 -0.46216,14.94834 -1.03518,16.01905 -1.17662,2.19852 -5.1848,2.57905 -6.79021,0.64465 -0.58865,-0.70928 -1.79416,-4.79414 -2.6789,-9.07745 -2.27425,-11.01033 -5.0486,-19.70864 -9.69074,-30.38294 l -4.02272,-9.25 H 82.534003 62.142883 v 31 31 h 24.46482 c 23.164187,0 24.519847,0.10283 25.499997,1.93426 1.49423,2.79201 1.3532,28.34772 -0.16482,29.86574 -0.86752,0.86752 -7.9358,1.2 -25.511087,1.2 h -24.3111 l 0.2611,41.21683 0.26109,41.21684 7.79867,5.21011 c 8.29041,5.53863 19.74363,10.75151 27.85609,12.67857 5.062157,1.20248 6.492307,3.05484 5.673577,7.34856 -0.30377,1.59309 -1.76674,1.90944 -11.338557,2.45187 -15.1293,0.85736 -96.000444,1.03322 -96.823113,0.21055 z m 12.899214,-8.5 c 2.762096,0 4.241234,-0.33451 3.501288,-0.79182 -2.069598,-1.27908 -0.298525,-4.76389 2.715181,-5.34246 3.334171,-0.64009 5.21765,0.77618 5.21765,3.92339 0,1.89575 0.528595,2.37756 2.608408,2.37756 2.344287,0 2.539315,-0.27846 1.926062,-2.75 -0.375291,-1.5125 -1.099075,-2.9 -1.608408,-3.08333 -0.509334,-0.18334 -0.926062,-0.97613 -0.926062,-1.76176 0,-1.08359 -0.965631,-1.3071 -4,-0.92585 -3.170321,0.39833 -4,0.17937 -4,-1.05563 0,-1.10313 -0.584101,-1.37282 -2,-0.92343 -1.585962,0.50336 -2,0.1797 -2,-1.56345 0,-1.95379 -0.389209,-2.13507 -3.5,-1.63026 -2.723053,0.44189 -3.5,0.22817 -3.5,-0.96278 0,-0.84191 0.9,-1.7661 2,-2.05376 1.1,-0.28766 2,-0.95085 2,-1.47377 0,-0.52292 -0.9,-0.66511 -2,-0.31598 -1.703282,0.5406 -2,0.1797 -2,-2.43261 0,-1.68707 0.453813,-3.06739 1.008474,-3.06739 0.612009,0 0.537378,-0.75434 -0.189836,-1.9188 -0.94316,-1.51024 -0.919587,-2.25464 0.110714,-3.49607 1.915537,-2.30809 2.264883,-9.57336 0.493022,-10.25329 -1.426737,-0.54749 -1.974452,-4.44643 -0.790891,-5.62999 1.280973,-1.28097 9.368517,5.05853 9.368517,7.3436 0,0.525 0.45,0.95455 1,0.95455 1.358383,0 1.270726,-4.32927 -0.115729,-5.71573 -0.820973,-0.82097 -0.688881,-1.72514 0.5,-3.42251 1.660566,-2.37079 1.971142,-2.01641 1.654854,1.88824 -0.117955,1.45619 0.372203,2.25 1.389309,2.25 0.864362,0 1.571566,0.675 1.571566,1.5 0,1.81491 1.656008,1.99651 2.279762,0.25 0.245536,-0.6875 0.828501,-0.89203 1.295478,-0.45452 0.466978,0.43751 0.262108,1.73532 -0.455265,2.88402 -1.077455,1.72528 -1.07087,2.23894 0.03786,2.95327 2.101469,1.35392 4.332135,0.52503 4.44411,-1.6514 0.174891,-3.39928 0.345391,-3.57993 2.36082,-2.5013 1.25652,0.67247 1.73709,1.63854 1.33558,2.68486 -0.51045,1.33021 -0.16067,1.51733 1.87928,1.00534 1.97902,-0.4967 2.77621,-0.12506 3.78832,1.76609 0.70502,1.31735 2.23861,2.66548 3.40796,2.99584 1.99969,0.56496 2.02136,0.68107 0.36446,1.95299 -2.59472,1.99183 -1.07404,8.98216 2.05236,9.43436 2.2753,0.3291 3.17597,-2.10407 1.22514,-3.30974 -1.58488,-0.97952 4.80243,-6.50981 7.51862,-6.50981 2.65767,0 3.04245,-1.05349 1.46282,-4.00505 -0.67028,-1.25242 -0.67028,-2.07903 0,-2.49328 1.467015,-0.90667 1.311085,-18.50167 -0.163975,-18.50167 -0.64166,0 -0.8825,0.28417 -0.53518,0.63148 1.03744,1.03744 -1.24121,4.36852 -2.98832,4.36852 -1.44725,0 -1.43306,-0.20635 0.13314,-1.93699 0.96413,-1.06534 1.48241,-2.37473 1.15175,-2.90975 -0.96434,-1.56033 0.5346,-4.31761 2.03432,-3.74212 1.0516,0.40354 1.37096,-0.67017 1.37096,-4.60919 0,-4.84035 -1.3563,-6.2527 -1.45426,-1.51436 -0.0649,3.14112 -1.97682,3.71063 -2.39156,0.71241 -0.1902,-1.375 -0.76046,-3.00546 -1.26725,-3.62325 -1.3756,-1.67689 -0.0143,-4.21757 2.44762,-4.56828 3.24362,-0.46206 2.79346,-3.37278 -0.46993,-3.03859 -1.62789,0.16671 -2.85835,-0.31116 -3.21862,-1.25 -0.81846,-2.13289 -2.646,-1.89706 -2.646,0.34145 0,1.44371 -0.55812,1.75463 -2.48756,1.3858 -2.79199,-0.53372 -4.7537,2.36769 -2.53004,3.74199 1.84327,1.1392 0.30011,3.01088 -2.4824,3.01088 -2.81728,0 -4.18249,-1.71751 -2.61287,-3.28713 0.61208,-0.61208 1.11287,-1.97165 1.11287,-3.02128 0,-1.56603 -0.47635,-1.78885 -2.65514,-1.24201 -2.83676,0.71198 -4.55066,-0.7497 -3.64535,-3.1089 0.6482,-1.68919 2.96617,-1.74678 3.64986,-0.0907 0.3094,0.74948 0.79581,0.32642 1.21475,-1.05656 0.42285,-1.39586 1.23908,-2.0992 2.0673,-1.78138 2.33886,0.8975 1.55049,-3.02526 -0.82064,-4.08329 -1.43772,-0.64153 -1.79351,-1.22141 -1.03647,-1.68929 0.63401,-0.39183 2.03165,0.16648 3.10588,1.24071 1.07423,1.07423 2.19374,1.71254 2.48781,1.41848 0.29406,-0.29407 0.83035,0.64343 1.19174,2.08333 0.67795,2.70118 3.44026,3.69251 3.44026,1.23463 0,-0.76085 0.92589,-1.62549 2.05754,-1.92143 1.79658,-0.46981 1.8965,-0.79592 0.78786,-2.57115 -1.70515,-2.73038 -0.41187,-3.76518 2.6546,-2.12405 3.30048,1.76636 4.17733,0.68267 2.06102,-2.54722 -1.06413,-1.62407 -2.27896,-2.39126 -3.21671,-2.03141 -0.82875,0.31802 -2.47038,-0.0967 -3.64807,-0.92158 -1.79488,-1.25716 -1.86262,-1.49977 -0.41875,-1.49977 0.94738,0 1.72251,-0.39752 1.72251,-0.88337 0,-0.48585 0.9,-1.11872 2,-1.40638 1.1,-0.28766 2,-1.24014 2,-2.11663 0,-2.36798 -1.73305,-1.93067 -3.59196,0.90638 -1.12072,1.71044 -2.54921,2.5 -4.52305,2.5 -3.08826,0 -3.613,0.87199 -1.68499,2.8 0.93333,0.93333 0.82222,1.2 -0.5,1.2 -2.17714,0 -2.15985,0.91805 0.05,2.6551 1.56207,1.22785 1.42783,1.30539 -1.25,0.72198 -1.65,-0.35948 -3.3375,-0.84294 -3.75,-1.07436 -1.21196,-0.67992 -0.85873,-2.32555 0.44061,-2.05272 0.65484,0.1375 1.35066,-0.47428 1.54627,-1.35951 0.22756,-1.02983 -0.73692,-2.06208 -2.6779,-2.86606 -3.88016,-1.60721 -2.85675,-3.39667 1.47756,-2.58355 3.2285,0.60567 5.51629,-0.67216 3.4689,-1.93752 -0.56496,-0.34916 -0.93489,-1.84612 -0.82209,-3.32658 0.11281,-1.48045 -0.52281,-4.15087 -1.41248,-5.93426 -1.8461,-3.70059 -1.65888,-3.87047 1.78134,-1.61635 2.29167,1.50156 2.43403,1.50156 1.85783,0 -0.806,-2.10041 1.37527,-2.13044 3.67351,-0.0506 0.95757,0.86659 2.343,1.66674 3.07874,1.77812 2.66281,0.40311 3.55984,1.649 3.06208,4.25291 -0.37806,1.97766 -0.15266,2.5255 0.8841,2.14887 0.76534,-0.27803 1.28864,-0.98294 1.16288,-1.56647 -0.45467,-2.10965 2.26916,-6.68904 3.97865,-6.68904 0.9625,0 1.75,-0.3375 1.75,-0.75 0,-0.4125 0,-1.58123 0,-2.59719 0,-1.01595 -1.0125,-2.31836 -2.25,-2.89423 -2.12291,-0.98791 -2.14298,-1.09045 -0.35539,-1.8153 2.21641,-0.89873 4.41331,1.51162 5.29248,5.80672 0.55745,2.72333 1.36541,3.36417 2.63757,2.09201 0.36189,-0.3619 0.15679,-1.2619 -0.45578,-2 -0.77482,-0.9336 -0.7865,-1.34201 -0.0384,-1.34201 1.76543,0 6.1695,2.25612 6.1695,3.16052 0,1.18664 3.75372,1.04699 4.50437,-0.16758 0.34231,-0.55389 -0.0811,-1.27703 -0.94099,-1.60699 -2.5792,-0.9897 -1.7676,-2.38591 1.38695,-2.38591 1.68324,0 3.34075,0.69768 3.85942,1.6245 0.5919,1.05765 2.35391,1.66238 5.04969,1.73307 2.27732,0.0597 4.14058,0.45369 4.14058,0.8755 0,1.28213 3.80017,0.8554 4.30191,-0.48307 0.32713,-0.87266 0.91432,-0.67003 1.94513,0.67124 1.27857,1.66363 2.06494,1.79771 5.86476,1 4.296737,-0.90204 4.394697,-1.01163 4.699947,-5.25823 0.29238,-4.06751 0.17518,-4.29364 -1.88617,-3.63939 -1.98641,0.63046 -2.132547,0.43716 -1.51869,-2.00867 0.39893,-1.58947 0.19826,-3.28578 -0.48628,-4.1106 -1.504367,-1.81267 1.08715,-1.99659 2.87939,-0.20435 0.93333,0.93333 1.2,0.85219 1.2,-0.36514 0,-0.86083 0.91476,-2.72807 2.0328,-4.14943 l 2.0328,-2.58429 -24.351317,-0.0435 c -18.55947,-0.0332 -24.77763,0.26821 -26.1437,1.2671 -1.67956,1.22812 -1.68648,1.41651 -0.11005,2.99294 0.92528,0.92528 2.72008,1.68233 3.98845,1.68233 2.91154,0 4.62318,2.00805 3.93965,4.62189 -0.30543,1.16795 0.13338,2.56645 1.04185,3.32041 2.25715,1.87327 1.93196,3.24828 -0.68048,2.87725 -1.6181,-0.22981 -2.27443,-1.02166 -2.33697,-2.81955 -0.15739,-4.52401 -1.51399,-7.10273 -3.41857,-6.49824 -1.05507,0.33486 -1.99226,-0.0536 -2.34465,-0.97196 -0.32287,-0.84139 -1.26759,-1.5298 -2.09937,-1.5298 -1.4501,0 -2.16498,-1.7675 -2.77049,-6.84983 l -0.27995,-2.34982 -2.63947,2.08546 c -2.30721,1.82295 -2.79469,1.89845 -3.87245,0.59983 -0.74744,-0.90062 -0.82442,-1.48565 -0.19548,-1.48565 0.57063,0 2.15558,-0.9959 3.52213,-2.21312 2.27434,-2.02581 2.34501,-2.3283 0.83495,-3.57422 -1.48822,-1.22788 -1.43858,-1.31645 0.50709,-0.90488 2.15355,0.45554 2.15697,0.42385 2.28401,-21.15321 0.10183,-17.29311 0.42467,-22.06337 1.61628,-23.882 1.22229,-1.86545 1.24373,-2.27257 0.11968,-2.27257 -1.01839,0 -1.37691,-1.69787 -1.39877,-6.62428 -0.04711,-10.6122 -0.64476,-10.37572 26.22203,-10.37572 20.717707,0 22.509187,-0.13862 22.615997,-1.75 0.10653,-1.60715 0.1526,-1.61098 0.56428,-0.047 0.24655,0.93666 1.28173,1.96754 2.30041,2.29086 1.01868,0.32332 2.32532,1.9452 2.90365,3.60419 0.97363,2.79296 0.8994,2.96808 -1.00224,2.36452 -1.86013,-0.59038 -1.94125,-0.44162 -0.86044,1.57789 0.73142,1.36667 1.4524,1.81052 1.86267,1.14668 0.4046,-0.65465 1.43075,0.0498 2.59428,1.78102 1.14575,1.70475 3.05758,3.03029 4.72315,3.27475 l 2.79824,0.41069 v -15.52208 c 0,-15.48258 0.007,-15.52923 2.68709,-18.32681 l 2.68709,-2.80472 H 71.993053 c -47.330752,0 -115.237352,0.94615 -114.586949,1.59656 0.150333,0.15033 5.503231,1.16795 11.89533,2.26139 11.200136,1.91589 14.152085,2.91005 18.237548,6.14205 1.448975,1.14628 1.999205,1.20523 2.333334,0.25 0.240478,-0.6875 0.897879,-1.25 1.460889,-1.25 0.563011,0 0.769359,0.66268 0.458553,1.47263 -0.32675,0.8515 0.36625,2.13773 1.643011,3.04949 2.073027,1.48039 2.101053,1.65704 0.458114,2.88761 -2.657514,1.99049 -2.09084,2.8597 0.680517,1.04384 2.27824,-1.49276 2.565272,-1.45778 4.581359,0.55831 1.976622,1.97662 2.022212,2.29297 0.562834,3.90557 -1.422987,1.57238 -1.585363,9.98116 -1.562562,80.91864 0.01992,61.96245 0.292973,79.18106 1.256649,79.24286 0.954874,0.0612 0.950655,0.19215 -0.0188,0.58333 -0.95341,0.38471 -1.25,6.46081 -1.25,25.60814 v 25.10376 l 2.8917,-2.77042 c 2.335912,-2.23795 3.810899,-2.77043 7.674181,-2.77043 z m -4.090826,-3.38994 c 1.662701,-1.25689 1.781313,-1.80323 0.75,-3.45463 -2.537855,-4.06375 -0.06237,-5.67645 3.192528,-2.07983 1.643982,1.81658 1.618566,2.03428 -0.525348,4.5 -1.239098,1.42509 -2.959255,2.57676 -3.82257,2.55927 -1.253499,-0.0254 -1.171844,-0.33253 0.40539,-1.52481 z M 0.22183,677.77382 c 0.04798,-1.16495 0.284941,-1.4019 0.604167,-0.60417 0.288871,0.72187 0.253344,1.58438 -0.07895,1.91667 -0.332292,0.33229 -0.568641,-0.25834 -0.52522,-1.3125 z m 40.889573,-19.14047 c -2.72054,-3.17735 -2.5272,-3.64591 1.53148,-3.71153 2.52626,-0.0408 4,-0.53111 4,-1.33068 0,-1.63241 -5.41736,-5.20293 -6.98273,-4.60224 -0.65827,0.2526 -1.77381,-0.23594 -2.47899,-1.08563 -1.12298,-1.35311 -0.89459,-1.46738 1.83978,-0.92051 2.83059,0.56612 3.12194,0.39084 3.12194,-1.87817 0,-2.58178 -2.17824,-5.23587 -3.34201,-4.0721 -0.36189,0.3619 -0.65799,0.10267 -0.65799,-0.57606 0,-0.82406 0.74625,-0.9972 2.24616,-0.52115 3.01542,0.95706 4.51797,3.2049 3.98966,5.96859 -0.47521,2.48588 2.88844,5.11255 4.93069,3.85037 1.66503,-1.02904 0.15025,4.54099 -2.06762,7.60291 -2.28088,3.1489 -4.18713,3.54574 -6.13037,1.2762 z m 1.03148,-6.2762 c -0.90129,-0.58246 -1.02463,-0.97549 -0.30902,-0.98469 0.65504,-0.008 1.4691,0.43469 1.80902,0.98469 0.7673,1.24153 0.42112,1.24153 -1.5,0 z m -17,-2 c 0,-0.55 0.423442,-1 0.940983,-1 0.517541,0 1.219098,0.45 1.559017,1 0.339919,0.55 -0.08352,1 -0.940983,1 -0.857459,0 -1.559017,-0.45 -1.559017,-1 z m 6.88485,-3.69098 c -0.13494,-2.11975 0.19847,-5.69047 0.56775,-6.0805 0.14137,-0.14932 1.29458,0.11233 2.56268,0.58143 1.93669,0.71643 2.03994,0.95488 0.64519,1.4901 -0.91326,0.35045 -1.66047,1.52475 -1.66047,2.60955 0,2.51709 -1.9614,3.81479 -2.11515,1.39942 z m -11.374769,-0.29271 c -0.737546,-1.19337 0.198568,-3.01631 1.548936,-3.01631 1.216805,0 1.224697,2.70662 0.01008,3.45729 -0.511996,0.31644 -1.213553,0.11799 -1.559016,-0.44098 z M 3.142883,642.24243 c 0,-1.13951 0.528041,-1.87593 1.1875,-1.65611 1.851608,0.6172 2.061545,2.46128 0.354764,3.11624 -1.080892,0.41478 -1.542264,-0.022 -1.542264,-1.46013 z m 7.29269,0.12597 c -0.286039,-1.09382 -0.904192,-1.75136 -1.373673,-1.4612 -0.469482,0.29016 -1.426568,-0.38991 -2.126857,-1.51125 -0.700289,-1.12134 -1.840008,-2.0388 -2.532707,-2.0388 -1.787884,0 -1.563,-1.66954 0.322334,-2.39301 2.566569,-0.98489 3.152787,-0.72972 3.77461,1.64301 0.576355,2.19923 0.657962,2.17527 3.616632,-1.06172 1.664834,-1.82144 3.026971,-3.97344 3.026971,-4.78222 0,-1.76788 4.122423,-3.55208 5.410081,-2.3415 0.857965,0.80661 -2.963817,4.82693 -4.660081,4.90217 -1.547628,0.0686 -0.668665,3.49252 1.5,5.84303 l 2.25,2.43866 -2.5,-0.75639 c -1.375,-0.41602 -2.65,-1.14692 -2.833333,-1.62421 -0.183334,-0.4773 -0.781589,-0.86782 -1.329456,-0.86782 -0.58656,0 -0.725206,1.23347 -0.337211,3 0.747507,3.40338 -1.332552,4.35633 -2.20731,1.01125 z m 12.70731,-1.48412 c 0,-0.76009 -1.177856,-2.30847 -2.617457,-3.44086 -2.259782,-1.77755 -2.387247,-2.14723 -0.932783,-2.70536 0.926571,-0.35556 2.194427,-0.13672 2.817457,0.48631 1.690911,1.69091 2.732783,1.3737 2.732783,-0.83204 0,-2.31609 3.16952,-4.2911 5.46982,-3.40839 2.35422,0.9034 1.23506,2.93028 -1.40507,2.54471 -1.848124,-0.2699 -2.136529,0.027 -1.61685,1.66435 0.436095,1.37401 -0.156294,2.78163 -1.907699,4.53304 -1.602791,1.60279 -2.540201,2.03021 -2.540201,1.15824 z m 9.66667,-3.1938 c -1.26779,-1.26779 -0.65891,-2.33333 1.33333,-2.33333 1.46667,0 2,-0.66667 2,-2.5 0,-1.83333 -0.53333,-2.5 -2,-2.5 -1.1,0 -2,-0.5998 -2,-1.33288 0,-2.19255 3.76847,-1.23118 5.9261,1.5118 1.72684,2.19533 1.8387,2.92677 0.79231,5.18085 -1.15451,2.48699 -4.46027,3.56504 -6.05174,1.97356 z m 9.86455,-1.62646 c -0.42806,-0.98622 -0.4977,-2.07372 -0.15476,-2.41666 1.01549,-1.0155 1.83409,0.41094 1.3667,2.38152 -0.41435,1.74695 -0.46826,1.74851 -1.21194,0.0351 z M 3.458238,629.45905 c 0.121872,-1.58284 1.488983,-3.22127 4.02134,-4.81943 3.41385,-2.15447 3.799587,-2.2208 3.5,-0.6019 -0.185182,1.00069 -1.779593,2.49443 -3.543135,3.31943 -1.763543,0.825 -3.421633,2.175 -3.684645,3 -0.263013,0.825 -0.395115,0.42085 -0.29356,-0.8981 z m 40.895215,0.50306 c 1.33023,-1.43918 2.78943,-1.20165 2.78943,0.45406 0,0.51754 -0.91774,0.94098 -2.03943,0.94098 -1.69415,0 -1.82113,-0.23618 -0.75,-1.39504 z m -32.21057,-0.40732 c 0,-1.92737 2.755737,-6.21766 5.257965,-8.18592 3.038692,-2.39023 4.742035,-2.57404 4.742035,-0.51172 0,0.825 -0.723145,1.5 -1.606989,1.5 -1.03116,0 -1.39674,0.5479 -1.020238,1.52905 0.418729,1.09119 -0.229966,1.69239 -2.265323,2.09946 -1.742804,0.34856 -2.804502,1.17051 -2.729762,2.11332 0.06727,0.8486 -0.440188,1.74135 -1.127688,1.98387 -0.6875,0.24253 -1.25,0.005 -1.25,-0.52806 z m 15.5,-4.19764 c -0.339919,-0.55 0.308524,-1 1.44098,-1 1.13246,0 2.05902,0.45 2.05902,1 0,0.55 -0.64844,1 -1.44098,1 -0.79254,0 -1.719101,-0.45 -2.05902,-1 z m -23.25,-1.66228 c -1.341729,-0.5414 -1.752706,-3.33772 -0.490547,-3.33772 0.417699,0 1.321513,0.9 2.008474,2 1.240551,1.98644 0.879128,2.30495 -1.517927,1.33772 z m 19.095077,-4.88085 c -0.325685,-0.84872 -0.355382,-1.7799 -0.06599,-2.06929 0.650965,-0.65096 4.720917,1.80861 4.720917,2.85297 0,1.44024 -4.06408,0.75603 -4.654923,-0.78368 z M 4.241495,618.57125 c -0.997566,-0.34289 -0.716502,-0.84823 0.975379,-1.7537 1.40678,-0.75288 2.386815,-2.1929 2.401388,-3.52849 0.01354,-1.24107 0.587121,-2.44596 1.274621,-2.67753 2.102063,-0.70805 1.410289,3.47164 -1,6.042 -1.2375,1.31968 -2.880625,2.18265 -3.651388,1.91772 z m 6.901388,-1.15508 c 0,-1.06754 0.399012,-2.18759 0.886693,-2.48899 1.217862,-0.75268 3.43836,2.09501 2.64038,3.38617 -1.094591,1.77108 -3.527073,1.15233 -3.527073,-0.89718 z m 6,-2.69172 c 0,-0.79889 4.074216,-4.3673 4.986343,-4.3673 1.712358,0 1.682272,1.33139 -0.06968,3.08333 -1.823931,1.82394 -4.916663,2.63159 -4.916663,1.28397 z m -18,-3.42632 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 5.653353,-1.15856 c -0.767175,-2.93368 -0.07567,-3.44005 1.268331,-0.92875 0.609858,1.13953 0.694997,2.2652 0.19471,2.57439 -0.488957,0.3022 -1.147326,-0.43834 -1.463041,-1.64564 z m 9.013314,1.55091 c -0.366667,-0.36666 -0.666667,-1.13166 -0.666667,-1.7 0,-0.6266 0.465771,-0.56756 1.183333,0.15 0.650834,0.65084 0.950834,1.41584 0.666667,1.7 -0.284167,0.28417 -0.816667,0.21667 -1.183333,-0.15 z m -7.691244,-4.86294 c -1.028583,-1.23937 -1.01271,-2.04582 0.08365,-4.25 l 1.353114,-2.72039 0.366029,2.80906 c 0.201316,1.54498 1.00599,3.05464 1.788164,3.35479 1.65742,0.63601 0.92752,2.33615 -1.00295,2.33615 -0.725196,0 -1.889799,-0.68833 -2.588005,-1.52961 z m 6.311085,-4.95745 c 0.696702,-6.75039 1.654215,-8.15022 4.524271,-6.61421 2.205189,1.18018 8.47842,0.37822 7.640965,-0.97681 -0.283687,-0.45901 -1.130865,-0.59855 -1.882618,-0.31007 -1.928221,0.73993 -2.623423,-0.86774 -1.01703,-2.35189 0.844856,-0.78057 1.568898,-0.8732 1.954057,-0.25 0.770333,1.24642 4.493847,1.30722 4.493847,0.0734 0,-0.50416 -0.475562,-1.07518 -1.056803,-1.26893 -0.581242,-0.19375 -1.894072,-2.22237 -2.917399,-4.50804 -1.653882,-3.69407 -1.687549,-4.22218 -0.303037,-4.75347 0.941908,-0.36144 2.13607,0.22825 3.021154,1.49188 0.804977,1.14927 2.054665,1.86276 2.777085,1.58555 3.05793,-1.17344 2.05896,7.38619 -1.16622,9.99262 -0.764238,0.61762 -1.110016,1.85133 -0.768397,2.74158 0.363419,0.94705 0.05945,1.76667 -0.732629,1.97544 -0.744565,0.19625 -2.787302,0.82502 -4.539417,1.39728 -2.51276,0.82069 -3.298238,0.7471 -3.718615,-0.34839 -0.802116,-2.09031 -2.595722,-1.66802 -2.595722,0.61112 0,1.1 -0.45,2 -1,2 -0.55,0 -1,0.87344 -1,1.94098 0,1.06754 -0.520173,2.26247 -1.155941,2.6554 -0.848431,0.52436 -0.996754,-0.82796 -0.557551,-5.08344 z m -9.286508,-1.00608 c 0,-1.19261 3.534579,-8.50686 4.1109,-8.50686 1.272913,0 0.603531,5.17235 -0.7359,5.68634 -0.75625,0.2902 -1.375,1.15449 -1.375,1.92065 0,0.76615 -0.45,1.39301 -1,1.39301 -0.55,0 -1,-0.22191 -1,-0.49314 z m 5.510081,-2.52317 c 0.345464,-0.55897 1.047021,-0.75742 1.559017,-0.44098 1.387044,0.85723 1.128411,1.45729 -0.628115,1.45729 -0.857459,0 -1.276365,-0.45734 -0.930902,-1.01631 z m 9.847062,-11.48369 c 0.825,-0.825 1.812243,-1.5 2.193873,-1.5 0.38163,0 0.133673,0.675 -0.551016,1.5 -0.684689,0.825 -1.671932,1.5 -2.193873,1.5 -0.521941,0 -0.273984,-0.675 0.551016,-1.5 z m 15.642857,0.5 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z M 3.80955,585.69048 c -0.366667,-0.36666 -0.666667,-1.13166 -0.666667,-1.7 0,-0.6266 0.465771,-0.56756 1.183333,0.15 0.650834,0.65084 0.950834,1.41584 0.666667,1.7 -0.284167,0.28417 -0.816667,0.21667 -1.183333,-0.15 z m 25.333333,-6.75 c 0,-2.51852 0.44574,-3.58333 1.5,-3.58333 0.825,0 1.5,-0.47656 1.5,-1.05902 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.17898 1,-0.35765 0,-0.53663 -0.52967,-1.15224 -1.17705,-1.36803 -1.70911,-0.56971 -0.0279,-2.77432 2.11566,-2.77432 1.86684,0 9.06139,7.40802 9.06139,9.33024 0,0.74583 -0.3308,0.73896 -1.09244,-0.0227 -0.60766,-0.60766 -2.76895,-0.86758 -4.87036,-0.58572 -2.23378,0.29961 -4.05938,0.0513 -4.46657,-0.60756 -1.18788,-1.92203 -2.15104,-1.21995 -2.11005,1.5381 0.0217,1.45881 -0.52308,2.84631 -1.21058,3.08334 -0.84762,0.29222 -1.25,-0.72255 -1.25,-3.15239 z m 9.7823,-4.42883 c 0.28658,-0.86063 -0.19425,-1.221 -1.33427,-1 -0.98026,0.19002 -1.98391,0.95098 -2.23033,1.691 -0.28658,0.86063 0.19425,1.221 1.33427,1 0.98026,-0.19002 1.98391,-0.95098 2.23033,-1.691 z m -31.7823,3.8455 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 40,0.16601 c 0,-1.59479 1.2843,-2.00252 3.5,-1.11116 1.1,0.44252 1.4743,0.83621 0.83179,0.87486 -0.64252,0.0387 -1.88002,0.34343 -2.75,0.67728 -0.86999,0.33384 -1.58179,0.1354 -1.58179,-0.44098 z m -25.079341,-1.16601 c -0.08669,-0.825 -0.09237,-2.02857 -0.01262,-2.67459 0.07975,-0.64603 -0.316932,-1.46009 -0.881518,-1.80902 -1.694239,-1.0471 -1.160294,-2.51639 0.914462,-2.51639 2.818999,0 3.238987,1.35663 1.593325,5.14669 -0.800813,1.84432 -1.526955,2.67831 -1.613649,1.85331 z m 56.665771,-2.18007 c -1.34643,-1.9223 -1.90708,-2.10077 -3.4913,-1.11141 -1.53466,0.95841 -2.18696,0.84749 -3.49121,-0.59369 -2.16738,-2.39492 -2.01854,-3.45652 0.39608,-2.82508 1.59081,0.41601 2,0.0307 2,-1.88337 0,-3.31442 1.50455,-3.01671 3,0.59362 0.68345,1.65 1.8518,3 2.59632,3 0.97076,0 1.18395,-0.84863 0.75368,-3 -0.35233,-1.76164 -0.17978,-3 0.41801,-3 2.21227,0 3.08092,6.49078 0.98199,7.33772 -0.71667,0.28918 -0.46778,0.53807 0.58333,0.58333 1.00834,0.0434 1.64605,0.64145 1.41714,1.32895 -0.72471,2.17656 -3.50019,1.94542 -5.16404,-0.43007 z m -75.58643,-1.18036 c 0,-1.29823 0.288567,-4.46575 0.64126,-7.03893 0.484792,-3.53694 1.033792,-4.61409 2.25,-4.41453 0.884807,0.14519 2.167676,-0.0867 2.85082,-0.51519 0.683144,-0.42854 2.033144,-0.33507 3,0.20771 1.892729,1.06255 1.113814,1.62602 -3.206622,2.31969 -2.552765,0.40985 -4.372997,6.23092 -2.757358,8.81797 0.890577,1.42604 0.804985,1.92972 -0.406951,2.39478 -2.271327,0.87159 -2.371149,0.79701 -2.371149,-1.7715 z m 10.8125,1.67732 c 0.721875,-0.28887 1.584375,-0.25335 1.916667,0.0789 0.332291,0.33229 -0.258334,0.56864 -1.3125,0.52522 -1.164943,-0.048 -1.4019,-0.28494 -0.604167,-0.60416 z m 2.309385,-1.2204 c -1.613433,-1.02193 -0.650595,-3.09649 1.437132,-3.09649 0.792541,0 1.440983,0.9 1.440983,2 0,2.17109 -0.737768,2.45216 -2.878115,1.09649 z m 30.442875,-0.99171 c -0.3043,-0.49236 0.11914,-1.15324 0.94098,-1.46861 0.90766,-0.3483 1.49426,0.003 1.49426,0.89521 0,1.61739 -1.56262,1.98533 -2.43524,0.5734 z m 40.86614,-1.21658 c -0.37792,-0.6115 -0.13144,-1.45525 0.54775,-1.875 0.87882,-0.54314 0.91576,-0.96043 0.12811,-1.44722 -1.55044,-0.95823 -1.38078,-2.56598 0.2708,-2.56598 2.13438,0 3.59914,2.37311 2.96396,4.80204 -0.61099,2.33643 -2.7677,2.93544 -3.91062,1.08616 z m -47.4309,-1.98182 c 0,-0.60149 0.9,-1.32897 2,-1.61663 1.25605,-0.32847 2,-1.36402 2,-2.78394 0,-3.10027 2.34791,-4.99645 3.8884,-3.14028 0.91417,1.10151 0.71318,1.5054 -0.96794,1.94502 -1.16693,0.30516 -1.86075,0.97704 -1.54183,1.49307 0.69378,1.12255 -2.63491,5.19638 -4.24593,5.19638 -0.62298,0 -1.1327,-0.49213 -1.1327,-1.09362 z m 8.5,-2.28485 c -1.88129,-1.39092 -1.89357,-1.51994 -0.20687,-2.17365 2.15994,-0.83712 3.00087,-0.16842 2.54527,2.02397 -0.3018,1.45227 -0.5547,1.46846 -2.3384,0.14968 z m 46.5,0.37847 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -84.738095,-1.69048 c 0.929762,-0.92976 1.971251,-1.4097 2.314421,-1.06653 0.984183,0.98419 -0.526687,2.75701 -2.349629,2.75701 -1.526473,0 -1.523734,-0.13153 0.03521,-1.69048 z m 24.421615,0.0407 c -0.30015,-0.30015 -0.28615,-1.22214 0.0311,-2.04888 0.75556,-1.96898 -1.60421,-3.36713 -4.4693,-2.64803 -2.2256,0.55856 -5.24532,-1.03942 -5.24532,-2.77575 0,-0.48266 1.18125,-0.87756 2.625,-0.87756 2.37603,0 2.5688,-0.28102 2.03242,-2.96292 -0.56004,-2.80018 -0.45899,-2.91214 1.83959,-2.03822 1.52337,0.57919 2.6543,0.56533 3.02661,-0.0371 0.32693,-0.52895 0.11786,-0.96176 -0.4646,-0.96176 -0.58246,0 -1.05902,-0.45 -1.05902,-1 0,-0.55 1.08287,-1 2.40638,-1 1.91405,0 2.29938,0.40919 1.88337,2 -0.30554,1.16838 -0.0307,2 0.66101,2 0.75669,0 0.93759,0.77641 0.50123,2.15127 -0.70215,2.21228 -0.7841,2.20583 3.88112,0.30578 0.98838,-0.40254 1.21762,0.24394 0.8865,2.5 -0.45192,3.07915 -2.21961,4.30795 -2.21961,1.54295 0,-1.80819 -1.16679,-1.93321 -2.8,-0.3 -1.65847,1.65847 -1.50137,2.59531 0.49986,2.98071 1.38237,0.26622 1.217,0.64374 -0.88538,2.02128 -1.42189,0.93165 -2.83082,1.44834 -3.13096,1.1482 z m 1.31648,-7.7912 c 0,-1.05548 -1.91911,-1.49891 -2.48992,-0.57533 -0.34546,0.55897 0.0734,1.01631 0.9309,1.01631 0.85746,0 1.55902,-0.19844 1.55902,-0.44098 z m -14.879239,4.66662 c -0.616418,-1.15178 -1.120761,-2.89874 -1.120761,-3.88212 0,-1.61511 0.204144,-1.58382 2.111598,0.32363 1.607635,1.60764 1.875121,2.53416 1.120762,3.88213 -0.924839,1.65259 -1.065489,1.63104 -2.111599,-0.32364 z M 3.552127,559.98124 c -0.835552,-2.17742 -0.250759,-2.76221 1.611357,-1.61136 1.143595,0.70678 1.198967,1.1677 0.253822,2.11285 -0.945144,0.94514 -1.352035,0.83574 -1.865179,-0.50149 z m 12.256781,0.12591 c 0.431232,-0.6875 0.661257,-1.99763 0.511167,-2.91141 -0.150091,-0.91378 0.198641,-1.95283 0.774958,-2.30902 0.655494,-0.40511 1.04785,0.68503 1.04785,2.91141 0,2.55679 -0.439026,3.55902 -1.559017,3.55902 -0.998712,0 -1.277229,-0.44925 -0.774958,-1.25 z m -8.666025,-3.55887 c 0,-0.44488 0.660688,-1.68238 1.468197,-2.75 1.328471,-1.7564 1.471223,-1.77459 1.5,-0.19113 0.01749,0.9625 0.481803,1.75 1.031803,1.75 0.55,0 1,0.45 1,1 0,0.55 -1.125,1 -2.5,1 -1.375,0 -2.5,-0.36399 -2.5,-0.80887 z m 37,-3.69113 c 0,-0.825 0.675,-1.5 1.5,-1.5 0.825,0 1.5,0.675 1.5,1.5 0,0.825 -0.675,1.5 -1.5,1.5 -0.825,0 -1.5,-0.675 -1.5,-1.5 z M 15.63582,551.92053 c -0.271115,-0.85986 -0.703814,-2.23838 -0.961552,-3.06338 -0.257739,-0.825 -0.225596,-1.5 0.07143,-1.5 0.931035,0 3.397187,2.80906 3.397187,3.86955 0,1.76951 -1.99391,2.32133 -2.507063,0.69383 z m 25.007063,-6.56338 c -0.33992,-0.55 0.11008,-1 1,-1 0.88992,0 1.33992,0.45 1,1 -0.33992,0.55 -0.78992,1 -1,1 -0.21008,0 -0.66008,-0.45 -1,-1 z m 5.03736,-2.25 c 0.82399,-3.84615 1.02497,-4.13853 2.30223,-3.34914 0.53496,0.33062 0.73741,1.50068 0.4499,2.60014 -0.29218,1.1173 -0.0302,1.999 0.59388,1.999 0.61415,0 1.11663,0.45 1.11663,1 0,0.55 -1.16075,1 -2.57946,1 -2.38631,0 -2.52732,-0.24335 -1.88318,-3.25 z m -21.53736,0.25 c 0,-0.55 0.476558,-1 1.059017,-1 0.582459,0 0.780902,0.45 0.440983,1 -0.339919,0.55 -0.816476,1 -1.059017,1 -0.242541,0 -0.440983,-0.45 -0.440983,-1 z m 7,-2 c 0,-0.55 0.42344,-1 0.94098,-1 0.51754,0 1.2191,0.45 1.55902,1 0.33992,0.55 -0.0835,1 -0.94098,1 -0.85746,0 -1.55902,-0.45 -1.55902,-1 z m 8,-3 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -5,-1.5 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m 4.5,-10.5 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -18.6875,-1.68311 c 0.721875,-0.28887 1.584375,-0.25335 1.916667,0.0789 0.332291,0.3323 -0.258334,0.56864 -1.3125,0.52522 -1.164943,-0.048 -1.4019,-0.28494 -0.604167,-0.60416 z m 8.1875,-2.37591 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 17.63837,-1.44098 c -0.3471,-0.90455 -0.005,-1.5 0.86163,-1.5 0.8667,0 1.20873,0.59545 0.86163,1.5 -0.31659,0.825 -0.70432,1.5 -0.86163,1.5 -0.15731,0 -0.54504,-0.675 -0.86163,-1.5 z m -6.63837,-1.5 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -18.5,-1 c 0.339919,-0.55 1.068034,-1 1.618034,-1 0.55,0 0.721885,0.45 0.381966,1 -0.339919,0.55 -1.068034,1 -1.618034,1 -0.55,0 -0.721885,-0.45 -0.381966,-1 z m 4,-1 c -0.339919,-0.55 -0.141476,-1 0.440983,-1 0.582459,0 1.059017,0.45 1.059017,1 0,0.55 -0.198442,1 -0.440983,1 -0.242541,0 -0.719098,-0.45 -1.059017,-1 z m -10.5,-1 c 0,-0.55 0.476558,-1 1.059017,-1 0.582459,0 0.780902,0.45 0.440983,1 -0.339919,0.55 -0.816476,1 -1.059017,1 -0.242541,0 -0.440983,-0.45 -0.440983,-1 z M 6.22183,513.77382 c 0.04798,-1.16495 0.284941,-1.4019 0.604167,-0.60417 0.288871,0.72187 0.253344,1.58437 -0.07895,1.91667 -0.332292,0.33229 -0.568641,-0.25834 -0.52522,-1.3125 z m 11.379934,-7.4832 c -0.362533,-0.58659 -0.444683,-1.281 -0.182555,-1.54313 0.262128,-0.26213 0.743066,0.21781 1.068751,1.06653 0.676184,1.76211 0.09985,2.07206 -0.886196,0.4766 z M 4.642883,495.35715 c -0.339919,-0.55 -0.141476,-1 0.440983,-1 0.582459,0 1.059017,0.45 1.059017,1 0,0.55 -0.198442,1 -0.440983,1 -0.242541,0 -0.719098,-0.45 -1.059017,-1 z m 3.515313,-3.75 c 0.0084,-0.4125 0.433954,-1.41197 0.945627,-2.22104 1.152134,-1.82179 2.503797,-0.68243 1.693983,1.42791 -0.598079,1.55857 -2.667936,2.18051 -2.63961,0.79313 z m 19.984687,-1.25 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 83.749997,-0.68933 c -1.8038,-0.47138 -2.4659,-2.31067 -0.83179,-2.31067 1.73031,0 4.08179,1.21382 4.08179,2.10699 0,0.93336 -0.36927,0.9565 -3.25,0.20368 z m -36.537467,-8.54057 c -0.0647,-2.27397 0.20111,-2.75646 1.05046,-1.90711 1.89018,1.89018 2.99829,1.28416 2.49226,-1.36299 -0.26285,-1.375 -0.14541,-2.5 0.26098,-2.5 1.46751,0 2.66736,2.56128 2.57651,5.5 -0.0814,2.6324 -0.47265,3.01925 -3.1932,3.15711 -2.80564,0.14218 -3.10869,-0.13235 -3.18701,-2.88701 z m -54.71253,-1.7701 c -0.339919,-0.55 -0.141476,-1 0.440983,-1 0.582459,0 1.059017,0.45 1.059017,1 0,0.55 -0.198442,1 -0.440983,1 -0.242541,0 -0.719098,-0.45 -1.059017,-1 z m 80.532517,-0.93924 c -0.60659,-1.13342 -2.077047,-2.06076 -3.267697,-2.06076 -1.67363,0 -1.89482,-0.27 -0.97483,-1.18999 0.91998,-0.91998 2.00377,-0.80192 4.776547,0.52033 1.97262,0.94068 3.4115,2.23554 3.19752,2.87749 -0.68455,2.05364 -2.59403,1.97839 -3.73154,-0.14707 z m -65.899497,-0.74874 c -0.801,-0.86609 -0.99765,-1.84739 -0.47496,-2.37008 0.52269,-0.5227 1.39072,-0.0935 2.0965,1.03666 1.47828,2.36709 0.26055,3.36845 -1.62154,1.33342 z m 21.37706,-0.32833 c 0.34546,-0.55897 1.04702,-0.75742 1.55902,-0.44099 1.38704,0.85724 1.12841,1.4573 -0.62812,1.4573 -0.85746,0 -1.27636,-0.45734 -0.9309,-1.01631 z m 20.48992,-3.86566 c 0,-0.55 0.45,-1.27811 1,-1.61803 0.55,-0.33992 1,-0.16803 1,0.38197 0,0.55 -0.45,1.27811 -1,1.61803 -0.55,0.33992 -1,0.16803 -1,-0.38197 z m 35.014987,-1.09002 c -0.85486,-1.59733 -0.78205,-2.02801 0.34284,-2.02801 1.68798,0 2.95571,2.68819 1.64867,3.49598 -0.49838,0.30802 -1.39456,-0.35257 -1.99151,-1.46797 z m -12.01499,222.97199 c 0,-0.55 -0.683447,-1 -1.518777,-1 -0.83533,0 -4.73029,-1.12204 -8.65548,-2.49341 -5.4942,-1.91956 -7.45588,-2.22851 -8.5236,-1.34238 -1.04635,0.86839 -1.67116,0.86677 -2.54452,-0.007 -0.87683,-0.87642 -0.69675,-1.15721 0.74238,-1.15721 1.38112,0 1.59978,-0.30022 0.80066,-1.09934 -1.55302,-1.55302 -5.30066,-0.11978 -5.30066,2.02717 0,1.67229 5.87538,3.11538 24.25,5.95622 0.4125,0.0638 0.749997,-0.33405 0.749997,-0.88405 z m -60.999997,-4.5 c 0,-0.825 -0.6199,-1.5 -1.37756,-1.5 -0.75765,0 -1.93775,0.675 -2.62244,1.5 -1.05275,1.26848 -0.84012,1.5 1.37756,1.5 1.66439,0 2.62244,-0.54799 2.62244,-1.5 z m 15.19621,-0.82348 c 0.45952,-0.73956 0.92084,-0.53508 1.35698,0.60151 0.69786,1.81858 5.44681,2.44805 5.44681,0.72197 0,-0.55 -0.9,-1 -2,-1 -2.15638,0 -2.67907,-1.46228 -0.91287,-2.55385 0.59793,-0.36954 1.58793,-0.17109 2.2,0.44098 0.61208,0.61208 1.97797,1.11287 3.03531,1.11287 1.59546,0 1.71071,0.25513 0.67756,1.5 -1.0362,1.24854 -0.90864,1.5 0.76092,1.5 1.16481,0 2.22511,-0.83857 2.52883,-2 0.38374,-1.46743 0.0307,-2 -1.32587,-2 -1.4586,0 -1.9138,-0.89277 -2.15638,-4.22925 -0.29265,-4.02506 -0.47253,-4.24239 -3.72567,-4.5015 -4.44138,-0.35375 -5.34192,-1.26925 -1.2485,-1.26925 1.74167,0 3.16667,-0.45 3.16667,-1 0,-1.08463 -1.18259,-1.33185 -4.88576,-1.02134 -2.89301,0.24258 -4.0786,-1.4144 -4.09893,-5.72866 -0.0193,-4.10076 -1.86552,-4.24893 -2.67241,-0.21448 -0.33391,1.66953 -1.44766,3.48536 -2.475,4.03518 -1.02735,0.54982 -1.8679,1.61069 -1.8679,2.35749 0,1.88395 -2.49661,2.65958 -4.00314,1.24367 -0.96656,-0.90842 -1.13778,-0.83465 -0.76163,0.32814 0.26986,0.83422 1.43943,1.39348 2.63502,1.26002 1.18238,-0.132 3.04527,0.6555 4.13977,1.75 2.30943,2.30943 2.53805,3.13753 0.6681,2.41996 -0.75299,-0.28895 -1.81581,0.5768 -2.46958,2.01167 -0.70766,1.55314 -1.6957,2.30864 -2.57697,1.97046 -1.81026,-0.69466 -2.83394,0.89694 -1.99053,3.09484 0.54796,1.42797 1.5095,1.58001 6.25325,0.98874 3.08314,-0.38428 5.919,-1.20291 6.30192,-1.81917 z m 6.41248,-6.50066 c -0.35272,-0.57071 -0.15403,-1.33882 0.44153,-1.7069 1.4861,-0.91846 2.0122,-0.188 1.02041,1.41676 -0.53135,0.85973 -1.0467,0.96201 -1.46194,0.29014 z m 12.39131,7.32414 c 0,-1.86637 -0.94304,-1.85765 -3.44113,0.0318 -1.86166,1.40809 -1.83095,1.4682 0.75,1.4682 1.72545,0 2.69113,-0.53826 2.69113,-1.5 z m -1.80301,-4.75018 c 0.33741,-1.76504 -0.0528,-2.28024 -1.80968,-2.38962 -1.68117,-0.10466 -2.08935,0.26951 -1.63651,1.50018 0.47844,1.30026 2.07598,3.03173 2.88262,3.12431 0.0734,0.008 0.32699,-0.99727 0.56357,-2.23487 z m -44.19699,-1.36785 c 0,-0.825 -0.45,-1.22189 -1,-0.88197 -0.55,0.33992 -1,1.29303 -1,2.11803 0,0.825 0.45,1.22189 1,0.88197 0.55,-0.33992 1,-1.29303 1,-2.11803 z m -9,-2.82295 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 331.988377,-4.08073 c -1.03559,-1.93503 -1.07457,-2.7921 -0.16817,-3.6985 1.54743,-1.54743 1.53152,-13.02806 -0.0202,-14.57979 -0.93333,-0.93333 -0.93333,-1.46667 0,-2.4 0.7625,-0.7625 1.2,-4.61461 1.2,-10.56574 0,-9.18297 0.94168,-12.93677 3.64598,-14.53395 0.7447,-0.43983 1.35401,-1.50111 1.35401,-2.35841 0,-1.16329 -0.63422,-1.39954 -2.5,-0.93126 l -2.5,0.62746 V 611.8762 c 0,-13.34041 0.29815,-17.5227 1.25,-17.53436 0.96639,-0.0118 0.97526,-0.18992 0.0391,-0.78488 -0.86507,-0.54976 -1.33569,-7.04313 -1.64775,-22.73468 -0.24024,-12.08082 -0.4864,-22.64013 -0.547,-23.46513 -0.0606,-0.825 -0.0577,-8.025 0.007,-16 0.0642,-7.975 0.007,-16.94604 -0.12689,-19.93565 -0.21458,-4.7885 0.0701,-5.70547 2.39125,-7.70203 1.44862,-1.24652 2.63429,-2.51297 2.63429,-2.81435 0,-0.30139 -10.125,-0.54797 -22.5,-0.54797 -13.33932,0 -22.5,0.38184 -22.5,0.93785 0,0.51582 0.7875,0.8903 1.75,0.83219 3.29902,-0.19919 20.74886,3.49636 22.96482,4.86351 1.21815,0.75155 3.13065,1.36645 4.25,1.36645 1.18127,0 2.03518,0.65763 2.03518,1.56739 0,1.13689 0.57644,1.38443 2.09872,0.90128 1.78619,-0.56692 1.99953,-0.35358 1.43261,1.43261 -0.52993,1.66965 -0.24345,2.09872 1.40128,2.09872 1.53855,0 2.06739,0.6395 2.06739,2.5 0,1.375 -0.45,2.5 -1,2.5 -0.55,0 -1,-0.9 -1,-2 0,-2.13836 -1.57965,-2.55141 -3.97183,-1.03857 -1.25795,0.79554 -1.48888,7.5867 -1.58917,46.73469 -0.0645,25.19213 -0.18972,46.57688 -0.27817,47.52166 -0.12606,1.34638 -0.64729,1.53782 -2.41083,0.88544 -1.2375,-0.45778 -2.25,-1.30578 -2.25,-1.88444 0,-2.13078 -1.33779,-2.30521 -1.98721,-0.25909 -0.66369,2.09112 -0.68737,2.08809 -2.5913,-0.33237 -1.05682,-1.34353 -1.92149,-2.92573 -1.92149,-3.516 0,-0.59027 -1.12731,-1.35615 -2.50514,-1.70197 -1.58119,-0.39685 -3.13322,-1.97136 -4.2081,-4.26905 -0.93663,-2.00216 -2.39682,-4.20313 -3.24486,-4.89104 -1.37616,-1.11629 -1.34783,-1.36682 0.26355,-2.33072 1.43359,-0.85754 1.56074,-1.37485 0.61732,-2.51159 -0.87996,-1.06029 -1.53141,-1.14671 -2.51164,-0.33319 -0.72794,0.60413 -1.8614,0.76599 -2.51882,0.35969 -0.88009,-0.54393 -0.77568,-1.04557 0.39597,-1.90229 1.42213,-1.03989 1.33194,-1.46535 -0.84851,-4.0029 -1.34187,-1.56164 -2.43977,-2.36749 -2.43977,-1.79079 0,2.04055 -3.16464,2.34895 -3.68499,0.35911 -0.27496,-1.05142 -1.43232,-2.1555 -2.57192,-2.45351 -1.74611,-0.45662 -1.86959,-0.78572 -0.7851,-2.09246 1.09586,-1.32043 0.96224,-1.55061 -0.90011,-1.55061 -1.20285,0 -3.32295,-1.35 -4.71133,-3 -1.38839,-1.65 -3.15934,-3 -3.93544,-3 -1.34826,0 -1.58511,-0.42502 -1.81111,-3.25 -0.055,-0.6875 -1.49978,-2.6 -3.21062,-4.25 -1.71083,-1.65 -3.42866,-4.0125 -3.81738,-5.25 -0.38873,-1.2375 -1.32489,-2.25 -2.08037,-2.25 -2.23496,0 -2.93096,-2.20559 -1.11502,-3.53344 1.53062,-1.11921 1.53701,-1.28573 0.071,-1.84829 -0.88616,-0.34005 -2.47438,-0.61827 -3.5294,-0.61827 -1.05501,0 -1.91821,-0.675 -1.91821,-1.5 0,-0.825 -0.50625,-1.5 -1.125,-1.5 -0.71984,0 -0.90614,-1.09432 -0.51728,-3.03862 0.50452,-2.52256 0.22854,-3.18194 -1.625,-3.88258 -1.22799,-0.46419 -2.56507,-0.64844 -2.97127,-0.40945 -0.4062,0.23899 -0.48802,-0.21833 -0.18182,-1.01626 0.65784,-1.7143 -1.15245,-3.15329 -2.07963,-1.65309 -0.71378,1.15492 -2.5,0.39827 -2.5,-1.05902 0,-0.51754 0.675,-0.94098 1.5,-0.94098 0.825,0 1.5,-0.45 1.5,-1 0,-1.43875 -2.73668,-1.23444 -3.3487,0.25 -0.45634,1.10685 -3.58422,-1.7118 -6.42614,-5.79083 -0.39884,-0.57246 -1.61579,-2.07185 -2.70435,-3.33199 -1.85229,-2.14426 -1.86818,-2.35328 -0.24793,-3.26001 1.58312,-0.88597 1.49927,-1.25958 -0.98005,-4.36681 -1.98747,-2.49082 -3.04307,-3.1226 -3.95407,-2.36654 -2.72017,2.25754 -9.07554,-3.05023 -7.75931,-6.48027 0.30629,-0.79819 0.0762,-1.74832 -0.51128,-2.11142 -0.58749,-0.36309 -1.06817,-0.15705 -1.06817,0.45787 0,0.61492 -0.43281,0.85055 -0.96179,0.52361 -0.61572,-0.38053 -0.61572,-1.50465 0,-3.12411 0.52898,-1.39134 0.96179,-2.7254 0.96179,-2.9646 0,-0.23919 -3.2625,-0.4348 -7.25,-0.43468 l -7.25,2.3e-4 v 72.24977 c 0,39.73738 -0.31437,73.81984 -0.6986,75.7388 -0.50086,2.50145 -0.30907,3.707 0.67757,4.25915 1.04395,0.58422 1.15225,1.55091 0.4486,4.00438 -1.20122,4.1884 -1.19225,9.74745 0.0157,9.74745 0.51881,0 1.60212,-0.94061 2.40735,-2.09024 1.25183,-1.78724 2.6799,-2.13521 9.8516,-2.40053 11.04775,-0.40872 14.11032,0.18751 13.47341,2.62303 -0.37696,1.44153 0.0607,1.86774 1.91796,1.86774 1.32351,0 2.35309,-0.3375 2.28796,-0.75 -0.28755,-1.82111 0.54331,-1.88765 7.80432,-0.625 8.65737,1.50548 10.327,1.29465 4.22514,-0.53351 -2.25603,-0.67592 -7.50304,-2.77891 -11.66003,-4.67331 -4.15698,-1.8944 -7.78638,-3.21614 -8.06532,-2.9372 -0.27895,0.27894 -1.00777,-0.50267 -1.6196,-1.73691 -1.23106,-2.48343 -6.56606,-3.78037 -6.56606,-1.59621 0,0.94483 -0.39247,0.88824 -1.49647,-0.21576 -1.27565,-1.27565 -1.50296,-7.22421 -1.54046,-40.31307 -0.0341,-30.04804 0.24412,-39.16375 1.2314,-40.35335 0.70146,-0.84521 1.28217,-2.22452 1.29046,-3.06513 0.008,-0.84061 0.57757,-1.71711 1.26507,-1.9478 0.6875,-0.23068 1.25,0.0236 1.25,0.56514 0,1.03754 6.444,5.18211 8.05716,5.18211 0.51856,0 0.94284,-0.9 0.94284,-2 0,-1.1 0.45,-2 1,-2 0.55,0 1,0.64844 1,1.44098 0,0.79254 -0.45,1.7191 -1,2.05902 -1.26008,0.77877 -1.31561,3.5 -0.0714,3.5 0.51072,0 1.58214,-0.65357 2.38095,-1.45238 2.27147,-2.27147 2.95054,-0.45335 0.7182,1.92288 l -1.99058,2.11887 3.10374,3.76537 c 1.71964,2.08623 3.6954,3.53833 4.4305,3.25624 0.76538,-0.2937 1.12788,0.009 0.85672,0.71578 -0.54714,1.42584 4.81461,7.80606 16.07397,19.12724 8.94096,8.99005 11.19996,10.546 15.31117,10.546 2.58715,0 2.80112,0.26745 2.40007,3 -0.42467,2.89346 0.97689,4.1193 2.28669,2 1.1306,-1.82934 2.49249,-1.03222 2.13565,1.25 -0.25826,1.6517 -0.92137,2.16681 -2.49373,1.93714 -3.01235,-0.44 -2.662,1.05223 0.85808,3.65474 1.73285,1.28115 3.01343,3.15571 3.0318,4.43806 0.0401,2.80093 2.07782,5.52711 3.7182,4.9745 0.6875,-0.23161 1.25,0.0664 1.25,0.66223 0,0.59583 -0.7125,1.08333 -1.58333,1.08333 -0.87084,0 -1.38419,0.5625 -1.14079,1.25 0.2434,0.6875 1.6309,1.16528 3.08333,1.06174 1.45244,-0.10355 2.64079,0.23395 2.64079,0.75 0,0.51604 0.85186,0.93826 1.89301,0.93826 2.07752,0 3.58916,2.58397 2.06332,3.52699 -1.39091,0.85963 -1.17207,2.51616 0.29367,2.22301 0.6875,-0.1375 1.25574,0.50574 1.26275,1.42942 0.007,0.92368 0.34452,2.01118 0.75,2.41667 0.40549,0.40548 0.73725,0.21224 0.73725,-0.42942 0,-1.5734 1.63815,-1.49648 1.77473,0.0833 0.38519,4.45547 1.80308,6.78706 4.03429,6.634 1.46626,-0.10059 1.45083,-0.17824 -0.11611,-0.58432 -0.99389,-0.25757 -1.66889,-1.18058 -1.5,-2.05113 0.57222,-2.94936 2.77206,-2.42224 4.89296,1.17242 1.16143,1.96847 2.51723,3.57903 3.01291,3.57903 0.49567,0 0.90122,0.45857 0.90122,1.01905 0,0.58765 -1.05835,0.75342 -2.5,0.39159 -3.18921,-0.80044 -3.16666,0.28408 0.0763,3.66898 2.28709,2.38721 2.9002,2.5668 5.46184,1.59989 3.85392,-1.45469 5.04923,-0.0126 1.94694,2.34894 -2.47663,1.88525 -2.47721,1.88965 -0.16935,1.29779 2.83806,-0.72783 7.17954,1.43931 7.1974,3.59274 0.0125,1.503 6.02453,6.25398 6.90506,5.45666 0.23,-0.20826 -0.18841,-1.51207 -0.92979,-2.89735 z M 234.64288,642.35715 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m 71.5,-7.05902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 1.15,-8.89098 c 0.22,-0.66 0.72625,-1.16625 1.125,-1.125 1.1957,0.12369 0.96414,1.49529 -0.325,1.925 -0.66,0.22 -1.02,-0.14 -0.8,-0.8 z m -69.07105,-6.63333 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 51.42105,-11.41667 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 10,-9 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -1.90344,-5.84377 c -0.34605,-0.55992 -0.1419,-1.31919 0.45366,-1.68727 1.53748,-0.95021 2.52947,0.35135 1.24598,1.63484 -0.71818,0.71818 -1.27752,0.73543 -1.69964,0.0524 z m -11.51761,-4.73956 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 17.0786,-3.39457 c -0.69447,-1.99217 -0.70483,-3.18386 -0.0313,-3.60013 1.36167,-0.84156 1.74446,-0.31839 2.48832,3.40095 0.81502,4.07508 -1.05309,4.22653 -2.45703,0.19918 z m -32.53385,1.17805 c -0.27188,-0.43992 0.37656,-1.34373 1.44098,-2.00847 2.09874,-1.31069 2.24879,-1.17214 1.32833,1.22653 -0.65349,1.70296 -1.97029,2.07478 -2.76931,0.78194 z m -1.6237,-6.14113 c 0,-1.13246 0.45,-2.05902 1,-2.05902 0.55,0 1,0.64844 1,1.44098 0,0.79254 -0.45,1.7191 -1,2.05902 -0.55,0.33992 -1,-0.30852 -1,-1.44098 z m -6.40298,-3.79533 c -1.47474,-1.47475 -0.31831,-2.30757 2.90298,-2.09063 4.21087,0.28359 4.71606,2.488 0.59702,2.60512 -1.59663,0.0454 -3.17163,-0.18612 -3.5,-0.51449 z m 21.40298,-0.1963 c 0,-0.51294 0.91881,-1.22423 2.04179,-1.58065 1.51216,-0.47995 1.87346,-1.17839 1.39287,-2.69262 -0.43287,-1.36384 -0.28031,-1.81676 0.45821,-1.36033 1.66211,1.02724 1.33325,3.67407 -0.64287,5.17416 -2.07786,1.57732 -3.25,1.74302 -3.25,0.45944 z m -9,-1.06739 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -7.05471,-2.25 c -0.10741,-0.4125 -0.25843,-1.0875 -0.3356,-1.5 -0.0772,-0.4125 -0.48353,-1.28992 -0.90301,-1.94983 -0.46333,-0.72889 0.0333,-1.62583 1.26531,-2.28518 1.6902,-0.90457 2.0163,-0.788 1.95772,0.69983 -0.0812,2.06212 -1.6934,6.15287 -1.98442,5.03518 z m 5.11901,-1.70486 c -1.00851,-0.62709 -1.13686,-1.28732 -0.43136,-2.21892 0.55238,-0.72942 1.08612,-2.62674 1.18608,-4.21626 0.24153,-3.84053 2.75905,-5.54875 7.15543,-4.85521 3.23906,0.51097 3.84993,0.91576 4.35055,2.88289 0.27827,1.09343 -5.69188,1.14295 -7.09917,0.0589 -1.76179,-1.35715 -2.259,-0.59377 -3.04475,4.67465 -0.54111,3.62816 -0.97614,4.38321 -2.11678,3.67397 z m 7.1857,-1.29189 c -3.74479,-1.20129 -4.30314,-2.75325 -0.99055,-2.75325 1.2427,0 2.82152,0.9 3.50848,2 0.68696,1.1 1.1327,1.95406 0.99054,1.89791 -0.14216,-0.0562 -1.72097,-0.57124 -3.50847,-1.14466 z m -20.25,-4.19881 c 0,-2.67835 -0.34616,-3.35884 -1.4861,-2.9214 -2.19324,0.84163 -3.86745,-4.09406 -2.26118,-6.66611 1.48624,-2.37984 2.33491,-2.48393 3.14029,-0.38514 0.85768,2.23506 0.79004,2.41821 -0.89301,2.41821 -0.825,0 -1.5,0.24658 -1.5,0.54797 0,0.99275 5.47355,5.38816 6.75,5.42043 2.02768,0.0513 1.43585,1.67981 -1.25,3.43964 l -2.5,1.63807 z m 6.43097,-5.1564 c -1.32934,-0.55219 1.58394,-10.38005 3.06903,-10.35324 1.76416,0.0318 4.40274,4.61113 3.85775,6.69518 -0.40859,1.56244 -4.53787,4.61556 -5.6548,4.18107 -0.11162,-0.0434 -0.68401,-0.27877 -1.27198,-0.52301 z m 4.56903,-5.95706 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m -8.5,1.55902 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 15.5,-1 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -23.54112,-7.06653 c -1.17263,-1.89735 0.53762,-2.36554 2.27922,-0.62395 1.55894,1.55895 1.56168,1.69048 0.0352,1.69048 -0.9104,0 -1.95188,-0.47994 -2.31442,-1.06653 z m -19.45888,-2.93347 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 29,-4.05902 c 0,-1.13246 0.45,-1.7809 1,-1.44098 0.55,0.33992 1,1.26648 1,2.05902 0,0.79254 -0.45,1.44098 -1,1.44098 -0.55,0 -1,-0.92656 -1,-2.05902 z m -29.92105,-3.52431 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 18.92105,-0.83488 c 0,-0.78002 -0.27314,-2.13002 -0.60699,-3 -0.87576,-2.28221 3.16614,-2.07041 5.70961,0.29919 2.01212,1.87457 2.00806,1.88479 -1.19104,3 -4.00847,1.39736 -3.91158,1.40477 -3.91158,-0.29919 z m -3.39845,-6.41747 c -0.28406,-0.45963 -0.1243,-2.14713 0.35503,-3.75 0.47934,-1.60288 0.91634,-2.23932 0.97112,-1.41432 0.0548,0.825 0.37095,2.5125 0.70259,3.75 0.57858,2.15897 -0.92198,3.20508 -2.02874,1.41432 z m -5.65757,-10.269 c -1.2272,-2.29304 0.0106,-3.00194 3.57654,-2.04826 3.94292,1.0545 4.18931,2.82176 0.46954,3.36771 -2.25936,0.3316 -3.35341,-0.0252 -4.04608,-1.31945 z m 7.05602,-2.22865 c 0,-2.07545 1.18357,-2.75921 2.65799,-1.53555 1.93838,1.60871 1.64935,2.86888 -0.65799,2.86888 -1.1,0 -2,-0.6 -2,-1.33333 z m -12.25,-3.46469 c -2.15398,-0.42911 -2.23298,-1.55625 -0.22583,-3.22204 1.83008,-1.51883 2.75818,-0.831 2.30663,1.7095 -0.20608,1.15948 -0.99058,1.72974 -2.0808,1.51254 z M 25.048295,677.60715 c -0.736712,-0.9625 -0.957645,-1.42833 -0.490961,-1.03518 1.157171,0.97483 4.790329,-1.07447 4.044459,-2.28131 -0.32841,-0.53137 -1.016012,-0.70724 -1.528008,-0.3908 -0.511996,0.31643 -0.930902,-0.12623 -0.930902,-0.98369 0,-0.85746 0.54,-1.55902 1.2,-1.55902 0.89377,0 0.91093,-0.28907 0.06722,-1.13278 -1.83315,-1.83315 -4.584788,-0.18962 -3.922522,2.3429 0.314382,1.20219 0.101696,2.75201 -0.472636,3.44404 -1.280474,1.54287 -0.305445,3.34584 1.8094,3.34584 1.332589,0 1.365655,-0.25839 0.22395,-1.75 z m -4.611386,-1 c -0.353762,-0.9625 -1.239639,-2.10986 -1.968615,-2.54969 -0.728976,-0.43983 -1.325411,-1.72547 -1.325411,-2.85699 0,-1.48911 -0.449279,-1.88489 -1.626748,-1.43306 -2.702764,1.03715 -4.412101,-1.15625 -3.302498,-4.23772 l 0.962352,-2.67254 -1.994317,2.5 c -2.21998,2.78288 -2.536062,4 -1.038789,4 0.55,0 1,0.95248 1,2.11663 0,1.51808 0.494874,1.99125 1.75,1.67325 1.043531,-0.26439 2.759241,0.67142 4.25,2.31811 2.889603,3.19184 4.216514,3.65187 3.294026,1.14201 z m 15.774874,-2.5 c 0.0379,-0.6875 0.23007,-2.46759 0.42706,-3.95576 0.26234,-1.98179 -0.15505,-2.86865 -1.55995,-3.31455 -1.05496,-0.33483 -2.37948,-0.32364 -2.94337,0.0249 -1.54989,0.95789 -0.15578,2.49528 1.6384,1.80679 1.36537,-0.52394 1.39464,-0.32532 0.22743,1.54367 -0.73676,1.17975 -1.90632,2.14499 -2.59902,2.14499 -1.3567,0 -1.67464,1.25148 -0.59278,2.33333 1.16631,1.16631 5.33057,0.71666 5.40223,-0.58333 z m -6.4565,-9.10413 c 0.37325,-1.17601 1.3569,-2.63415 2.18589,-3.24033 0.82899,-0.60617 1.19005,-1.6154 0.80234,-2.24272 -1.17829,-1.90651 -5.494069,1.52867 -4.878397,3.883 0.383907,1.46805 0.0027,1.95418 -1.532277,1.95418 -1.123819,0 -2.188804,-0.69014 -2.366632,-1.53365 -0.256527,-1.2168 -0.586368,-1.10862 -1.596555,0.52363 -1.11999,1.80967 -1.004122,2.15683 0.962704,2.88441 3.124037,1.15565 5.624147,0.28821 6.422927,-2.22852 z m -13.6124,1.35413 c 0,-0.55 -0.476558,-1 -1.059017,-1 -0.582459,0 -0.780902,0.45 -0.440983,1 0.339919,0.55 0.816476,1 1.059017,1 0.242541,0 0.440983,-0.45 0.440983,-1 z m 20.12878,-5.65362 c -0.94632,-1.62014 -1.055,-1.51147 -0.8869,0.8869 0.11143,1.58981 0.5626,2.36224 1.07847,1.84637 0.51587,-0.51587 0.43572,-1.65933 -0.19157,-2.73327 z m -23.12878,-1.34638 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 7,-2 c 0,-0.55 -0.198442,-1 -0.440983,-1 -0.242541,0 -0.719098,0.45 -1.059017,1 -0.339919,0.55 -0.141476,1 0.440983,1 0.582459,0 1.059017,-0.45 1.059017,-1 z m 83.999997,-4.5 c 2.91354,-2.14954 4.45275,-2.5 10.97999,-2.5 7.19831,0 7.59277,-0.11652 7.61716,-2.25 0.0311,-2.72457 -1.57802,-4.01077 -3.26562,-2.61018 -1.96902,1.63414 -5.33153,0.027 -5.33153,-2.54828 0,-2.1287 1.82285,-8.83329 3.50248,-12.88243 0.40858,-0.985 0.35018,-1.66 -0.1298,-1.5 -1.20016,0.40005 -1.30438,-1.25854 -0.25288,-4.02421 0.48411,-1.2733 0.8802,-2.65128 0.8802,-3.06217 0,-1.97395 4.20417,-9.12273 5.36505,-9.12273 1.47891,0 4.06564,-7.49411 3.11671,-9.02952 -0.91077,-1.47365 0.46094,-4.97048 1.94977,-4.97048 1.33761,0 5.18746,-8.71434 4.25971,-9.64209 -0.28632,-0.28632 0.54272,-2.08743 1.8423,-4.00247 1.29958,-1.91504 2.66899,-5.59094 3.04313,-8.16867 1.05959,-7.30031 1.31129,-8.41349 2.0513,-9.07208 0.37988,-0.33808 0.40811,0.17281 0.0627,1.13531 -0.34537,0.9625 -0.24455,1.75 0.22404,1.75 1.37253,0 2.1181,-4.36166 0.87672,-5.12888 -0.79603,-0.49197 -0.56936,-1.54428 0.76161,-3.53578 1.04222,-1.55944 1.90663,-3.28475 1.92093,-3.83402 0.0143,-0.54928 0.88725,-0.99928 1.9399,-1 1.05265,-7.3e-4 2.10265,-0.56382 2.33334,-1.25132 0.24542,-0.73145 -0.43594,-1.25 -1.64248,-1.25 -1.83644,0 -1.93734,-0.27336 -0.92282,-2.5 0.67823,-1.48855 1.97222,-2.5 3.19834,-2.5 1.13259,0 3.35844,-1.4625 4.94634,-3.25 l 2.88708,-3.25 -0.59793,3.33036 c -0.42569,2.37104 -0.24837,3.21384 0.61557,2.92586 1.73293,-0.57765 2.55876,-4.75837 1.61548,-8.17838 -0.51571,-1.86978 -0.39287,-3.4199 0.3411,-4.30428 0.93476,-1.12632 1.38594,-0.814 2.43774,1.68749 0.70987,1.68829 1.9313,3.31545 2.71429,3.61591 1.90702,0.73179 1.0209,7.43167 -1.20135,9.08334 -1.39992,1.04048 -1.44643,1.53229 -0.31932,3.37617 2.2023,3.60284 0.76828,3.14958 -3.33721,-1.05483 -2.13835,-2.1899 -4.267,-3.98164 -4.7303,-3.98164 -0.4633,0 -0.54689,1.575 -0.18576,3.5 0.48794,2.60098 0.30694,3.50817 -0.70469,3.5318 -0.95713,0.0224 -0.83657,0.42998 0.40608,1.37295 1.05187,0.79819 1.51461,1.99983 1.14301,2.96819 -0.3434,0.89489 -0.1787,1.62706 0.366,1.62706 0.94056,0 2.5623,3.65136 2.33177,5.25 -0.16429,1.13933 0.71426,0.91247 3.47726,-0.89792 1.58383,-1.03776 2.31059,-2.2411 1.96285,-3.25 -0.30371,-0.88114 0.35994,-0.52583 1.47478,0.78958 1.11483,1.31542 2.31181,2.10682 2.65995,1.75868 0.34815,-0.34814 1.23116,-0.13655 1.96227,0.47021 0.7311,0.60676 2.01,0.84198 2.84201,0.52271 1.93963,-0.74431 1.9885,2.86965 0.0853,6.30636 -0.74612,1.34729 -1.14463,3.00195 -0.88558,3.67703 0.30839,0.80363 -0.20642,1.05027 -1.49101,0.71434 -1.30425,-0.34107 -2.50411,0.26087 -3.57899,1.79547 -0.88933,1.26971 -1.61697,1.92832 -1.61697,1.4636 0,-0.46472 -0.65529,-0.30111 -1.4562,0.36359 -0.8009,0.66469 -1.98428,0.88215 -2.62973,0.48324 -0.73316,-0.45312 -1.0021,-0.20398 -0.71668,0.66391 0.25126,0.76406 1.63497,1.52921 3.07489,1.70033 1.97956,0.23525 2.46629,0.723 1.99582,2 -0.34222,0.92888 -1.0407,1.97019 -1.55217,2.31402 -0.51148,0.34384 -0.62658,1.581 -0.25579,2.74925 0.55296,1.74222 1.02165,1.93812 2.60701,1.08966 1.06307,-0.56893 1.93285,-0.8304 1.93285,-0.58103 0,0.24937 0.27314,1.1652 0.60699,2.03518 0.39831,1.03799 0.0545,1.58179 -1,1.58179 -2.16822,0 -2.07257,0.66352 1.39301,9.6635 1.65,4.28498 3,7.90469 3,8.0438 0,0.13911 -9.55662,0.37437 -21.23693,0.52281 -19.87463,0.25258 -21.26012,0.3905 -21.5984,2.15006 -0.1988,1.0341 0.23271,2.24739 0.95891,2.69621 1.03749,0.6412 0.95696,0.95548 -0.37591,1.46695 -0.98278,0.37713 -2.36806,-0.0209 -3.2934,-0.9462 -3.01486,-3.01486 -5.83889,-0.7846 -2.99108,2.36219 1.43513,1.58581 3.40578,1.84778 14.59796,1.9406 8.06153,0.0669 12.93883,-0.27101 12.93883,-0.89631 0,-0.55198 0.675,-1.00361 1.5,-1.00361 0.825,0 1.5,0.45 1.5,1 0,0.55 2.25,1 5,1 3.77778,0 5,-0.36667 5,-1.5 0,-1.63949 1.55444,-2.02995 2.43153,-0.61078 0.89646,1.4505 5.81523,2.32955 6.53336,1.1676 0.43285,-0.70038 2.07403,-0.37337 4.84485,0.96535 4.65972,2.25133 4.92576,2.71954 2.53748,4.46588 -1.81706,1.32867 -1.06372,3.51195 1.2118,3.51195 1.76659,0 1.92221,2.665 0.19098,3.27057 -0.91622,0.32048 -0.78271,0.96456 0.5,2.41207 0.9625,1.08616 1.75,2.69627 1.75,3.57801 0,2.61732 -9.008,8.07537 -19.48831,11.80818 -6.35937,2.26505 -3.13349,2.4261 5.98868,0.299 3.8498,-0.8977 13.26304,-1.9102 20.91831,-2.25 9.78849,-0.4345 14.04172,-0.98875 14.33333,-1.86783 0.58536,-1.76461 3.24799,-1.55966 3.24799,0.25 0,1.20204 1.51296,1.5 7.61663,1.5 6.78686,0 7.55956,-0.19065 7.09271,-1.75 -0.56719,-1.89454 -2.41869,-6.45407 -9.87792,-24.32554 -2.65728,-6.36654 -4.83142,-12.00889 -4.83142,-12.53855 0,-0.52967 -0.90909,-2.74568 -2.02021,-4.92447 -1.60525,-3.14774 -2.50347,-3.89881 -4.37292,-3.65653 -1.82734,0.23683 -2.45908,-0.25144 -2.82899,-2.18652 -0.26521,-1.38737 0.13684,-3.10454 0.90727,-3.87497 0.99995,-0.99995 1.12453,-2.05723 0.44935,-3.81348 -0.81444,-2.11847 -1.02482,-2.20563 -1.64133,-0.67994 -0.38893,0.9625 -1.36433,1.75 -2.16755,1.75 -1.00532,0 -1.26259,0.62322 -0.82562,2 0.36414,1.14731 0.1797,2 -0.43261,2 -0.58707,0 -1.06739,-0.9 -1.06739,-2 0,-1.28986 -0.66667,-2 -1.87756,-2 -2.59304,0 -3.86404,-1.84794 -4.27384,-6.21383 -0.35797,-3.8136 1.38294,-5.87937 1.92664,-2.28617 1.03036,6.80935 2.62905,8.42436 6.36177,6.42668 1.5817,-0.84651 1.74975,-1.3582 0.81568,-2.48368 -0.64704,-0.77964 -0.89089,-2.16166 -0.54189,-3.07114 0.97612,-2.54373 -0.32858,-5.37186 -2.47819,-5.37186 -1.87159,0 -2.50974,-2.14759 -2.12207,-7.14148 0.0701,-0.90281 -0.87112,-1.96301 -2.09156,-2.356 -1.89101,-0.60891 -1.96032,-0.78359 -0.46898,-1.18184 2.74504,-0.73305 2.06441,-2.07753 -1.75,-3.45684 -1.925,-0.69609 -3.5,-1.8717 -3.5,-2.61248 0,-0.74077 -1.19966,-2.45867 -2.66592,-3.81755 -2.58103,-2.39202 -2.60511,-2.51514 -0.75633,-3.867 1.23552,-0.90344 2.13243,-1.03574 2.54092,-0.3748 0.42749,0.69169 0.83886,0.68572 1.27409,-0.0185 0.77357,-1.25166 -3.51639,-12.17015 -4.78252,-12.17213 -0.48936,-7.6e-4 -1.43526,-0.74741 -2.10198,-1.65921 -1.07863,-1.47511 -1.28574,-1.3649 -1.87929,1 -0.49787,1.98366 -1.29638,2.65783 -3.14802,2.65783 -1.36452,0 -2.48095,-0.45 -2.48095,-1 0,-0.55 0.62686,-1 1.39301,-1 1.50843,0 2.84457,-2.42909 1.87142,-3.40223 -0.32877,-0.32878 -1.66749,-0.59777 -2.97493,-0.59777 -1.70925,0 -2.29461,-0.49171 -2.08334,-1.75 0.38299,-2.28094 1.89445,-3.32841 3.90266,-2.70459 2.71433,0.84315 4.05253,-1.78412 2.77515,-5.44842 -0.61337,-1.7595 -1.34735,-2.96694 -1.63107,-2.68322 -0.28373,0.28372 -1.3567,0.0659 -2.38438,-0.48414 -2.21314,-1.18443 -2.59155,-4.42106 -0.41945,-3.58755 1.60041,0.61414 1.39435,-0.46533 -1.20324,-6.30321 -1.3946,-3.13427 -1.38888,-3.72449 0.0606,-6.25 l 1.60055,-2.78887 -22.20349,0.14983 c -12.21192,0.0824 -20.85349,0.32307 -19.20349,0.5348 6.3437,0.81404 16.89348,3.46749 19.83589,4.98906 2.13655,1.10486 3.19125,1.24488 3.45338,0.45849 0.4658,-1.39738 3.21073,-1.51038 3.21073,-0.13218 0,0.55 -0.45,1 -1,1 -0.55,0 -1,0.73789 -1,1.63976 0,0.90186 -0.64482,2.13936 -1.43293,2.75 -0.78811,0.61063 -4.41494,8.98524 -8.05962,18.61024 -6.19488,16.35966 -11.68864,30.6066 -23.52219,61 -2.67676,6.875 -6.20437,16.1 -7.83915,20.5 -1.63478,4.4 -5.26142,13.83644 -8.05921,20.96987 -4.75572,12.12548 -5.546977,14.53013 -4.78118,14.53013 0.16815,0 1.83057,-1.125 3.69428,-2.5 z m 81.1875,-4.5625 c 0.24063,-0.72188 1.02812,-1.50938 1.75,-1.75 0.75,-0.25 1.125,0.125 0.875,0.875 -0.24063,0.72187 -1.02813,1.50937 -1.75,1.75 -0.75,0.25 -1.125,-0.125 -0.875,-0.875 z m 4.8125,-5.9375 c 0,-0.55 0.675,-1 1.5,-1 0.825,0 1.5,0.45 1.5,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,-0.45 -1.5,-1 z m 6.75,-5.39205 c -2.50911,-1.90468 -2.17203,-2.60795 1.25,-2.60795 2.33333,0 3,0.44444 3,2 0,2.29181 -1.70963,2.53637 -4.25,0.60795 z m -83.75,-2.54893 c 0,-0.51754 0.44485,-1.21592 0.98855,-1.55194 0.56686,-0.35034 0.7345,0.0511 0.39301,0.94098 -0.66479,1.73242 -1.38156,2.04939 -1.38156,0.61096 z m 73,-0.40538 c 0,-0.1905 0.72694,-1.80356 1.61543,-3.58457 1.05235,-2.10949 1.95621,-2.89743 2.5931,-2.26054 1.0485,1.0485 -1.7122,6.19147 -3.32354,6.19147 -0.48674,0 -0.88499,-0.15586 -0.88499,-0.34636 z m 7.54271,-3.58454 c -1.00667,-1.62881 0.90682,-1.94478 2.90945,-0.48042 1.88358,1.37731 1.87871,1.41132 -0.20201,1.41132 -1.17267,0 -2.39101,-0.41891 -2.70744,-0.9309 z m -11.04271,-3.0691 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -44.86163,-7.5 c 0.31659,-0.825 1.18834,-1.5 1.93723,-1.5 0.7995,0 1.124,0.61926 0.78603,1.5 -0.31659,0.825 -1.18834,1.5 -1.93723,1.5 -0.7995,0 -1.124,-0.61926 -0.78603,-1.5 z m 61.86163,0.5 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -32.5,-1 c -1.21296,-0.78387 -1.06944,-0.9723 0.75,-0.98469 1.2375,-0.008 2.25,0.43469 2.25,0.98469 0,1.25292 -1.06124,1.25292 -3,0 z m 37,-0.89301 c 0,-1.2501 2.82293,-2.20251 3.46223,-1.1681 0.28946,0.46835 -0.18294,1.12369 -1.04976,1.45633 -2.09626,0.80441 -2.41247,0.76663 -2.41247,-0.28823 z m -1.98469,-3.85699 c -0.008,-1.2375 0.43469,-2.25 0.98469,-2.25 1.25292,0 1.25292,1.06124 0,3 -0.78387,1.21296 -0.9723,1.06944 -0.98469,-0.75 z m -7.51531,-4.25 c -0.39915,-0.64585 -0.27574,-1.62426 0.27426,-2.17426 0.66667,-0.66667 1.24192,-0.60858 1.72574,0.17426 0.39915,0.64585 0.27574,1.62426 -0.27426,2.17426 -0.66667,0.66667 -1.24192,0.60858 -1.72574,-0.17426 z m -7.5,-9 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -11.5,-7 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -5.5,-9.64301 c 0,-0.62866 -0.75025,-1.43091 -1.66722,-1.78278 -1.19364,-0.45805 -1.36049,-0.9465 -0.58739,-1.7196 0.7731,-0.7731 1.8027,-0.55075 3.62472,0.78278 3.48425,2.55013 3.82492,3.86261 1.00257,3.86261 -1.30497,0 -2.37268,-0.51436 -2.37268,-1.14301 z m 8,-0.01 c -2.39765,-1.26356 -2.41031,-1.3181 -0.30902,-1.33224 1.20504,-0.008 2.4876,0.4652 2.85014,1.05179 1.0121,1.63762 0.20349,1.72686 -2.54112,0.28045 z m 5.01531,-0.59698 c 0.008,-0.6875 0.40217,-1.86054 0.875,-2.60676 1.1105,-1.75259 2.33882,0.0961 1.50595,2.26652 -0.72388,1.88639 -2.40283,2.12632 -2.38095,0.34024 z m 0.98469,-14.30903 c 0,-0.85746 0.45,-1.2809 1,-0.94098 0.55,0.33992 1,1.04148 1,1.55902 0,0.51754 -0.45,0.94098 -1,0.94098 -0.55,0 -1,-0.70156 -1,-1.55902 z m -7.33333,-0.10765 c -0.36667,-0.36666 -0.66667,-1.5028 -0.66667,-2.52475 0,-1.08247 -1.08894,-2.2721 -2.60869,-2.8499 -2.04716,-0.77833 -2.36633,-1.28386 -1.48275,-2.3485 0.61927,-0.74618 0.84504,-2.08872 0.5017,-2.98343 -0.4169,-1.08644 -0.0905,-1.62675 0.98275,-1.62675 0.88385,0 1.67553,0.7875 1.7593,1.75 0.0838,0.9625 0.19928,2.35755 0.25667,3.10011 0.0574,0.74255 1.45135,2.43625 3.09769,3.76377 2.49969,2.01562 2.74596,2.57379 1.49333,3.38458 -1.78839,1.15758 -2.44469,1.22351 -3.33333,0.33487 z m -10.91598,-8.8572 c -0.60634,-3.17183 0.80326,-4.17809 2.19914,-1.56988 1.43311,2.6778 1.31785,4.09375 -0.33325,4.09375 -0.76089,0 -1.60054,-1.13574 -1.86589,-2.52387 z m -9.602,0.63693 c -0.96324,-0.6104 -0.49045,-0.98267 1.64631,-1.29628 2.18385,-0.32052 2.861,-0.0839 2.49433,0.87163 -0.57637,1.50198 -2.18089,1.66653 -4.14064,0.42465 z m 0.35131,-6.11306 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 7.5,-2.05902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 3.33583,-1.5082 c -0.33077,-0.86197 -0.0354,-2.09947 0.65639,-2.75 0.96979,-0.91196 1.36272,-0.89657 1.71611,0.0672 0.25209,0.6875 1.54584,1.25 2.875,1.25 1.48148,0 2.41667,0.58046 2.41667,1.5 0,2.12311 -6.8467,2.06307 -7.66417,-0.0672 z m -20.33583,-5.43278 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 18.74846,-6.53552 c -0.26413,-1.38172 -0.14205,-2.72123 0.2713,-2.97669 0.41335,-0.25547 0.96765,0.66602 1.23178,2.04773 0.26413,1.38172 0.14205,2.72123 -0.2713,2.97669 -0.41335,0.25547 -0.96765,-0.66602 -1.23178,-2.04773 z m -14.24846,-0.46448 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 0.5,-6 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 9.72864,-0.13198 c -2.01524,-1.12779 -2.2811,-3.47194 -0.47864,-4.22043 0.85798,-0.35629 0.51053,-1.16572 -1.10789,-2.58099 -1.35106,-1.18147 -2.11448,-2.69622 -1.78785,-3.5474 0.77146,-2.01039 3.64574,-0.7893 3.64574,1.54883 0,2.27 3.75433,5.93197 6.08157,5.93197 1.82841,0 3.36283,2.60731 2.02208,3.43594 -0.44495,0.275 -1.6628,-0.14628 -2.70633,-0.93617 -2.16295,-1.63723 -3.79554,-1.95312 -2.94003,-0.56887 0.88793,1.4367 -0.80005,2.01641 -2.72865,0.93712 z m -6.07072,-5.31709 c -0.37166,-0.96852 -0.0755,-1.26467 0.89301,-0.89301 1.58173,0.60696 1.99368,2.34208 0.55606,2.34208 -0.49116,0 -1.14324,-0.65208 -1.44907,-1.44907 z m 8.34208,-13.55093 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -26.46172,138.50116 c -2.17894,-0.77608 -4.15678,-1.216 -4.39518,-0.97759 -0.62423,0.62423 3.99599,2.34614 6.3569,2.36915 1.1,0.0107 0.21723,-0.61548 -1.96172,-1.39156 z m -81.538277,-2.06018 c 0,-0.85746 -0.45734,-1.27636 -1.01631,-0.9309 -0.55897,0.34546 -0.75742,1.04702 -0.44098,1.55902 0.85723,1.38704 1.45729,1.12841 1.45729,-0.62812 z m 72.726457,-1.04785 c -0.35211,-0.35211 -1.4345,-0.33541 -2.40531,0.0371 -1.49711,0.57449 -1.54289,0.81466 -0.30148,1.58189 1.53301,0.94746 3.8734,-0.45241 2.70679,-1.61902 z m 167.87771,-22.1223 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69479 0.14921,-1.53513 -0.18308,-1.86742 z m -1.07313,-8.22061 c -0.36808,-0.59556 -1.13619,-0.79425 -1.7069,-0.44153 -0.67187,0.41524 -0.56959,0.93059 0.29014,1.46194 1.60476,0.99179 2.33522,0.46569 1.41676,-1.02041 z M 40.142883,614.79813 c 0,-0.79254 -0.675,-1.44098 -1.5,-1.44098 -1.50623,0 -2.05568,2.11099 -0.86052,3.30615 0.93324,0.93324 2.36052,-0.19452 2.36052,-1.86517 z m 203.999997,2.11804 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z M 51.729203,609.5149 c -0.95094,-0.95094 -1.58632,-1.12359 -1.58632,-0.43105 0,0.6354 0.45734,1.43792 1.01631,1.78338 0.55897,0.34546 0.75742,1.04702 0.44098,1.55902 -0.31643,0.51199 -0.21182,1.4934 0.23246,2.1809 0.5545,0.85806 0.91362,0.50439 1.14534,-1.12797 0.18565,-1.30788 -0.37629,-3.09181 -1.24877,-3.96428 z m 114.413677,0.48767 c 0,-0.19502 -3.56502,-9.08252 -7.92226,-19.75 -7.06393,-17.29406 -8.02919,-19.12456 -8.90929,-16.89542 -10.16694,25.75113 -14.16845,36.05402 -14.16845,36.48022 0,0.28588 6.975,0.51978 15.5,0.51978 8.525,0 15.5,-0.15956 15.5,-0.35458 z m -25,-4.59791 c 0,-1.62317 8.08725,-21.9834 8.94175,-22.51151 0.44389,-0.27434 1.71446,1.68465 2.8235,4.3533 1.79909,4.32908 1.83957,4.83908 0.37559,4.7314 -1.80163,-0.13253 -6.28696,8.19925 -6.50995,12.09264 -0.10278,1.79441 -0.72155,2.2854 -2.88089,2.28595 -1.5125,3.9e-4 -2.75,-0.42791 -2.75,-0.95178 z m 16.7977,-1.76956 c 0.46715,-2.44378 0.59913,-2.52045 1.29104,-0.75 1.1337,2.90091 1.05966,3.47205 -0.45007,3.47205 -0.94247,0 -1.20122,-0.83753 -0.84097,-2.72205 z m 173.38563,-0.49462 c -0.71756,-0.71756 -1.18333,-0.7766 -1.18333,-0.15 0,1.33478 1.18261,2.51739 1.85,1.85 0.28417,-0.28416 -0.0158,-1.04916 -0.66667,-1.7 z m 24.81667,0.21667 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z M 46.786413,588.53946 c -0.0902,-3.4382 -0.33169,-3.77342 -2.42982,-3.37233 -1.68743,0.32257 -2.1446,0.89261 -1.65826,2.06768 0.3693,0.89229 0.89789,2.40984 1.17463,3.37234 0.96482,3.35552 3.01745,1.89876 2.91345,-2.06769 z m 116.356467,-1.62329 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 3,-10.05275 c 0,-1.00665 -0.73368,-1.35696 -2.25,-1.07431 -3.38792,0.63154 -3.39849,0.6448 -1.25,1.56804 2.91739,1.25364 3.5,1.17146 3.5,-0.49373 z m 85,0.55275 c 0,-1.17986 -1.95035,-2.442 -2.66667,-1.72569 -0.71631,0.71632 0.54583,2.66667 1.72569,2.66667 0.51754,0 0.94098,-0.42344 0.94098,-0.94098 z m -80,-5.61804 c 0,-1.65007 -1.58044,-1.92885 -2.5,-0.44098 -0.81551,1.31952 0.38021,3.19207 1.5691,2.45729 0.51199,-0.31643 0.9309,-1.22377 0.9309,-2.01631 z m -7,-1.59597 c 0,-3.09164 -0.0402,-3.11865 -2,-1.34501 -1.1,0.99549 -2,2.41523 -2,3.15499 0,0.73975 0.9,1.34501 2,1.34501 1.57739,0 2,-0.66667 2,-3.15499 z m -8,-2.98034 c 0,-0.62443 -1.125,-2.17794 -2.5,-3.45225 -2.77997,-2.57639 -3.36937,-1.09863 -0.9433,2.36507 1.66864,2.38232 3.4433,2.94265 3.4433,1.08718 z m 141,-0.86467 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 57,-1 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m -62,-7.44098 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z M 162.60017,547.42625 c 0.73955,-1.1966 -1.14162,-2.38223 -2.4736,-1.55902 -1.11836,0.69118 -0.38417,2.48992 1.01631,2.48992 0.48508,0 1.14086,-0.41891 1.45729,-0.9309 z m 15.54271,-8.51008 c 0,-0.79254 -0.45,-1.7191 -1,-2.05902 -0.55,-0.33992 -1,0.30852 -1,1.44098 0,1.13246 0.45,2.05902 1,2.05902 0.55,0 1,-0.64844 1,-1.44098 z m -56.97419,-5.5658 -0.82109,-3.49322 -0.10236,3.08333 c -0.0563,1.69584 0.19764,3.38334 0.56431,3.75 1.12577,1.12577 1.21462,0.29945 0.35914,-3.34011 z m -1.37089,-12.45009 c -0.32568,-0.84872 -1.05627,-1.54313 -1.62354,-1.54313 -1.46553,0 -1.28265,2.74359 0.21862,3.27976 1.69882,0.60672 2.1094,0.0992 1.40492,-1.73663 z m -2.77482,-6.36352 c -1.00812,-1.61425 -1.02767,-2.55305 -0.091,-4.3679 1.39641,-2.70556 1.24333,-6.82559 -0.25192,-6.78029 -1.37751,0.0417 -4.93129,4.96858 -3.58386,4.96858 0.57567,0 1.04668,0.83285 1.04668,1.85078 0,3.35502 2.18661,8.36261 3.20634,7.34288 0.61049,-0.61049 0.49217,-1.70356 -0.32624,-3.01405 z m -59.880097,-7.12059 c 0,-0.51754 -0.45,-1.2191 -1,-1.55902 -0.55,-0.33992 -1,0.0835 -1,0.94098 0,0.85746 0.45,1.55902 1,1.55902 0.55,0 1,-0.42344 1,-0.94098 z m 56.999997,-4.19739 c 0,-1.05661 -2.84124,-2.35372 -3.56667,-1.6283 -0.26422,0.26423 -0.20757,1.19141 0.12589,2.0604 0.61708,1.60809 3.44078,1.25349 3.44078,-0.4321 z m 921.58582,179.58497 c -1.7131,-1.25938 -1.7891,-1.82477 -0.7232,-5.38223 2.2124,-7.38449 0.535,-7.06437 37.0177,-7.06437 34.2193,0 34.9972,0.0936 36.5029,4.39144 0.5434,1.55122 0.4064,1.6788 -0.7619,0.70923 -1.0464,-0.86847 -9.7828,-1.10505 -32.9194,-0.89144 -29.4178,0.27159 -31.6346,0.41731 -33.6135,2.20944 -1.1652,1.05526 -2.4493,3.15987 -2.8535,4.6769 -0.6695,2.51268 -0.9053,2.63295 -2.6491,1.35103 z m -703.71338,-2.1966 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37756 0.9625,0.75485 1.75,1.54235 1.75,1.75 0,0.82304 -0.82119,0.29331 -2.12756,-1.37244 z m 777.20648,-0.83333 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58438 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m 167.4854,-1.7098 c 0.3755,-0.98622 0.9347,-1.54122 1.2426,-1.23333 0.3079,0.30789 6e-4,1.11479 -0.6828,1.79313 -0.9876,0.98026 -1.1025,0.8654 -0.5598,-0.5598 z m -1047.70354,-1.6736 c -2.36013,-1.96619 -2.35377,-1.96674 22.93467,-2 l 25.29546,-0.0333 2.45454,-2.45455 c 1.35,-1.35 2.45455,-3.465 2.45455,-4.7 0,-3.11648 1.79253,-1.13279 2.59299,2.86951 0.50924,2.54621 0.13697,3.64599 -1.93579,5.71875 l -2.56629,2.56629 h -24.43467 c -22.82999,0 -24.58971,-0.12916 -26.79546,-1.96673 z m 279.45063,-1.52771 c -2.11166,-1.47906 -2.13256,-1.67417 -0.6465,-6.03551 0.84463,-2.47888 2.37251,-4.95489 3.39528,-5.50226 1.15494,-0.61811 14.23847,-0.89529 34.52813,-0.73151 31.40636,0.25353 32.71985,0.34099 33.9961,2.26372 1.31834,1.98614 1.10338,2 -31.02345,2 -30.49054,0 -32.47292,0.11034 -34.4711,1.91867 -1.16605,1.05526 -2.45223,3.20042 -2.85818,4.76701 -0.70001,2.70142 -0.85065,2.76951 -2.92028,1.31988 z m -42.64474,-1.17223 c -0.36667,-0.36666 -0.66667,-35.24166 -0.66667,-77.5 v -76.83333 h 4.3 c 3.89012,0 6.7,1.28961 6.7,3.075 0,0.37125 -1.16518,0.675 -2.58929,0.675 -1.4241,0 -3.3366,0.74717 -4.25,1.66037 -1.51181,1.5115 -1.68487,8.12872 -1.9302,73.80394 -0.19968,53.45814 0.0277,72.32727 0.87812,72.85283 0.63118,0.39009 0.83839,1.20956 0.46047,1.82106 -0.77665,1.25663 -1.91617,1.4314 -2.90243,0.44513 z m 115.83333,-1.33333 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 841.13032,-1.25 c -1.0002,-3.73234 -0.6833,-60.11749 0.3471,-61.75 0.7834,-1.24126 4.6568,-1.55259 22.4552,-1.80487 l 21.5086,-0.30488 2.0294,-2.57998 c 1.817,-2.30995 2.0331,-4.05736 2.0648,-16.69513 0.032,-12.74538 0.1742,-13.87254 1.4646,-11.61514 2.0361,3.5617 2.103,29.79171 0.083,32.55887 -1.3033,1.7854 -3.1058,1.98124 -22.4669,2.44113 -18.4583,0.43844 -21.2695,0.71979 -22.8331,2.28517 -1.6287,1.63056 -1.7831,4.2937 -1.7831,30.74966 0,20.91506 -0.315,28.96459 -1.1334,28.96484 -0.6233,1.8e-4 -1.4047,-1.01217 -1.7363,-2.24967 z M 67.015323,670.70497 c -1.08783,-1.30957 -1.43625,-8.51585 -1.68013,-34.75 -0.16923,-18.2038 -0.0292,-35.01032 0.31127,-37.34782 l 0.61897,-4.25 h 22.50446 c 12.767107,0 23.295887,-0.42355 24.333547,-0.97889 3.24608,-1.73725 4.03009,-6.38044 3.35155,-19.84932 -0.5915,-11.74133 -0.51626,-12.57101 1.02476,-11.29935 1.2734,1.05084 1.66313,3.08174 1.66313,8.66667 0,4.01182 0.43947,7.44422 0.9766,7.62756 0.53712,0.18333 -0.90152,5.16646 -3.19699,11.07361 -2.29548,5.90716 -4.46594,10.26725 -4.82326,9.6891 -0.42929,-0.69461 -7.30504,-0.94572 -20.269637,-0.74028 -17.24366,0.27324 -19.83597,0.52713 -21.40334,2.09621 -1.64311,1.6449 -1.78337,4.53513 -1.78337,36.74976 0,19.23044 -0.0574,34.96456 -0.12756,34.96469 -0.0702,1.3e-4 -0.74515,-0.74324 -1.5,-1.65194 z m 32.05392,-5.20637 c -2.20512,-1.7856 -2.03093,-1.82847 10.071857,-2.47924 6.77368,-0.36421 17.83747,-0.66221 24.5862,-0.66221 12.06486,0 12.30514,-0.0441 14.343,-2.63486 2.2895,-2.91062 2.60771,-5.49672 1.0374,-8.43088 -0.84375,-1.57655 -0.70504,-1.93437 0.75,-1.93488 1.51608,-5.3e-4 1.73415,0.73527 1.44667,4.8813 -0.56824,8.19511 -0.90255,8.117 34.81102,8.13297 16.79012,0.008 31.53999,0.285 32.77749,0.61664 1.2375,0.33163 2.25039,1.33799 2.25088,2.23634 8e-4,1.48699 -2.7997,1.58856 -31.25,1.13337 -22.7728,-0.36435 -31.85883,-0.84735 -33.49185,-1.78035 -1.83985,-1.05118 -2.73482,-1.03127 -5,0.1112 -2.00383,1.01067 -9.23653,1.56073 -26.42389,2.00959 -21.91803,0.57241 -23.83049,0.48391 -25.908777,-1.19899 z m 1148.946057,0.10855 c -1.2438,-1.58606 -1.2085,-1.62143 0.3776,-0.37756 1.6657,1.30637 2.1955,2.12756 1.3724,2.12756 -0.2076,0 -0.9951,-0.7875 -1.75,-1.75 z m -7.7361,-13 c -8.7979,-17.48942 -12.6011,-35.71153 -12.5751,-60.25 0.027,-25.61913 4.149,-43.78079 14.525,-64 8.2874,-16.14908 18.7162,-27 25.9499,-27 3.6067,0 14.034,5.3447 17.0236,8.72578 1.621,1.83335 1.7689,2.21794 0.4403,1.14556 -5.2468,-4.2351 -11.9775,-6.1305 -16.9219,-4.76529 -1.8279,0.5047 -5.4286,2.77069 -8.0016,5.03554 -16.8719,14.85123 -30.5302,53.31505 -30.5659,86.07814 -0.02,17.95021 4.5612,40.69243 10.9836,54.53027 3.6407,7.8443 3.0189,8.20669 -0.8579,0.5 z m -932.21201,2 -2.42431,-2.75 2.75,2.42431 c 1.5125,1.33338 2.75,2.57088 2.75,2.75 0,0.78428 -0.8098,0.14598 -3.07569,-2.42431 z m -53.81872,-6.62277 c -0.80344,-0.96809 -1.06063,-9.00109 -0.87244,-27.25 l 0.26685,-25.87723 5,5.5 c 2.75,3.025 4.00426,4.65792 2.78725,3.62872 -2.90682,-2.45824 -5.03313,-1.51415 -5.78539,2.56872 -0.33466,1.81641 -0.47199,12.19054 -0.30517,23.05363 0.16682,10.86309 0.24591,19.75059 0.17575,19.75 -0.0701,-5.9e-4 -0.64023,-0.61882 -1.26685,-1.37384 z m 685.62891,-0.657 c -6.7513,-1.69506 -21.97019,-10.90041 -25.86288,-15.64347 -0.75439,-0.91919 0.87838,0.0503 3.62838,2.15435 2.75,2.10408 7.925,5.21909 11.5,6.92225 6.2725,2.98828 6.9724,3.09664 20,3.09664 13.0524,0 13.7155,-0.10326 20,-3.11459 13.6475,-6.53946 21.7265,-14.81484 28.1997,-28.88541 2.026,-4.40381 2.3003,-6.55009 2.3003,-18 0,-7.15 -0.3319,-14.125 -0.7376,-15.5 -0.4056,-1.375 0.2694,-0.475 1.50002,2 1.9854,3.99281 2.2376,6.02772 2.2376,18.05457 v 13.55458 l -3.91152,7.94542 c -5.1434,10.44766 -13.5421,18.83057 -24.0878,24.04254 -7.4167,3.66553 -8.1035,3.80964 -19.3452,4.05949 -6.4105,0.14248 -13.35,-0.16639 -15.421,-0.68637 z m -266.86206,-1.72023 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37756 1.66575,1.30637 2.19548,2.12756 1.37244,2.12756 -0.20765,0 -0.99515,-0.7875 -1.75,-1.75 z m -542.20338,-3.91541 c -1.8419,-0.96507 -2.62512,-2.00671 -2.24793,-2.98964 0.31838,-0.82969 0.57887,-1.69672 0.57887,-1.92674 0,-0.23001 9.9,-0.41821 22,-0.41821 20.33074,0 22,0.1335 22,1.75945 0,0.9677 -0.9,2.32152 -2,3.00848 -1.31717,0.82258 -2,0.88223 -2,0.1747 0,-1.54841 -33.82353,-0.85306 -34.79034,0.71522 -0.52711,0.85504 -1.4531,0.77049 -3.5406,-0.32326 z m 537.23544,-4.88495 c -3.05552,-6.73879 -7.9211,-23.39695 -7.87157,-26.94964 0.0562,-4.03135 2.02095,1.27081 5.01634,13.5374 1.61223,6.60233 3.84484,13.79487 4.96135,15.98342 1.11652,2.18855 1.76766,3.97918 1.44699,3.97918 -0.32067,0 -1.91957,-2.94766 -3.55311,-6.55036 z m -375.98019,0.80036 -2.42431,-2.75 2.75,2.42431 c 2.57029,2.26589 3.20859,3.07569 2.42431,3.07569 -0.17912,0 -1.41662,-1.2375 -2.75,-2.75 z m 637.28699,-1.26022 c -10.39077,-5.20584 -17.48471,-12.06581 -22.73979,-21.98978 l -3.97151,-7.5 v -13.5 -13.5 l 3.98356,-7.45875 c 5.24396,-9.81869 12.62125,-16.96851 22.72774,-22.02698 7.9902,-3.99921 8.0641,-4.01427 19.7074,-4.01427 11.6029,0 11.7471,0.029 20.0149,4.02725 10.2997,4.98079 18.0738,12.56567 23.0664,22.50498 3.4831,6.93407 3.5,7.03306 3.5,20.46777 0,13.4311 -0.018,13.53566 -3.5,20.48671 -4.6114,9.20524 -13.3368,17.9301 -22.5042,22.50273 -6.6944,3.33912 -7.5343,3.50374 -19.4958,3.82125 l -12.5,0.3318 z m 2.4718,-5.17728 c -0.3192,-0.79773 -0.5562,-0.56078 -0.6042,0.60417 -0.043,1.05416 0.193,1.64479 0.5253,1.3125 0.3323,-0.3323 0.3678,-1.1948 0.079,-1.91667 z m 15.3169,0.27538 c 0,-0.50166 2.2031,-0.69382 4.8959,-0.42703 2.929,0.2902 5.1623,0.054 5.559,-0.58788 0.3647,-0.59014 1.6195,-1.07297 2.7884,-1.07297 3.2339,0 10.0697,-3.64317 15.0325,-8.01157 2.8752,-2.53084 5.783,-6.61364 8.2131,-11.53167 3.3192,-6.71758 3.7711,-8.51653 3.8396,-15.28521 0.078,-7.67294 -2.4695,-18.17155 -4.4089,-18.17155 -0.5058,0 -0.9196,0.49814 -0.9196,1.10699 0,0.60884 -0.6854,0.84397 -1.5231,0.5225 -1.2775,-0.49021 -1.3361,-0.23498 -0.3634,1.58251 1.7475,3.26534 2.7616,15.07448 1.7564,20.45474 -1.9102,10.22483 -8.5943,18.75787 -18.3699,23.4511 -5.1092,2.45291 -7.2194,2.8807 -14.213,2.88137 -8.4703,8.1e-4 -16.7329,-2.30736 -20.5431,-5.73877 -0.9659,-0.86983 -2.04641,-1.29127 -2.40115,-0.93652 -0.35475,0.35475 -1.18692,-0.0961 -1.84927,-1.00194 -0.72801,-0.99562 -1.87171,-1.39082 -2.892,-0.9993 -1.35215,0.51888 -1.47333,1.04826 -0.60942,2.66248 0.59307,1.10816 1.44676,2.01484 1.8971,2.01484 0.45034,0 2.01379,1.10749 3.47435,2.46108 1.46055,1.3536 6.13879,3.58249 10.39599,4.9531 8.5415,2.74988 10.2405,3.02757 10.2405,1.6737 z m -6,-2.08788 c 0,-0.55 0.4234,-1 0.941,-1 0.5175,0 1.2191,0.45 1.559,1 0.3399,0.55 -0.083,1 -0.941,1 -0.8574,0 -1.559,-0.45 -1.559,-1 z m 44.0789,-31.58333 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m -17.0558,21.18676 c 5.1766,-3.42574 8.725,-8.95864 9.5048,-14.82052 0.7075,-5.31767 -0.8994,-14.56421 -3.024,-17.4014 -1.325,-1.76936 -1.4486,-1.6899 -2.0744,1.33318 -0.6446,3.11454 -0.748,3.17196 -3.3178,1.84305 -3.0906,-1.5982 -9.2843,-2.08216 -13.7204,-1.07209 -3.3655,0.7663 -7.373,3.82485 -9.1907,7.01435 -0.8277,1.45235 -1.1674,1.58926 -1.2405,0.5 -0.2664,-3.96886 -1.8269,3.14107 -1.8898,8.61045 -0.057,4.98253 0.4033,6.80841 2.4956,9.89154 l 2.5659,3.78109 -3.6899,-0.5988 c -2.0295,-0.32934 -4.5341,-1.36277 -5.5659,-2.29652 -1.0318,-0.93376 -1.876,-1.21813 -1.876,-0.63195 0,1.20933 7.6888,5.14937 12.3827,6.34534 5.825,1.48419 14.3493,0.34199 18.6404,-2.49772 z m -51.2711,1.81524 c -0.31974,-0.31974 0.50526,-2.18253 1.83333,-4.13955 2.93091,-4.31893 2.97414,-4.89955 0.41467,-5.56887 -1.28519,-0.33608 -2,-1.36401 -2,-2.87608 0,-1.29419 -0.88766,-2.90743 -1.97258,-3.58497 -1.76983,-1.10528 -1.91674,-2.0188 -1.4293,-8.88784 0.40659,-5.72969 0.21099,-7.86663 -0.77742,-8.49333 -0.99893,-0.63338 -1.01616,-0.84114 -0.0707,-0.85272 0.6875,-0.008 1.25,-0.6303 1.25,-1.38196 0,-0.75165 0.99491,-3.78915 2.21091,-6.75 4.0855,-9.94778 14.49449,-18.42991 25.03909,-20.40391 2.0625,-0.38611 3.75,-1.11606 3.75,-1.62212 0,-1.73465 3.0742,-2.10013 4.7872,-0.56915 1.6013,1.43109 6.4881,2.70888 12.1578,3.179 1.3447,0.11151 2.6197,0.72701 2.8333,1.36778 0.2136,0.64078 1.0355,1.16505 1.8265,1.16505 0.7909,0 1.9507,1.125 2.5772,2.5 0.6264,1.375 1.9668,2.5 2.9785,2.5 1.0726,0 1.8534,0.72963 1.8728,1.75 0.05,2.64199 3.1796,5.83129 5.7167,5.82606 2.8298,-0.006 2.8122,-0.42548 -0.1885,-4.49265 -1.6175,-2.19239 -2.3159,-4.27316 -2.0745,-6.18036 0.4241,-3.35103 -1.7609,-5.42218 -9.9432,-9.42543 -25.6292,-12.53921 -57.21975,4.32022 -61.67124,32.91308 -1.15927,7.44618 0.0339,17.10049 2.91776,23.6093 2.3109,5.21559 3.25485,6.2074 4.73709,4.97725 0.90561,-0.75159 1.2473,-0.68446 1.20979,0.23767 -0.14784,3.63483 0.38347,5.78508 1.42947,5.78508 0.64166,0 0.90506,-0.2616 0.58533,-0.58133 z m -6.68171,-24.16867 c 0.0386,-0.4125 0.45702,-1.65 0.92971,-2.75 0.76156,-1.77225 0.86743,-1.68684 0.92971,0.75 0.0387,1.5125 -0.37971,2.75 -0.92971,2.75 -0.55,0 -0.96837,-0.3375 -0.92971,-0.75 z m 55.42971,-41.25 c 0.3399,-0.55 1.068,-1 1.618,-1 0.55,0 0.7219,0.45 0.382,1 -0.3399,0.55 -1.068,1 -1.618,1 -0.55,0 -0.7219,-0.45 -0.382,-1 z m -7.5,-0.88197 c 0,-0.55 0.45,-1.27811 1,-1.61803 0.55,-0.33992 1,-0.16803 1,0.38197 0,0.55 -0.45,1.27811 -1,1.61803 -0.55,0.33992 -1,0.16803 -1,-0.38197 z m -18,54.00441 c 0,-3.35906 -2.6244,-6.26492 -3.529,-3.90751 -0.6969,1.81618 1.137,6.78507 2.5042,6.78507 0.5637,0 1.0248,-1.2949 1.0248,-2.87756 z M 920.3477,580.20177 c 3.05783,-6.65661 8.95078,-12.71019 15.55898,-15.98305 3.9826,-1.9725 6.2818,-2.347 14.4501,-2.35365 5.3426,-0.004 8.9426,-0.31379 8,-0.68763 -3.9422,-1.56346 -16.1378,-0.82071 -21.8954,1.3335 -12.35152,4.6213 -20.47077,16.9515 -20.17185,30.63372 l 0.14665,6.71249 0.65681,-7 c 0.39432,-4.20251 1.69504,-9.26013 3.25471,-12.65538 z m 11.79518,9.34651 c 0,-2.48501 -2.5086,-5.79528 -3.3545,-4.42654 -0.84327,1.36442 0.9767,6.23541 2.3297,6.23541 0.5637,0 1.0248,-0.81399 1.0248,-1.80887 z m 17,-7.19113 c 0,-0.94785 -1.0877,-1.25 -4.5,-1.25 -2.9691,0 -3.608,0.26623 -3,1.25 0.3399,0.55 2.1665,1 4.059,1 1.8926,0 3.441,-0.45 3.441,-1 z m -8.6856,-1.79488 c 1.3613,-1.50424 1.4402,-2.39482 0.4872,-5.5 -0.9365,-3.05121 -1.6033,-3.70512 -3.7783,-3.70512 -5.5016,0 -8.5853,5.43802 -5.0745,8.94885 2.5296,2.52958 6.2063,2.64222 8.3656,0.25627 z m 16.1675,-0.1758 c 0.7224,-1.16887 -3.9196,-2.49488 -5.4414,-1.55436 -0.5902,0.36478 -0.8142,1.08214 -0.4978,1.59414 0.759,1.22808 5.1739,1.19851 5.9392,-0.0398 z m 7.0225,-2.03638 c 0.8236,-1.3326 -2.0466,-2.3826 -4.2264,-1.54613 -1.4751,0.56605 -1.5109,0.79423 -0.25,1.59167 1.9327,1.22227 3.704,1.20424 4.4764,-0.0455 z m -14.5044,-1.97389 c 0,-1.2475 -4.5372,-2.42309 -5.9595,-1.54409 -0.5902,0.36478 -0.8142,1.08214 -0.4978,1.59414 0.768,1.2427 6.4573,1.19861 6.4573,-0.05 z m 7.4341,-1.91238 c 0.6597,-1.06747 -4.1063,-2.42727 -5.4964,-1.56817 -0.5337,0.32983 -0.7114,1.0186 -0.395,1.5306 0.7343,1.18805 5.1629,1.2163 5.8914,0.0376 z m -7.4341,-18.10667 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m 327.63162,75.3834 c -0.7595,-2.35812 -14.8544,-9.40351 -22.8306,-11.41193 -2.5728,-0.64784 -5.4503,-2.03144 -6.3944,-3.07468 -2.1773,-2.4059 -1.1343,-2.38325 6.1868,0.13438 12.884,4.43058 25.2129,12.08117 24.2115,15.02424 -0.3569,1.04862 -0.6784,0.86442 -1.1733,-0.67201 z m -992.70731,-3.1334 -2.42431,-2.75 2.75,2.42431 c 2.57029,2.26589 3.20859,3.07569 2.42431,3.07569 -0.17912,0 -1.41662,-1.2375 -2.75,-2.75 z m 423,-0.84366 c -1.33337,-1.42652 -5.34931,-4.31343 -8.92431,-6.41536 -7.7159,-4.53659 -21,-13.79479 -21,-14.63571 0,-0.32596 1.4625,0.5132 3.25,1.8648 1.7875,1.3516 7.18582,4.8179 11.99627,7.7029 7.55025,4.52816 19.37805,13.92007 17.67804,14.03732 -0.31662,0.0218 -1.66662,-1.12744 -3,-2.55395 z M 634.53076,602.85715 C 584.57872,479.70307 584.53915,479.60429 585.49671,480.45364 c 0.70254,0.62315 10.22681,23.70688 28.63566,69.40351 20.94433,51.9905 26.03227,64.00918 27.58517,65.1614 1.01595,0.75382 1.45298,2.33307 1.24531,4.5 -0.26676,2.78339 -1.66903,0.0126 -8.43209,-16.6614 z m -365.93493,9.25 -3.95295,-4.25 4.25,3.95295 c 3.95246,3.6762 4.70953,4.54705 3.95295,4.54705 -0.16338,0 -2.07588,-1.9125 -4.25,-4.25 z m -60.37299,-32.87897 c -13.72191,-33.77201 -13.6542,-33.59763 -12.72838,-32.77679 0.36863,0.32683 5.40298,12.24199 11.18746,26.47813 5.78447,14.23614 10.9733,26.33997 11.53073,26.8974 0.68468,0.68468 1.31948,0.52955 1.95656,-0.47813 0.65509,-1.03618 0.94772,0.26407 0.95836,4.25836 0.008,3.1625 -0.13732,5.75 -0.32386,5.75 -0.18654,0 -5.84793,-13.55804 -12.58087,-30.12897 z m 463.37299,22.87897 -3.95295,-4.25 4.25,3.95295 c 3.95246,3.6762 4.70953,4.54705 3.95295,4.54705 -0.16338,0 -2.07588,-1.9125 -4.25,-4.25 z m 486.23697,-2 c -7.1499,-17.05346 -13.683,-33.13358 -13.6595,-33.62057 0.063,-1.30307 1.9317,2.72295 6.4384,13.87082 2.5569,6.32486 5.2227,11.94975 5.9241,12.49975 0.7013,0.55 1.5465,2.6875 1.8783,4.75 0.6098,3.79205 0.3782,4.78844 -0.5813,2.5 z M 330.70582,590.4267 c -1.6764,-1.8524 -1.66245,-1.90833 0.34501,-1.38337 1.15063,0.3009 2.09205,1.1696 2.09205,1.93045 0,1.8301 -0.35859,1.7496 -2.43706,-0.54708 z m 982.18708,-5.14965 c -2.1231,-1.23661 -2.2944,-2.9199 -0.2971,-2.9199 2.9124,0 6.4356,-2.32198 7.4041,-4.87972 0.5457,-1.44115 3.2852,-12.29528 6.0879,-24.12028 10.4609,-44.13642 12.4908,-52 13.4236,-52 1.6653,0 10.6315,6.1601 10.6315,7.30425 0,0.73642 -0.3935,0.70223 -1.2,-0.10425 -1.691,-1.69102 -5.3138,-1.49076 -6.866,0.37954 -0.721,0.86874 -5.2359,17.84208 -10.0332,37.71853 -7.1898,29.78932 -9.1089,36.45201 -10.9224,37.92047 -2.4452,1.98006 -5.575,2.24683 -8.2284,0.70136 z m -316.60572,-12.6699 c -1.0912,-2.55004 -1.0666,-2.60886 0.3394,-0.80887 0.834,1.06762 1.5163,2.30512 1.5163,2.75 0,1.51991 -0.6783,0.81036 -1.8557,-1.94113 z m -501.75357,-6.68141 c -1.70972,-1.52451 -2.16843,-2.32494 -1.12277,-1.9592 2.61663,0.91521 7.311,-1.38989 8.60232,-4.22403 0.77245,-1.69534 1.12972,-13.80681 1.12972,-38.29755 0,-34.25057 -0.0871,-35.92887 -1.99111,-38.34937 -1.68135,-2.1375 -1.75914,-2.6203 -0.5,-3.10348 0.85513,-0.32814 1.49111,-0.0119 1.49111,0.74144 0,2.08026 3.14055,4.34185 7.72369,5.56203 6.5402,1.74122 18.03599,6.63676 22.46116,9.5652 4.81906,3.1891 4.49613,4.42072 -0.40145,1.53108 -4.87819,-2.8782 -17.16173,-7.03471 -20.78937,-7.03471 -2.3469,0 -3.26676,0.58712 -4.01878,2.5651 -0.56389,1.48313 -0.97525,16.83222 -0.97525,36.38922 0,30.75891 -0.15859,34.01153 -1.75,35.89225 -2.89521,3.42155 -6.533,3.68796 -9.85927,0.72202 z m 981.88039,0.13141 -3.1175,-2.3 h 3.4454 c 2.2286,0 4.2322,-0.78636 5.6732,-2.22657 2.2085,-2.20726 2.2321,-2.56203 2.7278,-40.90041 0.4141,-32.02627 0.7149,-38.20158 1.75,-35.92637 1.6724,3.67593 1.7992,75.35387 0.1397,78.99603 -0.9805,2.15213 -4.6074,4.65732 -6.7425,4.65732 -0.4172,0 -2.1615,-1.035 -3.8761,-2.3 z m -53.6408,-0.95 c -0.7895,-2.94588 -0.7838,-44.57511 0.01,-47.52477 0.6049,-2.25785 0.7247,-2.27272 16.1158,-2 14.2302,0.25216 15.6155,0.43937 16.8328,2.27477 1.3052,1.96775 1.1021,2 -12.5937,2 -12.023,0 -14.1637,0.24309 -15.706,1.78353 -1.5803,1.57836 -1.8211,4.21339 -2.0931,22.90549 -0.2412,16.5668 -0.026,21.30077 1,21.95115 0.9294,0.58944 0.6905,0.83363 -0.826,0.84452 -1.3744,0.01 -2.3478,-0.78513 -2.7363,-2.23469 z m -280.9636,-3.91667 c -0.9049,-2.30349 -1.4814,-4.352 -1.2811,-4.55224 0.2002,-0.20023 1.1142,1.51077 2.0311,3.80224 0.9168,2.29147 1.4933,4.33998 1.2811,4.55224 -0.2123,0.21227 -1.1263,-1.49874 -2.0311,-3.80224 z m -387.80594,-1.80006 -2.36078,-1.96673 2.63922,-0.0333 c 1.45156,-0.0183 3.70156,-0.89216 5,-1.94192 2.25013,-1.81919 2.38421,-2.62768 2.86078,-17.25 l 0.5,-15.34135 3.31422,6.34871 c 1.82283,3.49179 2.83448,6.05221 2.24813,5.68982 -1.84236,-1.13861 -3.06235,4.25016 -3.06235,13.5266 0,7.60157 -0.29846,9.23336 -2,10.9349 -2.53964,2.53964 -6.11505,2.55266 -9.13922,0.0333 z m 383.80594,-8.19994 c -0.9049,-2.30349 -1.4814,-4.352 -1.2811,-4.55224 0.2002,-0.20023 1.1142,1.51077 2.0311,3.80224 0.9168,2.29147 1.4933,4.33998 1.2811,4.55224 -0.2123,0.21227 -1.1263,-1.49874 -2.0311,-3.80224 z M 65.767883,550.23215 c -0.79914,-3.9957 -0.79461,-45.64019 0.005,-48.625 0.59505,-2.22044 0.82429,-2.25 17.45116,-2.25 15.02243,0 16.949667,0.18964 17.784747,1.75 0.87245,1.63019 -0.0812,1.75 -13.929097,1.75 -12.93065,0 -15.09811,0.23218 -16.65139,1.78369 -1.5895,1.5877 -1.81915,4.26957 -2.09006,24.40739 -0.23909,17.77347 -0.0247,22.80107 1,23.451 0.92567,0.58711 0.68742,0.83174 -0.82065,0.84261 -1.58507,0.0114 -2.2838,-0.77871 -2.75,-3.10969 z m 57.840277,2.14151 c -1.11909,-0.43603 -2.5412,-1.40562 -3.16024,-2.15465 -0.90992,-1.10097 -0.47668,-1.37605 2.26156,-1.43592 6.27219,-0.13715 7.41748,-2.31058 7.55171,-14.33093 0.0651,-5.82725 0.40258,-11.82608 0.75,-13.33072 l 0.63169,-2.73571 5.25,2.4397 c 5.11263,2.37588 6.29063,3.77054 4.25,5.03172 -0.55,0.33992 -1,0.14148 -1,-0.44098 0,-0.58246 -1.13614,-1.05902 -2.52475,-1.05902 -1.79002,0 -2.80856,0.74647 -3.5,2.5651 -1.32945,3.49672 -1.28889,16.74678 0.0487,15.92008 0.56319,-0.34807 0.11342,1.76287 -0.9995,4.69098 -1.11291,2.92811 -2.02459,5.32384 -2.02596,5.32384 -0.001,0 -1.2391,0.0696 -2.75051,0.15465 -1.5114,0.085 -3.66363,-0.20211 -4.78273,-0.63814 z m 69.11805,-11.09984 c -0.91686,-2.29147 -1.47952,-4.35381 -1.25036,-4.58298 0.22917,-0.22916 1.16683,1.45817 2.0837,3.74964 0.91686,2.29147 1.47952,4.35381 1.25036,4.58298 -0.22917,0.22916 -1.16683,-1.45817 -2.0837,-3.74964 z m 935.55669,-13.55667 c -3.9124,-9.74598 -6.9514,-17.88196 -6.7534,-18.07996 0.198,-0.198 3.561,7.61398 7.4734,17.35996 3.9124,9.74598 6.9514,17.88196 6.7534,18.07996 -0.198,0.198 -3.561,-7.61398 -7.4734,-17.35996 z m -421.89259,10.39 c -6.93231,-8.68743 -4.99122,-23.4997 4.12891,-31.50728 5.63059,-4.94372 13.69436,-4.24203 19.03212,1.65613 l 1.90374,2.1036 -3.2484,-1.62051 c -2.1738,-1.08444 -4.62381,-1.43977 -7.4061,-1.07414 -10.05634,1.32154 -19.0569,19.65233 -14.21084,28.9422 1.52566,2.9247 1.44165,3.55658 -0.19943,1.5 z M 185.28177,522.71826 c -2.81611,-6.99223 -4.95769,-12.87564 -4.75908,-13.07425 0.19861,-0.19862 2.6652,5.3598 5.4813,12.35203 2.81611,6.99223 4.95769,12.87564 4.75908,13.07425 -0.19861,0.19861 -2.6652,-5.3598 -5.4813,-12.35203 z m 662.13012,8.37788 c -2.37138,-3.06819 -2.32429,-3.57648 0.22196,-2.39548 2.61078,1.21092 3.11252,2.16548 1.62234,3.08646 -0.48768,0.30141 -1.31762,-0.01 -1.8443,-0.69098 z m -6.76901,-11.73899 c -1.39353,-2.75 -2.30869,-5 -2.03369,-5 0.275,0 1.64016,2.25 3.03369,5 1.39353,2.75 2.30869,5 2.03369,5 -0.275,0 -1.64016,-2.25 -3.03369,-5 z m -513,-0.13972 c -2.75,-1.52643 -7.59755,-3.55762 -10.77234,-4.51375 -3.17479,-0.95613 -6.54979,-2.61763 -7.5,-3.69221 -1.67827,-1.89794 -1.64189,-1.93349 1.27234,-1.24375 3.48014,0.82368 18.09476,7.85186 20.927,10.0638 3.32448,2.59638 1.28132,2.27688 -3.927,-0.61409 z m 734.50002,-11.72639 c 0,-1.02781 -11.2226,-6.12045 -19,-8.62188 -4.983,-1.60268 -9.5316,-4.31373 -8.675,-5.17039 0.1856,-0.18552 3.5511,0.75574 7.479,2.0917 9.3116,3.16709 21.196,9.44152 21.196,11.19055 0,0.75687 -0.225,1.37613 -0.5,1.37613 -0.275,0 -0.5,-0.38975 -0.5,-0.86611 z m 54.6154,-8.24928 c -2.0148,-5.04354 -3.4827,-9.35068 -3.2619,-9.57142 0.2207,-0.22074 2.052,3.72294 4.0696,8.76373 2.0175,5.04079 3.4854,9.34794 3.2619,9.57143 -0.2235,0.22349 -2.0548,-3.72019 -4.0696,-8.76374 z m -256.73692,6.16056 c -0.89182,-0.98349 -5.72364,-3.25554 -10.73738,-5.049 -5.01373,-1.79346 -9.62666,-3.87628 -10.25094,-4.6285 -1.65139,-1.98979 0.0164,-1.76205 7.37241,1.00675 10.71565,4.03336 16.74211,7.44976 16.09873,9.12637 -0.31641,0.82456 -0.63965,1.46171 -0.71831,1.41588 -0.0787,-0.0458 -0.87268,-0.88801 -1.76451,-1.8715 z m -729.24821,-7.29517 c -0.95914,-3.57899 -0.72512,-32.75 0.26272,-32.75 1.7383,0 2.10699,3.33899 2.10699,19.08179 0,14.59895 -0.83288,19.40289 -2.36971,13.66821 z m 697.36971,-1.75 c -1.12236,-2.2 -1.81565,-4 -1.54065,-4 0.275,0 1.41829,1.8 2.54065,4 1.12236,2.2 1.81565,4 1.54065,4 -0.275,0 -1.41829,-1.8 -2.54065,-4 z m -838.238416,-3.80372 c -0.434272,-1.66065 -3.040934,-3.39095 -9.925264,-6.58838 -5.134974,-2.38494 -11.136317,-4.88049 -13.336317,-5.54567 -6.973709,-2.10852 -9.342014,-3.20814 -9.86938,-4.58244 -0.806491,-2.10168 8.180078,0.83365 19.86938,6.49003 10.076088,4.87576 15.079057,8.79301 14.282424,11.18291 -0.247871,0.74361 -0.68284,0.33608 -1.020843,-0.95645 z m 364.321746,0.52075 c 0.22917,-0.15563 1.20417,-0.88573 2.16667,-1.62244 1.49798,-1.14658 1.75,-1.10583 1.75,0.28296 0,0.99738 -0.83473,1.62245 -2.16667,1.62245 -1.19166,0 -1.97916,-0.12734 -1.75,-0.28297 z m 757.54019,-6.25569 c -0.9649,-2.51469 -0.6803,-3.16355 0.4986,-1.13634 0.5837,1.00375 0.8506,2.03566 0.5931,2.29313 -0.2575,0.25747 -0.7487,-0.26309 -1.0917,-1.15679 z\"\n         id=\"path78\"\n         inkscape:connector-curvature=\"0\" />\n      <path\n         style=\"fill:#606060;fill-opacity:1\"\n         d=\"m 1258.1429,715.36227 c -4.675,-0.99149 -11.875,-3.02978 -16,-4.52954 -7.441,-2.7054 -21,-9.11238 -21,-9.92308 0,-0.2323 3.2625,1.07752 7.25,2.9107 23.0504,10.59703 45.1983,12.50702 77.75,6.705 9.625,-1.71556 22.1846,-3.55231 27.9102,-4.08166 16.0979,-1.48833 14.5512,4.23441 14.794,-54.73542 0.1123,-27.27608 0.4498,-49.83849 0.75,-50.13867 0.3002,-0.30018 0.5458,23.34432 0.5458,52.54333 v 53.08912 l -3.25,1.00485 c -1.7875,0.55267 -7.9491,1.52329 -13.6925,2.15694 -5.7433,0.63365 -17.8933,2.46606 -27,4.07202 -19.6751,3.46972 -34.6998,3.75935 -48.0575,0.92641 z m 101,0.69229 c -1.9786,-0.94767 11.7127,-1.30169 65.6456,-1.69741 65.2269,-0.47858 68.2358,-0.58159 70.25,-2.40499 2.068,-1.87206 2.1058,-2.58062 2.186,-41 0.073,-35.09306 0.2303,-38.75437 1.5345,-35.76733 1.2033,2.75577 1.4041,9.75316 1.1685,40.7153 -0.2613,34.33168 -0.4305,37.5335 -2.0699,39.17232 -1.6741,1.67349 -5.9737,1.797 -69,1.98211 -50.4887,0.14829 -67.8368,-0.10055 -69.7147,-1 z m -361.64772,-1.70207 c -1.1812,-0.47035 -2.4016,-1.26616 -2.7121,-1.76847 -0.6237,-1.0092 27.75942,-2.21954 52.15532,-2.22404 14.9045,-0.003 15.3581,-0.0656 17.75,-2.45738 1.35,-1.35 2.4614,-3.4875 2.4698,-4.75 0.012,-1.84886 0.2039,-2.00362 0.9847,-0.79545 1.6073,2.48709 1.1401,7.56321 -0.8629,9.37588 -1.0245,0.92723 -4.062,1.88375 -6.75,2.1256 -10.1593,0.91413 -60.97942,1.31229 -63.03482,0.49386 z m 88.94692,-1.08451 c -8.7484,-2.57607 -2.8349,-2.91083 51.4193,-2.91083 48.9179,0 56.1119,-0.19289 58.059,-1.5567 1.2224,-0.85619 2.2225,-2.43119 2.2225,-3.5 0,-1.06882 0.45,-1.9433 1,-1.9433 1.7016,0 1.1561,7.62545 -0.6529,9.12756 -1.3495,1.12061 -11.4873,1.40486 -55.25,1.54911 -31.1966,0.10283 -54.9348,-0.21725 -56.7979,-0.76584 z m -319.9766,-2.5929 c -1.19756,-0.2409 -2.76295,-1.14357 -3.47865,-2.00594 -1.17944,-1.42113 3.25767,-1.53255 47.38899,-1.18997 45.69062,0.35469 48.80045,0.26802 50.47866,-1.40693 1.66885,-1.66562 1.8218,-5.97671 2.28838,-64.5 l 0.5,-62.71509 23.43124,-46.26576 c 21.9038,-43.24976 24.99479,-48.44038 25.05345,-42.07155 0.008,0.91448 -10.22219,22.06448 -22.73469,47 l -22.75,45.33731 -0.5,62.21503 c -0.4661,57.99655 -0.62103,62.33606 -2.285,64 -1.65858,1.65854 -5.09374,1.79403 -48.5,1.91293 -25.69325,0.0704 -47.69482,-0.0691 -48.89238,-0.31003 z m 494.1774,-1.42643 c -40.9994,-5.90813 -76.0446,-35.41004 -90.7703,-76.4126 -5.1811,-14.42648 -7.0136,-25.65584 -7.0136,-42.9789 0,-17.32402 1.8329,-28.55544 7.0142,-42.9789 10.2919,-28.65051 31.442,-52.94661 56.9775,-65.45268 16.1286,-7.89902 29.9877,-11.06842 48.3997,-11.06842 14.5707,0 23.5435,1.51254 36.7268,6.19102 l 8.6657,3.07529 77.9908,-0.51684 c 42.895,-0.28426 79.0075,-0.13032 80.25,0.34209 l 2.2592,0.85894 v 38.98957 c 0,38.20701 -0.041,39.01145 -2.0378,40.08015 -2.5246,1.35113 -5.6976,0.44089 -6.3492,-1.82137 -0.269,-0.93437 -1.611,-6.44369 -2.9822,-12.24293 -2.7106,-11.46444 -5.8953,-20.59748 -10.0221,-28.74134 l -2.6424,-5.21458 h -18.9831 -18.9832 v 30 30 h 22.8 c 16.4,0 23.1368,0.33684 24,1.2 0.8212,0.82117 1.2,5.70329 1.2,15.46482 0,13.07975 -0.1607,14.35081 -1.9343,15.3 -1.1657,0.62386 -10.7018,1.03518 -24,1.03518 h -22.0657 v 36.5 36.5 h 25.352 25.3519 l 3.0831,-6.75 c 5.3278,-11.66453 8.7426,-22.17853 11.2061,-34.5031 1.2255,-6.13071 3.4206,-8.38514 7.0447,-7.23491 1.9057,0.60485 1.9622,1.75279 1.9622,39.8554 0,29.18092 -0.3074,39.54006 -1.2,40.43261 -1.7352,1.73523 -134.8648,1.73523 -136.6,0 -0.9175,-0.91748 -1.2,-24.96439 -1.2,-102.13976 0,-94.94161 -0.104,-101.02162 -1.75,-102.31743 -5.4157,-4.26345 -15.4853,-9.58014 -16.1395,-8.52157 -0.3923,0.63467 -4.9239,18.82202 -10.0703,40.41635 -5.1464,21.59433 -9.7909,39.82491 -10.3211,40.51241 -1.4152,1.83504 -5.508,1.52269 -6.5517,-0.5 -0.4967,-0.9625 -1.1545,-8.05 -1.4619,-15.75 -0.6429,-16.10638 -3.3488,-27.22267 -9.4546,-38.84204 -8.7878,-16.72326 -23.5768,-26.70787 -34.6694,-23.40661 -10.8863,3.23989 -25.0981,23.20172 -32.4918,45.63792 -11.7068,35.52401 -10.2061,75.28127 4.0284,106.72105 6.9519,15.35474 18.0511,28.76128 26.4747,31.97829 4.6757,1.78563 12.3218,1.57828 17.6572,-0.47882 l 2.75,-1.06029 v -26.47386 -26.47386 l -3.25,-2.46709 c -7.3565,-5.58437 -19.9642,-11.30911 -33.4702,-15.19773 -1.8375,-0.52905 -2.696,-5.23059 -1.269,-6.94995 1.0614,-1.27887 8.0705,-1.48701 50.0765,-1.48701 47.7172,0 48.8668,0.0458 49.9061,1.98759 0.72,1.34546 0.9737,17.18777 0.7851,49.03696 -0.2399,40.52694 -0.4864,47.18076 -1.7785,47.9971 -0.825,0.52125 -4.2,0.9667 -7.5,0.98988 -3.3,0.0232 -12.3,1.16552 -20,2.53851 -30.1175,5.37025 -41.5812,6.27515 -55,4.34146 z m 2.7928,-4.8799 c -0.3944,-1.50823 -1.2511,-1.93083 -3.5476,-1.75 -1.8297,0.14408 -3.2171,-0.29983 -3.5065,-1.12196 -0.3802,-1.07983 0.5254,-1.22914 4.3912,-0.72406 2.6785,0.34996 7.906,0.70512 11.6166,0.78925 l 6.7466,0.15296 -2.2346,2.07111 -2.2345,2.0711 3.4439,0.32871 c 2.0774,0.19829 3.8581,-0.21291 4.488,-1.0364 0.5742,-0.75081 1.7319,-1.22243 2.5726,-1.04804 0.8407,0.17439 2.4534,-0.54454 3.5837,-1.59762 2.568,-2.39241 8.3878,-3.84001 8.3878,-2.08635 0,0.67057 -0.7875,1.81701 -1.75,2.54765 -1.5792,1.1988 -1.4572,1.33021 1.25,1.34659 4.5592,0.0276 7.5,-1.02256 7.5,-2.67816 0,-1.00454 -0.5705,-1.27488 -1.75,-0.82933 -1.5558,0.58767 -1.5836,0.49434 -0.25,-0.84111 1.9986,-2.0014 17.3098,-5.17647 17.8046,-3.69211 0.556,1.66797 3.9828,1.2884 5.0147,-0.55545 0.6455,-1.15342 1.755,-1.48174 3.731,-1.10402 3.9018,0.74589 7.4497,-1.06757 7.4497,-3.80789 0,-1.22787 0.675,-2.49151 1.5,-2.8081 1.9301,-0.74065 1.9495,-2.63837 0.027,-2.63837 -1.2709,0 -1.4733,-5.10652 -1.4751,-37.22131 v -37.22131 l 2.6621,-2.77869 2.6622,-2.77869 h -47.1871 c -43.8255,0 -55.7363,0.7014 -41.6972,2.45547 3.4715,0.43374 5.8825,1.3033 6.558,2.36522 0.7736,1.21622 1.2129,1.335 1.593,0.43074 1.3428,-3.19452 16.152,2.47488 20.9854,8.03384 1.7875,2.05579 1.876,2.53889 0.6113,3.33668 -1.2905,0.814 -1.2724,1.10425 0.1417,2.2779 1.3934,1.15642 1.6207,1.08947 1.6207,-0.47741 0,-1.00234 0.3375,-1.39494 0.75,-0.87244 0.4125,0.5225 0.6248,14.49825 0.4717,31.05722 l -0.2782,30.10723 -5.0866,1.64277 c -7.1377,2.30521 -15.8498,2.12642 -21.3037,-0.4372 -5.0223,-2.36078 -11.877,-8.51476 -16.0619,-14.42002 -1.5591,-2.2 -2.9439,-4.14896 -3.0773,-4.33102 -0.1335,-0.18206 -1.1812,0.17127 -2.3284,0.78518 -1.7016,0.91069 -2.0856,0.82777 -2.0856,-0.45036 0,-0.86161 -0.6884,-1.83074 -1.5298,-2.15361 -0.9655,-0.37049 -1.3095,-1.28113 -0.9326,-2.46861 0.3957,-1.2467 0.1119,-1.88158 -0.8409,-1.88158 -2.4954,0 -11.353,-22.62261 -13.1166,-33.5 -0.3567,-2.2 -0.8939,-5.2375 -1.1938,-6.75 -0.4546,-2.29317 -0.1998,-2.75 1.5342,-2.75 1.1437,0 2.0795,0.525 2.0795,1.16667 0,0.64166 0.2356,0.93107 0.5235,0.64312 1.0793,-1.07922 -0.7715,-3.70428 -2.821,-4.00132 -2.9191,-0.42307 -3.6165,-4.30353 -3.8296,-21.30847 -0.2396,-19.11672 0.6407,-25.75783 6.2301,-47 1.776,-6.74976 9.013,-24.39179 11.523,-28.0905 1.3057,-1.92408 2.374,-3.8976 2.374,-4.3856 0,-0.48801 1.6875,-3.00697 3.75,-5.5977 10.7179,-13.46282 19.1775,-19.43748 27.4891,-19.41433 4.6957,0.0131 12.9884,1.98182 16.807,3.99009 3.8084,2.00287 11.7102,8.84706 14.1176,12.22793 1.9449,2.7314 2.0076,3.17169 0.5981,4.20232 -1.6446,1.20261 -0.907,3.88704 1.6673,6.06779 2.0363,1.72495 7.4869,16.61097 9.5201,26 1.0719,4.95 2.2899,14.4 2.7067,21 0.8633,13.67169 1.4059,12.1939 3.293,-8.96815 0.9806,-10.99773 2.6177,-19.88003 5.2208,-28.32744 0.7729,-2.50834 1.32,-3.04288 2.2902,-2.23767 1.6868,1.39986 3.1459,-0.43968 3.7413,-4.71674 0.3147,-2.26101 0.049,-3.25 -0.8744,-3.25 -0.7297,0 -1.3268,0.64844 -1.3268,1.44098 0,0.79254 -0.5202,1.76251 -1.1561,2.15548 -1.7446,1.07823 -0.2913,-6.44456 1.6619,-8.60289 1.0268,-1.13462 1.3702,-2.63931 0.9681,-4.24169 -0.7359,-2.93208 1.1101,-10.47869 3.0337,-12.40238 0.7423,-0.74222 2.1048,-1.3495 3.028,-1.3495 0.9567,0 1.4662,-0.55281 1.185,-1.28571 -0.2714,-0.70715 0.243,-1.37196 1.143,-1.47736 0.9,-0.10541 3.2114,-0.4594 5.1364,-0.78665 2.9449,-0.50064 4.4913,0.0474 9.75,3.45555 3.4375,2.2278 6.25,4.72124 6.25,5.54098 0,0.91397 0.5801,1.2678 1.5,0.91482 1.4819,-0.56868 2.2004,1.16042 0.75,1.80504 -0.4125,0.18333 -0.6313,46.57083 -0.4861,103.08333 0.2314,90.12167 0.4465,102.75 1.75,102.75 0.8173,0 1.4861,-0.43844 1.4861,-0.97432 0,-0.53588 1.3277,-1.66088 2.9503,-2.5 3.4902,-1.80484 20.0497,-2.19027 20.0497,-0.46666 0,0.58246 0.4697,0.76872 1.0438,0.41391 0.5741,-0.35481 1.6719,-0.12382 2.4396,0.51331 1.627,1.35026 10.2578,0.67259 11.8617,-0.93135 1.3195,-1.31952 14.6479,-1.38825 18.0544,-0.0931 1.6195,0.61572 2.7436,0.61572 3.1241,0 0.3269,-0.52898 2.198,-0.96179 4.1579,-0.96179 2.787,0 3.3313,0.27966 2.4981,1.28354 -1.3001,1.5666 0.13,4.26118 1.7351,3.26917 0.6261,-0.38694 1.0139,-1.45709 0.8618,-2.37812 -0.2456,-1.48734 1.261,-1.7057 13.4735,-1.95281 7.5625,-0.15302 13.75,-0.008 13.75,0.32143 0,0.32981 -0.7603,1.355 -1.6895,2.27822 -1.5844,1.57422 -1.517,1.69875 1.0845,2.00314 3.6499,0.42707 5.605,-0.39342 5.605,-2.3522 0,-0.87472 -0.45,-1.31229 -1,-0.97237 -0.55,0.33992 -1,0.17869 -1,-0.35829 0,-0.58007 5.0914,-1.00039 12.5446,-1.03562 7.9227,-0.0374 12.3221,0.30051 11.9409,0.91731 -0.9027,1.4606 0.8665,1.17762 3.0734,-0.4916 1.6153,-1.22175 1.6702,-1.47353 0.3275,-1.5 -1.2237,-0.0241 -1.6183,-1.05891 -1.6328,-4.2818 -0.011,-2.3375 0.4333,-4.8125 0.9861,-5.5 0.6872,-0.85459 0.6501,-1.25 -0.1173,-1.25 -0.6911,0 -1.1224,-2.07176 -1.1224,-5.39159 0,-4.87476 0.2328,-5.45002 2.4286,-6.00113 2.2031,-0.55294 2.4285,-1.12006 2.4285,-6.1084 0,-5.94167 -0.042,-6.00558 -2.9228,-4.4637 -1.522,0.81451 -1.9343,0.70792 -1.9343,-0.5 0,-0.97086 0.919,-1.53518 2.5,-1.53518 2.9913,0 3.3127,-1.60728 0.5,-2.5 -1.2288,-0.39 -2,-1.51303 -2,-2.9124 0,-1.25269 0.9,-3.09211 2,-4.0876 2.1564,-1.95149 2.899,-10.03368 0.9806,-10.67312 -0.6699,-0.22332 -0.7267,-2.47993 -0.1655,-6.58334 0.4696,-3.43394 0.5235,-6.24354 0.1198,-6.24354 -0.4038,0 -1.5073,3.4875 -2.4522,7.75 -2.4713,11.1479 -6.7317,23.70496 -11.0368,32.52929 l -3.7382,7.66256 -28.6038,0.34062 c -15.7322,0.18735 -29.5039,0.53793 -30.6039,0.77908 -1.8833,0.41287 -2.0165,-0.15225 -2.2836,-9.68613 -0.2738,-9.77456 -0.2046,-10.1506 2,-10.87695 l 2.2836,-0.75237 -2.25,-0.4426 c -2.0306,-0.39945 -2.25,-1.02076 -2.25,-6.37305 0,-5.65915 0.1144,-5.93045 2.5,-5.93045 2.5369,0 3.7234,-2.92273 1.25,-3.07895 -1,-0.0632 -1,-0.17982 0,-0.58333 0.7886,-0.31819 1.25,-2.54639 1.25,-6.03606 v -5.53168 l -2.5,1.63806 -2.5,1.63807 v -5.38439 c 0,-5.20411 0.084,-5.36838 2.5,-4.90647 2.2487,0.42986 2.5,0.15368 2.5,-2.74708 0,-2.94064 -0.2204,-3.16966 -2.5,-2.59753 -2.1711,0.54492 -2.5,0.29606 -2.5,-1.89159 0,-1.38548 0.45,-2.51905 1,-2.51905 0.55,0 1,0.7125 1,1.58333 0,0.87084 0.5625,1.39797 1.25,1.1714 0.7287,-0.24015 1.376,-2.56853 1.5523,-5.58333 0.2688,-4.59998 0.082,-5.1714 -1.691,-5.1714 -1.0963,0 -2.2714,-0.45 -2.6113,-1 -0.3399,-0.55 0.196,-1.01368 1.191,-1.03041 1.7072,-0.0287 1.7105,-0.0878 0.059,-1.04969 -2.3285,-1.3562 -2.2166,-4.45334 0.25,-6.9199 1.828,-1.82796 3.3333,-2 17.5,-2 9.3258,0 15.5,0.38562 15.5,0.96806 0,0.53244 -1.2375,1.63942 -2.75,2.45997 -2.5946,1.4076 -2.1822,1.49416 7.3,1.53193 6.5329,0.026 10.4699,-0.37991 11.25,-1.15996 0.9333,-0.93333 1.2,-0.93333 1.2,0 0,0.66 0.3938,1.2 0.875,1.2 0.4813,0 0.875,-1.12132 0.875,-2.49183 0,-2.32718 -0.2726,-2.46152 -4.125,-2.03313 -2.2687,0.25228 -3.3375,0.21561 -2.375,-0.0815 0.9625,-0.2971 1.75,-1.18219 1.75,-1.96686 0,-1.74142 1.189,-1.83768 2.8,-0.22668 1.4315,1.43148 1.3776,1.57975 1.7076,-4.7 0.146,-2.78013 -0.2161,-5.30119 -0.8156,-5.67839 -0.7641,-0.48069 -0.7368,-1.42778 0.093,-3.25 0.6656,-1.46076 0.7626,-2.57161 0.2245,-2.57161 -0.5209,0 -0.6881,-0.675 -0.3715,-1.5 0.5018,-1.30764 -2.5002,-1.5 -23.409,-1.5 -20.0996,0 -24.1862,0.24296 -25.2294,1.5 -1.8669,2.24954 -2.7676,1.83465 -3.5274,-1.62492 -0.7644,-3.48001 1.0344,-5.52914 3.2439,-3.69543 1.0045,0.83369 1.2835,0.27785 1.2835,-2.55721 0,-3.95564 -0.1984,-4.12178 -3.0807,-2.57926 -1.9147,1.0247 -1.9445,0.51535 -1.6842,-28.75 0.2062,-23.18931 0.542,-29.73777 1.5149,-29.54318 0.6875,0.1375 1.1967,-0.0875 1.1316,-0.5 -0.5008,-3.17135 0.1477,-3.27148 20.6184,-3.18367 20.3128,0.0871 20.5011,0.10778 20.616,2.2608 0.09,1.69026 0.2175,1.78433 0.5732,0.42355 0.5901,-2.258 4.8882,-3.34633 6.8349,-1.7307 1.3239,1.09879 1.3058,1.38392 -0.156,2.45284 -1.4995,1.09645 -1.1788,2.32281 3.431,13.11835 4.7119,11.03474 10.2009,29.51286 10.2009,34.34005 0,1.13783 0.4655,2.06878 1.0344,2.06878 1.1589,0 0.6891,-5.33893 -1.7158,-19.5 -0.9039,-5.3226 -1.6579,-17.17199 -1.8454,-29 l -0.3169,-20 2.6089,-2.75 2.609,-2.75 h -79.4957 -79.4957 l -8.0692,-2.9449 c -21.6568,-7.90377 -48.2926,-8.04629 -69.6632,-0.37277 -35.6623,12.80525 -60.8954,41.34888 -71.4441,80.81767 -2.4479,9.15918 -2.674,11.59755 -2.6895,29 -0.019,21.30782 1.0429,27.86502 7.2057,44.5 3.6335,9.80766 11.4013,24.12849 12.0432,22.20286 0.1999,-0.59978 1.0472,-0.82816 1.8828,-0.50752 1.2343,0.47368 1.2691,0.74439 0.1853,1.44382 -0.8493,0.54816 -0.9706,1.13326 -0.3338,1.61084 0.55,0.4125 1,1.425 1,2.25 0,1.0065 0.8856,1.44068 2.6919,1.3197 1.9659,-0.13169 2.5438,0.2054 2.143,1.25 -0.3835,0.99937 0.1857,1.4303 1.8891,1.4303 2.9253,0 5.297,3.78312 4.3138,6.88084 -0.3984,1.25539 -0.2375,2.11916 0.3948,2.11916 0.5871,0 1.0674,-0.45 1.0674,-1 0,-1.84829 2.484,-0.95916 4.3035,1.54041 2.0278,2.78575 1.5028,4.64236 -1.0855,3.83906 -0.9449,-0.29326 -0.1606,0.85089 1.7429,2.54254 2.8689,2.54965 3.6043,2.81936 4.2997,1.57686 1.1473,-2.05023 1.9296,-1.91157 6.6497,1.17876 4.4953,2.94317 4.8932,3.77331 2.4613,5.1343 -1.2047,0.67417 -1.3121,1.10679 -0.4129,1.66256 0.6686,0.41318 1.7164,0.25045 2.3284,-0.36162 1.6874,-1.68736 3.0715,-1.39861 10.4365,2.17719 3.727,1.80953 10.2616,4.39703 14.5214,5.75 7.1339,2.26586 8.3252,3.19728 7.8876,6.16729 -0.057,0.38905 1.5769,0.9884 3.6316,1.3319 3.1398,0.52489 5.1101,0.98696 5.8922,1.3818 0.086,0.0434 -0.078,-0.81583 -0.3636,-1.90945 z m 140.4572,-8.76899 c -0.9625,-0.21409 -1.75,-1.03126 -1.75,-1.81593 0,-1.83902 0.7649,-1.80464 2.6905,0.12094 1.7848,1.7848 1.5297,2.24445 -0.9405,1.69499 z m -158.75,-15.24261 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m -62.3616,-64.5 c -0.3166,-0.825 -0.1398,-1.5 0.393,-1.5 0.5327,0 0.9686,0.675 0.9686,1.5 0,0.825 -0.1769,1.5 -0.393,1.5 -0.2162,0 -0.652,-0.675 -0.9686,-1.5 z m 5.4405,-12.08333 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m -3.5789,-2.41667 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 2.1939,-17.63948 c -0.799,-0.79893 0.1041,-2.36052 1.3651,-2.36052 0.5176,0 0.941,0.675 0.941,1.5 0,1.54641 -1.18,1.9867 -2.3061,0.86052 z m 15.3061,-35.36052 c 0,-0.55 0.7016,-1 1.559,-1 0.8575,0 1.2809,0.45 0.941,1 -0.3399,0.55 -1.0415,1 -1.559,1 -0.5176,0 -0.941,-0.45 -0.941,-1 z m -6,-1.5 c 0.6847,-0.825 1.6949,-1.5 2.2449,-1.5 0.5578,0 0.4495,0.66326 -0.2449,1.5 -0.6847,0.825 -1.6949,1.5 -2.2449,1.5 -0.5578,0 -0.4495,-0.66326 0.2449,-1.5 z m 16,-13.5 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 3.5,-29 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 112.9462,-16.08701 c -0.9121,-1.4759 0.028,-2.12973 2.5071,-1.74379 2.1005,0.32699 2.1021,0.34497 0.1322,1.56032 -1.3547,0.83582 -2.1998,0.89457 -2.6393,0.18347 z m 157.5248,217.12607 c 0.8091,-0.51167 1.1359,-1.2655 0.7262,-1.67516 -0.4096,-0.40967 -1.5055,0.0159 -2.4353,0.94562 -1.8074,1.80739 -0.7254,2.26921 1.7091,0.72954 z m -82.971,-2.03906 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -74.1875,-5.9375 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.7219,0.24063 -1.5094,1.02812 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.7219,-0.24063 1.5094,-1.02813 1.75,-1.75 z m 159.9769,-4.46164 c -0.7092,-0.76953 -1.447,-1.24947 -1.6395,-1.06653 -0.5932,0.56346 0.9101,2.46567 1.9485,2.46567 0.5393,0 0.4002,-0.62961 -0.309,-1.39914 z M 1340.8448,674.776 c 0.1916,-4.66595 0.1317,-4.79066 -1.1653,-2.42557 -0.8961,1.63397 -1.0151,2.711 -0.3452,3.125 0.6804,0.42054 0.6521,0.86039 -0.085,1.31574 -1.5255,0.94279 -1.4009,3.83015 0.1432,3.31816 0.7343,-0.2435 1.3333,-2.44363 1.4519,-5.33333 z m -143.3778,-5.82108 c 0.6743,-1.75724 -0.1316,-2.59777 -2.4908,-2.59777 -2.156,0 -2.2882,0.56768 -0.5833,2.50417 1.601,1.81837 2.4029,1.84279 3.0741,0.0936 z m 143.6759,-9.59777 c 0,-3.2057 -1.3908,-4.02995 -2.393,-1.41821 -1.0284,2.6799 -0.677,4.41821 0.893,4.41821 1,0 1.5,-1 1.5,-3 z m 74,-4 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m -74.4116,-8.74494 c -1.0755,-1.07549 -1.6465,0.43075 -0.8915,2.35181 0.7082,1.80207 0.7617,1.80519 1.112,0.0649 0.2023,-1.00555 0.1031,-2.09305 -0.2205,-2.41667 z m 0.4116,-5.25506 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -1.5,-21 c 0.3399,-0.55 0.1415,-1 -0.441,-1 -0.5824,0 -1.059,0.45 -1.059,1 0,0.55 0.1984,1 0.441,1 0.2425,0 0.7191,-0.45 1.059,-1 z m 99.5,-20.88342 c 0,-1.50886 -4.3745,-1.77723 -7,-0.42943 -2.3691,1.21617 -2.2513,1.28414 2.25,1.29811 2.6125,0.008 4.75,-0.3828 4.75,-0.86868 z m -10.5,-1.11658 c 0.3399,-0.55 0.168,-1 -0.382,-1 -0.55,0 -1.2781,0.45 -1.618,1 -0.3399,0.55 -0.168,1 0.382,1 0.55,0 1.2781,-0.45 1.618,-1 z m -107.7708,-57.60417 c -0.3323,-0.33229 -1.1948,-0.36781 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60416 1.0541,0.0434 1.6448,-0.19292 1.3125,-0.52522 z m 92.2708,-8.39583 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z m -119,-25.5 c 0,-0.825 -0.7301,-1.5 -1.6224,-1.5 -1.3288,0 -1.3972,0.27149 -0.3776,1.5 0.6847,0.825 1.4148,1.5 1.6224,1.5 0.2077,0 0.3776,-0.675 0.3776,-1.5 z m 36,-1.05902 c 0,-0.85746 -0.45,-1.2809 -1,-0.94098 -0.55,0.33992 -1,1.04148 -1,1.55902 0,0.51754 0.45,0.94098 1,0.94098 0.55,0 1,-0.70156 1,-1.55902 z m 119.5,-0.44098 c 0.3399,-0.55 -0.083,-1 -0.941,-1 -0.8574,0 -1.559,0.45 -1.559,1 0,0.55 0.4234,1 0.941,1 0.5175,0 1.2191,-0.45 1.559,-1 z M 0.142883,707.66878 c -3.435151,-1.77806 -2.510155,-1.82592 49.92312,-2.58286 39.80191,-0.57459 53.800487,-1.08443 54.903217,-1.99961 0.81407,-0.67561 2.04863,-2.57856 2.74347,-4.22877 l 1.26336,-3.00039 0.69182,2.75 c 1.09312,4.34515 -0.16437,7.42864 -3.50433,8.59295 -1.81997,0.63445 -22.479087,1.28511 -52.756027,1.66156 -46.78296,0.58168 -49.974334,0.51021 -53.26463,-1.19288 z m 405.999997,-1.62502 c -1.98963,-0.94436 6.99295,-1.32755 44,-1.87701 60.8777,-0.90387 85.2259,-1.91609 87.28526,-3.6287 0.8724,-0.7255 1.88902,-2.69792 2.25916,-4.38314 0.83606,-3.80654 2.41731,-1.90847 2.44027,2.92919 0.0286,6.02906 -2.37748,6.68114 -27.43999,7.43657 -38.36129,1.15628 -105.72744,0.86029 -108.5447,-0.47691 z m 586.3745,-0.15311 c -0.7428,-1.93555 -0.046,-4.00387 10.44902,-31.0335 6.4783,-16.68436 42.1276,-109.03008 58.435,-151.36983 l 7.0752,-18.36984 -2.4168,-1.89334 c -3.8059,-2.98147 -15.6677,-8.63254 -24.4169,-11.63241 -7.0016,-2.40066 -8.0375,-3.06515 -8.3006,-5.32438 -0.5677,-4.87638 0.062,-4.95508 37.4189,-4.67331 l 34.8817,0.26311 13.1113,32.5 c 7.2111,17.875 21.7724,53.875 32.3584,80 44.3498,109.4506 44.2068,109.08245 42.961,110.58348 -0.9885,1.19112 -10.0722,1.41652 -57.0854,1.41652 h -55.9097 l -0.8377,-2.25 c -1.6107,-4.32601 0.057,-5.85477 9.9735,-9.1442 9.4713,-3.14167 21.5412,-9.2291 23.8752,-12.04147 1.0226,-1.23209 0.7467,-2.79662 -1.5053,-8.53645 l -2.7573,-7.02788 -37.592,0.0108 -37.592,0.0108 -2.8667,7.64683 -2.8667,7.64682 2.3667,1.85081 c 3.8674,3.02441 13.9996,7.77267 22.8809,10.72273 8.7764,2.91523 10.4722,4.60595 8.8879,8.86114 -0.815,2.18903 -1.2247,2.25007 -15.1199,2.25263 -7.8552,0.001 -23.3816,0.29744 -34.503,0.65778 -18.82042,0.60978 -20.26822,0.53173 -20.90472,-1.12691 z m 8.62552,-2.5335 c 1.2617,-0.81534 1.2025,-0.97181 -0.3724,-0.98469 -1.55072,-0.0127 -1.65852,-0.27312 -0.6276,-1.51531 0.6847,-0.825 2.3845,-1.5 3.7774,-1.5 2.4692,0 2.4873,0.05 0.7226,2 -1.748,1.93157 -1.7466,2 0.041,2 1.0181,0 3.4843,-1.13173 5.4803,-2.51495 3.3942,-2.35219 4.4655,-2.52188 16.5537,-2.62205 7.1086,-0.0589 14.7247,0.36768 16.9247,0.94795 4.9782,1.31307 15.5,2.60104 15.5,1.89735 0,-0.28719 -2.5875,-1.31684 -5.75,-2.28813 -3.1625,-0.97128 -8.5738,-3.03816 -12.025,-4.59307 -6.9974,-3.15252 -10.225,-3.57143 -10.225,-1.3271 0,0.825 -0.675,1.5 -1.5,1.5 -0.825,0 -1.5,-0.675 -1.5,-1.5 0,-1.78106 -0.4302,-1.83877 -3.3157,-0.44483 -2.11,1.01928 -2.1183,1.00228 -0.2432,-0.5 1.0677,-0.85535 2.9802,-1.55517 4.25,-1.55517 2.7139,0 3.0772,-1.77184 0.5589,-2.72543 -0.9625,-0.36446 -2.3438,-1.24945 -3.0694,-1.96663 -0.9403,-0.92922 -1.8554,-1.01715 -3.1843,-0.30596 -1.0257,0.54891 -2.1194,0.99802 -2.4306,0.99802 -1.382,0 -0.3485,-6.16109 2.0231,-12.06039 2.7351,-6.80341 4.7392,-12.77421 4.8467,-14.43961 0.1283,-1.98804 84.0836,-2.32695 86.0536,-0.34738 0.3572,0.35894 0.098,1.53582 -0.5762,2.61528 -1.0344,1.65631 -0.655,3.32604 2.4307,10.69734 2.011,4.80408 3.6525,9.2522 3.6477,9.88472 -0.02,2.61013 -17.2793,12.05132 -28.7413,15.72194 -3.9875,1.27697 -7.25,2.69176 -7.25,3.14399 0,0.45222 1.0125,0.57919 2.25,0.28215 1.2375,-0.29704 4.5,-0.69299 7.25,-0.87989 2.75,-0.18691 5.675,-0.57606 6.5,-0.86479 6.7874,-2.37538 11.9254,-2.60359 47.2733,-2.09968 l 37.7733,0.53848 -1.9983,-5.06952 c -1.099,-2.78823 -2.4196,-5.86897 -2.9346,-6.84608 -0.515,-0.97711 -1.7185,-4.02656 -2.6743,-6.77656 -0.9559,-2.75 -2.8234,-7.25 -4.1499,-10 -1.3266,-2.75 -3.3631,-7.925 -4.5257,-11.5 -1.1625,-3.575 -2.935,-7.69447 -3.9388,-9.15437 -1.0037,-1.4599 -1.8278,-3.4849 -1.8312,-4.5 0,-1.0151 -0.6314,-3.0441 -1.3957,-4.5089 -0.7642,-1.4648 -2.3574,-5.25027 -3.5404,-8.41216 -1.7152,-4.58423 -1.8883,-5.91863 -0.8543,-6.58673 1.0377,-0.67057 0.9971,-1.03672 -0.2034,-1.83403 -0.825,-0.5479 -2.2185,-0.8854 -3.0967,-0.75 -1.9502,0.30069 -2.2346,-0.22699 -1.356,-2.51654 0.3721,-0.96951 0.2536,-2.31951 -0.2632,-3 -0.5169,-0.6805 -1.7346,-3.48727 -2.7062,-6.23727 -0.9716,-2.75 -2.3601,-6.35 -3.0856,-8 -2.317,-5.27008 -14.6557,-35.73094 -17.5845,-43.41148 -1.5544,-4.07631 -2.6222,-7.74166 -2.3728,-8.14521 0.2494,-0.40356 -0.1064,-0.94936 -0.7907,-1.21289 -1.8337,-0.70613 -4.4115,-10.00803 -2.912,-10.50786 2.0257,-0.67522 1.2634,-2.06034 -0.8323,-1.51231 -1.3585,0.35525 -2,0.0307 -2,-1.01183 0,-0.84417 -0.2931,-2.29858 -0.6513,-3.23203 -0.5279,-1.37566 -0.2437,-1.56784 1.5,-1.0144 2.504,0.79473 3.0252,-1.48184 0.7681,-3.35507 -1.0776,-0.89428 -1.5353,-0.75559 -2.0714,0.62756 -0.6538,1.6866 -0.7563,1.68301 -2.0481,-0.0717 -0.748,-1.01596 -1.14,-2.42039 -0.8711,-3.12096 0.2688,-0.70056 -0.2121,-1.5427 -1.0687,-1.87141 -0.8566,-0.32871 -1.5575,-1.23079 -1.5575,-2.00461 0,-0.77383 -1.1771,-4.05045 -2.6158,-7.28139 -5.539,-12.43928 -5.8412,-14.6655 -1.6342,-12.03729 1.835,1.14638 1.5751,-1.82245 -0.2955,-3.37491 -0.85,-0.70546 -1.3309,-1.84182 -1.0687,-2.52524 0.5671,-1.47781 -1.552,-4.6588 -2.924,-4.38917 -3.6667,0.7206 -5.2258,-2.23287 -2.9845,-5.65354 0.8378,-1.27813 1.523,-2.56473 1.523,-2.85908 0,-0.29435 -15.075,-0.53518 -33.5,-0.53518 -18.8073,0 -33.5,0.38881 -33.5,0.8865 0,0.98956 4.0018,1.88841 11.5,2.58304 7.9411,0.73567 13.7042,2.57948 12.5205,4.00574 -1.405,1.69288 -0.144,2.61878 1.8611,1.36657 1.2899,-0.80557 2.8487,-0.30528 6.9048,2.21617 4.6179,2.87064 5.075,3.44538 3.8567,4.8493 -0.7602,0.87597 -1.1872,2.1286 -0.949,2.78361 0.4192,1.15257 -4.7499,14.90994 -34.6838,92.30907 -7.764,20.075 -16.6029,43.025 -19.6421,51 -3.0392,7.975 -8.1545,21.25 -11.3674,29.5 -3.2129,8.25 -6.98232,18.0375 -8.37642,21.75 l -2.5348,6.75 2.2052,-0.0153 c 1.2129,-0.008 2.88022,-0.45153 3.70522,-0.98469 z m 38.5,-7 c -0.3399,-0.55 -0.1415,-1 0.441,-1 0.5824,0 1.059,0.45 1.059,1 0,0.55 -0.1984,1 -0.441,1 -0.2425,0 -0.7191,-0.45 -1.059,-1 z m 94.5,-2 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 40,-3.41667 c 0,-0.87083 0.7125,-1.58333 1.5833,-1.58333 0.8709,0 1.4052,0.53437 1.1875,1.1875 -0.618,1.85422 -2.7708,2.16176 -2.7708,0.39583 z m -5.4899,-10.59964 c 0.3454,-0.55897 1.047,-0.75742 1.559,-0.44098 1.387,0.85723 1.1284,1.45729 -0.6281,1.45729 -0.8575,0 -1.2764,-0.45734 -0.9309,-1.01631 z m -97.8741,-26.76362 c -0.3377,-0.5464 0.056,-1.54954 0.875,-2.22921 1.6259,-1.34938 1.9655,-0.29113 0.5987,1.8659 -0.5222,0.82415 -1.1007,0.96677 -1.4737,0.36331 z m -10.636,-5.16105 c 0,-0.51754 0.45,-1.2191 1,-1.55902 0.55,-0.33992 1,0.0835 1,0.94098 0,0.85746 -0.45,1.55902 -1,1.55902 -0.55,0 -1,-0.42344 -1,-0.94098 z m -22.8761,-6.40974 c -1.1062,-1.33283 -0.9413,-2.68885 0.8693,-7.14928 0.4465,-1.1 1.8008,-4.56982 3.0095,-7.71071 1.2087,-3.14089 2.8276,-6.23349 3.5975,-6.87245 0.7699,-0.63895 1.4066,-2.11913 1.415,-3.28928 0.024,-3.42538 2.4863,-10.70143 3.9208,-11.58801 0.7261,-0.44877 1.0423,-1.26571 0.7025,-1.81543 -0.3397,-0.54971 0.7276,-4.26192 2.3719,-8.24934 1.6443,-3.98742 2.9896,-7.8406 2.9896,-8.56263 0,-0.72202 0.7875,-1.77145 1.75,-2.33205 0.9625,-0.56061 1.4359,-1.03297 1.052,-1.04969 -1.2955,-0.0564 1.3814,-6.03041 2.7022,-6.03041 0.7524,0 1.1157,-0.74373 0.8548,-1.75 -0.5994,-2.31198 1.7394,-11.18349 3.6642,-13.89872 1.4007,-1.97588 3.5394,-2.76007 6.7268,-2.46643 1.4744,0.13583 1.7135,3.11515 0.25,3.11515 -0.55,0 -1,0.76472 -1,1.69938 0,1.56425 12.3711,33.18051 17.53,44.80062 5.0257,11.32025 12.5658,30.7375 12.1121,31.19119 -0.2678,0.26779 -13.5995,0.45462 -29.6261,0.41518 -24.3485,-0.0599 -29.5169,0.17575 -31.4365,1.43348 -1.96,1.28424 -2.4673,1.3003 -3.4556,0.10943 z m 59.8761,-5.07923 c 0,-0.4788 -20.6027,-51.21102 -23.9862,-59.06369 l -2.1516,-4.99364 -4.0159,10.49364 c -2.2087,5.7715 -4.8362,12.74364 -5.8389,15.49364 -3.5738,9.80177 -13.9377,36.57819 -14.5264,37.53069 -0.3807,0.61609 8.7148,0.96931 24.96,0.96931 14.0574,0 25.559,-0.19348 25.559,-0.42995 z m -44.1187,-5.75027 c 12.7845,-33.51527 17.4561,-45.45612 18.0236,-46.06913 0.3816,-0.41214 1.2581,0.81114 1.9477,2.7184 1.1164,3.08729 1.0288,3.77293 -0.7983,6.24935 -1.1288,1.52988 -4.2784,8.6316 -6.9993,15.7816 -8.935,23.48014 -8.6994,22.97843 -10.9501,23.31978 -1.828,0.27725 -1.9908,0.0112 -1.2236,-2 z m 36.6187,1.18022 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 63,7 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m -106.8333,-40.66667 c -1.1699,-1.16988 -0.7221,-2.08558 1.2754,-2.60794 2.487,-0.65036 3.3511,0.21637 1.9268,1.9326 -1.2305,1.48267 -2.1921,1.68547 -3.2022,0.67534 z m 64.3333,-14.83333 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m -6,-8.55902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 0.9307,-22.35743 c 0.9332,-1.12444 0.8038,-1.51284 -0.6276,-1.884 -1.278,-0.33138 -1.075,-0.49687 0.6969,-0.56824 3.1284,-0.12599 5.4755,1.29023 4.5691,2.75689 -0.3779,0.61149 -1.8407,1.1118 -3.2506,1.1118 -2.098,0 -2.35,-0.25717 -1.3878,-1.41645 z m 84.0693,144.97547 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z M 1027.267,669.09048 c -0.9876,-0.98026 -1.1025,-0.8654 -0.5598,0.5598 0.3755,0.98622 0.9347,1.54122 1.2426,1.23333 0.3079,-0.30789 6e-4,-1.11479 -0.6828,-1.79313 z m 87.8759,-153.25716 c 0,-0.77319 -0.9,-1.88747 -2,-2.47617 -1.356,-0.72571 -2,-0.73703 -2,-0.0352 0,0.56935 0.45,1.03518 1,1.03518 0.55,0 1,0.92656 1,2.05902 0,1.13246 0.45,1.7809 1,1.44098 0.55,-0.33992 1,-1.25064 1,-2.02383 z m -2.6362,-6.97043 c -0.3153,-0.82184 -0.9836,-1.24074 -1.4849,-0.9309 -1.0486,0.64806 -0.2068,2.42516 1.1487,2.42516 0.5003,0 0.6516,-0.67242 0.3362,-1.49426 z m -48.3638,-12.50574 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z M 559.4655,705.66093 c -1.19756,-0.23312 -2.71516,-1.07183 -3.37244,-1.86381 -1.03772,-1.25037 6.17397,-1.43997 54.77239,-1.43997 61.62758,0 57.71632,0.39188 60.0899,-6.02056 l 0.91776,-2.47944 0.70146,3.19135 c 0.85937,3.90979 -0.6754,7.07061 -4.05759,8.35652 -2.42072,0.92035 -104.40865,1.15969 -109.05148,0.25591 z m -204.16259,-2.64756 c -2.32202,-1.31274 -2.31585,-1.32289 0.80556,-1.32289 1.90761,0 4.00913,-0.86495 5.33997,-2.19786 l 2.19444,-2.19786 -0.38423,-64.25819 c -0.21133,-35.34201 -0.0835,-65.20578 0.28409,-66.36392 0.43641,-1.37498 1.82343,-2.32241 3.99695,-2.73016 4.8275,-0.90565 6.06098,-2.93077 8.57917,-14.08534 2.16468,-9.58862 4.63547,-17.09757 8.63746,-26.25 1.81255,-4.14522 1.97581,-4.25 6.62246,-4.25 3.56809,0 4.7641,0.37657 4.7641,1.5 0,0.825 -0.79987,1.5 -1.77749,1.5 -5.24989,0 -10.4055,10.05764 -15.31004,29.86703 -2.72981,11.0257 -4.78371,15.13297 -7.56746,15.13297 -0.73975,0 -2.24501,0.9 -3.34501,2 -1.95785,1.95785 -2.00031,3.34347 -2.01474,65.75 -0.0114,49.20216 -0.30184,64.3205 -1.27281,66.25 -1.47425,2.92961 -5.93266,3.70262 -9.55242,1.65622 z m 430.69811,0.59483 c -26.62104,-0.30845 -27.75311,-0.54908 -26.47833,-5.6282 0.49504,-1.97238 2.08346,-2.89227 8.86167,-5.13201 10.04421,-3.31894 14.37799,-5.40106 22.50852,-10.81399 l 6.25,-4.16096 v -49.65613 -49.65613 l -19.25,-35.7566 -19.25,-35.7566 -0.5,22.90479 -0.5,22.90478 -2.5856,0.30056 c -3.33276,0.38741 -4.29979,-0.97906 -5.87418,-8.30056 -4.34203,-20.19205 -13.82456,-38.76238 -22.19552,-43.46713 -5.40886,-3.03995 -13.20263,-2.52272 -18.0835,1.20011 -5.25694,4.00966 -9.95466,13.73863 -10.53234,21.81244 -0.42887,5.9941 -0.17393,7.28485 2.35759,11.93608 4.58905,8.43161 13.44871,15.54163 32.41355,26.01241 12.10364,6.68261 17.7338,10.8106 23.60432,17.30651 17.41201,19.26689 19.12804,54.75736 3.7811,78.19958 -17.69706,27.03198 -57.5823,35.28869 -84.80125,17.55484 -3.37557,-2.19927 -7.6762,-5.58631 -9.55695,-7.52676 -3.89085,-4.01434 -4.2217,-4.10198 -7.4644,-1.97729 l -2.36681,1.5508 5.46739,13.4904 c 3.00706,7.41972 5.31934,14.25936 5.13841,15.19921 -0.3049,1.58372 -4.41886,1.72772 -56.20274,1.96726 -40.43309,0.18703 -56.25033,-0.0541 -57.23641,-0.87245 -1.70637,-1.41615 -1.77267,-5.3172 -0.11266,-6.62868 0.6875,-0.54316 4.4,-1.98751 8.25,-3.20966 7.09,-2.25068 20.1722,-8.6367 24.19961,-11.81294 l 2.1996,-1.73473 -3.0458,-7.25 -3.04581,-7.25 h -37.28052 -37.28053 l -3.11426,7.64635 c -2.92097,7.17181 -3.0062,7.72873 -1.37327,8.97368 3.70828,2.8272 17.06764,9.23545 23.74098,11.38813 8.24543,2.6598 9.5,3.50688 9.5,6.41428 0,4.2594 -1.43464,4.57756 -20.64098,4.57756 -11.08197,0 -18.48355,0.39247 -18.85902,1 -0.39781,0.64367 -17.33199,1 -47.52383,1 -45.35094,0 -46.94012,-0.0641 -47.94099,-1.93426 -0.69172,-1.29249 -1.03518,-31.98309 -1.03518,-92.5 v -90.56574 h -7.95915 -7.95915 l -2.88377,6.25 c -3.66908,7.952 -7.60219,20.07448 -9.73553,30.00651 -1.44058,6.70677 -1.99237,7.8384 -4.07721,8.36166 -5.42154,1.36072 -5.43222,1.28086 -5.14737,-38.50073 l 0.26218,-36.61744 h 68 68 l 0.26261,36.38234 c 0.26977,37.37331 0.10576,39.13754 -3.63505,39.10235 -3.09773,-0.0291 -4.02428,-1.56899 -5.63433,-9.36376 -1.96113,-9.49442 -6.17743,-22.09547 -9.99479,-29.87093 l -2.82297,-5.75 h -7.83773 -7.83774 l 0.0213,79.75 0.0213,79.75 4.05728,2.87137 c 2.2315,1.57926 4.41134,2.47926 4.84409,2 0.43275,-0.47925 2.15803,-4.47137 3.83397,-8.87137 1.67594,-4.4 8.08782,-21.05 14.24864,-37 18.46795,-47.81251 22.97872,-59.51866 26.97332,-70 2.09614,-5.5 6.59974,-17.2 10.00801,-26 3.40826,-8.8 8.35996,-21.625 11.00377,-28.5 l 4.80692,-12.5 -2.14921,-1.68523 c -3.81817,-2.99396 -17.96835,-9.52532 -25.47622,-11.75923 l -7.30683,-2.17408 0.30683,-3.69073 0.30683,-3.69073 35.11706,-0.26265 c 27.33122,-0.20441 35.34386,0.0173 36.14,1 0.56261,0.69446 6.65007,15.21265 13.52769,32.26265 23.17807,57.45976 52.56872,129.97436 54.10844,133.5 1.45173,3.32414 1.53049,2.66167 1.56767,-13.1849 0.0433,-18.47032 0.71672,-21.8151 4.39194,-21.8151 3.27411,0 4.15945,1.42819 5.57912,9 1.63743,8.7332 6.59392,23.4648 9.75713,29 5.77423,10.10412 12.86313,15.03427 21.77023,15.14066 12.58851,0.15037 23.11966,-7.32786 26.57892,-18.87382 2.54931,-8.50886 -3.56757,-16.39234 -20.69678,-26.67415 -29.39943,-17.647 -41.50602,-35.21518 -45.35835,-65.82062 -3.33559,-26.50012 7.49865,-49.8451 29.2688,-63.06674 14.19938,-8.62368 32.06804,-10.68887 46.36912,-5.35917 l 7.12098,2.65384 h 41.61647 41.61647 l 2.32836,3.75 c 1.28059,2.0625 8.74906,15.5625 16.59659,30 7.84753,14.4375 14.45316,26.25 14.67918,26.25 0.22603,0 4.69368,-8.55644 9.92812,-19.01431 l 9.51717,-19.01431 -4.71927,-2.99287 c -4.40693,-2.79479 -19.02562,-8.97851 -21.22575,-8.97851 -0.54186,0 -2.13138,-0.52223 -3.53226,-1.16051 -2.86441,-1.30512 -3.54425,-5.767 -1.17792,-7.73088 0.97552,-0.80961 10.79071,-1.06043 34.14141,-0.87244 29.99997,0.24151 32.86597,0.4124 33.87975,2.02016 0.91459,1.45045 -2.89796,9.63585 -21.89141,47 l -22.99888,45.24367 -0.5,63.28693 c -0.43293,54.79725 -0.70122,63.41407 -2,64.23469 -1.4253,0.90056 -11.46498,0.93249 -72.14186,0.22943 z m -6.13101,-5.25105 c 3.37835,-2.65741 5.67115,-2.63104 4.96818,0.0571 -0.4488,1.71621 -0.29485,1.85539 0.92887,0.83979 0.80676,-0.66955 1.23548,-1.82027 0.95271,-2.55715 -0.38028,-0.991 0.71429,-1.3808 4.20449,-1.49732 2.59524,-0.0866 5.39362,-0.0793 6.21862,0.0164 0.825,0.0957 3.075,0.20908 5,0.25197 1.925,0.0429 4.08157,0.55643 4.79238,1.14118 0.91922,0.75621 1.62663,0.72894 2.45,-0.0944 1.76615,-1.76615 3.74559,-1.39181 5.77634,1.09238 1.47544,1.80488 2.09075,2.00271 3.1103,1 0.69904,-0.6875 2.19348,-1.25689 3.32098,-1.26531 1.68994,-0.0126 1.78654,-0.18557 0.55,-0.98469 -1.16887,-0.75538 -0.89294,-0.97275 1.25,-0.98469 3.17443,-0.0177 3.71366,1.91993 0.75,2.69494 -4.48441,1.1727 -1.42128,1.91209 8.65543,2.08928 6.64362,0.11682 11.16167,-0.23277 12,-0.92853 0.99027,-0.82185 1.34457,-0.82012 1.34457,0.007 0,0.61734 1.575,1.12244 3.5,1.12244 1.925,0 3.5,-0.43588 3.5,-0.96862 0,-0.53273 0.675,-0.70959 1.5,-0.39301 1.17804,0.45206 1.5,-0.27616 1.5,-3.39271 0,-3.69365 -0.17304,-3.93524 -2.5,-3.49041 -2.30924,0.44144 -2.5,0.19012 -2.5,-3.29366 0,-3.67782 0.0485,-3.72764 1.95278,-2.00433 1.88616,1.70696 1.97553,1.67655 2.62009,-0.89158 0.77326,-3.08092 -0.24968,-4.69074 -1.61193,-2.53672 -0.68655,1.08559 -0.93433,1.12805 -0.94563,0.16202 -0.008,-0.71996 -0.46531,-1.0309 -1.01531,-0.69098 -0.64725,0.40003 -1,-4.00929 -1,-12.5 0,-7.67402 -0.37956,-12.88345 -0.91459,-12.55279 -1.6105,0.99535 -1.8682,-1.84232 -0.47815,-5.26514 0.7411,-1.82486 1.30435,-3.62486 1.25168,-4 -0.0527,-0.37514 -0.0425,-2.62489 0.0226,-4.99946 0.10251,-3.73744 0.36958,-4.23767 1.98821,-3.72394 1.48965,0.4728 1.99932,-0.0542 2.50694,-2.59233 0.77587,-3.87934 0.4026,-4.35379 -2.29108,-2.91218 -2.01988,1.08101 -2.09062,0.88646 -2.24318,-6.16898 -0.0867,-4.00685 -0.0968,-7.96018 -0.0227,-8.78518 0.0742,-0.825 0.16387,-7.65836 0.1993,-15.18524 0.062,-13.17019 0.15629,-13.77235 2.50538,-16 1.9531,-1.85213 2.44135,-3.31407 2.44292,-7.31476 10e-4,-2.75 -0.32864,-4.51718 -0.73272,-3.92706 -0.40408,0.59012 -1.47726,1.34625 -2.38484,1.6803 -1.45226,0.53452 -1.52877,0.16603 -0.63803,-3.07294 1.94487,-7.07199 4.48806,-10.87028 7.70975,-11.51461 2.46326,-0.49266 3.62022,-1.75876 6.2912,-6.88468 1.80008,-3.45456 3.4261,-6.61851 3.61338,-7.03101 0.18728,-0.4125 -0.57043,-0.75 -1.6838,-0.75 -2.51559,0 -3.29795,-1.14837 -2.07637,-3.04775 0.81285,-1.26384 1.06177,-1.25765 1.91871,0.0478 1.12612,1.71545 1.1334,1.70103 1.51531,-3 0.15639,-1.925 0.33287,-3.8375 0.39217,-4.25 0.0594,-0.41294 1.00791,-0.75044 2.10791,-0.75044 1.29565,0 2,-0.66667 2,-1.89301 0,-1.04116 0.675,-2.15203 1.5,-2.46862 0.825,-0.31658 1.5,-1.03972 1.5,-1.60699 0,-0.56726 -0.675,-1.03138 -1.5,-1.03138 -1.99007,0 -1.87019,-0.55379 1.51535,-7 1.58872,-3.025 3.38603,-6.60975 3.99403,-7.96612 0.84597,-1.88725 1.30301,-2.14645 1.94711,-1.10428 0.46291,0.74901 1.53855,1.09441 2.3903,0.76757 1.80393,-0.69224 5.16515,-6.69717 3.7487,-6.69717 -0.5906,0 -0.62081,-1.16832 -0.0791,-3.0573 0.48226,-1.68151 0.62064,-3.72492 0.30752,-4.54089 -0.35415,-0.92289 -0.0505,-1.37366 0.80337,-1.1927 0.91742,0.19441 1.38478,-0.70409 1.40917,-2.70914 0.0444,-3.64761 1.08226,-5.49997 3.08158,-5.49997 0.84592,0 1.20038,-0.48481 0.81287,-1.1118 -0.37792,-0.6115 -0.0671,-1.49502 0.69075,-1.96338 0.92814,-0.57363 1.57328,-0.2945 1.97657,0.85519 0.48154,1.37275 0.92693,1.07204 2.27592,-1.53663 l 1.67722,-3.24338 h -31.52568 c -21.5217,0 -31.52568,0.33606 -31.52568,1.05902 0,0.58246 0.47155,0.76758 1.04789,0.41138 0.57633,-0.35619 1.81383,-0.3285 2.75,0.0615 0.93616,0.39004 3.95211,0.90856 6.70211,1.15227 2.75,0.2437 5.4275,0.86445 5.95,1.37944 0.5225,0.51499 1.94287,0.93635 3.15638,0.93635 1.70956,0 2.08933,0.44762 1.68655,1.98785 -0.70765,2.70604 2.3762,3.8469 4.08428,1.51096 1.07378,-1.46848 1.64588,-1.55682 3.53492,-0.54584 2.10908,1.12875 2.14797,1.32314 0.60569,3.02734 -1.15914,1.28083 -1.31235,2.02864 -0.51643,2.52055 0.62242,0.38467 1.3803,0.45078 1.68419,0.14689 0.30388,-0.30388 1.16804,0.063 1.92034,0.81531 1.1571,1.15711 -0.46936,4.9627 -10.5575,24.70239 -6.55893,12.834 -12.59328,23.47335 -13.40967,23.643 -0.90985,0.18908 -1.61097,-0.58497 -1.81154,-2 -0.23987,-1.6923 -0.97952,-2.30845 -2.77116,-2.30845 -1.70204,0 -3.02106,-0.98815 -4.34502,-3.25508 -1.82765,-3.12937 -1.82982,-3.22987 -0.0561,-2.6025 1.53054,0.54134 1.46151,0.27989 -0.40498,-1.53388 -2.61216,-2.53843 -2.89101,-4.10854 -0.72963,-4.10854 1.2512,0 1.12793,-0.75234 -0.69638,-4.25 -1.5823,-3.03369 -2.32458,-3.74917 -2.59364,-2.5 -0.4767,2.21312 -0.78799,2.19231 -3.19383,-0.21353 -1.34919,-1.34919 -1.60857,-2.18289 -0.82903,-2.66468 0.71621,-0.44264 0.29198,-1.01282 -1.15062,-1.54647 -1.88843,-0.69858 -2.07044,-1.10398 -1.04852,-2.33532 0.981,-1.18203 0.98147,-1.7974 0.002,-2.97727 -0.67888,-0.81799 -0.95216,-2.22257 -0.60729,-3.12128 0.39688,-1.03426 -0.29614,-2.48958 -1.88812,-3.96498 -1.79529,-1.66407 -2.51489,-1.91548 -2.51489,-0.87872 0,0.79874 -0.45,1.45225 -1,1.45225 -0.92036,0 -1.40789,-1.41669 -1.11842,-3.25 0.0651,-0.4125 -0.44408,-0.75689 -1.13158,-0.76531 -0.88567,-0.0109 -0.8397,-0.27506 0.15772,-0.9065 1.11944,-0.70868 0.69835,-1.57588 -2.05623,-4.23468 -1.90517,-1.83893 -4.07998,-4.58625 -4.83293,-6.10515 -1.20162,-2.42402 -1.16609,-2.91304 0.29063,-4 1.13052,-0.84357 1.45646,-1.99974 1.02241,-3.62664 l -0.63718,-2.38827 -42.00889,0.50651 -42.00889,0.50651 -5.04406,-2.61823 c -4.58861,-2.38183 -6.08642,-2.61824 -16.58832,-2.61824 -14.06208,0 -20.30134,1.77749 -30.73518,8.75607 -16.66158,11.14394 -25.2594,27.90507 -25.2943,49.31027 -0.0214,13.14353 2.66852,25.66186 7.72144,35.93366 5.34828,10.87223 19.399,26.74288 24.89811,28.12307 1.22152,0.30658 2.46148,1.18423 2.75546,1.95032 0.68625,1.78834 3.61021,0.70681 3.61021,-1.33537 0,-1.36172 0.21059,-1.37297 1.75,-0.0935 0.9625,0.79999 3.41974,2.3125 5.46052,3.36113 2.04079,1.04864 3.54183,2.07531 3.33565,2.28149 -0.20618,0.20619 -1.2799,-0.10948 -2.38605,-0.70147 -1.22328,-0.65468 -2.90729,-0.74485 -4.2986,-0.23017 l -2.28742,0.84618 2.2986,1.23017 c 1.26422,0.67659 2.54092,0.98785 2.83709,0.69168 0.29617,-0.29618 1.27013,0.29686 2.16435,1.31786 0.89422,1.021 2.93729,2.67706 4.54015,3.68014 l 2.91429,1.82377 -0.68334,-2.72266 c -0.37584,-1.49744 -0.42019,-2.72264 -0.0986,-2.72264 1.8534,0 4.31159,2.29922 4.88015,4.56454 0.4391,1.74951 1.14036,2.43178 2.11503,2.05777 1.64565,-0.6315 1.97972,1.4561 0.47398,2.96184 -0.64554,0.64554 -0.0434,2.30756 1.75,4.8305 3.86239,5.43353 3.86526,14.12636 0.007,20.71028 -11.11833,18.97201 -36.28572,20.9541 -48.68715,3.83443 -1.65766,-2.28833 -3.2034,-3.57765 -3.57273,-2.98005 -1.16163,1.87954 -2.69266,-0.1265 -2.0502,-2.68628 0.4505,-1.79494 0.264,-2.35695 -0.66897,-2.0159 -0.71149,0.26008 -1.18112,0.97912 -1.04362,1.59787 0.50293,2.26318 -1.29442,1.04613 -2.3998,-1.625 -2.148,-5.19059 -2.40448,-9.01519 -0.6497,-9.68857 1.42002,-0.54491 1.36821,-0.84876 -0.43043,-2.52445 -1.52381,-1.41964 -2.34287,-4.15104 -3.21489,-10.72098 -0.64357,-4.8488 -1.31706,-9.491 -1.49665,-10.316 -0.17959,-0.825 -0.37873,10.45149 -0.44253,25.05887 -0.0916,20.9699 -0.40888,26.95941 -1.50779,28.46225 -1.18252,1.61719 -1.6336,1.7027 -3,0.56869 -0.88469,-0.73409 -1.60839,-2.6296 -1.60839,-4.21225 0,-1.58266 -0.45728,-2.87756 -1.01618,-2.87756 -1.10022,0 -2.01369,-1.90441 -7.31511,-15.25056 -1.91176,-4.8128 -3.06931,-9.00186 -2.57232,-9.30901 1.38597,-0.85658 1.07286,-2.44043 -0.48245,-2.44043 -1.1929,0 -4.61394,-5.53512 -4.61394,-7.46521 0,-0.36462 -1.13752,-3.14981 -2.52782,-6.18931 -3.25788,-7.12247 -3.59527,-9.95189 -1.13663,-9.532 1.3152,0.22462 1.73344,-0.2006 1.47535,-1.5 -0.23991,-1.20787 -1.08228,-1.71257 -2.52245,-1.51131 -2.15268,0.30083 -4.88307,-2.87421 -3.5866,-4.17069 0.34732,-0.34731 0.10648,-0.63148 -0.53518,-0.63148 -0.64167,0 -1.16667,-0.70156 -1.16667,-1.55902 0,-0.85746 0.41891,-1.30012 0.9309,-0.98369 0.512,0.31644 1.21356,0.11799 1.55902,-0.44098 0.34546,-0.55897 -0.18594,-1.06851 -1.1809,-1.13231 -1.74089,-0.11163 -1.74103,-0.13363 -0.004,-0.58398 2.61715,-0.67842 1.42149,-2.84468 -1.41023,-2.55502 -1.9674,0.20126 -2.70762,-0.51492 -4.14511,-4.0105 -1.98552,-4.82901 -2.19773,-6.7345 -0.74968,-6.7345 0.55,0 1,-0.45 1,-1 0,-0.55 -0.84541,-1 -1.87868,-1 -1.19857,0 -2.32747,-1.17654 -3.11837,-3.25 -0.68184,-1.7875 -2.09773,-5.18164 -3.14644,-7.54253 -4.06686,-9.15549 -5.06796,-12.32102 -4.62663,-14.6297 0.29719,-1.5546 0.0488,-2.23819 -0.70788,-1.94784 -1.07514,0.41257 -3.522,-3.51086 -3.522,-5.64735 0,-0.50782 -1.125,-3.38281 -2.5,-6.38887 -1.375,-3.00605 -2.5,-5.70812 -2.5,-6.00459 0,-0.29647 -1.39646,-3.5878 -3.10325,-7.31408 -1.70679,-3.72627 -3.34067,-8.23754 -3.63085,-10.02504 -0.29017,-1.7875 -0.87496,-3.25 -1.29953,-3.25 -0.70028,0 -3.87923,-7.25475 -7.61143,-17.37027 -0.78538,-2.12865 -2.08654,-5.14381 -2.89146,-6.70034 -1.66643,-3.22254 -1.96449,-7.35706 -0.46348,-6.42939 0.58342,0.36057 1,-0.65628 1,-2.44098 v -3.05902 h -33 c -18.15,0 -33,0.34987 -33,0.77749 0,0.42762 4.1508,1.44012 9.224,2.25 8.10555,1.29396 9.37693,1.77564 10.48526,3.97251 1.10037,2.1811 1.77415,2.06157 1.40916,-0.25 -0.24666,-1.56221 3.10086,-0.64335 8.25652,2.26633 6.88734,3.88697 9.29971,6.46585 7.7712,8.30758 -0.62144,0.74879 -3.78407,8.29473 -7.02807,16.76876 -3.24401,8.47403 -18.14485,47.13233 -33.11299,85.90733 -14.96813,38.775 -28.71296,74.48285 -30.54405,79.35078 -1.83109,4.86793 -3.55752,9.07905 -3.83651,9.35803 -0.56568,0.56568 -12.26147,-6.31237 -13.1337,-7.72366 -0.30518,-0.49379 -1.21546,-0.64431 -2.02285,-0.33449 -1.05393,0.40443 -1.46797,-0.15534 -1.46797,-1.98465 0,-1.40139 0.45,-2.82609 1,-3.16601 0.55,-0.33992 1,-1.66138 1,-2.93657 0,-2.75536 -2.78325,-5.53217 -3.83664,-3.82776 -0.37631,0.60889 -0.8075,-3.32422 -0.95819,-8.74024 -0.26397,-9.48703 -0.19328,-9.85917 1.93209,-10.17137 1.21335,-0.17823 2.37953,-0.85115 2.59152,-1.49537 0.25143,-0.76409 -0.38413,-0.97007 -1.82808,-0.59247 -2.06848,0.54092 -2.17313,0.32998 -1.59716,-3.21927 0.33899,-2.08897 0.21577,-4.54661 -0.27382,-5.46142 -0.52477,-0.98053 -0.51461,-2.25691 0.0247,-3.10941 0.51546,-0.81473 0.9216,-0.94707 0.93023,-0.30311 0.008,0.62866 0.69031,1.40203 1.51531,1.71862 1.02029,0.39152 1.5,-0.054 1.5,-1.39301 4e-5,-1.43319 -0.67991,-1.96862 -2.49996,-1.96862 -3.65697,0 -3.10876,-3.86784 0.75,-5.29156 1.99141,-0.73474 2.40213,-4.66725 0.5,-4.78739 -1,-0.0632 -1,-0.17982 0,-0.58333 1.20826,-0.48754 1.83001,-5.33772 0.68426,-5.33772 -0.31116,0 -1.43616,0.46583 -2.5,1.03518 -1.61784,0.86584 -1.93426,0.70225 -1.93426,-1 0,-1.50419 0.65226,-2.03518 2.5,-2.03518 2.21067,0 2.5,-0.423 2.5,-3.65499 0,-3.53566 -0.0624,-3.59849 -1.91214,-1.92452 -1.81592,1.64338 -1.93168,1.6386 -2.30038,-0.095 -0.21353,-1.00402 -0.0343,-3.47504 0.39824,-5.49117 0.43256,-2.01613 0.91671,-5.84113 1.07589,-8.5 0.18953,-3.16568 0.71207,-4.74802 1.51391,-4.58431 1.49902,0.30605 1.57079,-1.71701 0.13304,-3.75 -0.79831,-1.12881 -1.18633,-1.19068 -1.56802,-0.25 -0.7064,1.74092 -2.34054,1.56637 -2.34054,-0.25 0,-0.825 0.85186,-1.5 1.89301,-1.5 2.38466,0 3.52831,-2.78741 1.93256,-4.71018 -1.67345,-2.01639 -1.7715,-5.28983 -0.15845,-5.28983 1.83686,0 1.74332,-7.6895 -0.1374,-11.29515 -1.2784,-2.45091 -1.27764,-2.86435 0.006,-3.35699 0.80527,-0.30901 1.46412,-0.94957 1.46412,-1.42346 0,-0.4739 -0.66875,-0.60501 -1.4861,-0.29136 -2.32464,0.89211 -3.51374,-3.74332 -3.51374,-13.69814 0,-8.13874 0.17079,-8.9349 1.91667,-8.9349 1.05416,0 2.14364,0.5625 2.42105,1.25 0.29085,0.72081 0.53781,0.4789 0.58333,-0.57143 0.0966,-2.2295 -2.53058,-5.03793 -3.91338,-4.18331 -0.65025,0.40188 -1.00767,-2.79319 -1.00767,-9.00781 0,-9.37461 0.0598,-9.62574 2.25,-9.44833 4.42235,0.35823 4.86526,0.11831 3.58024,-1.93934 -0.6604,-1.05747 -1.88379,-1.68089 -2.75847,-1.40567 -1.37485,0.43259 -1.38384,0.35959 -0.0718,-0.58271 2.2364,-1.60613 23.35934,-1.30035 25.64538,0.37124 1.72023,1.25787 1.72826,1.44701 0.13601,3.20643 -1.59546,1.76296 -1.56357,2.09636 0.5587,5.84031 3.31676,5.85119 7.48469,17.63867 10.20356,28.85714 1.31784,5.43759 2.54788,10.03835 2.73344,10.2239 0.18556,0.18556 0.37466,-3.67171 0.42022,-8.57171 0.0577,-6.19997 -0.29174,-9.05284 -1.14902,-9.38181 -1.74374,-0.66913 -3.61601,-16.30205 -3.30679,-27.6108 0.25041,-9.15813 0.3364,-9.47232 2.74842,-10.0427 1.75275,-0.41449 2.10865,-0.82445 1.20211,-1.38472 -0.70829,-0.43775 -1.94125,-0.54515 -2.73992,-0.23868 -2.69454,1.034 -1.76101,-5.44814 1.23498,-8.57528 l 2.68712,-2.80472 h -65.18709 -65.18709 v 34.5 c 0,22.33333 0.35266,34.5 1,34.5 0.55,0 1,-1.8 1,-4 0,-2.2 0.3375,-3.99939 0.75,-3.99864 0.4125,7.5e-4 0.59585,-2.47425 0.40745,-5.5 -0.20511,-3.29415 0.0664,-5.50136 0.67668,-5.50136 0.56057,0 1.22502,0.7875 1.47654,1.75 0.25153,0.9625 0.50953,0.2875 0.57333,-1.5 0.0638,-1.7875 0.566,-3.25 1.116,-3.25 0.55,0 1,-0.66088 1,-1.46862 0,-0.89459 -0.58629,-1.24363 -1.5,-0.89301 -1.1192,0.42948 -1.49653,-0.14969 -1.48635,-2.28138 0.0222,-4.64121 1.04061,-7.2734 2.58489,-6.6808 0.7708,0.29578 1.40146,1.25464 1.40146,2.1308 0,1.15246 0.3023,1.29071 1.0931,0.49991 0.7908,-0.7908 0.62958,-1.8005 -0.58293,-3.65103 -1.03032,-1.57247 -1.41705,-3.37392 -1.00381,-4.67592 0.6434,-2.02715 0.73398,-2.03997 2.11216,-0.29897 1.33217,1.68288 1.42418,1.59449 1.22939,-1.18098 -0.11581,-1.65 0.15013,-4.08737 0.59096,-5.41638 l 0.80152,-2.41639 1.62981,2.14019 c 2.19877,2.88733 4.88655,1.4751 3.19786,-1.68025 -1.03214,-1.92857 -0.88306,-2.12717 1.59676,-2.12717 2.12736,0 2.46851,0.26667 1.53518,1.2 -2.30923,2.30923 -1.38163,3.94423 2.05,3.61336 2.64014,-0.25456 3.2351,-0.73557 3.1706,-2.56336 -0.0735,-2.08375 0.349,-2.25 5.71861,-2.25 4.76465,0 5.69456,0.26961 5.21753,1.51273 -0.31927,0.83201 -0.0823,2.11302 0.5266,2.8467 0.79144,0.95363 1.0813,24.97042 1.01665,84.23726 -0.1162,106.52445 -0.18089,101.69721 1.35001,100.73876 0.6875,-0.43042 1.925,-0.79448 2.75,-0.80902 0.92452,-0.0163 1.38809,-0.79374 1.2083,-2.02643 -0.24551,-1.68332 -0.1147,-1.76249 0.82613,-0.5 0.84297,1.13116 1.24255,1.19263 1.62503,0.25 0.55091,-1.35771 6.63953,-1.58006 9.76197,-0.35649 1.82198,0.71396 1.79753,0.83972 -0.4725,2.42971 l -2.39394,1.67678 h 2.60006 c 2.91957,0 5.38521,-2.31683 4.31261,-4.05233 -0.45589,-0.73765 -0.0452,-0.99682 1.16391,-0.73441 1.02764,0.22304 1.72264,1.04117 1.54445,1.81807 -0.24049,1.04856 0.16632,0.96883 1.57874,-0.30939 3.76141,-3.40403 9.54069,-1.41739 6.04524,2.07806 -0.93333,0.93333 -0.54158,1.2 1.76287,1.2 2.11346,0 3.24587,-0.64504 3.95,-2.25 1.24922,-2.84739 6.38559,-3.68283 7.7419,-1.25924 0.83304,1.48857 1.09648,1.50134 2.61527,0.12685 1.33177,-1.20523 4.32366,-1.51829 14.14825,-1.48041 6.85264,0.0264 13.21557,0.45277 14.13985,0.94744 1.04355,0.55849 1.80661,0.52112 2.01318,-0.0986 0.31215,-0.93647 18.34455,-1.6141 30.54005,-1.14764 4.14344,0.15848 5.09491,0.50285 4.64302,1.68046 -0.62402,1.62615 1.16767,2.06347 2.12274,0.51813 0.33573,-0.54321 3.19492,-0.73168 6.55902,-0.43236 3.28012,0.29186 5.96385,0.30714 5.96385,0.034 0,-0.27317 -2.57979,-1.24665 -5.73287,-2.16327 -7.91756,-2.3017 -17.77299,-6.89174 -23.98831,-11.17223 -4.28047,-2.94797 -5.48873,-3.37378 -6.70619,-2.36338 -1.73159,1.4371 -3.57263,0.61347 -3.57263,-1.59829 0,-0.8473 1.575,-5.17497 3.5,-9.61706 1.925,-4.44209 3.5,-8.67229 3.5,-9.40045 0,-2.06261 2.12674,-1.55525 2.70202,0.6446 0.47766,1.82656 0.72886,1.75445 3.4833,-1 2.7583,-2.7583 6.70662,-4.22073 5.31468,-1.96852 -0.79336,1.28369 0.12493,1.2711 2.56574,-0.0352 2.40599,-1.28765 2.48363,-2.67171 0.18426,-3.28473 -0.9625,-0.25661 2.4125,-0.44729 7.5,-0.42373 7.78256,0.036 9.25482,0.29672 9.28041,1.64324 0.0261,1.37425 0.17444,1.35311 1.04969,-0.1496 0.5606,-0.9625 1.73481,-1.75 2.60935,-1.75 0.87453,0 2.17188,0.7875 2.88299,1.75 1.03589,1.40211 1.54486,1.50151 2.56024,0.5 0.69703,-0.6875 2.14706,-1.25 3.22231,-1.25 1.89164,0 1.89634,0.0648 0.14501,2 -1.75225,1.93621 -1.74663,2 0.17603,2 1.09496,0 2.58631,-1.12167 3.32397,-2.5 1.31034,-2.4484 1.57991,-2.5 13.06057,-2.5 11.67013,0 11.72542,0.0112 12.35007,2.5 0.34511,1.375 1.27977,2.5 2.07703,2.5 0.96371,0 1.22974,-0.58654 0.79371,-1.75 -0.52784,-1.40846 -0.37534,-1.53149 0.78139,-0.63039 0.79048,0.61579 3.06142,1.4118 5.04653,1.76892 3.73339,0.67163 4.17351,1.40635 11.57424,19.32176 1.18348,2.86493 -22.47956,15.43399 -33.43354,17.75885 -1.7875,0.37937 -3.25,1.10933 -3.25,1.62213 0,1.22725 7.29717,0.26294 22.5,-2.97333 1.65,-0.35125 9.075,-0.53717 16.5,-0.41317 7.425,0.124 18.54801,0.28464 24.71779,0.35697 6.16978,0.0723 11.11978,0.42554 11,0.78489 -0.11978,0.35935 0.23221,0.65337 0.78221,0.65337 0.55,0 0.8875,-0.3375 0.75,-0.75 -0.50112,-1.50337 3.06462,-0.70199 4.28154,0.96225 1.08548,1.48447 1.47678,1.52573 2.94145,0.31017 1.39623,-1.15877 2.04883,-1.17763 3.76049,-0.10868 1.73075,1.08087 2.20686,1.05081 2.89728,-0.18291 0.52003,-0.92925 2.46328,-1.50918 5.24401,-1.56499 3.9163,-0.0786 4.35959,0.13398 3.90489,1.87274 -0.52197,1.99602 1.1168,2.74698 2.19335,1.00509 0.32507,-0.52598 1.24904,-0.70382 2.05327,-0.39521 0.80423,0.30861 1.21326,0.96396 0.90896,1.45632 -0.3043,0.49237 0.37328,0.89522 1.50574,0.89522 2.11656,0 2.84213,-2.39798 1.05902,-3.5 -0.55,-0.33992 -1,-1.49148 -1,-2.55902 0,-2.10566 -2.44416,-2.64937 -3.58823,-0.79821 -0.78587,1.27156 -3.09422,-2.54874 -4.4984,-7.44482 -1.14472,-3.9914 -0.17507,-5.23177 2.35547,-3.01309 2.0132,1.76508 2.0487,1.75999 1.28727,-0.18486 -0.43066,-1.1 -1.00945,-2.7875 -1.28619,-3.75 -0.2934,-1.02041 -1.47222,-1.75 -2.82753,-1.75 -1.2784,0 -2.60247,-0.45 -2.94239,-1 -0.33992,-0.55 0.0835,-1 0.94098,-1 1.99269,0 2.03837,-2.60208 0.059,-3.36163 -2.41286,-0.92592 -1.7255,-2.63838 1.05904,-2.63838 1.40746,0 2.29086,-0.43388 1.96312,-0.96418 -0.67882,-1.09834 6.64907,-6.03582 8.95799,-6.03582 0.83593,0 1.51987,0.81581 1.51987,1.81291 0,1.9752 5.27098,7.58277 6.22803,6.62573 0.32415,-0.32415 0.85477,0.23205 1.17916,1.236 0.32439,1.00395 2.18366,2.90832 4.13171,4.23195 3.18961,2.16722 4.98745,2.66979 10.7111,2.99422 0.9625,0.0546 1.75,0.77419 1.75,1.59919 0,1.86464 1.39184,1.93772 2.87473,0.15094 0.87646,-1.05607 2.36898,-1.14448 6.87244,-0.40708 3.16406,0.51809 9.67697,0.68102 14.47313,0.36207 l 8.7203,-0.5799 -0.94555,2.48698 c -1.1103,2.92032 0.0105,3.24334 2.33631,0.67334 1.14874,-1.26934 1.32548,-2.12951 0.5889,-2.86609 -0.73658,-0.73658 -0.43236,-1.21459 1.01365,-1.59273 1.36485,-0.35691 2.06609,-0.063 2.06609,0.86609 0,0.77351 0.45,1.40638 1,1.40638 0.55,0 1,-0.58547 1,-1.30104 0,-0.71557 3.63029,-3.49565 8.06732,-6.17794 4.43702,-2.6823 10.08425,-7.12023 12.5494,-9.86207 5.48131,-6.09653 12.02395,-19.4695 12.95346,-26.47648 0.37812,-2.85036 1.1306,-5.18247 1.67219,-5.18247 0.92042,0 0.44955,-5.99723 -0.92254,-11.75 -0.31073,-1.30281 -0.07,-2.25 0.57176,-2.25 0.60963,0 1.10841,0.7125 1.10841,1.58333 0,2.63436 2.47667,0.95941 2.81583,-1.90433 0.2625,-2.21645 0.009,-2.55174 -1.5,-1.98565 -1.58053,0.59285 -1.64242,0.46782 -0.47758,-0.96492 1.1655,-1.43355 1.01713,-1.72662 -1.14947,-2.27041 -1.88826,-0.47392 -2.74062,-1.62068 -3.53719,-4.75893 -1.18997,-4.68812 -0.87719,-5.54618 1.34841,-3.69909 1.96362,1.62966 2.57984,1.02131 1.83819,-1.81475 -0.47041,-1.79887 -0.85722,-1.99938 -2.01052,-1.04223 -1.12226,0.9314 -1.78437,0.82885 -3.09214,-0.47892 -1.55213,-1.55213 -1.51511,-1.6641 0.55018,-1.6641 2.97329,0 2.79346,-1.42235 -0.9094,-7.19275 -4.53326,-7.06448 -13.97038,-15.00578 -24.85773,-20.9177 -12.89068,-6.99975 -18.82125,-10.89666 -26.51119,-17.42025 -3.57814,-3.03543 -7.87207,-5.79224 -9.54207,-6.12624 -1.66999,-0.33399 -3.50333,-1.47983 -4.07409,-2.54629 -1.7833,-3.33213 -3.94305,-12.9039 -3.18746,-14.12648 0.39649,-0.64152 0.8062,-2.82634 0.91048,-4.85515 0.22303,-4.3391 0.97049,-5.81514 2.94477,-5.81514 0.79254,0 1.44098,-0.45 1.44098,-1 0,-0.55 -0.675,-1 -1.5,-1 -2.75777,0 -0.98023,-5.13797 2.82291,-8.15959 1.87859,-1.49256 2.20289,-1.5036 3.22213,-0.1097 1.01712,1.39099 1.19784,1.38172 1.76275,-0.0904 0.34619,-0.90217 0.24171,-1.6403 -0.23219,-1.6403 -0.47389,0 -1.12961,-0.69837 -1.45716,-1.55194 -0.34149,-0.88992 -0.17385,-1.29132 0.39301,-0.94098 0.5437,0.33602 0.98855,-0.30996 0.98855,-1.43552 0,-2.65732 6.62884,-6.87581 12.53973,-7.98008 2.45315,-0.4583 4.46027,-0.47267 4.46027,-0.0319 0,0.44074 -0.97725,0.94515 -2.17167,1.1209 -1.19442,0.17575 -2.35692,0.88205 -2.58334,1.56955 -0.69092,2.09799 2.30699,1.39456 5.10396,-1.19759 2.56591,-2.37801 2.77619,-2.40637 7.39602,-0.99757 2.61527,0.79751 5.88003,2.33892 7.25503,3.42536 l 2.5,1.97533 -2.25,0.0222 c -2.69568,0.0266 -2.74382,0.33893 -0.56485,3.66446 1.61504,2.46486 1.74478,2.4946 3.11873,0.71482 1.32963,-1.72239 1.38845,-1.66209 0.81118,0.83167 -0.35002,1.51207 -0.15535,2.97736 0.44484,3.3483 3.34715,2.06865 13.85309,29.25297 15.54114,40.21298 0.36002,2.3375 1.04706,4.25 1.52677,4.25 1.21481,0 1.09405,-6.71693 -0.16299,-9.06574 -0.71358,-1.33333 -0.71358,-1.93426 0,-1.93426 1.41941,0 1.29791,-1.62123 -0.40086,-5.34887 -0.78981,-1.73312 -1.91308,-4.95113 -2.49614,-7.15113 -0.98278,-3.70818 -0.87801,-4.13376 1.43603,-5.83341 2.88138,-2.11635 3.30716,-3.85882 0.74615,-3.05357 -1.66667,0.52405 -1.66667,0.48159 0,-0.89162 2.49761,-2.05786 2.36386,-10.05056 -0.22911,-13.69205 -1.9109,-2.68362 -1.91951,-2.92122 -0.25,-6.8942 1.06588,-2.5365 2.38686,-4.11871 3.44393,-4.12497 2.24574,-0.0133 4.27984,3.68886 2.92423,5.32228 -0.69963,0.84301 0.20071,3.45044 2.99928,8.68608 2.19946,4.1148 6.97005,13.10646 10.60132,19.98146 3.63128,6.875 11.24505,20.93889 16.91951,31.25309 l 10.31719,18.7531 0.0677,51.2469 0.0678,51.24691 -3.65061,3.18783 c -4.72922,4.1297 -17.01322,10.49712 -26.25412,13.60884 -4.01108,1.35067 -7.61108,2.78787 -8,3.19378 -0.67455,0.70404 6.35082,-0.0878 10.04781,-1.13245 1.02501,-0.28965 2.00533,0.15666 2.35698,1.07305 0.7996,2.08371 2.05243,1.97814 5.11522,-0.43105 z m 52.51105,-0.99825 c 0.21297,-1.10585 1.94092,-1.56987 6.59762,-1.77172 4.10388,-0.1779 6.08838,0.0836 5.67763,0.74824 -0.34731,0.56195 -1.95491,1.02173 -3.57245,1.02173 -1.61754,0 -2.94098,0.3375 -2.94098,0.75 0,0.4125 -1.36133,0.75 -3.02518,0.75 -2.14919,0 -2.94163,-0.43384 -2.73664,-1.49825 z m -8.73818,-15.00175 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 8.5,-9.77749 c 0,-1.77238 0.42344,-3.22251 0.94098,-3.22251 1.85098,0 2.14835,2.03438 0.61695,4.22075 -1.54842,2.21069 -1.55793,2.2046 -1.55793,-0.99824 z m -154,-1.10448 c 0,-0.55 0.45,-1.27811 1,-1.61803 0.55,-0.33992 1,-0.16803 1,0.38197 0,0.55 -0.45,1.27811 -1,1.61803 -0.55,0.33992 -1,0.16803 -1,-0.38197 z m -22,-13.95751 c 0,-0.46172 1.125,-1.35207 2.5,-1.97857 2.93787,-1.33858 3.44022,0.24449 0.56574,1.78287 -2.34439,1.25468 -3.06574,1.30072 -3.06574,0.1957 z m -154.54112,-4.22705 c -0.86887,-1.40586 -0.58297,-1.59195 3.54112,-2.30489 1.925,-0.33277 2.825,-0.31935 2,0.0298 -0.825,0.34918 -1.85986,1.24388 -2.29969,1.98823 -0.96016,1.62495 -2.33902,1.74696 -3.24143,0.28684 z m 8.08416,-21.86384 c -0.28656,-0.46366 0.10257,-1.36055 0.86474,-1.99309 0.76216,-0.63254 1.18362,-1.92301 0.93658,-2.86771 -0.5304,-2.02826 3.32112,-11.20883 4.70243,-11.20883 0.52427,0 0.84071,0.3375 0.70321,0.75 -0.1375,0.4125 0.2,0.975 0.75,1.25 0.55,0.275 1.5262,-1.075 2.16933,-3 0.95443,-2.85677 0.90848,-3.70404 -0.25,-4.61024 -1.91768,-1.50007 -1.8108,-2.44756 0.99066,-8.78215 1.53566,-3.4724 3.44033,-6.01281 5.25,-7.00235 2.79519,-1.52843 2.8045,-1.56308 0.59001,-2.19573 -2.55514,-0.72997 -2.78656,-1.47297 -1.01161,-3.24792 0.68112,-0.68112 1.24362,-2.00862 1.25,-2.95 0.006,-0.94139 0.5662,-1.60175 1.24403,-1.46747 1.14523,0.22687 1.73863,-1.25839 2.49013,-6.23266 0.16523,-1.09368 1.19525,-2.14414 2.28893,-2.33436 2.51511,-0.43742 4.51576,-2.94257 3.81285,-4.77432 -0.29607,-0.77154 -0.0402,-1.4028 0.56868,-1.4028 0.60885,0 1.10699,-0.66386 1.10699,-1.47525 0,-1.14633 -0.53815,-1.27064 -2.41368,-0.55757 -2.34323,0.8909 -2.38465,0.8245 -1.41905,-2.27475 0.54705,-1.75584 1.24234,-4.00538 1.5451,-4.99899 0.32632,-1.07091 1.14107,-1.57992 2.00084,-1.25 0.7977,0.30611 1.62444,0.55656 1.83719,0.55656 0.21276,0 0.12781,0.675 -0.18877,1.5 -0.31659,0.825 -0.0775,1.5 0.53138,1.5 0.60885,0 1.10699,-0.81 1.10699,-1.8 0,-0.99 0.49189,-2.29189 1.0931,-2.8931 0.7908,-0.7908 0.62071,-1.81405 -0.61501,-3.7 l -1.70811,-2.6069 h 3.11501 c 3.29409,0 3.79636,0.92667 2.03991,3.76357 -0.85287,1.3775 0.40962,5.35382 6.10758,19.23643 3.95047,9.625 9.84086,24.025 13.08976,32 3.24891,7.975 6.29447,15.4 6.76792,16.5 2.08339,4.84049 3.10984,7.66157 3.10984,8.54705 0,0.58277 -11.66117,0.95295 -30.01905,0.95295 h -30.01905 l 0.54205,-2.75 c 0.46246,-2.34622 0.40413,-2.44006 -0.39727,-0.6391 -1.03413,2.32398 -3.74446,3.7842 -4.56364,2.45873 z m 53.85421,-17.81963 c -3.57836,-8.6625 -9.47308,-23.11281 -13.09937,-32.1118 -4.19118,-10.40082 -6.86887,-15.86566 -7.34979,-15 -0.41609,0.74899 -5.8086,14.6368 -11.98334,30.8618 -6.17474,16.225 -11.44098,30.0625 -11.70276,30.75 -0.37309,0.97981 5.04859,1.25 25.08271,1.25 h 25.55867 z m -37.82597,9.5 c 0.38833,-1.2375 4.56008,-12.34898 9.27055,-24.69218 l 8.56449,-22.44218 1.73662,3.93613 c 1.43822,3.2598 1.50227,4.06728 0.37276,4.69938 -1.20905,0.67662 -4.20546,7.81996 -14.05174,33.49885 -2.10817,5.49805 -3.24134,7.25 -4.68933,7.25 -1.52266,0 -1.76639,-0.45573 -1.20335,-2.25 z m -9.57128,-0.30902 c 0,-0.85746 -0.45734,-1.27636 -1.01631,-0.9309 -0.55897,0.34546 -0.75742,1.04702 -0.44098,1.55902 0.85723,1.38704 1.45729,1.12841 1.45729,-0.62812 z m 18.41655,-44.08411 c 0.34679,-0.90372 0.42487,-1.84878 0.17352,-2.10013 -0.79473,-0.79474 -2.59007,0.80111 -2.59007,2.30228 0,1.96152 1.63888,1.82443 2.41655,-0.20215 z m 276.08345,48.64313 c 0.33992,-0.55 1.06803,-1 1.61803,-1 0.55,0 0.72189,0.45 0.38197,1 -0.33992,0.55 -1.06803,1 -1.61803,1 -0.55,0 -0.72189,-0.45 -0.38197,-1 z m -294.5,-14.9962 c 0,-1.21231 2.80451,-2.53262 3.62877,-1.70836 0.29839,0.29839 -0.39602,1.04481 -1.54312,1.65872 -1.44619,0.77398 -2.08565,0.7892 -2.08565,0.0496 z m 187,-2.0038 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -113,-12.44098 c 0,-0.85746 0.45,-1.55902 1,-1.55902 0.55,0 1,0.42344 1,0.94098 0,0.51754 -0.45,1.2191 -1,1.55902 -0.55,0.33992 -1,-0.0835 -1,-0.94098 z m 165,-10.55902 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 96.45888,-4.06653 c -0.36253,-0.58659 -0.44468,-1.281 -0.18255,-1.54313 0.26212,-0.26213 0.74306,0.21781 1.06875,1.06653 0.67618,1.76211 0.0998,2.07206 -0.8862,0.4766 z m -11.45888,-15.43347 c 0,-0.825 0.7301,-1.5 1.62244,-1.5 1.3288,0 1.39713,0.27149 0.37756,1.5 -0.68469,0.825 -1.41479,1.5 -1.62244,1.5 -0.20766,0 -0.37756,-0.675 -0.37756,-1.5 z m -388,-0.75945 c 0,-0.6927 0.8449,-1.78711 1.87756,-2.43201 1.56335,-0.97633 1.85621,-0.89107 1.75,0.50945 -0.20408,2.69107 -3.62756,4.50547 -3.62756,1.92256 z m 390.60924,-19.31646 c -0.84547,-2.20326 0.0831,-3.13179 1.60743,-1.60742 0.83857,0.83857 0.8724,1.49426 0.11611,2.25055 -0.75629,0.75629 -1.25843,0.56892 -1.72354,-0.64313 z M 578.14288,519.35715 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m -6.48992,-6.01631 c 0.34546,-0.55897 1.04702,-0.75742 1.55902,-0.44099 1.38704,0.85724 1.12841,1.4573 -0.62812,1.4573 -0.85746,0 -1.27636,-0.45734 -0.9309,-1.01631 z m 7.48992,0.0163 c 0,-0.55 0.675,-1 1.5,-1 0.825,0 1.5,0.45 1.5,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,-0.45 -1.5,-1 z m 171.01531,0.30902 c 0.008,-0.44496 0.45153,-1.48402 0.98469,-2.30902 0.8354,-1.29269 0.97149,-1.26629 0.98469,0.19098 0.008,0.93004 -0.43469,1.9691 -0.98469,2.30902 -0.55,0.33992 -0.99311,0.25398 -0.98469,-0.19098 z m -200.51531,-1.30902 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -146,-3 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m 173.51499,-2.97199 c -0.85486,-1.59733 -0.78205,-2.02801 0.34284,-2.02801 1.68798,0 2.95571,2.68819 1.64867,3.49598 -0.49838,0.30802 -1.39456,-0.35257 -1.99151,-1.46797 z m -9.43204,-2.8938 c -0.43077,-0.697 -0.51316,-1.53733 -0.18309,-1.86741 0.89497,-0.89496 1.87077,0.4213 1.38739,1.87145 -0.33872,1.01617 -0.57427,1.01538 -1.2043,-0.004 z m 101.91705,-0.13421 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -189.5,-3.5 c 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,0.675 1,1.5 0,0.825 -0.45,1.5 -1,1.5 -0.55,0 -1,-0.675 -1,-1.5 z m 94.19495,-1 c 0.0204,-1.65 0.2445,-2.20394 0.49804,-1.23097 0.25354,0.97297 0.23687,2.32297 -0.0371,3 -0.27388,0.67703 -0.48132,-0.11903 -0.46094,-1.76903 z m 230.47172,-0.16667 c -1.21466,-1.21466 -0.69095,-2.27988 0.83333,-1.69496 0.825,0.31659 1.5,0.97746 1.5,1.46862 0,1.0484 -1.37764,1.18204 -2.33333,0.22634 z m -62.10865,-1.23945 c -0.30801,-0.49837 -1.40444,-0.6853 -2.43652,-0.4154 -1.5667,0.4097 -1.79303,0.0541 -1.37093,-2.15401 0.39898,-2.0871 0.0569,-2.76206 -1.6225,-3.20123 -1.17044,-0.30608 -2.12807,-1.00216 -2.12807,-1.54686 0,-0.5447 -0.7126,-0.71691 -1.58356,-0.38269 -1.0104,0.38773 -1.4244,0.155 -1.14382,-0.64301 0.51653,-1.4691 11.03543,-1.35387 14.82671,0.16242 1.73862,0.69535 1.91806,0.97761 0.65067,1.02351 -0.9625,0.0349 -1.75,0.54371 -1.75,1.13078 0,0.97186 1.60843,0.74483 5.75,-0.81161 2.43054,-0.91341 1.20432,1.57714 -2.2848,4.64063 -3.56418,3.12939 -5.87655,3.86506 -6.90718,2.19747 z M 413.87205,695.75298 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 48.52083,-0.0581 c -0.6875,-0.27741 -1.8125,-0.27741 -2.5,0 -0.6875,0.27741 -0.125,0.50439 1.25,0.50439 1.375,0 1.9375,-0.22698 1.25,-0.50439 z m 11.75,-0.33773 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 13.39699,-0.16667 c -0.28326,-0.45833 -1.86502,-0.83333 -3.51502,-0.83333 -1.65,0 -2.76824,0.375 -2.48498,0.83333 0.28327,0.45834 1.86503,0.83334 3.51503,0.83334 1.65,0 2.76824,-0.375 2.48497,-0.83334 z m 11.60301,-1.45577 c 0,-1.3288 -0.27149,-1.39713 -1.5,-0.37756 -0.825,0.68469 -1.5,1.41479 -1.5,1.62244 0,0.20766 0.675,0.37756 1.5,0.37756 0.825,0 1.5,-0.7301 1.5,-1.62244 z m 115.43524,-0.27278 c 0.66883,-1.08219 -2.23752,-2.34501 -3.54179,-1.53893 -0.50934,0.31479 -0.66718,0.99125 -0.35074,1.50325 0.73258,1.18535 3.1682,1.20768 3.89253,0.0357 z m 6.56476,0.50221 c 0,-0.21616 -0.69837,-0.661 -1.55194,-0.98855 -0.88992,-0.34149 -1.29132,-0.17385 -0.94098,0.39301 0.58726,0.95021 2.49292,1.40545 2.49292,0.59554 z m 38.28975,-9.60699 c -0.5017,-1.9185 -2.28975,-2.85558 -2.28975,-1.2 0,0.69662 2.03899,3.2 2.60638,3.2 0.11351,0 -0.029,-0.9 -0.31663,-2 z M 497.97698,671.38156 c 0.21115,-1.41977 -0.0648,-1.99984 -0.75,-1.57638 -0.59626,0.3685 -1.0841,1.54345 -1.0841,2.61099 0,1.06754 -0.675,1.94098 -1.5,1.94098 -0.825,0 -1.5,0.50489 -1.5,1.12197 0,2.05154 4.48497,-1.75008 4.8341,-4.09756 z m 239.89507,2.37142 c -0.33229,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 2.77083,-1.39583 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 115.32933,-1.3523 c 0.25442,-1.32108 -0.15595,-1.73145 -1.47703,-1.47703 -1.00613,0.19376 -1.98787,1.1755 -2.18163,2.18163 -0.25442,1.32108 0.15595,1.73145 1.47703,1.47703 1.00613,-0.19376 1.98787,-1.1755 2.18163,-2.18163 z M 752.14288,660.91617 c 0,-0.79254 -0.45,-1.7191 -1,-2.05902 -0.55,-0.33992 -1,0.30852 -1,1.44098 0,1.13246 0.45,2.05902 1,2.05902 0.55,0 1,-0.64844 1,-1.44098 z m -232.58179,-6.16601 c 0.86999,-0.33384 1.58179,-1.04014 1.58179,-1.56955 0,-1.39049 -4.26568,-0.55929 -4.75501,0.92654 -0.4483,1.36128 0.69678,1.59331 3.17322,0.64301 z m 45.58179,0.21398 c 0,-0.94863 -2.99338,-1.42672 -3.52699,-0.56332 -0.32508,0.52598 0.33551,0.95633 1.46797,0.95633 1.13246,0 2.05902,-0.17686 2.05902,-0.39301 z m 79.5,-6.60699 c -0.33992,-0.55 -1.06803,-1 -1.61803,-1 -0.55,0 -0.72189,0.45 -0.38197,1 0.33992,0.55 1.06803,1 1.61803,1 0.55,0 0.72189,-0.45 0.38197,-1 z m 211.5,-22 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -221,-1 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 76,-7 c 0,-0.55 -0.7875,-0.99311 -1.75,-0.98469 -1.49555,0.0131 -1.5319,0.15626 -0.25,0.98469 1.88721,1.21961 2,1.21961 2,0 z m -82.39583,-9.72917 c -1.01652,-1.01651 -1.85525,0.51389 -1.02122,1.86338 0.63003,1.01942 0.86558,1.02021 1.2043,0.004 0.2316,-0.69479 0.14921,-1.53513 -0.18308,-1.86742 z m 136.39583,-4.27083 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -308.33772,-4.25 c -0.27741,-0.6875 -0.50439,-0.125 -0.50439,1.25 0,1.375 0.22698,1.9375 0.50439,1.25 0.27741,-0.6875 0.27741,-1.8125 0,-2.5 z m 398.15022,-4.6875 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.72187,0.24062 -1.50937,1.02812 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.72187,-0.24063 1.50937,-1.02813 1.75,-1.75 z M 618.0286,586.28652 c -1.60476,-0.99179 -2.33522,-0.46569 -1.41676,1.02041 0.36808,0.59556 1.13619,0.79425 1.7069,0.44153 0.67187,-0.41524 0.56959,-0.93059 -0.29014,-1.46194 z m 240.11428,-13.48839 c 0,-0.79254 -0.45,-1.44098 -1,-1.44098 -0.55,0 -1,0.92656 -1,2.05902 0,1.13246 0.45,1.7809 1,1.44098 0.55,-0.33992 1,-1.26648 1,-2.05902 z m -402,-21.44098 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 146.21667,-7.18333 c -1.52437,-1.52437 -2.4529,-0.59584 -1.60743,1.60742 0.46511,1.21205 0.96725,1.39942 1.72354,0.64313 0.75629,-0.75629 0.72246,-1.41198 -0.11611,-2.25055 z m -3.21667,-7.87569 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m -104,-8.64098 c 0,-1.85714 -0.32241,-2.37759 -1.03278,-1.66722 -0.56803,0.56803 -0.74489,1.78303 -0.39301,2.7 0.92629,2.41389 1.42579,2.05207 1.42579,-1.03278 z m 386.70828,-1.55 c 2.94005,-5.01366 3.43385,-6.74177 1.74079,-6.09208 -0.79699,0.30583 -1.44907,1.11068 -1.44907,1.78855 0,0.67788 -1.125,1.74508 -2.5,2.37158 -2.65253,1.20857 -3.33554,3.67814 -1.25,4.51967 0.6875,0.27741 1.31805,0.53991 1.40122,0.58333 0.0832,0.0434 1.00885,-1.38355 2.05706,-3.17105 z m -425.34665,-2.25 c 0.39855,-1.03862 -0.0676,-1.5 -1.51546,-1.5 -1.74534,0 -1.88524,0.248 -0.84617,1.5 0.68469,0.825 1.36664,1.5 1.51546,1.5 0.14881,0 0.52958,-0.675 0.84617,-1.5 z m 238.63837,-3.68146 c 0,-1.68294 -0.26564,-1.84297 -1.44056,-0.86787 -0.79231,0.65756 -1.19515,1.83507 -0.89521,2.6167 0.75099,1.95706 2.33577,0.77051 2.33577,-1.74883 z m -217.75,-9.48082 c -0.6875,-0.27741 -1.8125,-0.27741 -2.5,0 -0.6875,0.27741 -0.125,0.50438 1.25,0.50438 1.375,0 1.9375,-0.22697 1.25,-0.50438 z m 221.16655,-0.98085 c 0.34679,-0.90372 0.42487,-1.84878 0.17352,-2.10013 -0.79473,-0.79474 -2.59007,0.80111 -2.59007,2.30228 0,1.96152 1.63888,1.82443 2.41655,-0.20215 z m 7.58345,-12.55687 c 0,-1.61542 -0.29571,-1.90429 -1.11287,-1.08713 -0.61207,0.61207 -0.81052,1.60208 -0.44098,2.2 1.03439,1.67368 1.55385,1.30164 1.55385,-1.11287 z m 20,-3.85902 c 0,-0.51754 -0.675,-0.94098 -1.5,-0.94098 -1.54641,0 -1.9867,1.17996 -0.86052,2.30615 0.79893,0.79893 2.36052,-0.10419 2.36052,-1.36517 z M -4.19045,700.69048 C -4.557117,700.32382 -4.857117,652.62819 -4.857117,594.7002 V 489.37658 l -4.75,-3.484 c -6.516319,-4.77955 -17.687026,-10.21304 -27.525502,-13.38854 -7.779962,-2.51109 -8.240771,-2.82112 -8.525563,-5.73591 -0.165586,-1.69473 0.284414,-3.56141 1,-4.14818 0.891282,-0.73084 27.706003,-1.17414 85.137045,-1.40749 81.931117,-0.33289 83.868107,-0.29669 85.249997,1.59316 1.10602,1.51258 1.41402,6.24848 1.41402,21.74266 v 19.80887 l 22.25,0.0153 c 12.2375,0.008 22.86658,0.4059 23.62018,0.88329 1.32141,0.83708 10.4396,22.76521 38.43605,92.43388 l 13.19377,32.83248 0.25729,-65.2388 c 0.18208,-46.16584 0.58332,-65.63165 1.37245,-66.58249 1.48119,-1.78473 16.85107,-1.86039 19.02882,-0.0937 0.84745,0.6875 20.62096,23.25516 43.94113,50.15035 23.32017,26.89519 43.61952,50.29519 45.10967,52 l 2.70936,3.09965 0.0406,-42.24373 0.0406,-42.24373 -4.25,-3.13657 c -5.15481,-3.80433 -14.85019,-8.3688 -21.14068,-9.95276 -3.56049,-0.89654 -4.77112,-1.71971 -5.23246,-3.5578 -1.28751,-5.12986 -0.1368,-5.36668 25.99558,-5.3501 13.27016,0.008 24.62539,0.34593 25.23385,0.75 0.78774,0.52314 1.31114,28.98548 1.81767,98.8456 0.65373,90.16078 0.57855,98.24372 -0.92772,99.75 -0.90142,0.9015 -2.21806,1.63909 -2.92578,1.63909 -1.07361,0 -22.45558,-22.90277 -98.57038,-105.58123 l -7.5,-8.14675 -0.27571,32.11399 -0.2757,32.11399 2.7757,2.30643 c 3.96718,3.29645 11.74343,7.16973 19.27571,9.60103 6.36097,2.05322 6.5,2.1729 6.5,5.59532 v 3.49722 l -24.87616,0.26775 c -17.51279,0.18849 -25.28281,-0.0698 -26.25,-0.87245 -0.78225,-0.64922 -1.37384,-3.02519 -1.37384,-5.51774 v -4.37756 l -19.25,-0.13235 c -10.5875,-0.0728 -26.225,-0.41029 -34.75,-0.75 -15.33286,-0.61099 -15.50361,-0.64316 -15.83466,-2.98299 -0.44643,-3.15525 0.50429,-3.93403 8.00019,-6.5533 3.50581,-1.22503 8.47345,-3.45756 11.03919,-4.96118 l 4.66499,-2.73387 -1.78029,-4.19315 -1.78029,-4.19316 -24.51215,-0.26716 -24.51216,-0.26716 -1.76833,4.63032 c -1.48214,3.88092 -1.54565,4.78035 -0.39241,5.55731 3.25034,2.18984 10.76048,5.69601 15.5791,7.27323 5.18934,1.69856 6.93192,3.75484 5.76314,6.80062 -0.59739,1.55679 -12.60595,2.512 -37.02782,2.94534 -10.768867,0.19108 -12.438497,-0.23346 -12.438497,-3.16279 0,-1.63599 11.037017,-30.70201 42.532587,-112.00971 l 8.3283,-21.5 -2.18045,-1.89569 c -2.47491,-2.15172 -10.81433,-6.14532 -14.93044,-7.14993 l -2.75,-0.6712 v 14.17415 c 0,7.85826 -0.46127,15.03604 -1.03518,16.10841 -1.16553,2.1778 -5.18896,2.58641 -6.73767,0.68426 -0.55976,-0.6875 -1.77116,-4.97068 -2.692,-9.51818 -1.99072,-9.83098 -6.28142,-22.85231 -10.6612,-32.35436 l -3.17003,-6.87746 H 82.494843 62.142883 v 31 31 h 24.46482 c 23.164187,0 24.519847,0.10283 25.499997,1.93426 1.34666,2.51627 1.34666,26.61521 0,29.13148 -0.98015,1.83143 -2.33581,1.93426 -25.499997,1.93426 h -24.46482 v 40.99028 40.99029 l 4.75,3.49143 c 6.96306,5.11811 18.69355,10.98055 27.25,13.61846 9.346497,2.88149 10.174257,3.50007 9.801067,7.32437 l -0.30107,3.08517 -15.999997,0.61457 c -22.41856,0.86112 -91.02754,1.02456 -91.833333,0.21876 z m 17.234034,-7.83333 c 9.667165,0 12.903855,0.76669 10.225318,2.42212 -0.935233,0.578 -0.519981,1.01317 1.435024,1.50384 1.854114,0.46536 3.229633,0.21194 4.218827,-0.77726 1.29033,-1.29033 1.24131,-1.44846 -0.40558,-1.30822 -1.272803,0.10838 -1.981664,-0.60563 -2.211298,-2.22739 -0.456135,-3.22139 1.852678,-4.53574 3.595838,-2.04703 0.81743,1.16706 2.52171,1.93394 4.29787,1.93394 1.61882,0 2.9433,0.45 2.9433,1 0,1.85273 2.05743,1.01898 2.86366,-1.16047 0.70839,-1.91497 0.87477,-1.96356 1.46419,-0.42756 0.36574,0.9531 0.20076,2.60032 -0.36662,3.66047 -1.10307,2.06111 0.37193,2.81555 1.60475,0.8208 0.47881,-0.77472 0.93022,-0.70841 1.50465,0.22104 0.45134,0.73029 1.17884,0.96958 1.61667,0.53176 0.43782,-0.43783 0.003,-1.23995 -0.96666,-1.7825 -0.96949,-0.54255 -1.50168,-1.4088 -1.18266,-1.925 0.81767,-1.32302 35.16662,-1.22553 35.98716,0.10214 0.35375,0.57237 1.46341,0.78034 2.46592,0.46216 1.00251,-0.31819 3.77714,-0.13842 6.16584,0.39948 6.63678,1.49451 11.843097,2.05034 11.843097,1.26439 0,-0.38915 -3.449227,-1.77825 -7.664967,-3.08688 -8.0821,-2.50881 -20.59276,-8.29388 -23.64608,-10.93421 -1.5787,-1.36517 -1.94128,-1.37875 -2.82613,-0.10586 -0.88257,1.26962 -0.96191,1.26528 -0.6078,-0.0332 0.22815,-0.8366 -1.12056,-2.70763 -3.0665,-4.25407 -2.81634,-2.23815 -3.75115,-2.53042 -4.93936,-1.54429 -2.0015,1.6611 -4.24916,-1.44283 -4.24916,-5.86792 0,-2.50248 -0.3547,-3.14138 -1.5,-2.70189 -0.94984,0.36449 -1.5,-0.0138 -1.5,-1.03138 0,-0.88385 0.675,-1.60699 1.5,-1.60699 1.07811,0 1.5,-1.10202 1.5,-3.91821 0,-4.88564 0.80847,-7.08181 2.60699,-7.08181 0.96382,0 1.39301,-1.26125 1.39301,-4.09362 0,-3.12673 -0.43249,-4.20672 -1.83107,-4.57246 -1.4411,-0.37685 -1.85498,-1.52827 -1.94332,-5.40638 -0.0617,-2.71015 0.33881,-4.92754 0.89009,-4.92754 0.55129,0 0.72422,-0.45 0.3843,-1 -0.33992,-0.55 0.42102,-1.06128 1.69098,-1.13618 2.17641,-0.12836 2.18682,-0.16015 0.18117,-0.55355 -2.92222,-0.57317 -3.34792,-3.97625 -3.36114,-26.86914 -0.008,-14.65461 0.30839,-19.49568 1.37117,-20.94912 1.27408,-1.74241 2.80756,-1.8805 19.60629,-1.76559 16.60263,0.11357 18.41484,0.29901 20.36782,2.08418 1.17904,1.07774 3.15621,2.26658 4.39371,2.64185 1.926257,0.58415 2.249997,0.31292 2.249997,-1.88506 0,-1.61546 0.55617,-2.56739 1.5,-2.56739 1.21131,0 1.5,-1.57725 1.5,-8.19528 0,-7.53128 0.21772,-8.42253 2.68709,-11 l 2.68709,-2.80472 H 83.901403 c -21.90033,0 -25.84247,0.22681 -27.17942,1.56376 -0.86007,0.86006 -2.00531,1.29086 -2.54498,0.95733 -1.07902,-0.66688 -1.37982,-25.88434 -0.3747,-31.41379 l 0.6167,-3.3927 1.83971,2.3927 1.8397,2.3927 0.0222,-3.61133 c 0.0198,-3.21124 -0.22703,-3.56341 -2.22776,-3.17885 -2.21141,0.42506 -2.24445,0.28545 -1.92653,-8.13867 0.2408,-6.37952 0.66952,-8.57115 1.67671,-8.57115 0.74426,0 1.56022,0.7875 1.81324,1.75 0.25302,0.9625 0.46746,-2.525 0.47652,-7.75 0.0233,-13.41117 -0.0496,-13 2.30371,-13 1.25262,0 2.30371,-0.8034 2.61663,-2 0.29753,-1.13777 1.36402,-2 2.47377,-2 1.532,0 1.80643,0.45472 1.27843,2.11831 -0.48754,1.53609 -0.29992,1.98857 0.68261,1.64626 0.74522,-0.25963 1.20713,-1.28071 1.02648,-2.26907 -0.30597,-1.674 0.50944,-1.75841 11.91167,-1.23307 9.58275,0.44151 12.42787,0.89943 13.1049,2.10922 1.04405,1.86561 4.14994,0.95167 3.40075,-1.00069 -0.64383,-1.67779 5.506227,-1.92562 8.466757,-0.34119 1.60059,0.85661 1.72474,1.34906 0.73832,2.92857 -0.95823,1.53438 -0.81994,2.57818 0.72057,5.43874 1.35021,2.5072 2.16424,3.18445 2.79027,2.32143 0.58593,-0.80776 0.68543,-0.60595 0.29516,0.59866 -0.3238,0.99945 0.26249,3.69945 1.30285,6 2.25673,4.99028 7.40617,21.59655 9.51445,30.68283 l 1.50819,6.5 -0.3891,-6.5 c -0.214,-3.575 -1.13134,-11.225 -2.03853,-17 -1.59657,-10.16352 -1.75364,-26.07923 -0.27197,-27.55974 0.39921,-0.39889 1.41171,-0.15604 2.25,0.53968 1.29966,1.07862 1.52417,0.87866 1.52417,-1.35749 0,-2.69015 -1.34802,-3.4864 -2.56598,-1.51569 -1.28404,2.07762 -2.29781,-1.31161 -1.14749,-3.83629 0.74418,-1.6333 0.76882,-2.63303 0.0762,-3.09208 -0.56295,-0.37312 -1.12493,-3.10261 -1.24884,-6.06554 -0.19657,-4.70057 0.1323,-5.76141 2.58041,-8.32372 l 2.80569,-2.93656 -77.999997,0.1718 c -42.9,0.0945 -80.3625,0.41462 -83.25,0.7114 -5.870551,0.60337 -7.044892,1.87269 -1.911125,2.06569 1.836382,0.069 4.574144,0.59517 6.083916,1.16918 1.509773,0.57402 3.069003,0.84345 3.464957,0.59873 2.176603,-1.34521 15.410613,3.35445 16.890008,5.99799 0.462864,0.82709 2.1354,1.84982 3.716748,2.27274 3.596975,0.96198 4.519494,3.15279 1.338829,3.17947 -2.092386,0.0176 -1.894466,0.38754 1.916667,3.58294 l 4.25,3.56336 0.03596,105.66707 0.03596,105.66706 2.45064,-3 c 2.423931,-2.9673 2.558839,-3 12.378135,-3 z m 19.349299,-3.16228 c -0.6875,-0.27741 -1.25,-1.59189 -1.25,-2.92105 0,-1.32917 -0.45,-2.41667 -1,-2.41667 -0.55,0 -1,-0.50625 -1,-1.125 0,-0.69339 1.05505,-0.91486 2.75,-0.57727 3.52848,0.70279 5.98848,-1.1259 6.41403,-4.76799 0.18478,-1.58153 0.96671,-3.08295 1.73761,-3.3365 1.02257,-0.33633 1.24391,0.14219 0.8184,1.76933 -0.73924,2.82685 0.0888,5.03743 1.88695,5.03743 1.85589,0 1.78173,1.63686 -0.10699,2.36163 -0.825,0.31658 -1.5,1.31351 -1.5,2.21539 0,1.22886 -0.59791,1.48973 -2.38588,1.04098 -1.83027,-0.45937 -2.50708,-0.13531 -2.90638,1.39159 -0.52455,2.00589 -1.16675,2.25256 -3.45774,1.32813 z m -8.772508,-5.3013 c 0.442006,-0.71518 -0.09398,-1.38487 -1.376876,-1.72036 -3.298511,-0.86258 -2.457342,-2.31606 1.340367,-2.31606 4.462779,0 5.205417,1.34645 1.927307,3.49434 -1.437995,0.94221 -2.288855,1.18615 -1.890798,0.54208 z m -12.946779,-4.81698 c -0.329149,-0.85775 -0.02071,-1.92613 0.685417,-2.37418 0.882023,-0.55966 0.579627,-0.81943 -0.96613,-0.82995 -2.3667,-0.0161 -3.006534,-1.42971 -1.162868,-2.56916 0.597923,-0.36954 1.587923,-0.17109 2.2,0.44098 0.612078,0.61208 2.12131,1.11287 3.353851,1.11287 3.059761,0 3.956814,1.83868 1.709155,3.50323 -2.893016,2.14249 -5.164819,2.42209 -5.819425,0.71621 z m -6.718213,-1.90255 c 0.721875,-0.28887 1.584375,-0.25335 1.916667,0.0789 0.332291,0.33229 -0.258334,0.56864 -1.3125,0.52522 -1.164943,-0.048 -1.4019,-0.28494 -0.604167,-0.60416 z m 24.6875,-0.31689 c 0.33992,-0.55 1.37898,-0.99311 2.30902,-0.98469 1.45727,0.0132 1.48367,0.14929 0.19098,0.98469 -1.95837,1.2656 -3.282182,1.2656 -2.5,0 z m 6.01008,-0.0163 c 0.34546,-0.55897 1.04702,-0.75742 1.55902,-0.44098 1.38704,0.85723 1.12841,1.45729 -0.62812,1.45729 -0.85746,0 -1.27636,-0.45734 -0.9309,-1.01631 z m -15.169662,-3.75214 c -0.637771,-0.4058 -1.164186,-1.86141 -1.169812,-3.23469 -0.0056,-1.37327 -0.312999,-3.67799 -0.683051,-5.1216 -1.364278,-5.32219 7.419351,-8.89465 9.071401,-3.68951 0.677725,2.13533 -0.547616,4.11267 -1.279194,2.06425 -0.640446,-1.79325 -2.706733,-1.54067 -4.611121,0.56365 -1.266098,1.39903 -1.370116,2.08488 -0.454987,3 0.65249,0.65249 1.826446,1.18635 2.608791,1.18635 1.092662,0 1.158215,0.31838 0.282747,1.37325 -0.626834,0.75529 -0.858789,2.10529 -0.515456,3 0.658542,1.71614 -1.150228,2.19392 -3.249318,0.8583 z M 6.642883,670.59184 c -0.55,-0.40408 -1.04489,-2.13738 -1.099756,-3.85178 -0.08255,-2.57937 0.22418,-3.03238 1.778043,-2.62604 1.325638,0.34667 1.698236,1.05681 1.267137,2.41508 -0.335863,1.05822 -0.06838,2.57743 0.594402,3.37604 0.954042,1.14955 0.919175,1.44882 -0.167381,1.4367 -0.754845,-0.008 -1.822445,-0.34592 -2.372445,-0.75 z m 0.75,-9.73052 c -1.594075,-1.81056 -1.570544,-2.32648 0.186242,-4.08327 1.540236,-1.54023 3.182731,-0.23144 2.036685,1.6229 -0.354809,0.5741 -0.101266,1.6991 0.563428,2.5 1.655355,1.99459 -1.028983,1.9564 -2.786355,-0.0396 z m 20.25,-2.50417 c 0.339919,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.059017,1 -0.582459,0 -0.780902,-0.45 -0.440983,-1 z m 15.1875,0.35417 c -1.3041,-1.3041 -0.68149,-2.35417 1.39583,-2.35417 1.16375,0 1.90861,0.52417 1.6875,1.1875 -0.48711,1.46134 -2.15686,2.09314 -3.08333,1.16667 z m -28.6875,-1.35417 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,-0.9 1,-2 0,-1.1 0.45,-2 1,-2 1.641934,0 1.131053,4.73573 -0.581787,5.39301 -2.133979,0.81889 -2.418213,0.77269 -2.418213,-0.39301 z m 20.8125,-20.68311 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 15.6875,-0.31689 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -38.5,-19.05902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 29.5,-1.94098 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -7.47104,-18.96094 c -0.80907,-0.51167 -1.2107,-1.19066 -0.8925,-1.50885 0.3182,-0.3182 1.14776,0.10733 1.84348,0.94562 1.4426,1.73822 1.16599,1.90204 -0.95098,0.56323 z m 8.97104,-2.03906 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -2.30615,-2.63948 c -0.79893,-0.79893 0.10419,-2.36052 1.36517,-2.36052 0.51754,0 0.94098,0.675 0.94098,1.5 0,1.54641 -1.17996,1.9867 -2.30615,0.86052 z m 6.7523,-2.44765 c -0.36954,-0.59793 -0.17109,-1.58793 0.44098,-2.2 0.81716,-0.81716 1.11287,-0.52829 1.11287,1.08713 0,2.41451 -0.51946,2.78655 -1.55385,1.11287 z m -21.44615,-0.97189 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 3.54271,-7.87188 c -0.31644,-0.512 -0.11799,-1.21356 0.44098,-1.55902 0.55897,-0.34546 1.01631,0.0734 1.01631,0.9309 0,1.75653 -0.60006,2.01516 -1.45729,0.62812 z m 45.95729,-1.0691 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -40.90523,-17.84666 c -0.32081,-0.51907 0.15354,-1.22652 1.0541,-1.57209 2.21014,-0.84811 2.72698,-0.13807 0.96432,1.32481 -0.85565,0.71013 -1.67065,0.80998 -2.01842,0.24728 z m -8.09477,-1.15334 c -0.339919,-0.55 0.308524,-1 1.440983,-1 1.132457,0 2.059017,0.45 2.059017,1 0,0.55 -0.64844,1 -1.44098,1 -0.792544,0 -1.719101,-0.45 -2.05902,-1 z m 5.5,-4.60699 c 0,-1.05452 0.5438,-1.39831 1.58179,-1 0.86998,0.33385 1.99498,0.60699 2.5,0.60699 0.50501,0 0.91821,0.45 0.91821,1 0,0.55 -1.125,1 -2.5,1 -1.62953,0 -2.5,-0.55953 -2.5,-1.60699 z m 14,-11.45203 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 10.18883,-55.683 c 0.18378,-0.95426 1.11489,-1.88537 2.06915,-2.06915 2.13031,-0.41026 1.35065,2.36364 -0.90795,3.23034 -1.0302,0.39533 -1.39139,0.0341 -1.1612,-1.16119 z m -46.18883,207.30104 c 0,-1.05548 -1.919113,-1.49891 -2.489919,-0.57533 -0.345463,0.55897 0.073443,1.01631 0.930902,1.01631 0.857459,0 1.559017,-0.19844 1.559017,-0.44098 z M 354.5183,690.80736 c -1.00614,-1.53557 -1.95803,-2.20238 -2.18252,-1.5289 -0.40724,1.22171 2.78876,5.43036 3.54754,4.67158 0.23065,-0.23065 -0.38361,-1.64485 -1.36502,-3.14268 z m -3.22785,-11.68557 c -0.18529,-4.43988 0.16167,-8.47394 0.83742,-9.7366 0.75179,-1.40473 0.81716,-2.56914 0.18761,-3.34196 -0.5314,-0.65235 -1.03056,-6.24858 -1.10924,-12.43608 -0.11074,-8.70791 0.15436,-11.25 1.17321,-11.25 0.92137,0 1.20739,-1.14179 0.95334,-3.80576 -0.24826,-2.60326 0.13835,-4.22178 1.22358,-5.12244 1.27828,-1.06088 1.58651,-3.52342 1.58651,-12.67519 0,-11.28175 -0.0169,-11.36275 -2.5,-11.98597 -3.11123,-0.78087 -3.30805,-2.47261 -0.25,-2.14885 1.97736,0.20934 2.28726,-0.27678 2.5575,-4.01179 0.17643,-2.43855 -0.12986,-4.25 -0.71862,-4.25 -0.56436,0 -0.76709,0.675 -0.45051,1.5 0.35298,0.91983 -8.3e-4,1.5 -0.91475,1.5 -2.08869,0 -3.04463,-4.24085 -1.18991,-5.2788 1.90146,-1.06412 1.88261,-3.34746 -0.0337,-4.08283 -0.83087,-0.31883 -1.5,-1.80408 -1.5,-3.32949 v -2.75389 l 1.5567,2.2225 c 2.34828,3.35264 2.92037,2.75159 3.18415,-3.34532 0.23879,-5.51924 -1.70933,-11.43217 -3.76654,-11.43217 -0.53588,0 -0.97432,-1.64474 -0.97432,-3.65499 0,-3.47755 0.0888,-3.57464 1.82874,-2 1.00581,0.91025 2.13081,1.65499 2.5,1.65499 1.09314,0 0.76397,-4.82467 -0.3773,-5.53001 -0.7168,-0.44301 -0.67806,-1.09446 0.12245,-2.05902 0.92622,-1.11602 0.83185,-1.41097 -0.45145,-1.41097 -0.89234,0 -1.65096,0.5625 -1.68583,1.25 -0.0349,0.6875 -0.46295,0.25753 -0.95131,-0.9555 -1.45309,-3.60928 -1.43567,-54.04692 0.0193,-55.80001 0.67213,-0.80986 1.5699,-1.25749 1.99505,-0.99473 0.42515,0.26276 1.00703,-0.41719 1.29307,-1.51101 0.50815,-1.94328 -0.0165,-1.98875 -22.94536,-1.98875 -15.38895,0 -23.25268,0.34418 -22.84736,1 0.33992,0.55 2.11138,1 3.93657,1 1.8252,0 3.86289,0.6559 4.5282,1.45756 0.78168,0.94186 2.20126,1.25923 4.01232,0.89702 4.38014,-0.87603 13.15737,2.17316 17.57057,6.10397 3.64614,3.2476 3.81752,3.62598 2.21213,4.88398 -1.6036,1.25659 -1.76061,5.11213 -2,49.11228 l -0.25979,47.74864 -5.98338,-7.0165 c -3.29086,-3.85908 -6.39654,-6.76117 -6.90149,-6.44908 -0.50496,0.31208 -0.17494,1.11084 0.73338,1.77502 1.91364,1.39928 2.26371,2.98844 0.40149,1.82256 -0.6875,-0.43042 -1.925,-0.79448 -2.75,-0.80902 -0.88236,-0.0156 -1.42666,-0.84394 -1.32188,-2.01184 0.098,-1.09197 -0.35203,-2.37192 -1,-2.84433 -0.75927,-0.55356 -0.55595,-0.65878 0.57188,-0.29598 2.94654,0.94786 2.01868,-0.71152 -4.93974,-8.8342 -5.39309,-6.29543 -6.81137,-7.46231 -7.31723,-6.0202 -0.57594,1.64188 -0.80461,1.59874 -2.78322,-0.52505 -2.01821,-2.16629 -2.04582,-2.39737 -0.43277,-3.62256 1.58208,-1.20166 1.53898,-1.31126 -0.52704,-1.34047 -1.43084,-0.0202 -2.25,-0.64546 -2.25,-1.71735 0,-1.75534 -3.73592,-6.31445 -5.17431,-6.31445 -0.45413,0 -0.82569,0.7301 -0.82569,1.62244 0,1.31514 -0.27884,1.39104 -1.47212,0.4007 -1.29474,-1.07454 -1.29058,-1.40329 0.0345,-2.72839 2.04834,-2.04835 0.21216,-4.16547 -3.06875,-3.53829 -2.51935,0.48161 -3.55604,-1.21309 -1.24365,-2.03302 1.59745,-0.56642 -2.32046,-6.20237 -4.35792,-6.26889 -0.76564,-0.025 -1.25904,-0.64913 -1.09643,-1.38696 0.40442,-1.83501 -3.7031,-6.04033 -5.30095,-5.42718 -0.71082,0.27276 -1.64259,-0.0707 -2.0706,-0.76322 -0.45376,-0.73419 -0.24436,-1.4371 0.50226,-1.68598 0.91296,-0.30432 0.67967,-1.03877 -0.81284,-2.55901 -4.84871,-4.9388 -9.1135,-9.96895 -9.1135,-10.74903 0,-0.46038 -1.12725,-1.57567 -2.50501,-2.47841 -1.93984,-1.27103 -2.82221,-1.37808 -3.91097,-0.47449 -1.68837,1.40122 -3.07891,-0.19823 -2.18885,-2.51769 1.15925,-3.02096 -8.41941,-15.65543 -11.19576,-14.76745 -1.25574,0.40163 -1.35859,0.29875 -0.39396,-0.39409 1.00137,-0.71921 0.58485,-1.49822 -1.78815,-3.34433 -1.70148,-1.32369 -3.80271,-3.86921 -4.66939,-5.65671 -1.56662,-3.23109 -1.61877,-3.25 -8.96185,-3.25 h -7.38606 v 73.28189 73.28189 l -2.48598,0.20575 c -4.12128,0.34109 -8.31203,-9.57152 -5.31402,-12.56953 0.93333,-0.93333 0.75902,-1.2 -0.78439,-1.2 -3.42406,0 -5.47398,-4.94381 -4.93329,-11.89765 0.48267,-6.2076 -0.48713,-7.69754 -3.22696,-4.95771 -0.85953,0.85953 -1.30985,0.48645 -1.80785,-1.49776 -0.36476,-1.45332 -0.38782,-3.36006 -0.0512,-4.23718 0.40866,-1.06496 -0.0539,-1.7689 -1.39215,-2.11887 -1.94151,-0.50771 -2.92116,-4.29083 -1.11115,-4.29083 0.49116,0 1.11412,-0.5762 1.38436,-1.28044 0.31932,-0.83212 -0.37527,-1.26978 -1.98378,-1.25 -2.13359,0.0262 -2.81778,-0.86651 -4.95818,-6.46956 -1.36567,-3.575 -2.89982,-7.28139 -3.40922,-8.23643 -0.50941,-0.95504 -0.92619,-2.33269 -0.92619,-3.06144 0,-0.72875 -0.7875,-2.19736 -1.75,-3.26357 -0.9625,-1.06621 -1.90384,-3.0281 -2.09186,-4.35975 -0.18802,-1.33166 -1.3572,-4.70666 -2.59817,-7.5 -1.24097,-2.79335 -3.99241,-9.57881 -6.11432,-15.07881 -2.1219,-5.5 -4.10464,-10.225 -4.40609,-10.5 -0.30145,-0.275 -1.43471,-3.2 -2.51836,-6.5 -1.08365,-3.3 -3.63948,-9.79238 -5.67962,-14.42751 -3.47969,-7.90572 -3.61898,-8.60226 -2.24979,-11.25 l 1.45957,-2.82249 -22.27568,0.0906 -22.27568,0.0906 10.63345,2.21802 c 9.21539,1.92223 15.86655,4.49499 15.86655,6.1374 0,0.26979 -0.4528,1.27191 -1.00622,2.22695 -0.55342,0.95504 -3.07392,7.13643 -5.60112,13.73643 -2.52719,6.6 -6.74574,17.625 -9.37455,24.5 -2.6288,6.875 -10.07728,26.225 -16.55217,43 -6.47489,16.775 -13.9349,36.10614 -16.57781,42.95809 -2.6429,6.85195 -4.667617,12.59575 -4.499367,12.76401 0.16825,0.16825 1.526617,-0.65429 3.018577,-1.82788 3.46367,-2.72452 10.33255,-4.35498 12.11496,-2.87571 0.87075,0.72266 1.50707,0.74298 1.92821,0.0616 0.83292,-1.34769 9.44487,-0.24618 21.79949,2.78825 2.0625,0.50658 3.75,0.56852 3.75,0.13765 0,-0.43087 -1.59883,-1.08334 -3.55295,-1.44994 -1.95412,-0.36659 -6.9243,-2.41113 -11.04483,-4.54341 -4.13351,-2.139 -8.70407,-3.79524 -10.19604,-3.69476 -2.11096,0.14218 -2.77447,-0.31144 -3.02472,-2.06787 -0.17631,-1.2375 0.18729,-2.25 0.80801,-2.25 0.62071,0 0.85749,-0.43861 0.52618,-0.97469 -0.33132,-0.53607 0.49703,-4.13607 1.84077,-8 1.34374,-3.86395 2.03826,-7.02534 1.54337,-7.02534 -0.49488,0 -0.89979,-0.9 -0.89979,-2 0,-2.35577 2.22865,-2.63435 4,-0.5 0.86844,1.0464 3.17346,1.5 7.62244,1.5 3.58504,0 6.37756,0.43787 6.37756,1 0,0.55 0.47656,1 1.05902,1 0.58246,0 0.79135,-0.43309 0.4642,-0.96243 -0.35699,-0.57762 1.41847,-0.87749 4.44062,-0.75 4.49219,0.18951 5.03546,0.45517 5.03579,2.46243 2e-4,1.2375 0.37537,2.25 0.8337,2.25 1.63025,0 2.08185,-1.28997 1.0963,-3.13148 -0.93798,-1.75263 -0.50165,-1.86852 7.03519,-1.86852 5.75331,0 8.03953,-0.35498 8.05049,-1.25 0.0108,-0.88371 0.2306,-0.9215 0.75,-0.12897 0.40408,0.61656 3.55389,1.32076 6.99958,1.56488 6.57364,0.46574 9.89899,2.16772 7.33335,3.75337 -1.53259,0.9472 -1.31971,2.13143 1.76318,9.80805 l 2.10729,5.24733 -4.23435,2.70996 c -2.3289,1.49047 -7.74409,4.13891 -12.03377,5.88541 -9.46577,3.8539 -10.18744,4.42953 -4.13593,3.29899 2.56138,-0.47852 5.02607,-0.64196 5.47709,-0.36321 0.45103,0.27875 1.10271,0.0495 1.44817,-0.5095 0.7855,-1.27097 4.22784,-1.3374 4.67675,-0.0902 0.18333,0.50934 1.68333,1.2329 3.33333,1.60793 l 3,0.68186 -2.44446,-1.80083 -2.44446,-1.80084 2.94446,-0.79136 c 2.38614,-0.64131 3.24713,-0.392 4.5407,1.31479 1.34884,1.77973 1.68886,1.8648 2.19382,0.54888 0.32867,-0.8565 0.0604,-1.77582 -0.59624,-2.04293 -0.6566,-0.26712 1.16868,-0.52119 4.05618,-0.56461 4.03509,-0.0607 5.25,0.26817 5.25,1.42105 0,1.88704 1.85922,1.93088 3.92126,0.0925 1.14803,-1.02352 5.30421,-1.50096 15.23408,-1.75 7.51044,-0.18836 13.41528,0.0453 13.12188,0.51933 -0.2934,0.474 0.0407,1.21665 0.74244,1.65035 0.85865,0.53067 1.21651,2.94677 1.09433,7.3882 -0.0999,3.62981 0.1357,6.59965 0.52348,6.59965 0.38778,0 1.5326,-0.74893 2.54406,-1.66428 1.01145,-0.91535 3.29689,-1.90995 5.07874,-2.21021 5.14738,-0.8674 14.32665,-0.45974 16.36926,0.72697 1.02876,0.59769 1.30797,1.10039 0.62047,1.11711 -0.6875,0.0167 -1.25,0.48033 -1.25,1.03033 0,0.55 1.8,1 4,1 2.26298,0 4,-0.48177 4,-1.10941 0,-0.71858 1.32105,-0.90476 3.75,-0.5285 14.23847,2.20566 14.35403,2.11468 2.71109,-2.13447 -8.19352,-2.99026 -14.03063,-6.21895 -20.71109,-11.45595 l -3.75,-2.93973 -0.0153,2.83403 c -0.0119,2.19728 -0.23311,2.49701 -0.98469,1.33403 -0.57967,-0.89698 -0.97553,-16.07305 -0.98469,-37.75 -0.0135,-31.89241 0.16878,-36.25 1.51607,-36.25 0.84227,0 1.82688,-0.7875 2.18803,-1.75 0.36116,-0.9625 1.31521,-2.24381 2.12011,-2.84736 1.05356,-0.78999 1.14094,-1.29668 0.31197,-1.80901 -1.44539,-0.8933 -3.15149,0.1044 -3.15149,1.84294 0,0.7252 -0.675,1.87874 -1.5,2.56343 -1.21185,1.00574 -1.5,0.97596 -1.5,-0.15505 0,-2.31458 2.98757,-5.84495 4.94629,-5.84495 1.82888,0 10.39268,6.93279 8.61816,6.9768 -0.51455,0.0128 -2.00075,-0.97751 -3.30267,-2.2006 -2.00361,-1.88229 -2.50716,-1.99746 -3.27906,-0.75 -0.67509,1.09102 0.3104,2.71522 3.79435,6.25352 4.25158,4.31791 4.82687,4.61482 5.95428,3.073 1.62707,-2.22515 2.56181,-1.182 2.70779,3.02187 0.0647,1.86251 0.72657,4.12016 1.47088,5.01699 1.24665,1.50212 1.45627,1.49184 2.66051,-0.13049 1.2471,-1.68008 1.39055,-1.67893 3.11835,0.0251 1.44651,1.42658 1.54411,1.95125 0.48479,2.60619 -0.96926,0.59927 -0.36353,1.38809 2.25,2.93011 2.79962,1.65182 3.57633,2.74237 3.57633,5.02137 0,1.6012 0.61335,3.42032 1.363,4.04247 1.10974,0.921 1.2656,0.61858 0.8388,-1.62756 -0.47822,-2.51681 -0.37288,-2.6337 1.20129,-1.33294 1.08818,0.89918 1.52358,2.23024 1.17884,3.6038 -0.39045,1.55568 0.44534,3.29125 2.92515,6.0742 3.17283,3.56069 3.58697,3.74944 4.80916,2.19193 1.21658,-1.55034 1.80128,-1.22697 6.4736,3.58027 4.73866,4.87548 5.02643,5.44129 3.71768,7.30979 -1.28955,1.8411 -1.13898,2.28849 1.65573,4.91974 2.74261,2.5822 3.00313,2.66081 2.41483,0.72863 -0.36269,-1.19122 -0.23496,-2.42818 0.28383,-2.74882 1.05557,-0.65237 3.40236,5.17804 2.6041,6.46966 -0.71651,1.15933 5.42997,7.945 7.1966,7.945 0.80048,0 1.21762,0.38478 0.92697,0.85506 -0.70554,1.14159 14.40746,17.2648 15.53175,16.56995 0.48327,-0.29867 0.884,0.27101 0.89052,1.26597 0.0142,2.16638 8.56321,11.30902 10.57474,11.30902 0.77738,0 1.41341,0.7301 1.41341,1.62244 0,1.34023 0.26513,1.40241 1.52417,0.3575 0.83829,-0.69572 1.85008,-0.93902 2.24842,-0.54068 0.39835,0.39834 -0.14854,1.36247 -1.21529,2.1425 -1.59372,1.16536 -1.65287,1.41824 -0.33176,1.41824 0.88428,0 1.76406,0.4688 1.95505,1.04177 0.19099,0.57297 1.69099,1.15594 3.33333,1.2955 2.72135,0.23124 2.96251,0.54568 2.72026,3.54684 -0.1834,2.27194 0.1211,3.16413 0.98197,2.87717 0.88934,-0.29644 1.15691,-2.59364 0.93142,-7.99664 z m -36.64757,-33.76464 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z M 212.72583,622.49136 c -0.43077,-0.697 -0.51316,-1.53733 -0.18309,-1.86741 0.89497,-0.89496 1.87077,0.4213 1.38739,1.87145 -0.33872,1.01617 -0.57427,1.01538 -1.2043,-0.004 z m 138.41705,-5.23702 c 0,-1.12203 0.64286,-2.6829 1.42857,-3.46862 1.8892,-1.88919 3.15949,-1.84207 1.582,0.0587 -0.67888,0.81799 -0.98739,2.13075 -0.68559,2.91724 0.30181,0.78648 -0.0978,1.67809 -0.88812,1.98135 -0.95978,0.3683 -1.43686,-0.12599 -1.43686,-1.48867 z m -227.5,-1.89719 c -1.36832,-0.58799 -1.51979,-0.88163 -0.47958,-0.92971 0.99806,-0.0461 2.32373,-2.65812 3.85858,-7.60263 2.07955,-6.69926 2.51969,-7.39051 3.97957,-6.25 1.43573,1.12164 1.48262,1.07891 0.37418,-0.34091 -1.21229,-1.55284 -1.06367,-2.95201 0.78356,-7.37675 0.45922,-1.1 3.70695,-9.42332 7.21717,-18.49626 5.51139,-14.2454 6.74141,-16.62259 9.01463,-17.42203 1.8982,-0.66757 3.09606,-0.54097 4.29481,0.45391 1.53742,1.27594 1.50989,1.5032 -0.366,3.0222 l -2.02842,1.64252 2.35186,4.91423 c 1.29353,2.70283 5.8067,13.68276 10.02926,24.39983 4.22256,10.71708 7.90396,20.0481 8.18087,20.7356 0.39351,0.97697 -4.21605,1.25 -21.1035,1.25 -18.53955,0 -21.60699,0.21295 -21.60699,1.5 0,1.65218 -1.44508,1.81274 -4.5,0.5 z m 42.21449,-6.25 c -0.27472,-0.6875 -3.78138,-9.46899 -7.79258,-19.51441 -4.01119,-10.04543 -7.61847,-17.92043 -8.01617,-17.5 -0.77645,0.82083 -14.90574,36.44616 -14.90574,37.58306 0,0.37474 7.02314,0.68135 15.60699,0.68135 12.08532,0 15.49428,-0.28206 15.1075,-1.25 z m -24.71449,-3.55652 c 0,-1.21278 8.02046,-21.58763 8.81266,-22.38732 0.37804,-0.38162 1.44142,1.08088 2.36308,3.25 1.28537,3.02511 1.37479,3.94384 0.38389,3.94384 -1.50836,0 -7.88276,13.66814 -7.0231,15.0591 0.31983,0.5175 -0.57005,0.9409 -1.97751,0.9409 -1.40746,0 -2.55902,-0.36293 -2.55902,-0.80652 z m 16.63617,-0.68774 c 0.31537,-0.82184 0.97625,-1.24528 1.46861,-0.94098 1.41193,0.87262 1.04399,2.43524 -0.5734,2.43524 -0.89208,0 -1.24351,-0.5866 -0.89521,-1.49426 z m -25.13617,0.49426 c 0.33992,-0.55 -0.33508,-1 -1.5,-1 -1.16492,0 -1.83992,0.45 -1.5,1 0.33992,0.55 1.01492,1 1.5,1 0.48508,0 1.16008,-0.45 1.5,-1 z m 147,4 c -0.33992,-0.55 0.0835,-1 0.94098,-1 0.85746,0 1.55902,0.45 1.55902,1 0,0.55 -0.42344,1 -0.94098,1 -0.51754,0 -1.2191,-0.45 -1.55902,-1 z m -26.5,-28.44098 c 0,-0.79254 0.39901,-1.68759 0.88669,-1.98899 1.10115,-0.68055 3.3423,1.86765 2.43797,2.77198 -1.18977,1.18977 -3.32466,0.68698 -3.32466,-0.78299 z m -92.5,-0.55902 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m 191.5,-2.05902 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -50.27083,-3.54515 c -0.40105,-0.40104 -0.72917,-1.41916 -0.72917,-2.2625 0,-1.12559 0.29583,-1.2375 1.1125,-0.42083 0.61187,0.61187 0.94,1.63 0.72917,2.2625 -0.21084,0.6325 -0.71146,0.82187 -1.1125,0.42083 z m -143.65022,-2.97916 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.3323,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 8.92105,-1.85765 c 0,-0.85746 0.45,-1.55902 1,-1.55902 0.55,0 1,0.42344 1,0.94098 0,0.51754 -0.45,1.2191 -1,1.55902 -0.55,0.33992 -1,-0.0835 -1,-0.94098 z m 0,-8.61804 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 1,-10 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -8.13922,-9.87 c -1.64395,-1.34329 -2.04494,-2.25123 -1.32059,-2.99019 0.72813,-0.74281 1.5701,-0.1641 2.80653,1.92902 2.0615,3.48983 1.75457,3.70902 -1.48594,1.06117 z m 87.15928,-28.54681 c -0.78875,-0.95039 -0.86462,-1.52417 -0.20152,-1.52417 1.20855,0 2.61759,1.8972 1.9241,2.5907 -0.2517,0.2517 -1.02686,-0.22824 -1.72258,-1.06653 z m 108.97994,158.97583 c 0,-0.825 -0.17686,-1.5 -0.39301,-1.5 -0.21616,0 -0.65203,0.675 -0.96862,1.5 -0.31658,0.825 -0.13972,1.5 0.39301,1.5 0.53274,0 0.96862,-0.675 0.96862,-1.5 z m -120,-6.5 c 0,-0.55 -0.64844,-1 -1.44098,-1 -0.79254,0 -1.7191,0.45 -2.05902,1 -0.33992,0.55 0.30852,1 1.44098,1 1.13246,0 2.05902,-0.45 2.05902,-1 z m 5.5,-1 c 0.33992,-0.55 -0.11008,-1 -1,-1 -0.88992,0 -1.33992,0.45 -1,1 0.33992,0.55 0.78992,1 1,1 0.21008,0 0.66008,-0.45 1,-1 z m -119.6875,-10.9375 c 0.25,-0.75 -0.125,-1.125 -0.875,-0.875 -0.72188,0.24062 -1.50938,1.02812 -1.75,1.75 -0.25,0.75 0.125,1.125 0.875,0.875 0.72187,-0.24063 1.50937,-1.02813 1.75,-1.75 z m 69.4375,1.27522 c -0.6875,-0.27741 -1.8125,-0.27741 -2.5,0 -0.6875,0.27741 -0.125,0.50439 1.25,0.50439 1.375,0 1.9375,-0.22698 1.25,-0.50439 z m 21.75,-0.83772 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -0.825,0 -1.5,0.675 -1.5,1.5 0,0.825 0.675,1.5 1.5,1.5 0.825,0 1.5,-0.675 1.5,-1.5 z m 141.78943,-7.89504 c -1.33023,-1.43918 -2.78943,-1.20165 -2.78943,0.45406 0,0.51754 0.91774,0.94098 2.03943,0.94098 1.69415,0 1.82113,-0.23618 0.75,-1.39504 z M 57.142883,642.35715 c 0,-0.55 -0.47656,-1 -1.05902,-1 -0.58246,0 -0.7809,0.45 -0.44098,1 0.33992,0.55 0.81648,1 1.05902,1 0.24254,0 0.44098,-0.45 0.44098,-1 z m 0.52646,-4.80687 c -0.30789,-0.30789 -1.11479,-6.4e-4 -1.79313,0.68278 -0.98026,0.98762 -0.8654,1.10248 0.5598,0.5598 0.98622,-0.37553 1.54122,-0.93469 1.23333,-1.24258 z M 244.82599,627.16965 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19293,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m -111.68311,-0.87152 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z m 161,-2 c 0,-0.51754 -0.675,-0.94098 -1.5,-0.94098 -1.54641,0 -1.9867,1.17996 -0.86052,2.30615 0.79893,0.79893 2.36052,-0.10419 2.36052,-1.36517 z m -49,-7.44098 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -0.825,0 -1.5,0.675 -1.5,1.5 0,0.825 0.675,1.5 1.5,1.5 0.825,0 1.5,-0.675 1.5,-1.5 z m -1,-6 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m 0.60104,-7.04657 c 0.58722,-2.33965 -0.0253,-4.36254 -1.01976,-3.36805 -1.12866,1.12867 -1.70216,5.91462 -0.70874,5.91462 0.59915,0 1.37697,-1.14596 1.7285,-2.54657 z m 24.76059,-4.95343 c -0.31659,-0.825 -1.03256,-1.5 -1.59106,-1.5 -0.58531,0 -0.48812,0.63541 0.22943,1.5 0.68469,0.825 1.40067,1.5 1.59106,1.5 0.19039,0 0.0871,-0.675 -0.22943,-1.5 z m -25.36163,-4.5 c 0,-0.55 -0.42344,-1 -0.94098,-1 -0.51754,0 -1.2191,0.45 -1.55902,1 -0.33992,0.55 0.0835,1 0.94098,1 0.85746,0 1.55902,-0.45 1.55902,-1 z M 57.825993,556.16965 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19292,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m 297.516887,-8.0125 c -0.93333,-0.93333 -1.2,-0.66667 -1.2,1.2 0,1.86667 0.26667,2.13333 1.2,1.2 0.93333,-0.93333 0.93333,-1.46667 0,-2.4 z m -0.125,-13.075 c -0.0412,-0.39875 -0.075,-1.9051 -0.075,-3.34744 0,-2.21768 -0.23152,-2.43031 -1.5,-1.37756 -1.56309,1.29725 -1.99872,4.16795 -0.8125,5.35417 0.82719,0.82719 2.49275,0.38827 2.3875,-0.62917 z m -178.075,-11.725 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m -119.229167,-6.8125 c 0.21771,-0.65313 -0.31666,-1.1875 -1.1875,-1.1875 -0.87083,0 -1.58333,0.7125 -1.58333,1.58333 0,1.76593 2.15276,1.45839 2.77083,-0.39583 z m 65.229167,-40.53251 c 0,-0.18976 -0.9,-1.1595 -2,-2.15499 -1.94121,-1.75677 -2,-1.74663 -2,0.34501 0,1.48832 0.61872,2.15499 2,2.15499 1.1,0 2,-0.15526 2,-0.34501 z m 573.38087,213.95317 c -8.46938,-2.24892 -16.03584,-5.28652 -15.21443,-6.10793 0.19376,-0.19376 3.04808,0.61758 6.34293,1.80297 5.10496,1.83663 8.13435,2.15278 20.49063,2.1384 13.0903,-0.0152 15.29046,-0.28112 22.63052,-2.735 26.07131,-8.71595 42.1105,-30.6663 43.99316,-60.2066 0.31548,-4.95 0.0903,-11.89863 -0.5003,-15.44141 -1.47527,-8.84888 -0.67487,-8.77722 1.35059,0.12093 5.75679,25.29039 -3.63978,54.68395 -21.9047,68.5204 -16.32353,12.36576 -38.26176,16.93392 -57.1884,11.90824 z m 495.97715,-4.10816 c -0.6237,-1.65 -2.1168,-5.475 -3.318,-8.5 l -2.184,-5.5 4.9633,5.5 c 3.0934,3.42788 4.462,5.61742 3.6325,5.81168 -0.732,0.17142 -1.4723,1.52142 -1.6453,3 l -0.3144,2.68832 z m -527.12209,-6.75 c -1.1229,-2.8875 -2.3953,-6.15 -2.82756,-7.25 -0.57964,-1.47506 0.51035,-0.97091 4.15285,1.92083 6.81594,5.41108 7.22214,5.80554 5.17605,5.02654 -2.36894,-0.90192 -4.93384,1.35792 -4.19246,3.69381 1.26703,3.99205 -0.37628,1.57843 -2.30888,-3.39118 z m 369.89249,3.32936 c -1.1429,-0.70634 -1.0911,-1.67543 0.3155,-5.91031 1.6008,-4.81961 1.8856,-5.09543 5.8693,-5.68328 2.3027,-0.3398 17.8162,-0.47561 34.4743,-0.3018 25.6082,0.2672 30.4307,0.54778 31.2139,1.81603 0.815,1.31962 -2.9972,1.53173 -31.7017,1.76387 -23.0096,0.18609 -33.042,0.60727 -34.0317,1.42871 -0.772,0.64066 -2.1616,2.64237 -3.0881,4.44824 -1.2031,2.34506 -2.0751,3.04196 -3.0515,2.43854 z m -802.8058,-4.74267 c -1.19756,-0.25122 -2.71516,-1.10474 -3.37244,-1.89672 -1.03465,-1.24667 2.11628,-1.43997 23.47283,-1.43997 h 24.6679 l 2.45454,-2.45455 c 1.35,-1.35 2.46144,-3.2625 2.46986,-4.25 0.013,-1.52501 0.16133,-1.56951 0.98469,-0.29545 1.63258,2.52624 1.11126,6.58923 -1.10283,8.59501 -1.92661,1.74534 -4.00083,1.91729 -24.75,2.05171 -12.45595,0.0807 -23.62699,-0.0588 -24.82455,-0.31003 z m 275.93045,-2.87198 c -2.19047,-1.53427 -2.1907,-1.53844 -0.34595,-6.23479 1.27293,-3.24064 2.58276,-4.9061 4.21943,-5.36503 3.68534,-1.03339 62.43878,-0.98065 65.17197,0.0585 1.33579,0.50786 2.65804,1.52036 2.93833,2.25 0.4183,1.08889 -5.34524,1.27716 -32.16494,1.05066 l -32.67455,-0.27593 -2.2996,2.44781 c -1.26479,1.3463 -2.36669,3.60765 -2.44868,5.02523 -0.082,1.41758 -0.16145,2.57774 -0.17657,2.57812 -0.0151,3.9e-4 -1.01387,-0.69017 -2.21944,-1.53458 z m -42.5864,-1.13138 c -0.36667,-0.36666 -0.66667,-35.24166 -0.66667,-77.5 v -76.83333 h 4.46482 c 3.32331,0 4.71836,0.47376 5.45652,1.85302 0.8634,1.61328 0.66936,1.79139 -1.49986,1.37672 -1.53973,-0.29434 -3.24222,0.20305 -4.45652,1.30197 -1.91926,1.7369 -1.96496,3.48425 -1.96496,75.12328 0,50.95492 0.32329,73.34501 1.05902,73.34501 0.58246,0 0.7809,0.45 0.44098,1 -0.71373,1.15484 -1.87519,1.29148 -2.83333,0.33333 z m 115.83333,-1.33333 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -514.299997,-1.2 c -0.89101,-0.89101 -1.2,-10.93333 -1.2,-39 v -37.8 h 22.77749 c 19.154177,0 23.136827,-0.25169 25.036417,-1.58221 l 2.25891,-1.58221 -1.35894,3.33221 -1.35895,3.33221 -20.871797,0.27088 c -17.77097,0.23064 -21.14368,0.51693 -22.70187,1.92708 -1.7179,1.55468 -1.81326,3.82146 -1.55567,36.97954 0.15092,19.42785 0.25191,35.32316 0.22441,35.32293 -0.0275,-2.4e-4 -0.59,-0.54043 -1.25,-1.20043 z m 1355.800017,-30.8 v -32 h 19.2566 c 10.5911,0 20.7666,-0.43307 22.6123,-0.96239 5.5783,-1.59984 6.0553,-3.03065 6.1805,-18.53761 0.1026,-12.71167 0.2394,-13.72393 1.4867,-11 1.6808,3.67061 1.9591,23.7811 0.3914,28.27824 -1.5935,4.57091 -4.8244,5.22176 -25.9217,5.22176 -16.8422,0 -18.8599,0.18131 -20.3508,1.82874 -1.459,1.61215 -1.655,5.22442 -1.655,30.5 0,18.44751 -0.3566,28.67126 -1,28.67126 -0.6458,0 -1,-11.33333 -1,-32 z M 102.4655,666.56302 c -1.19756,-0.17927 -2.674987,-0.92552 -3.283177,-1.65835 -0.91323,-1.10038 3.084367,-1.4605 22.955487,-2.06798 l 24.0613,-0.73556 2.0671,-2.62199 c 1.54894,-1.96474 1.94175,-3.562 1.56704,-6.37199 -0.32764,-2.45704 -0.10188,-3.75021 0.65479,-3.75062 0.7617,-4.1e-4 1.0396,1.66132 0.81633,4.8813 -0.5496,7.9263 0.0782,8.11932 26.40545,8.11932 30.88309,0 43.43275,0.83848 43.43411,2.90197 9.5e-4,1.44072 -2.9768,1.54495 -30.25,1.05879 -22.9861,-0.40974 -31.02449,-0.87999 -33.47162,-1.95813 -2.8314,-1.24743 -3.7981,-1.22041 -8,0.2236 -3.64608,1.253 -9.52205,1.7211 -24.77943,1.97403 -11,0.18235 -20.97982,0.18487 -22.17738,0.006 z m 1137.3009,-14.74453 c -0.9649,-2.51469 -0.6803,-3.16355 0.4986,-1.13634 0.5837,1.00375 0.8506,2.03566 0.5931,2.29313 -0.2575,0.25747 -0.7487,-0.26309 -1.0917,-1.15679 z m -985.51821,-3.83445 c -0.80344,-0.96808 -1.06079,-8.94403 -0.87245,-27.03906 l 0.26714,-25.66593 5,5.26975 c 2.75,2.89836 3.8471,4.26696 2.43799,3.04134 -2.14817,-1.86845 -2.84075,-2.02458 -4.2877,-0.96655 -1.56193,1.14211 -1.69839,3.41949 -1.43799,23.99858 0.15824,12.5052 0.2303,22.73633 0.16014,22.73585 -0.0701,-4.8e-4 -0.64036,-0.61877 -1.26713,-1.37398 z m 687.11589,-1.14945 c -5.2241,-1.13453 -17.2212,-6.70457 -17.2212,-7.99551 0,-0.2042 2.5875,0.84132 5.75,2.32339 5.3589,2.5114 6.673,2.69468 19.3212,2.69468 h 13.5711 l 8.5057,-4.21264 c 11.6988,-5.79409 18.2845,-12.31791 23.9304,-23.70543 4.3735,-8.82104 4.427,-9.05498 4.92162,-21.5 l 0.5,-12.58193 1.25,5.29922 c 5.0533,21.42301 -6.08232,44.92055 -26.25002,55.39082 -10.9305,5.67468 -21.6926,7.02074 -34.2788,4.2874 z m -810.55007,-5.09074 c -1.83588,-0.99503 -2.62568,-2.06275 -2.25,-3.04175 0.31838,-0.82969 0.57887,-1.69672 0.57887,-1.92674 0,-0.23001 9.9,-0.41821 22,-0.41821 21.33333,0 22,0.0606 22,2 0,1.1 -0.5625,2.01401 -1.25,2.03113 -0.6875,0.0171 -9.575,0.12962 -19.75,0.25 -14.17476,0.1677 -18.44155,0.51112 -18.25,1.46887 0.30297,1.51485 0.40962,1.52743 -3.07887,-0.3633 z m 537.95241,-2.92536 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z m 260.77186,-2.37942 c -10.91451,-5.46836 -17.95407,-12.37304 -22.97017,-22.53006 l -3.92523,-7.94813 v -12.64384 -12.64383 l 3.97902,-7.8393 c 4.89257,-9.63913 12.11055,-16.94457 21.87878,-22.14391 7.0076,-3.72989 7.3778,-3.8081 19.6422,-4.14927 l 12.5,-0.34772 8,4.03814 c 10.0099,5.05268 14.5294,8.78483 19.3409,15.97161 7.2363,10.80845 8.3598,14.82019 7.9881,28.52347 -0.3133,11.55358 -0.4956,12.46344 -3.829,19.11763 -4.6114,9.20524 -13.3368,17.9301 -22.5042,22.50273 -6.6944,3.33912 -7.5343,3.50374 -19.4958,3.82125 l -12.5,0.3318 z m 8.6046,-3.08192 c 0,-0.55 -0.4766,-1 -1.059,-1 -0.5825,0 -0.7809,0.45 -0.441,1 0.3399,0.55 0.8165,1 1.059,1 0.2426,0 0.441,-0.45 0.441,-1 z m -5,-2 c 0,-2.39463 0.3037,-2.41817 6.5911,-0.51082 2.6999,0.81904 6.7588,1.49404 9.0198,1.5 5.1894,0.0137 18.3603,-4.12042 22.4853,-7.0577 l 3.1338,-2.23142 -0.7221,2.2752 c -0.4931,1.55341 -0.3709,2.05813 0.385,1.59095 0.6089,-0.37633 1.1082,-1.22019 1.1095,-1.87523 0,-2.16914 8.1477,-13.19626 9.5332,-12.90914 0.7479,0.15502 1.8543,-0.64178 2.4584,-1.77066 1.1714,-2.18868 0.4857,-4.42569 -1.0631,-3.46847 -1.1898,0.73533 -1.1845,-0.104 0.014,-2.30628 0.5199,-0.95504 1.2231,-3.46563 1.5627,-5.5791 0.5589,-3.47937 0.8494,-3.78442 3.0723,-3.22651 2.232,0.56021 2.434,0.34163 2.2246,-2.40733 -0.2702,-3.54529 -2.2451,-4.0054 -3.3201,-0.77349 -0.6068,1.82421 -0.8885,1.30379 -1.4885,-2.75 -0.8683,-5.86581 -2.1045,-9.87452 -4.4345,-14.38025 -1.1766,-2.27527 -1.3784,-3.63592 -0.6666,-4.49362 0.5616,-0.67661 0.7576,-2.23728 0.4358,-3.46814 -0.5426,-2.07462 -0.7147,-2.1208 -2.3589,-0.63282 -2.1467,1.94275 -3.7994,0.17645 -1.9358,-2.06897 1.9654,-2.36828 -1.3187,-5.73436 -10.4153,-10.67526 -15.8214,-8.59347 -37.7351,-5.01053 -50.68786,8.2876 -15.10849,15.51132 -16.93127,39.85949 -4.22937,56.49467 3.46035,4.53189 3.67288,4.65063 4.46949,2.49719 l 0.83638,-2.26095 2.61756,2.35028 c 1.43967,1.29265 3.62658,3.36277 4.85981,4.60027 1.23323,1.2375 2.75309,2.25 3.37759,2.25 1.6995,0 1.3681,1.97345 -0.4485,2.67055 -1.2753,0.48935 -1.324,0.77253 -0.25,1.4533 2.2601,1.43241 3.8343,0.97095 3.8343,-1.12385 z m 4,-6.59005 c -6.5042,-2.80939 -14.96572,-8.87588 -15.60259,-11.18633 -0.3451,-1.25201 -1.48831,-2.73708 -2.54045,-3.30017 -1.05214,-0.56309 -1.62751,-1.48568 -1.27862,-2.05021 0.3489,-0.56453 -0.31349,-1.90948 -1.47199,-2.98878 -1.84741,-1.72113 -2.10629,-3.09473 -2.10585,-11.17342 6.1e-4,-11.08699 2.18621,-17.7677 8.13857,-24.87715 5.23072,-6.24751 14.27093,-10.79578 22.42873,-11.28416 11.5987,-0.69439 24.4322,3.0484 24.4322,7.12545 0,0.83163 0.7875,1.72534 1.75,1.98603 0.9625,0.26068 2.853,2.24355 4.201,4.40638 1.5469,2.48174 3.2069,3.93806 4.5,3.94772 1.4224,0.0106 1.6609,0.26163 0.7801,0.8207 -1.0137,0.64338 -0.9634,1.67139 0.25,5.11042 0.8859,2.51086 1.5189,7.72852 1.5189,12.51957 0,7.14831 -0.3941,9.00323 -3.0363,14.29069 -3.536,7.07619 -9.0902,12.46246 -16.3241,15.83071 -4.177,1.94484 -6.7317,2.38756 -13.6396,2.36369 -5.3137,-0.0184 -9.812,-0.59607 -12,-1.54114 z m 26.7144,-3.45467 c 10.802,-5.29385 16.5269,-14.55664 16.6598,-26.95528 0.062,-5.77984 -0.4431,-8.66785 -2.202,-12.59189 -3.061,-6.82867 -10.4317,-13.89586 -17.748,-17.01718 -5.3033,-2.26249 -4.1727,-2.7769 2.0758,-0.94447 1.1,0.32258 0.2,-0.3091 -2,-1.40375 -2.9817,-1.48362 -6.0595,-1.99694 -12.0903,-2.01649 -7.0556,-0.0229 -8.8743,0.36558 -14.2209,3.0373 -7.4947,3.74514 -13.38181,10.18625 -16.25934,17.78939 -1.77141,4.68049 -2.05179,7.07553 -1.63806,13.99237 0.28625,4.7857 1.03315,8.83782 1.75106,9.5 0.96919,0.89396 1.12642,0.79493 0.69626,-0.43851 -0.3056,-0.87627 -0.81246,-4.25127 -1.12636,-7.5 l -0.57073,-5.90677 1.39536,6.63756 c 1.76008,8.37249 3.71399,12.24728 8.92175,17.69265 10.01046,10.46717 23.02246,12.6594 36.35566,6.12507 z m -33.1258,-14.03235 c -2.76303,-3.28368 -3.3163,-4.97295 -3.82033,-11.66439 -0.37588,-4.99004 0.95086,-5.88533 3.64533,-2.45988 1.3303,1.69118 2.1221,4.75933 2.5368,9.82995 0.3316,4.05426 0.5185,7.37139 0.4152,7.37139 -0.1033,0 -1.3529,-1.38468 -2.777,-3.07707 z m -12.50965,-19.50626 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 4.71259,-11.91667 c 0.56999,-1.1 2.53757,-3.34906 4.3724,-4.9979 l 3.33606,-2.99791 -3.49723,3.99791 c -1.92347,2.19884 -3.89105,4.4479 -4.3724,4.9979 -0.48135,0.55 -0.40883,0.1 0.16117,-1 z m 11.94176,-10.62409 c 0.6784,-0.68342 1.4853,-0.99067 1.7932,-0.68278 0.3078,0.30789 -0.2472,0.86705 -1.2334,1.24258 -1.4252,0.54268 -1.54,0.42782 -0.5598,-0.5598 z m 7.0792,-2.55902 c 0.7219,-0.28887 1.5844,-0.25335 1.9167,0.0789 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28494 -0.6042,-0.60416 z m 5.9492,-1.02415 c 1.2439,-0.23919 3.0439,-0.23011 4,0.0202 0.956,0.25029 -0.062,0.446 -2.2617,0.4349 -2.2,-0.0111 -2.9823,-0.21589 -1.7383,-0.45508 z m 44.2383,23.76628 c 0,-1.06754 -0.45,-2.2191 -1,-2.55902 -0.5672,-0.35052 -1,0.48962 -1,1.94098 0,1.40746 0.45,2.55902 1,2.55902 0.55,0 1,-0.87344 1,-1.94098 z m -5,-13.05902 c 0,-1.1 -0.4234,-2 -0.941,-2 -1.3423,0 -2.2882,1.82013 -1.559,3 1.0451,1.69104 2.5,1.10908 2.5,-1 z m 246.00002,62.71546 c 0,-0.33984 -0.6905,-3.22734 -1.5345,-6.41667 -7.5296,-28.45284 -4.982,-63.9803 6.5793,-91.7517 6.7835,-16.29464 17.667,-30.85743 25.5107,-34.13474 3.2267,-1.34819 4.1728,-1.34256 8.9748,0.0534 7.1002,2.06408 7.6216,3.29314 1.1726,2.76424 -4.6127,-0.3783 -5.7669,-0.0469 -10.1749,2.92163 -14.0214,9.44265 -27.6536,37.3047 -32.0879,65.58254 -2.0615,13.14651 -1.535,42.74654 0.9551,53.69682 0.8668,3.81206 1.3576,7.14956 1.0904,7.41667 -0.2671,0.2671 -0.4856,0.2076 -0.4856,-0.13223 z m 43.1004,-5.01094 c -1.2649,-2.10631 -1.2436,-2.12762 0.4783,-0.47833 0.9912,0.94941 1.587,1.94144 1.3239,2.20452 -0.2631,0.26308 -1.0741,-0.5137 -1.8022,-1.72619 z m -611.48755,-1.37916 c -1.01036,-3.23699 -4.58167,-17.79564 -4.59752,-18.74203 -0.008,-0.50416 0.20647,-0.69484 0.47758,-0.42373 0.70132,0.70132 5.46854,20.21227 5.04264,20.63817 -0.19413,0.19412 -0.60934,-0.46846 -0.9227,-1.47241 z m 40.79212,-2.57536 -1.90499,-2.25 2.25,1.90499 c 2.11444,1.79022 2.70524,2.59501 1.90499,2.59501 -0.18976,0 -1.20226,-1.0125 -2.25,-2.25 z m 562.59503,-1.179 c -1.375,-0.7419 -6.1,-2.60281 -10.5,-4.13534 -7.783,-2.71085 -13.1695,-5.43566 -10.7453,-5.43566 3.0044,0 24.2453,9.21361 24.2453,10.51685 0,0.64714 -0.1147,0.611 -3,-0.94585 z M 699.14288,621.2678 c -2.15377,-1.76168 -2.1961,-1.89635 -0.30569,-0.97239 1.20687,0.58987 2.47092,1.52008 2.80901,2.06712 0.90258,1.4604 0.29641,1.19531 -2.50332,-1.09473 z m -57.65164,-1.41065 c -0.62909,-1.65 -1.49295,-3.86562 -1.91969,-4.92361 -0.6777,-1.68017 -0.49314,-1.64086 1.4583,0.31058 1.46017,1.46017 2.12523,3.16591 1.91968,4.92361 l -0.3145,2.68942 z m 49.90164,-3.06614 c -2.3375,-1.40097 -4.25,-2.78342 -4.25,-3.0721 0,-0.53885 6.74656,3.29214 8.45,4.79828 1.7187,1.51963 0.11775,0.86164 -4.2,-1.72618 z m -54.08756,-6.97669 c -1.67549,-3.67729 -1.35583,-4.46179 0.45586,-1.11876 0.84602,1.56112 1.3511,3.02552 1.1224,3.25422 -0.2287,0.2287 -0.93892,-0.73225 -1.57826,-2.13546 z m -418.20656,-4.20717 c -0.79525,-2.0625 -1.61903,-4.15014 -1.83062,-4.6392 -0.2116,-0.48905 0.17397,-0.5439 0.85681,-0.12188 0.70793,0.43753 1.6167,0.17501 2.11442,-0.6108 0.56216,-0.88755 0.87834,0.49074 0.8882,3.87188 0.008,2.8875 -0.11929,5.25 -0.2838,5.25 -0.16451,0 -0.94977,-1.6875 -1.74501,-3.75 z m 415.66766,-1.78866 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z m 520.63748,-9.47928 c -1.2315,-2.93554 -2.019,-5.55741 -1.75,-5.82637 0.2689,-0.26896 0.489,0.036 0.489,0.67764 0,0.64167 0.9273,2.09393 2.0606,3.22725 1.2788,1.27885 1.9427,3.04661 1.75,4.6597 -0.2677,2.2401 -0.6199,1.86187 -2.5496,-2.73822 z m -524.63748,-0.52072 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z M 331.2812,591.02382 c -0.8376,-1.00925 -0.74583,-1.33334 0.37756,-1.33334 0.81626,0 1.48412,0.6 1.48412,1.33334 0,0.73333 -0.1699,1.33333 -0.37756,1.33333 -0.20765,0 -0.87551,-0.6 -1.48412,-1.33333 z M 117.21317,575.10715 c 0.0446,-7.7754 0.38421,-11.51945 0.92971,-10.25 0.47269,1.1 0.89106,4.83906 0.92971,8.30902 0.0413,3.70639 0.4616,6.06717 1.01887,5.72276 0.52172,-0.32244 0.25442,1.451 -0.594,3.94098 -0.84842,2.48998 -1.72528,4.52724 -1.94858,4.52724 -0.2233,0 -0.37437,-5.5125 -0.33571,-12.25 z m 509.55325,8.71134 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z m 685.81758,0.0705 c -1.7102,-1.29353 -1.7385,-1.47198 -0.2382,-1.5 3.1739,-0.0593 6.6574,-2.27998 7.7045,-4.91152 0.5735,-1.44115 2.2048,-7.57028 3.6253,-13.62028 1.4204,-6.05 4.1071,-17.3 5.9704,-25 1.8633,-7.7 4.5737,-18.93936 6.0232,-24.97636 1.4495,-6.03699 2.8486,-11.32115 3.109,-11.74256 0.5607,-0.90716 7.9079,2.67081 8.9514,4.35914 0.4628,0.74882 0.2871,0.89979 -0.489,0.42014 -2.227,-1.37635 -5.8679,0.3418 -6.8807,3.247 -0.5406,1.55069 -4.6808,18.3159 -9.2005,37.25603 -4.5252,18.96299 -8.9161,35.22295 -9.7721,36.18661 -1.8947,2.1332 -6.1744,2.2702 -8.8033,0.2818 z M 495.30925,566.12352 c -0.97818,-0.97818 -0.55367,-1.46145 2.05,-2.33378 5.66946,-1.8995 5.75275,-2.50659 5.76889,-42.04773 0.0141,-34.55917 -0.071,-36.2242 -1.97637,-38.64642 -1.68135,-2.1375 -1.75914,-2.6203 -0.5,-3.10348 0.85513,-0.32814 1.49111,-0.0119 1.49111,0.74144 0,2.23962 3.21907,4.2739 10.5,6.63545 7.61882,2.47114 21.96471,9.31301 22.9834,10.96129 0.92401,1.49508 -0.39644,1.25668 -2.01733,-0.36421 -2.00023,-2.00023 -15.41324,-7.41694 -20.30169,-8.19864 -7.40396,-1.18394 -7.16367,-2.35559 -7.16996,34.96215 -0.006,34.16482 -0.54172,39.77973 -3.97243,41.61579 -2.55148,1.36551 -5.35911,1.27465 -6.85562,-0.22186 z m 927.83365,-24.79176 v -26.0254 l 15.6295,0.2754 c 14.3521,0.25288 15.738,0.43884 16.9582,2.27539 1.3108,1.97293 1.1358,1.99595 -12.93,1.70086 -13.0079,-0.27291 -14.4112,-0.13074 -15.9961,1.62058 -1.5592,1.72285 -1.7078,4.18925 -1.4495,24.05004 0.2237,17.19148 0.01,22.13012 -0.9621,22.12942 -0.968,-7e-4 -1.25,-5.87313 -1.25,-26.02629 z m 54.0769,24.61799 c -0.9492,-1.14363 -0.5312,-1.61759 2.2302,-2.52893 1.9804,-0.65361 3.8769,-2.17212 4.5456,-3.63965 0.7955,-1.74608 1.1566,-13.92438 1.1777,-39.72107 0.024,-29.70429 0.2762,-36.79983 1.25,-35.20295 1.3403,2.19788 2.385,66.33231 1.2107,74.32208 -0.3494,2.37715 -1.5028,5.18965 -2.5632,6.25 -2.2615,2.26156 -6.19,2.52201 -7.851,0.52052 z m -723.51805,-7.1244 c -1.839,-1.39095 -1.77529,-1.4682 1.21105,-1.4682 1.95494,0 3.92659,-0.83124 5.19112,-2.18856 1.86303,-1.99972 2.04043,-3.48815 2.05601,-17.25 l 0.017,-15.06144 2.93074,4.97895 c 2.58369,4.38937 2.75929,5.1684 1.48295,6.57874 -1.02764,1.13553 -1.44779,4.0973 -1.44779,10.20595 0,8.62073 -1.08928,13.53701 -3.31256,14.9507 -1.91436,1.21725 -6.03251,0.83923 -8.12857,-0.74614 z M 66.142883,526.35715 v -27 h 16.96482 c 15.1328,0 17.066147,0.18898 17.903247,1.75 0.87774,1.63681 -0.0451,1.73079 -14.267347,1.45306 -13.92714,-0.27197 -15.35154,-0.13588 -16.9391,1.61835 -1.55959,1.72333 -1.70466,4.28378 -1.44746,25.54776 0.22246,18.39209 0.009,23.63228 -0.96416,23.63165 -0.96912,-6.4e-4 -1.25,-6.06792 -1.25,-27.00082 z m 56.441127,24.5318 c -1.8972,-1.43497 -1.89147,-1.46891 0.25311,-1.5 1.20683,-0.0175 3.45683,-1.11691 5,-2.44315 2.75017,-2.36359 2.81567,-2.67031 3.30576,-15.48208 l 0.5,-13.07073 5.25,2.43607 c 4.70641,2.18385 6.90668,4.52809 4.25,4.52809 -0.55,0 -1,-0.45 -1,-1 0,-1.52677 -4.59707,-1.19043 -5.94609,0.43504 -0.77609,0.93513 -1.12206,4.85417 -0.99315,11.25 0.1088,5.39823 -0.12347,11.00994 -0.51616,12.47048 -1.02362,3.80713 -6.50672,5.09672 -10.10347,2.37628 z m 580.80887,-17.85827 c -3.15944,-6.99534 -0.3448,-18.45215 6.21518,-25.29853 3.65409,-3.81362 4.73362,-4.375 8.41306,-4.375 4.40396,0 8.86426,1.77988 11.045,4.40751 1.13101,1.36278 0.91553,1.35877 -1.87826,-0.035 -4.23831,-2.11435 -9.15571,-1.09224 -13.62528,2.83209 -5.21837,4.58179 -7.78888,10.17382 -8.39639,18.26595 -0.49257,6.56107 -0.59675,6.80799 -1.77331,4.20294 z m 144.01901,-1.93454 c -2.29858,-2.97399 -2.60765,-4.23448 -0.60975,-2.48681 1.10167,0.9637 2.30402,1.4512 2.67189,1.08334 0.36787,-0.36787 0.66885,-0.17041 0.66885,0.4388 0,1.73945 -1.67491,2.33108 -2.73099,0.96467 z m -242.64547,-1.27765 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z m -273.13737,-8.48372 c -0.92474,-1.49626 -11.37864,-6.6023 -16.14491,-7.88573 -2.25956,-0.60843 -4.65967,-1.77062 -5.33359,-2.58264 -1.63419,-1.96909 8.10356,1.33793 15.01305,5.09854 4.42996,2.41109 9.2214,6.39221 7.69328,6.39221 -0.32778,0 -0.8803,-0.46007 -1.22783,-1.02238 z m 269.13737,-1.51628 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z m -4,-10 c -0.96498,-2.51469 -0.68031,-3.16355 0.49853,-1.13634 0.58369,1.00375 0.8506,2.03566 0.59313,2.29313 -0.25747,0.25747 -0.74872,-0.26309 -1.09166,-1.15679 z m 463.84618,-3.88536 c -1.1167,-1.21707 -5.6167,-3.49123 -10,-5.0537 -12.2348,-4.36119 -14.8305,-5.49477 -14.1472,-6.17813 1.7029,-1.7029 26.6775,9.79297 26.6775,12.27972 0,1.69131 -0.027,1.67993 -2.5303,-1.04789 z m -199.70389,-0.36345 c -0.36901,-1.41111 -3.05384,-2.8659 -9.63094,-5.21859 -9.15961,-3.27647 -16.05005,-6.90447 -9.63489,-5.07302 11.41411,3.25859 21.8995,8.81464 20.60077,10.91603 -0.6286,1.01709 -0.94429,0.86943 -1.33494,-0.62442 z M 131.24256,483.10715 c 0.0589,-10.19946 0.42692,-16.22818 0.90032,-14.75 1.20016,3.74749 1.20016,32 0,32 -0.63187,0 -0.9633,-6.35021 -0.90032,-17.25 z m -142.493725,7.40206 -1.894048,-2.65206 2.338492,2.22222 c 1.286171,1.22222 2.138493,2.41565 1.894048,2.65206 -0.244444,0.23641 -1.296766,-0.76359 -2.338492,-2.22222 z m 366.965745,2.09794 c 0.49777,-0.4125 1.24088,-1.2 1.65135,-1.75 0.42591,-0.57068 0.7529,-0.24868 0.76164,0.75 0.009,0.97279 -0.72489,1.75 -1.65136,1.75 -0.91666,0 -1.2594,-0.3375 -0.76163,-0.75 z m -379.071697,-9.10911 c -2.2,-0.99836 -7.032612,-2.82354 -10.739138,-4.05596 -6.09429,-2.02635 -9.53461,-4.08493 -6.826781,-4.08493 1.699935,0 18.684703,6.99627 20.710749,8.53105 2.492685,1.88828 1.643971,1.78298 -3.14483,-0.39016 z\"\n         id=\"path76\"\n         inkscape:connector-curvature=\"0\" />\n      <path\n         style=\"fill:#494949;fill-opacity:1\"\n         d=\"m 1257.1565,714.2747 c -9.0562,-2.04235 -18.365,-4.89945 -17.8009,-5.46354 0.1882,-0.18822 3.6799,0.53408 7.7594,1.60511 20.2976,5.32896 36.1585,4.8676 71.5279,-2.08063 2.75,-0.54023 9.649,-1.36791 15.3311,-1.83928 16.182,-1.3424 14.6689,4.2964 14.6689,-54.66699 0,-27.20972 0.3375,-49.47222 0.75,-49.47222 0.4125,0 0.75,23.34541 0.75,51.87868 v 51.87868 l -2.75,1.05739 c -1.5125,0.58156 -7.4491,1.57188 -13.1925,2.20071 -5.7433,0.62882 -17.8933,2.45729 -27,4.06325 -20.2469,3.57057 -36.7074,3.84648 -50.0439,0.83884 z m 101.9864,1.09449 c -0.9662,-0.61662 22.5743,-1.05603 66.1454,-1.23468 64.9061,-0.26613 67.7307,-0.35451 69.75,-2.18235 2.0678,-1.87164 2.1058,-2.58052 2.1749,-40.5 0.041,-22.47461 0.4292,-37.75965 0.9297,-36.59501 0.4727,1.1 0.8911,18.9875 0.9297,39.75 0.068,36.46591 0,37.81803 -1.9297,39.75 -1.9607,1.96066 -3.3228,1.9997 -69.25,1.98469 -41.0958,-0.009 -67.8334,-0.38763 -68.75,-0.97265 z m -362.84782,-2.40143 c -1.9927,-1.0912 1.1837,-1.38552 21.00002,-1.94584 12.8413,-0.36309 28.0852,-0.6612 33.8753,-0.66247 11.2317,-0.002 14.175,-0.98708 16.0208,-5.3593 0.7186,-1.70226 0.8581,-1.32181 0.6782,1.8499 -0.18,3.17362 -0.7395,4.22602 -2.7265,5.12908 -3.8934,1.76946 -65.79862,2.65839 -68.84782,0.98863 z m 89.34782,-1.1264 c -2.6315,-1.25049 3.7624,-1.39977 52.06,-1.2154 51.1128,0.19512 55.2529,0.0838 57.75,-1.55237 1.4795,-0.9694 2.7037,-2.53967 2.7204,-3.48949 0.028,-1.60926 0.1006,-1.60632 1.061,0.0432 1.4564,2.50155 0.1727,5.67892 -2.7421,6.7871 -1.4443,0.54915 -24.4746,0.92389 -55.1644,0.89762 -43.4697,-0.0372 -53.2096,-0.29446 -55.6849,-1.47069 z m -321.00002,-3.01364 c -2.64801,-1.27035 2.71596,-1.41172 45.71649,-1.20489 l 48.7165,0.23432 2.2835,-2.27715 2.28351,-2.27715 0.21112,-62.22285 0.21112,-62.22285 22.78888,-45.65892 c 12.53388,-25.11241 23.12638,-45.69991 23.53888,-45.75 2.6992,-0.32779 -1.84381,10.02539 -22,50.13631 l -22.75,45.27261 -0.5,62.33113 c -0.48324,60.24124 -0.56508,62.3787 -2.44113,63.75 -2.89634,2.11708 -93.62867,2.01478 -98.05887,-0.11056 z m 494.89882,0.0731 c -47.0202,-7.30427 -84.0409,-43.9623 -94.4689,-93.54365 -3.0949,-14.71488 -3.1003,-36.26174 -0.013,-50.93362 6.483,-30.80749 23.2405,-57.12963 47.0829,-73.95623 19.487,-13.75273 39.4033,-20.11017 63.0002,-20.11017 13.5747,0 24.9056,1.89168 36.3513,6.06886 l 8.0315,2.93114 h 80.2016 c 72.2109,0 80.2621,0.1576 80.8086,1.58179 0.3339,0.86998 0.607,18.38784 0.607,38.92857 0,32.61829 -0.199,37.54574 -1.5714,38.91821 -1.7413,1.74123 -3.2767,1.95442 -5.2157,0.72417 -0.7079,-0.44914 -2.3551,-5.50475 -3.6605,-11.23468 -2.6789,-11.75909 -6.4266,-22.68063 -10.7026,-31.18956 l -2.9003,-5.77151 -19.2248,0.27151 -19.2247,0.2715 v 29.5 29.5 l 22.9207,0.26921 c 14.8554,0.17448 23.3884,0.65742 24.25,1.37245 0.9931,0.82424 1.3293,4.74533 1.3293,15.50554 v 14.4023 l -2.5651,0.97525 c -1.4108,0.53639 -12.4414,0.97525 -24.5125,0.97525 h -21.9473 l 0.2624,36.25 0.2625,36.25 25.5973,0.26657 25.5972,0.26658 4.0533,-8.76658 c 4.5568,-9.8557 7.1759,-17.90439 9.783,-30.06432 1.9267,-8.98595 3.7276,-11.2047 7.4692,-9.20225 1.9472,1.04211 2,2.09382 2,39.83518 0,28.81708 -0.3079,39.07276 -1.2,39.96482 -1.7352,1.73523 -134.8648,1.73523 -136.6,0 -0.9175,-0.9175 -1.2,-24.99065 -1.2,-102.25794 V 505.84126 l -6.25,-4.15047 c -8.8985,-5.90928 -10.8441,-6.79946 -11.7295,-5.36677 -0.3989,0.64536 -2.4145,8.22932 -4.4791,16.85325 -15.5962,65.14463 -15.5976,65.14925 -19.0414,65.14925 -2.5238,0 -3.8229,-1.98862 -3.6784,-5.63059 0.2159,-5.43997 -1.6949,-24.90013 -2.9751,-30.29872 -3.2693,-13.78651 -8.4197,-24.34542 -15.7467,-32.28215 -6.3142,-6.83974 -11.682,-10.23503 -18.7664,-11.87031 -4.623,-1.06712 -5.5343,-0.96874 -9.6979,1.04682 -14.5538,7.04538 -29.5806,33.99533 -35.7217,64.06558 -3.2686,16.00507 -3.3009,43.4991 -0.069,58.68841 6.423,30.18601 20.8551,54.68668 35.9272,60.99154 2.6847,1.12307 5.4753,1.39671 9.9724,0.97789 11.0474,-1.02886 10.2555,1.21888 10.2555,-29.10899 v -26.38079 l -3.8337,-3.03634 c -5.3311,-4.22233 -21.1631,-11.76378 -27.8266,-13.255 -6.2868,-1.40694 -8.4191,-3.99127 -6.4024,-7.75963 l 1.1431,-2.13589 49.2098,0.2594 49.2098,0.2594 0.2597,48.38587 c 0.1873,34.89648 -0.056,48.76616 -0.8725,49.75 -0.7304,0.8801 -3.3063,1.36486 -7.2596,1.36618 -3.3702,10e-4 -12.6526,1.13614 -20.6276,2.52226 -32.7647,5.69473 -40.989,6.28925 -55.6012,4.01934 z m 12.0015,-5.29365 c -0.6112,-2.63539 -0.574,-2.66711 0.8923,-0.76103 0.8415,1.09394 1.274,2.40326 0.9611,2.9096 -0.7323,1.18488 18.2822,0.0931 25.9963,-1.49267 4.4115,-0.90685 5.75,-1.59761 5.75,-2.96731 0,-1.64789 0.2299,-1.6706 2.9873,-0.29506 1.643,0.81964 3.4886,1.18037 4.1014,0.80163 0.6128,-0.37874 4.5553,-1.07451 8.761,-1.54617 5.3307,-0.59781 8.026,-1.37605 8.8986,-2.5694 0.6884,-0.94152 1.2517,-1.17584 1.2517,-0.52072 0,0.65512 1.0125,1.13893 2.25,1.07513 1.6932,-0.0873 1.8169,-0.22918 0.5,-0.57333 -1.8101,-0.47303 -2.4634,-2.31067 -0.8214,-2.31067 1.6128,0 4.2076,-3.2026 3.6893,-4.55347 -0.2735,-0.71257 0.5987,-2.01369 1.9382,-2.89136 2.094,-1.37204 2.2643,-1.86982 1.2147,-3.55051 -0.9615,-1.53967 -0.9606,-2.21485 0,-3.1797 0.7062,-0.70612 1.2098,-3.78746 1.189,-7.27496 l -0.036,-6.05 -2.4591,3 c -2.2224,2.71131 -2.4595,2.79691 -2.464,0.88955 0,-1.16075 1.12,-3.76824 2.495,-5.79441 1.5121,-2.22815 2.5,-5.09497 2.5,-7.25456 v -3.5706 l -2.5,1.63806 c -2.1157,1.38625 -2.5,1.413 -2.5,0.17403 0,-0.80522 0.45,-1.74215 1,-2.08207 0.55,-0.33992 1,-1.47735 1,-2.52763 0,-1.28658 0.4894,-1.72181 1.5,-1.334 1.2305,0.47217 1.5,-0.50083 1.5,-5.41475 0,-5.10031 -0.29,-6.0662 -1.9521,-6.50083 -1.0736,-0.28076 -2.1671,0.004 -2.4301,0.63337 -0.2629,0.62911 -0.4386,-3.39271 -0.3904,-8.93737 0.087,-10.01403 0.1033,-10.07823 2.4301,-9.63343 1.6753,0.32025 2.3425,-0.0127 2.3425,-1.16878 0,-0.88912 -0.675,-1.61658 -1.5,-1.61658 -0.825,0 -1.5069,-0.7875 -1.5153,-1.75 -0.013,-1.49555 -0.1563,-1.5319 -0.9847,-0.25 -0.7767,1.20183 -0.9724,1.03119 -0.9847,-0.85841 -0.013,-2.03025 0.3392,-2.26943 2.5324,-1.71898 2.4719,0.62043 2.5407,0.50477 2.3131,-3.89159 l -0.2302,-4.53104 h -46.8132 c -29.2369,0 -46.8131,0.36038 -46.8131,0.95986 0,0.52792 1.9125,1.47747 4.25,2.11011 2.3375,0.63263 5.1889,1.58733 6.3364,2.12155 1.1475,0.53422 2.725,0.82465 3.5055,0.64541 0.7805,-0.17924 2.4292,0.68412 3.6636,1.91859 2.7855,2.7855 3.9243,2.82868 4.7647,0.18069 0.6072,-1.91283 0.8132,-1.95087 2.8174,-0.52007 1.1893,0.84904 3.6339,2.28329 5.4324,3.18722 2.5873,1.30037 3.0334,1.92861 2.1367,3.00906 -0.6233,0.75106 -1.6448,1.11521 -2.27,0.80923 -0.6252,-0.30598 0.7758,1.17374 3.1133,3.28828 l 4.25,3.84461 v 28.27375 28.27376 l -3.75,1.58492 c -6.3339,2.67699 -16.1346,2.90002 -21.5804,0.4911 -5.5401,-2.45066 -14.0004,-10.19072 -18.7552,-17.15847 -2.4972,-3.65951 -3.879,-4.84823 -5.1622,-4.44095 -1.9706,0.62544 -2.4504,-1.15798 -0.5022,-1.86675 2.4205,-0.88059 -0.7045,-4.24509 -3.6133,-3.89033 -3.0685,0.37422 -3.1982,-0.0349 -1.0505,-3.31278 1.9137,-2.92065 0.8905,-5.54294 -1.1004,-2.8202 -1.5138,2.07016 -1.4463,2.12546 -3.8544,-3.15895 -1.1883,-2.60778 -1.4355,-4.09494 -0.7203,-4.33334 1.5766,-0.52552 1.3382,-2.1963 -0.3133,-2.1963 -1.8788,0 -3.9065,-5.68854 -2.2752,-6.38284 0.7965,-0.33899 0.6366,-0.84526 -0.4945,-1.56508 -2.2402,-1.42575 -3.3462,-6.72285 -1.7941,-8.59304 0.9538,-1.14922 0.9396,-1.45904 -0.067,-1.45904 -0.8678,0 -0.7086,-0.62859 0.4963,-1.96001 1.3865,-1.53204 1.6105,-2.78754 1.026,-5.75 -0.4113,-2.08449 -0.8723,-4.77678 -1.0245,-5.98286 -0.3758,-2.97896 -1.4028,-4.46377 -2.583,-3.73441 -0.6124,0.37849 -0.525,1.15289 0.2332,2.0665 0.9628,1.16008 0.8992,1.77468 -0.3089,2.98276 -1.3621,1.36214 -1.5855,1.12771 -2.1315,-2.23696 -0.3523,-2.1709 -0.1496,-4.31329 0.4799,-5.07179 0.7407,-0.89249 0.7654,-1.71371 0.077,-2.56323 -0.5571,-0.6875 -1.0548,-6.5375 -1.106,-13 -0.08,-10.16093 0.1242,-11.75 1.5129,-11.75 1.2832,0 1.3662,-0.28897 0.4129,-1.43757 -0.7741,-0.93278 -0.9735,-3.12744 -0.5678,-6.25 1.0286,-7.91782 1.4832,-9.31243 3.0351,-9.31243 1.7908,0 1.9084,-1.17247 0.2809,-2.8 -0.9333,-0.93333 -0.8778,-1.22632 0.25,-1.31842 0.7975,-0.0651 1.7875,-0.0651 2.2,0 1.2853,0.20295 0.8221,-1.57685 -0.75,-2.88158 -1.8269,-1.51623 -1.883,-2.45231 -0.25,-4.17857 0.6875,-0.72679 1.3326,-3.03933 1.4336,-5.13898 0.101,-2.09966 0.6151,-4.34966 1.1424,-5 0.5273,-0.65035 1.18,-2.08245 1.4504,-3.18245 0.4222,-1.71754 0.508,-1.66161 0.6076,0.39602 l 0.116,2.39603 2.5,-2.69755 c 2.4581,-2.65237 3.2704,-4.18869 1.7023,-3.2195 -0.4388,0.27117 -1.4186,0.10935 -2.1774,-0.3596 -1.1182,-0.6911 -0.7748,-2.08108 1.8124,-7.33656 2.6242,-5.33047 3.5452,-6.39156 5.1774,-5.96475 2.1289,0.55673 2.7694,-1.52997 1.0097,-3.28967 -1.242,-1.24256 2.3774,-7.42442 4.3475,-7.42442 0.7704,0 2.1692,-1.6194 3.1084,-3.59866 1.4027,-2.95596 2.1374,-3.51651 4.1139,-3.13867 1.8877,0.36084 2.4063,0.0324 2.4063,-1.52379 0,-1.73395 -0.2204,-1.81474 -1.75,-0.64159 -0.9625,0.7382 -0.625,0.0755 0.75,-1.47271 3.4846,-3.92355 10.6434,-7.95109 13.0255,-7.32816 1.086,0.28399 1.9745,0.0465 1.9745,-0.52772 0,-0.68116 1.9986,-0.81383 5.75,-0.38169 6.4255,0.7402 18.25,6.07199 18.25,8.22912 0,0.76113 0.3375,1.27137 0.75,1.13387 1.1799,-0.39329 1.4403,0.59052 0.6805,2.57055 -0.497,1.29504 0.2944,2.88261 2.7418,5.5 11.2207,12.00047 16.9848,28.03889 19.0348,52.96385 0.7834,9.52471 1.4749,13.74824 2.0754,12.67532 0.4952,-0.885 0.9308,-3.61813 0.968,-6.07364 0.037,-2.4555 0.4737,-4.71561 0.9702,-5.02246 2.0783,-1.28451 2.697,-5.29358 1.2461,-8.07519 -0.8,-1.53363 -1.4573,-3.35093 -1.4606,-4.03843 -0.01,-1.95306 2.9841,-1.46592 3.0727,0.5 0.049,1.09007 0.462,0.70029 1.0946,-1.03362 0.6993,-1.91677 0.686,-3.18073 -0.043,-4.05879 -0.775,-0.93377 -0.5326,-1.72534 0.9054,-2.95659 1.9191,-1.64312 2.5305,-3.80101 1.3979,-4.9336 -0.9286,-0.92855 -1.2977,-12.7674 -0.3981,-12.7674 0.4561,0 1.1169,0.90653 1.4686,2.01452 0.9652,3.04113 2.1623,1.57625 3.4822,-4.26144 0.6533,-2.88919 1.4094,-6.05817 1.6803,-7.04216 0.4099,-1.4891 0.06,-1.68051 -2.0873,-1.14159 -3.544,0.88949 -3.2661,-0.81667 0.6702,-4.11396 3.1449,-2.63441 4.5348,-6.08135 5.2238,-12.95537 0.548,-5.46676 1.4838,-6.66822 4.652,-5.97237 2.3477,0.51565 2.7616,0.34245 2.2662,-0.94839 -0.4303,-1.12218 -0.013,-1.57924 1.4423,-1.57924 2.4428,0 3.6972,1.58288 1.9222,2.42568 -0.6909,0.32807 -0.1912,0.39489 1.1106,0.14849 1.476,-0.27939 3.8635,0.54249 6.3437,2.18381 3.4466,2.28086 3.7644,2.78721 2.3832,3.79716 -2.166,1.58379 -2.0021,2.44486 0.4653,2.44486 1.1325,0 1.8181,0.38986 1.5236,0.86635 -0.2945,0.4765 0.354,1.67124 1.441,2.65499 1.9436,1.759 1.9764,3.4597 1.9764,102.63365 v 100.84501 h 5.4769 c 4.7386,0 5.6978,-0.33703 7.1151,-2.5 1.2692,-1.93718 2.4564,-2.48476 5.273,-2.43232 3.2889,0.0612 3.4263,0.16852 1.4433,1.12678 -2.4768,1.19692 -4.0775,4.03794 -1.7778,3.15547 2.3819,-0.91402 10.7654,-0.96674 14.2049,-0.0893 2.0608,0.52569 4.0059,0.41304 5.3574,-0.31027 1.5345,-0.82127 2.4244,-0.83317 3.2146,-0.043 0.6009,0.60095 2.6901,1.08575 4.6426,1.07733 2.3701,-0.0102 3.099,-0.30105 2.1932,-0.875 -1.8115,-1.14787 0.3237,-2.52823 2.5747,-1.66443 0.8922,0.34236 1.9888,0.0447 2.4368,-0.66139 0.6586,-1.03792 0.8176,-1.0331 0.83,0.0251 0.01,0.71996 0.4653,1.0309 1.0153,0.69098 0.55,-0.33992 1,-0.13766 1,0.44946 0,0.7112 0.6404,0.66754 1.9188,-0.13082 1.5114,-0.94389 2.2556,-0.91883 3.5049,0.11802 0.8723,0.72398 4.2469,1.50523 7.4991,1.7361 5.1774,0.36756 5.9896,0.17864 6.5282,-1.51852 0.3384,-1.06606 1.6128,-2.20574 2.8321,-2.53261 3.187,-0.8544 8.5155,-0.75655 9.0862,0.16684 0.268,0.43366 2.1007,0.73494 4.0726,0.66951 3.0446,-0.10102 3.4977,0.1571 3.0043,1.71153 -0.5272,1.66102 0.096,1.82907 6.7364,1.81518 4.0246,-0.008 6.8346,-0.34592 6.2445,-0.75 -0.5902,-0.40408 -1.3635,-1.52219 -1.7187,-2.48469 -0.7678,-2.08109 1.0012,-2.29506 4.7717,-0.57713 1.969,0.89717 2.8499,0.89717 3.747,0 0.6451,-0.64508 2.7704,-1.11363 4.7229,-1.04123 l 3.55,0.13164 -3.4886,0.61836 c -2.2101,0.39173 -3.6114,1.25975 -3.8234,2.36836 -0.5027,2.62893 5.3869,2.41278 6.812,-0.25 0.5887,-1.1 1.4521,-2 1.9186,-2 0.4665,0 1.0835,0.9 1.3711,2 0.3711,1.41872 1.3641,2 3.4167,2 4.9305,0 6.7219,-3.60805 4.0436,-8.14422 -1,-1.69367 -1,-2.20762 0,-2.56977 0.7948,-0.28783 1.25,-2.46711 1.25,-5.98435 v -5.53168 l -2.5,1.63806 c -2.0996,1.3757 -2.5,1.40556 -2.5,0.18644 0,-0.79839 0.675,-2.12662 1.5,-2.95162 0.825,-0.825 1.5,-1.98215 1.5,-2.57143 0,-0.58929 0.45,-1.07143 1,-1.07143 0.5958,0 1,-3.80213 1,-9.40638 0,-8.91405 -0.1047,-9.37901 -2,-8.88337 -2.755,0.72045 -2.7715,-3.33062 -0.017,-4.20482 1.8492,-0.58692 1.9672,-1.434 1.75,-12.5659 -0.2968,-15.2138 -1.1419,-15.75827 -3.7865,-2.43953 -1.7239,8.68159 -5.5076,19.72864 -10.1899,29.75 l -4.0882,8.75 h -28.3999 c -17.0066,0 -29.1489,0.40087 -30.267,0.99925 -1.4582,0.7804 -1.9801,0.61615 -2.3832,-0.75 -0.9157,-3.10366 -0.3335,-11.42128 0.8307,-11.86803 0.6212,-0.23836 1.1784,-1.43415 1.2383,-2.6573 0.06,-1.22316 -0.1077,-1.66142 -0.3725,-0.97392 -0.2647,0.6875 -0.8939,1.25 -1.398,1.25 -1.6923,0 -0.938,-1.99471 1.5833,-4.18695 l 2.5,-2.17372 V 630.17676 600.3571 h 24.5 24.5 v -13 -13 h -24.5 -24.5 v -8.02305 -8.02306 l -2.6093,1.70966 c -2.5086,1.64369 -2.5948,1.63494 -2.2363,-0.22695 0.2052,-1.06513 0.9293,-1.99285 1.6093,-2.0616 0.68,-0.0687 1.6863,-0.18125 2.2363,-0.25 0.5789,-0.0724 0.9369,-3.17765 0.8502,-7.375 -0.082,-3.9875 -0.3399,-5.98582 -0.5722,-4.44071 -0.4822,3.20758 -2.7621,3.13151 -2.808,-0.0937 -0.017,-1.15995 -0.3418,-2.42075 -0.7228,-2.80177 -1.0764,-1.07637 0.1699,-2.41382 2.2493,-2.41382 1.6453,0 1.8785,-0.80683 1.8785,-6.5 0,-6.07125 -1.1922,-8.44294 -2.5134,-5 -1.2603,3.2844 -2.3616,1.18594 -2.3616,-4.5 0,-3.3 0.3975,-6 0.8834,-6 1.5393,0 1.9126,-4.92444 0.4644,-6.12633 -1.6978,-1.40902 0.2108,-4.25702 2.3124,-3.45056 0.7385,0.28338 1.3398,-0.13389 1.3398,-0.92974 0,-1.11579 0.5521,-1.23396 2.4297,-0.52009 3.0207,1.14845 9.7092,0.23012 11.1321,-1.52842 0.5839,-0.72175 2.3839,-1.63448 4,-2.0283 2.9331,-0.7148 2.935,-0.71237 1.0521,1.41285 -2.5527,2.88122 -0.5627,3.61579 5.8825,2.1714 3.5858,-0.80359 5.0178,-0.78683 5.5442,0.0649 0.9463,1.53108 4.9594,0.20959 4.9594,-1.63309 -10e-5,-0.78788 0.6328,-1.43256 1.4063,-1.43256 0.914,0 1.2233,0.70014 0.8833,2 -0.7268,2.7795 2.008,2.61453 4.1445,-0.25 1.1842,-1.58765 1.5237,-1.73484 1.1534,-0.5 -0.2887,0.9625 -0.1568,1.75 0.2929,1.75 0.4498,0 2.8711,4.3875 5.3808,9.75 4.7267,10.09957 8.7163,22.19511 10.8846,33 0.6898,3.4375 1.6142,6.25 2.0542,6.25 0.4399,0 0.7999,-3.6 0.7999,-8 0,-4.66667 -0.4167,-8 -1,-8 -0.55,0 -1,-0.675 -1,-1.5 0,-0.825 0.45,-1.5 1,-1.5 0.55,0 1,-0.66088 1,-1.46862 0,-0.89459 -0.5863,-1.24363 -1.5,-0.89301 -1.0408,0.39941 -1.5,-0.0693 -1.5,-1.53138 0,-1.20621 0.6413,-2.10699 1.5,-2.10699 0.825,0 1.5,-0.675 1.5,-1.5 0,-1.80819 -1.1668,-1.93321 -2.8,-0.3 -0.9333,0.93333 -1.2,0.31111 -1.2,-2.8 0,-2.2 0.54,-4.54 1.2,-5.2 0.9333,-0.93333 0.9333,-1.2 0,-1.2 -0.7366,0 -1.2,-1.57053 -1.2,-4.06739 0,-3.61231 0.2238,-3.99636 2,-3.43261 1.553,0.49289 2,0.1797 2,-1.40123 0,-1.3335 -0.4827,-1.85079 -1.3988,-1.49921 -0.7694,0.29523 -1.676,0.0885 -2.0146,-0.45939 -0.3386,-0.5479 0.2909,-1.2839 1.3989,-1.63556 2.6193,-0.83135 2.6327,-2.47903 0.014,-1.79436 -2.5988,0.67961 -2.5748,-0.87018 0.039,-2.50241 2.1974,-1.37231 1.6684,-3.69318 -0.64,-2.8074 -0.769,0.29523 -1.3985,0.10091 -1.3985,-0.43183 0,-0.53273 0.4875,-0.96861 1.0833,-0.96861 0.5959,0 0.8796,-0.5625 0.6305,-1.25 -0.249,-0.6875 0.2075,-2.00914 1.0146,-2.93699 0.8072,-0.92784 1.1719,-2.16534 0.8105,-2.75 -1.1173,-1.8079 -2.5331,-1.1749 -2.6549,1.18699 -0.091,1.76851 -0.2159,1.86498 -0.5828,0.45083 -0.2567,-0.98954 0.3015,-2.97168 1.2405,-4.40474 1.5345,-2.34197 1.5428,-2.54251 0.083,-1.98222 -2.2366,0.85826 -2.0335,-0.24954 0.5499,-2.99942 l 2.174,-2.31445 h -79.4829 -79.4829 l -8.0315,-2.93114 c -26.875,-9.80815 -57.1388,-7.83234 -83.3867,5.44399 -24.0008,12.13973 -44.6884,36.22117 -54.3392,63.25348 -8.7689,24.56212 -9.0036,56.38569 -0.6008,81.46638 5.4138,16.15935 14.5922,31.19903 26.9073,44.0906 8.4754,8.87201 10.8963,10.57277 12.1536,8.53829 0.6765,-1.09451 1.0701,-1.10598 2.1145,-0.0616 1.0444,1.04438 1.0323,1.43843 -0.065,2.11664 -0.9407,0.58137 -1.0138,1.04019 -0.2417,1.51738 0.6088,0.37621 1.5058,0.43741 1.9935,0.13601 0.4877,-0.30141 1.5002,0.20842 2.25,1.13294 1.1707,1.44348 1.1514,1.57243 -0.1367,0.9128 -0.825,-0.42248 -0.4293,0.17292 0.8794,1.32311 1.9267,1.69343 2.6607,1.85778 3.8582,0.86393 1.2002,-0.99607 1.7485,-0.85852 2.9101,0.73007 1.2309,1.6834 1.5657,1.7481 2.3918,0.46225 0.6593,-1.02632 1.1957,-1.15146 1.7105,-0.3991 0.4125,0.60281 2.1,1.42537 3.75,1.82791 1.65,0.40253 3.7312,1.3906 4.6248,2.19569 0.8937,0.8051 2.0187,1.39175 2.5,1.30367 2.006,-0.36707 3.4545,0.13943 2.9114,1.01808 -0.32,0.51777 0.6483,0.85527 2.1518,0.75 1.971,-0.13799 2.8426,0.33753 3.1242,1.70453 0.2859,1.38743 -0.03,1.73439 -1.1788,1.29367 -0.8631,-0.33123 -1.8015,-0.22667 -2.0851,0.23234 -0.2837,0.45901 0.9394,1.17192 2.7179,1.58424 1.7786,0.41231 5.7088,1.32939 8.7338,2.03794 3.025,0.70856 7.8711,1.326 10.7691,1.37209 5.2497,0.0835 5.2667,0.0738 4.6312,-2.66619 z m -6.9542,0.66287 c -1.0305,-1.66742 1.2873,-3.57951 2.6668,-2.2 1.1539,1.15392 0.4317,3.28713 -1.1129,3.28713 -0.4851,0 -1.1843,-0.48921 -1.5539,-1.08713 z m 133.5539,0.0871 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -105.573,-2.52147 c 2.0551,-1.55476 3.2035,-1.30764 2.1141,0.45494 -0.3625,0.58659 -1.4201,1.05222 -2.3501,1.03473 -1.4847,-0.0279 -1.4559,-0.2097 0.236,-1.48967 z m -34.427,-0.47853 c 0,-0.55 0.4234,-1 0.941,-1 0.5175,0 1.2191,0.45 1.559,1 0.3399,0.55 -0.083,1 -0.941,1 -0.8574,0 -1.559,-0.45 -1.559,-1 z m 57.4309,-3.1118 c -0.9799,-1.58559 1.7335,-2.99663 3.2856,-1.70855 0.7059,0.58588 1.2835,1.46014 1.2835,1.94279 0,1.27158 -3.7575,1.07894 -4.5691,-0.23424 z m 20.5844,-17.1382 c 0.012,-1.81944 0.2008,-1.96296 0.9847,-0.75 1.2529,1.93876 1.2529,3 0,3 -0.55,0 -0.9931,-1.0125 -0.9847,-2.25 z m 73.9847,-29.16667 c 0,-1.6805 0.5485,-2.58333 1.5696,-2.58333 1.0423,0 1.4622,0.72946 1.25,2.17167 -0.4711,3.2015 -2.8196,3.54438 -2.8196,0.41166 z m -144,-40.58333 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 144.9702,-10.94431 c 1.33,-2.48507 2.7448,-3.34986 4.1051,-2.50917 0.6896,0.4262 0.3459,1.34405 -0.9582,2.55902 -2.7369,2.54977 -4.523,2.52147 -3.1469,-0.0498 z m 12.2173,-3.11819 c 0.2406,-0.72188 1.0281,-1.50938 1.75,-1.75 0.75,-0.25 1.125,0.125 0.875,0.875 -0.2406,0.72187 -1.0281,1.50937 -1.75,1.75 -0.75,0.25 -1.125,-0.125 -0.875,-0.875 z m 13.2897,-0.90067 c 0.3525,-0.57026 2.2158,-1.03683 4.1408,-1.03683 4.5528,0 3.621,1.50779 -1.1296,1.82772 -2.3184,0.15614 -3.418,-0.13265 -3.0112,-0.79089 z m -24.9772,-21.03683 c 0.3399,-0.55 1.068,-1 1.618,-1 0.55,0 0.7219,0.45 0.382,1 -0.3399,0.55 -1.068,1 -1.618,1 -0.55,0 -0.7219,-0.45 -0.382,-1 z m 0.5,-22 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -0.6632,-16.43539 c 0.303,-0.78947 0.014,-1.65394 -0.643,-1.92105 -0.6566,-0.26712 -0.4063,-0.52119 0.5562,-0.56461 1.1096,-0.0501 1.75,0.65288 1.75,1.92105 0,1.1 -0.4981,2 -1.107,2 -0.6088,0 -0.8591,-0.64593 -0.5562,-1.43539 z m 48.1632,-31.56461 c -0.3399,-0.55 0.1101,-1 1,-1 0.8899,0 1.3399,0.45 1,1 -0.3399,0.55 -0.7899,1 -1,1 -0.2101,0 -0.6601,-0.45 -1,-1 z m -133.4863,-2.69098 c 0.028,-3.67507 1.2475,-6.42278 2.6177,-5.89696 0.7527,0.28884 1.3686,0.0143 1.3686,-0.61011 0,-0.62441 0.2309,-0.90438 0.5131,-0.62216 0.6775,0.67748 -2.1969,7.50675 -3.4979,8.31085 -0.5584,0.34506 -1.0091,-0.18666 -1.0015,-1.18162 z m 90.7988,1.00787 c 0.7219,-0.28888 1.5844,-0.25335 1.9167,0.079 0.3323,0.33229 -0.2584,0.56864 -1.3125,0.52522 -1.165,-0.048 -1.4019,-0.28495 -0.6042,-0.60417 z m 27.5148,201.09376 c -0.5229,-1.36286 -3.3297,-2.74162 -4.0713,-1.99997 -0.6816,0.68159 1.9709,3.25599 3.3548,3.25599 0.6592,0 0.9816,-0.56521 0.7165,-1.25602 z M 1340.525,693.80367 c 0.3033,-0.79019 -0.2101,-1.04274 -1.4569,-0.7167 -2.2557,0.58987 -2.5813,1.93685 -0.4682,1.93685 0.8013,0 1.6676,-0.54907 1.9251,-1.22015 z m 74.6179,-18.44652 c 0,-1.11111 -0.6667,-2 -1.5,-2 -1.8082,0 -1.9332,1.16679 -0.3,2.8 1.6138,1.61379 1.8,1.53102 1.8,-0.8 z m -0.3958,-5.72917 c -1.0165,-1.01651 -1.8553,0.51389 -1.0213,1.86338 0.6301,1.01942 0.8656,1.02021 1.2044,0.004 0.2315,-0.69479 0.1492,-1.53513 -0.1831,-1.86742 z m -188.6042,-31.77083 c 0,-0.825 -0.45,-1.5 -1,-1.5 -0.55,0 -1,0.675 -1,1.5 0,0.825 0.45,1.5 1,1.5 0.55,0 1,-0.675 1,-1.5 z m -6.1786,-47.80988 c 0.3147,-2.73502 0.2785,-2.7561 -1.75,-1.0192 -2.5276,2.16417 -2.7164,4.59804 -0.3214,4.14385 1.0653,-0.20203 1.8757,-1.42455 2.0714,-3.12465 z m 0.1786,-7.69012 c 0,-0.55 -0.9,-1 -2,-1 -1.1,0 -2,0.45 -2,1 0,0.55 0.9,1 2,1 1.1,0 2,-0.45 2,-1 z m 2,-18 c 0,-1.1 -0.4019,-2 -0.893,-2 -1.1241,0 -2.1725,2.60112 -1.3714,3.40223 1.2037,1.20377 2.2644,0.54696 2.2644,-1.40223 z m 192.6042,-40.72917 c -1.0165,-1.01651 -1.8553,0.51389 -1.0213,1.86338 0.6301,1.01942 0.8656,1.02021 1.2044,0.004 0.2315,-0.69479 0.1492,-1.53512 -0.1831,-1.86742 z m 0.3958,-2.73945 c 0,-0.89459 -0.5863,-1.24363 -1.5,-0.89301 -0.825,0.31659 -1.5,0.97746 -1.5,1.46862 0,0.49115 0.675,0.89301 1.5,0.89301 0.825,0 1.5,-0.66088 1.5,-1.46862 z m -166.4093,-16.27402 c -0.6935,-0.69349 -2.5907,0.71555 -2.5907,1.9241 0,0.66309 0.5738,0.58723 1.5242,-0.20152 0.8383,-0.69572 1.3182,-1.47088 1.0665,-1.72258 z m 12.5485,-10.21205 2.3608,-1.95468 -3.75,1.12247 c -2.0625,0.61735 -3.75,1.49696 -3.75,1.95468 0,1.47808 2.7144,0.88522 5.1392,-1.12247 z m 16.0709,0.76481 c -0.6544,-0.65443 -1.9819,-1.30094 -2.95,-1.43669 -1.562,-0.21903 -1.5416,-0.0851 0.181,1.18988 2.353,1.74152 4.4507,1.9285 2.769,0.24681 z m 69.7899,0.18988 c 0,-0.55 -0.1984,-1 -0.441,-1 -0.2425,0 -0.7191,0.45 -1.059,1 -0.3399,0.55 -0.1415,1 0.441,1 0.5824,0 1.059,-0.45 1.059,-1 z M 0.142883,706.97232 c -2.239068,-1.33246 2.979565,-1.52133 50,-1.80959 28.875,-0.17701 53.337537,-0.72303 54.361197,-1.21337 1.02366,-0.49034 2.46855,-2.28668 3.21086,-3.99187 l 1.34966,-3.10034 0.0391,3.72695 c 0.0714,6.79787 1.59984,6.59744 -55.460857,7.27255 -44.105013,0.52183 -51.33799,0.40227 -53.5,-0.88433 z m 992.669597,-0.27888 c -1.4688,-1.46879 -1.8251,-0.49283 35.53902,-97.33629 3.2892,-8.525 7.6906,-20 9.7811,-25.5 2.0905,-5.5 7.4761,-19.45 11.9679,-31 17.5615,-45.15626 18.3544,-47.41913 17.1318,-48.89228 -1.7687,-2.13111 -16.6552,-9.33803 -25.5894,-12.38838 -6.5958,-2.25198 -8.0574,-3.13495 -8.3268,-5.03042 -0.7344,-5.16733 -0.575,-5.19011 36.1992,-5.17361 18.7702,0.008 34.6658,0.35744 35.3235,0.77559 0.6578,0.41815 9.3664,20.99876 19.3526,45.73469 39.4244,97.65499 49.2697,122.00214 59.8222,147.93843 8.4063,20.66141 10.7461,27.38341 10.0103,28.7583 -0.9086,1.69783 -3.9823,1.78041 -57.1706,1.53599 l -56.2104,-0.25831 v -3.83041 -3.83042 l 8.5,-2.73356 c 7.9674,-2.56228 20.0427,-8.31312 24.4488,-11.64376 2.1217,-1.6038 1.8931,-2.78147 -2.5675,-13.22405 l -1.8207,-4.2622 -37.1422,0.2622 -37.1423,0.2622 -2.9369,7.40158 c -1.6152,4.07087 -2.7186,7.97028 -2.4519,8.66534 0.8364,2.17966 13.7088,8.79679 23.6127,12.1383 9.463,3.19275 9.5012,3.21904 9.8108,6.75804 0.1996,2.28096 -0.1584,3.69893 -1,3.96097 -2.344,0.72987 -68.45132,1.60191 -69.14122,0.91206 z m 16.58042,-3.97564 c 0.9625,-0.27248 1.75,-0.9151 1.75,-1.42804 0,-0.51293 0.675,-0.93261 1.5,-0.93261 0.825,0 1.5,-0.45 1.5,-1 0,-1.23595 24.6238,-1.23595 27.5,0 1.3617,0.58516 1.5213,0.89201 0.5,0.96152 -0.825,0.0562 -2.4,0.81109 -3.5,1.67766 -1.8998,1.49664 -1.8247,1.54356 1.5,0.93653 1.925,-0.35148 4.4902,-0.63168 5.7004,-0.62268 1.2103,0.009 2.4318,-0.35784 2.7144,-0.8152 0.2827,-0.45737 2.536,-0.5247 5.0074,-0.14963 7.5307,1.14287 7.2194,-0.5985 -0.5276,-2.9516 -8.1348,-2.47087 -19.6502,-7.94382 -24.7013,-11.73985 -2.3345,-1.75442 -4.0251,-2.30479 -5.75,-1.87187 -3.1474,0.78995 -3.2169,-1.22543 -0.3045,-8.8359 2.2832,-5.9663 3.6793,-6.96868 4.6505,-3.33898 0.5279,1.97296 0.691,1.82295 1.3247,-1.21831 0.3975,-1.90757 0.2845,-4.28706 -0.251,-5.28777 -1.3693,-2.5585 -0.1202,-5.69563 2.6937,-6.76549 1.3121,-0.49885 7.9816,-0.907 14.8212,-0.907 9.9965,0 12.5457,0.28719 12.9974,1.46428 0.7063,1.84041 3.0591,1.88704 4.85,0.0961 1.7613,-1.76129 18.7675,-2.26149 19.8052,-0.58253 0.5124,0.82912 1.2849,0.77329 2.866,-0.20712 1.8417,-1.14201 2.3068,-1.11847 3.1187,0.15783 0.6341,0.99687 0.9593,1.08073 0.9695,0.25 0.011,-0.90066 2.321,-1.2401 8.2653,-1.21456 7.6153,0.0327 8.0577,0.14358 5.75,1.44106 l -2.5,1.40564 2.6908,-0.26953 c 1.48,-0.14823 3.3034,-0.77788 4.0521,-1.39921 1.4686,-1.21883 5.7571,-0.546 5.7571,0.90323 0,0.48585 -0.9,0.88337 -2,0.88337 -1.9447,0 -2.7876,1.49666 -1.2202,2.16667 0.4288,0.18333 2.5274,4.57768 4.6634,9.76522 l 3.8836,9.43189 -3.4134,2.88886 c -4.2999,3.63911 -19.5942,11.1019 -27.1634,13.25423 -3.6914,1.04968 -5.75,2.16779 -5.75,3.12311 0,0.81843 0.4225,1.22692 0.9389,0.90775 0.5165,-0.31916 3.9371,-0.77848 7.6014,-1.0207 3.6644,-0.24223 7.2648,-0.94031 8.001,-1.55129 0.7362,-0.61098 4.7933,-1.37216 9.0158,-1.69151 l 7.6772,-0.58063 -1.2052,2.252 c -1.1544,2.15703 -1.075,2.22339 1.8828,1.57374 2.0983,-0.46086 3.0881,-0.29752 3.0881,0.50961 0,1.46542 5.1412,0.36058 6.1856,-1.32927 0.9779,-1.58223 0.1272,-2.188 -1.4114,-1.00508 -0.8495,0.65307 -2.0733,0.562 -3.6716,-0.27319 -1.9975,-1.04386 0.7856,-1.25375 16.6885,-1.25858 15.4018,-0.005 18.9881,0.24907 18.5792,1.31454 -0.2787,0.72618 -0.073,1.58826 0.4567,1.91574 0.5299,0.32747 1.2394,-0.1237 1.5766,-1.00261 0.3497,-0.9111 1.2544,-1.35197 2.1048,-1.02564 0.8204,0.3148 1.4916,0.13649 1.4916,-0.39624 0,-0.56612 4.5709,-0.96862 11,-0.96862 6.05,0 11,-0.23945 11,-0.53212 0,-0.29266 -0.652,-2.09266 -1.449,-4 -1.4292,-3.42051 -1.4147,-3.46788 1.059,-3.46788 1.3794,0 2.256,-0.40775 1.948,-0.90612 -0.308,-0.49837 -1.421,-0.68096 -2.4734,-0.40576 -2.6915,0.70384 -5.0512,-3.5677 -2.6983,-4.88445 1.9716,-1.10336 2.0114,-3.48398 0.1137,-6.80367 -1.0907,-1.90802 -1.4375,-2.08561 -1.4646,-0.75 -0.019,0.9625 -0.2925,1.75 -0.6068,1.75 -0.7262,0 -3.4286,-2.67899 -3.4286,-3.39894 0,-0.29798 -1.0937,-2.93291 -2.4305,-5.85538 -1.3368,-2.92248 -3.0761,-7.09831 -3.8653,-9.27964 -0.7891,-2.18132 -1.7705,-4.75864 -2.1808,-5.72738 -0.5734,-1.35364 -0.3751,-1.61897 0.8568,-1.14625 2.0935,0.80336 3.245,-2.13413 1.6092,-4.10514 -0.6788,-0.818 -1.7417,-1.47359 -2.3618,-1.45686 -0.6202,0.0167 -0.3306,0.49438 0.6434,1.06146 1.8951,1.10327 1.4627,2.90813 -0.6967,2.90813 -1.5422,0 -5.8377,-9.76472 -4.9368,-11.22252 0.3403,-0.5506 0.097,-1.32338 -0.5401,-1.71729 -0.6374,-0.39391 -2.0432,-3.04359 -3.124,-5.88819 -1.96,-5.15822 -1.9599,-5.172 0.031,-5.172 1.0977,0 1.9959,-0.45 1.9959,-1 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,-1.10383 -1,-2.45295 0,-3.18074 -2.0021,-7.54705 -3.4605,-7.54705 -0.6267,0 -1.5903,0.45081 -2.1413,1.00181 -0.6691,0.66907 -1.6223,-0.72367 -2.87,-4.19335 -1.3412,-3.72972 -1.5381,-5.30516 -0.6982,-5.58514 1.8202,-0.60671 1.3794,-1.93531 -0.8341,-2.51415 -1.4268,-0.37311 -1.81,-1.03012 -1.3301,-2.28067 0.4262,-1.11063 0.2865,-1.51707 -0.3798,-1.10525 -1.8903,1.16826 -3.5453,-4.72467 -2.4455,-8.70774 1.0446,-3.78334 0.2418,-5.2448 -2.3375,-4.25505 -0.9793,0.37581 -1.218,0.0262 -0.7927,-1.16139 0.3346,-0.93449 0.2486,-1.37347 -0.1912,-0.97551 -1.0014,0.90622 -3.8428,-4.32409 -6.4732,-11.91544 -1.864,-5.37966 -1.8767,-5.6321 -0.1723,-3.42209 1.2693,1.64576 2.0665,2.01999 2.5694,1.2062 0.401,-0.64891 0.2991,-1.72263 -0.2265,-2.38603 -0.5257,-0.66341 -1.2568,-2.87791 -1.6248,-4.92112 -0.7535,-4.18329 -1.5608,-5.04026 -3.5751,-3.79531 -0.9875,0.61031 -1.0907,1.24044 -0.3575,2.18401 1.5698,2.02035 2.3858,4.82622 1.4035,4.82622 -0.481,0 -1.58,-2.07024 -2.4422,-4.60053 -1.5153,-4.44734 -1.4999,-4.61822 0.4626,-5.13143 1.3962,-0.36511 1.8244,-1.0363 1.3713,-2.14946 -0.3624,-0.89022 -1.0943,-2.82 -1.6265,-4.28841 -1.1254,-3.10528 -3.766,-4.46441 -5.0787,-2.61404 -0.5924,0.83495 -0.7011,0.32231 -0.3109,-1.46613 0.3299,-1.5125 0.1895,-2.75 -0.3122,-2.75 -1.5702,0 -2.1456,-2.99578 -0.9446,-4.9188 0.9135,-1.46278 0.6876,-2.97623 -1.1024,-7.38653 -1.2382,-3.05074 -2.916,-5.80189 -3.7285,-6.11367 -0.8125,-0.31178 -1.1707,-1.06296 -0.7959,-1.66929 0.3747,-0.60633 0.2397,-2.07201 -0.3,-3.25706 -0.5397,-1.18506 -4.0406,-9.91715 -7.7799,-19.40465 l -6.7989,-17.24999 h -33.3381 c -21.5587,0 -33.338,0.35333 -33.338,1 0,0.82305 1.0653,1.2632 2.25,0.9296 0.1375,-0.0387 1.5763,0.61769 3.1973,1.45869 2.1472,1.11396 3.301,1.23557 4.25,0.44795 0.9792,-0.81267 1.3027,-0.67825 1.3027,0.54131 0,1.88798 2.6383,2.20767 3.2432,0.393 0.3132,-0.93974 1.57,-0.84445 5.3333,0.40438 l 4.9235,1.63384 -4,0.11373 -4,0.11373 5.1297,2.82874 c 7.2659,4.00672 8.7192,4.48668 8.013,2.64637 -0.7301,-1.90271 1.2513,-1.90642 3.7608,-0.007 1.7523,1.32622 1.768,1.49269 0.1978,2.09522 -1.5549,0.59667 -1.5243,0.82361 0.3465,2.56648 1.1287,1.05156 2.0522,2.11672 2.0522,2.36703 0,0.25031 -5.6774,15.19528 -12.6165,33.21105 -6.9391,18.01576 -15.2143,39.50594 -18.3894,47.75594 -3.1751,8.25 -10.3724,26.92499 -15.9941,41.5 -17.5872,45.59718 -22.074,57.26901 -24.9866,65 -1.55412,4.125 -3.32382,8.78237 -3.93272,10.3497 l -1.107,2.84973 6.26312,-0.67168 c 3.4448,-0.36942 7.0507,-0.89461 8.0132,-1.1671 z m -10.25002,-0.91909 c 0,-0.20415 0.90002,-0.85286 2.00002,-1.44156 1.1049,-0.59134 2,-0.65928 2,-0.15182 0,0.50521 -0.9,1.15391 -2,1.44157 -1.1,0.28766 -2.00002,0.35597 -2.00002,0.15181 z m 38.01532,-62.19156 c 0.022,-4.00804 1.4513,-5.93759 3.2758,-4.42337 2.0392,1.69241 2.8364,0.46555 7.5885,-11.67862 1.7871,-4.56678 1.8598,-5.262 0.496,-4.73866 -1.1659,0.44741 -1.4329,0.18236 -0.9869,-0.9798 0.3362,-0.87622 0.6113,-2.00632 0.6113,-2.51134 0,-0.50501 0.6484,-0.91821 1.441,-0.91821 2.4954,0 2.7967,-1.98697 0.5741,-3.78669 -2.6367,-2.13508 -1.8184,-5.60303 1.1033,-4.67572 2.2006,0.69843 2.5995,-1.32486 0.4257,-2.15903 -1.2589,-0.4831 -1.2344,-1.12134 0.1812,-4.71861 0.9003,-2.28797 1.9149,-4.38495 2.2545,-4.65995 0.3397,-0.275 1.2471,-2.525 2.0165,-5 1.0875,-3.49805 1.4818,-3.99903 1.7709,-2.25 0.2045,1.2375 0.9631,2.25 1.6857,2.25 1.5608,0 2.9306,-4.35136 1.5216,-4.83333 -0.536,-0.18334 -0.9745,-1.22616 -0.9745,-2.31739 0,-1.4687 0.4761,-1.83295 1.8329,-1.4023 1.3205,0.41909 2.1698,-0.15741 3.0375,-2.06184 0.6625,-1.45398 0.9665,-2.88154 0.6757,-3.17236 -0.2908,-0.29082 -0.012,-1.15174 0.6202,-1.91315 0.8657,-1.04313 0.8636,-1.66975 -0.01,-2.54201 -1.5567,-1.55675 -1.461,-2.75762 0.22,-2.75762 0.7576,0 1.8941,-0.62245 2.5255,-1.38322 0.8888,-1.071 0.7832,-1.52316 -0.4678,-2.00324 -0.8887,-0.34102 -2.0252,-0.36701 -2.5255,-0.0578 -0.969,0.59882 -1.2868,-1.84542 -0.3605,-2.77175 0.3021,-0.30212 1.6344,-0.0396 2.9606,0.58334 1.8405,0.86453 3.7088,4.3282 7.8929,14.63264 4.7607,11.72462 23.8122,58.25145 25.285,61.75 0.4143,0.9842 -5.9694,1.25 -30.0218,1.25 -19.2866,0 -30.7758,0.36864 -31.166,1 -1.2961,2.09705 -3.4999,0.99026 -3.4847,-1.75 z m 59.6808,-4 c -0.2955,-0.9625 -5.5609,-13.9 -11.701,-28.75 -6.14,-14.85 -11.6513,-28.4625 -12.2472,-30.25 -0.5959,-1.7875 -1.3455,-3.24798 -1.6657,-3.2455 -0.3202,0.002 -3.8428,8.66497 -7.8279,19.25 -3.9852,10.58502 -9.444,24.983 -12.1309,31.9955 l -4.8851,12.75 h 25.4975 c 23.8213,0 25.4621,-0.11504 24.9603,-1.75 z m -43.6961,-3.2772 c 0,-1.71384 17.4063,-46.9728 18.0654,-46.9728 0.3375,0 1.1292,1.13163 1.7594,2.51473 0.9551,2.09622 0.8395,2.82092 -0.6941,4.35457 -1.0119,1.01192 -3.1096,5.16779 -4.6615,9.23528 -1.552,4.06748 -4.7674,12.32589 -7.1455,18.35201 -2.378,6.02612 -4.3237,11.53862 -4.3237,12.25 0,0.71138 -0.675,1.29341 -1.5,1.29341 -0.825,0 -1.5,-0.46224 -1.5,-1.0272 z m 2.1125,-32.2603 c -0.8167,-0.81667 -1.1125,-0.70476 -1.1125,0.42083 0,1.98786 1.3447,3.33256 1.8417,1.84167 0.2108,-0.6325 -0.1173,-1.65063 -0.7292,-2.2625 z m -14.8064,29.2875 c 0.6228,-1.65 1.4603,-3 1.8611,-3 0.4008,0 0.2581,1.35 -0.317,3 -0.5752,1.65 -1.4127,3 -1.8612,3 -0.4484,0 -0.3057,-1.35 0.3171,-3 z m 112.3331,-8.49794 c -0.8929,-2.32679 -0.8326,-2.50206 0.8608,-2.50206 1.6834,0 1.8734,0.8627 0.6239,2.83385 -0.6745,1.06402 -0.9749,0.9969 -1.4847,-0.33179 z m -82.4517,-59.56456 c 0.2406,-0.72188 1.0281,-1.50938 1.75,-1.75 0.75,-0.25 1.125,0.125 0.875,0.875 -0.2406,0.72187 -1.0281,1.50937 -1.75,1.75 -0.75,0.25 -1.125,-0.125 -0.875,-0.875 z m 55.8125,-7.99652 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m -6,-16.94098 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -4,-6.88197 c 0,-0.55 0.45,-1.27811 1,-1.61803 0.55,-0.33992 1,-0.16803 1,0.38197 0,0.55 -0.45,1.27811 -1,1.61803 -0.55,0.33992 -1,0.16803 -1,-0.38197 z m -2,-6.11803 c 0,-0.55 0.7016,-1 1.559,-1 0.8575,0 1.2809,0.45 0.941,1 -0.3399,0.55 -1.0415,1 -1.559,1 -0.5176,0 -0.941,-0.45 -0.941,-1 z m -92.5,179 c 0.3399,-0.55 0.168,-1 -0.382,-1 -0.55,0 -1.2781,0.45 -1.618,1 -0.3399,0.55 -0.168,1 0.382,1 0.55,0 1.2781,-0.45 1.618,-1 z m 111.6392,-1.03327 c -2.7931,-2.32688 -4.1392,-2.50251 -4.1392,-0.54005 0,1.36944 1.8127,2.24825 5,2.42405 1.0036,0.0553 0.7188,-0.56809 -0.8608,-1.884 z m 15.8608,1.59229 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 41.7292,-0.16319 c -0.3323,-0.33229 -1.1948,-0.36781 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60416 1.0541,0.0434 1.6448,-0.19293 1.3125,-0.52522 z m -86.7292,-1.36445 c 0,-0.53273 -0.675,-0.70959 -1.5,-0.39301 -0.825,0.31659 -1.5,0.75246 -1.5,0.96862 0,0.21615 0.675,0.39301 1.5,0.39301 0.825,0 1.5,-0.43588 1.5,-0.96862 z m 84.5539,-3.11851 c 0.3695,-0.59793 0.1523,-1.60666 -0.4827,-2.24164 -0.8727,-0.87268 -1.3847,-0.79038 -2.0975,0.33713 -0.5187,0.8204 -0.95,1.82914 -0.9584,2.24164 -0.024,1.15507 2.7815,0.88782 3.5386,-0.33713 z m -162.5539,-17.83108 c 0,-0.50502 0.2505,-1.57088 0.5566,-2.36858 0.3477,-0.9062 -0.2151,-1.65215 -1.5,-1.98817 -1.3555,-0.35446 -2.0566,-0.0584 -2.0566,0.86858 0,0.77351 0.4981,1.40638 1.107,1.40638 0.6088,0 0.848,0.675 0.5314,1.5 -0.3166,0.825 -0.1398,1.5 0.393,1.5 0.5327,0 0.9686,-0.4132 0.9686,-0.91821 z m 5,-15.52277 c 0,-0.24254 -0.45,-0.7191 -1,-1.05902 -0.55,-0.33992 -1,-0.14148 -1,0.44098 0,0.58246 0.45,1.05902 1,1.05902 0.55,0 1,-0.19844 1,-0.44098 z m 6.6831,-3.74652 c -0.3192,-0.79773 -0.5562,-0.56078 -0.6042,0.60417 -0.043,1.05416 0.193,1.64479 0.5253,1.3125 0.3323,-0.3323 0.3678,-1.1948 0.079,-1.91667 z m 26.0461,1.58333 c -0.3323,-0.33229 -1.1948,-0.36781 -1.9167,-0.0789 -0.7977,0.31922 -0.5608,0.55618 0.6042,0.60416 1.0541,0.0434 1.6448,-0.19293 1.3125,-0.52522 z m 9.2708,0.16319 c 0,-1.05548 -1.9191,-1.49891 -2.4899,-0.57533 -0.3455,0.55897 0.073,1.01631 0.9309,1.01631 0.8574,0 1.559,-0.19844 1.559,-0.44098 z m 28,-1.22569 c 0,-0.73333 -0.675,-1.33333 -1.5,-1.33333 -0.825,0 -1.5,0.6 -1.5,1.33333 0,0.73334 0.675,1.33334 1.5,1.33334 0.825,0 1.5,-0.6 1.5,-1.33334 z m 72.6042,-1.0625 c -1.0165,-1.01651 -1.8553,0.51389 -1.0213,1.86338 0.6301,1.01942 0.8656,1.02021 1.2044,0.004 0.2315,-0.69479 0.1492,-1.53513 -0.1831,-1.86742 z m -121.6042,-0.46115 c 0,-1.31439 -2.2728,-0.49134 -2.7711,1.0035 -0.2435,0.73075 0.2136,0.95424 1.1875,0.58051 0.871,-0.33422 1.5836,-1.04702 1.5836,-1.58401 z m 3.3816,0.63838 c 0.3415,-0.88992 0.1738,-1.29132 -0.3931,-0.94098 -0.5437,0.33602 -0.9885,1.0344 -0.9885,1.55194 0,1.43843 0.7168,1.12146 1.3816,-0.61096 z m 109.98,-20.94806 c -0.3166,-0.825 -0.7524,-1.5 -0.9686,-1.5 -0.2161,0 -0.393,0.675 -0.393,1.5 0,0.825 0.4359,1.5 0.9686,1.5 0.5328,0 0.7096,-0.675 0.393,-1.5 z m -759.34491,65.62193 c -1.02999,-0.71406 12.87528,-1.18992 45.5,-1.55709 52.83244,-0.59458 83.33014,-1.64351 85.33204,-2.93489 0.74181,-0.47852 1.9617,-2.27852 2.71086,-4 l 1.36211,-3.12995 0.0391,4.30103 c 0.0682,7.49289 2.03916,7.27303 -70.35566,7.84802 -42.40412,0.3368 -63.59178,0.16388 -64.58849,-0.52712 z m 151.48329,-1.63353 c -2.6276,-1.24495 3.93676,-1.39774 52.88125,-1.23083 l 55.88126,0.19057 2.86874,-3.4363 2.86875,-3.43629 v 3.15552 c 0,6.42589 1.41599,6.27387 -57.97251,6.22383 -44.12097,-0.0372 -54.05469,-0.29489 -56.52749,-1.4665 z m -199.47104,-0.44934 c -0.80907,-0.51167 -1.25907,-1.06728 -1,-1.23469 0.25907,-0.1674 1.37104,-0.79854 2.47104,-1.40253 4.62576,-2.5399 4.60409,-2.20182 4.41691,-68.90184 -0.0972,-34.65 -0.11832,-64.0125 -0.0468,-65.25 0.096,-1.6625 0.74751,-2.25 2.49508,-2.25 4.29277,0 7.3971,-3.51266 8.63437,-9.77009 2.15574,-10.90257 5.08814,-20.55069 8.47215,-27.87494 l 3.3982,-7.35497 h 4.56507 c 2.51079,0 4.56507,0.45 4.56507,1 0,0.55 -0.79987,1 -1.77749,1 -5.62483,0 -10.53226,9.11494 -15.75234,29.258 -3.39118,13.08579 -4.59562,15.742 -7.13807,15.742 -0.78265,0 -2.52755,1.10455 -3.87755,2.45455 l -2.4546,2.45454 v 64.54546 c 0,63.21212 -0.0413,64.58676 -2,66.54545 -2.24186,2.24186 -2.86364,2.37182 -4.97104,1.03906 z m 432.74828,0.21156 c -28.6639,-0.27031 -29.76132,-0.35236 -30.8054,-2.30323 -2.06333,-3.85538 -0.3395,-5.61186 8.31551,-8.47298 9.39385,-3.10536 15.77281,-6.166 23.38476,-11.22005 l 5.32789,-3.53752 v -49.97251 -49.9725 l -7.14547,-13.13592 c -10.69153,-19.65481 -17.80489,-32.80091 -24.93806,-46.08769 l -6.41647,-11.95179 -0.5,22.95179 -0.5,22.95178 -2.36534,0.33466 c -1.30093,0.18407 -2.82748,-0.12748 -3.39234,-0.69234 -0.56485,-0.56485 -2.30817,-6.10991 -3.87405,-12.32235 -2.8314,-11.23333 -8.59753,-24.85182 -13.60534,-32.1332 -5.53978,-8.05487 -16.55219,-11.14325 -23.78805,-6.67125 -7.08677,4.37987 -12.47488,14.97412 -12.47488,24.52845 0,13.01675 9.34768,22.48829 37.39447,37.88997 20.25482,11.12277 30.20802,23.80381 34.17454,43.54063 4.38483,21.81831 -2.16771,44.85718 -16.95826,59.6255 -11.85149,11.8337 -26.13415,17.39993 -44.64728,17.39993 -10.89837,0 -20.60206,-2.15737 -27.80921,-6.18268 -5.05401,-2.82274 -12.17864,-8.12723 -15.07857,-11.22642 -2.83049,-3.02498 -3.35558,-3.10884 -6.51287,-1.04011 l -2.36681,1.5508 5.46739,13.4904 c 3.00706,7.41972 5.31934,14.25936 5.13841,15.19921 -0.3049,1.58372 -4.41886,1.72772 -56.20274,1.96726 -40.43309,0.18703 -56.25033,-0.0541 -57.23641,-0.87245 -1.70637,-1.41615 -1.77267,-5.3172 -0.11266,-6.62868 0.6875,-0.54316 4.34364,-1.97234 8.12475,-3.17596 8.50806,-2.70833 14.54922,-5.48591 21.45168,-9.86296 4.05669,-2.57247 5.15854,-3.77585 4.62212,-5.04803 -0.38738,-0.91871 -1.58662,-3.92038 -2.66498,-6.67038 -1.07836,-2.75 -2.43046,-5.56798 -3.00467,-6.26218 -0.81321,-0.98315 -9.13144,-1.20423 -37.62596,-1 l -36.58194,0.26218 -3.28268,7.84199 -3.28268,7.84199 2.24718,1.85382 c 3.59057,2.96205 15.62723,8.63269 23.63244,11.13358 8.09901,2.53018 10.25718,4.82543 8.18244,8.70213 -1.09735,2.05041 -1.79657,2.12649 -19.54387,2.12649 -11.19184,0 -18.64803,0.39194 -19.02383,1 -0.39765,0.6434 -17.15324,1 -46.98759,1 -40.82081,0 -46.5576,-0.18804 -47.94098,-1.57143 -1.40553,-1.40553 -1.57143,-11.17099 -1.57143,-92.5 v -90.92857 h -8.04182 -8.04183 l -2.79884,6.25 c -4.76527,10.64119 -8.76149,23.49434 -10.55353,33.94364 -0.70863,4.13193 -3.21247,5.60003 -6.52621,3.82658 -1.99142,-1.06578 -2.03777,-1.89542 -2.03777,-36.47362 0,-19.46066 0.27314,-36.09483 0.60699,-36.96481 0.54517,-1.4207 7.45945,-1.58179 67.89301,-1.58179 60.43356,0 67.34784,0.16109 67.89301,1.58179 0.33385,0.86998 0.60699,17.52963 0.60699,37.02144 v 35.43965 l -2.61747,1.1926 c -2.31016,1.05257 -2.8385,0.91964 -4.5,-1.13222 -1.03539,-1.27866 -1.88253,-3.32193 -1.88253,-4.54062 0,-4.24853 -6.00928,-23.57594 -9.65147,-31.04162 l -3.66918,-7.52102 h -7.83968 -7.83967 v 79.864 79.864 l 4.0378,2.7982 c 2.48163,1.71977 4.39529,2.44071 4.96536,1.87064 0.51016,-0.51016 2.69689,-5.64565 4.85941,-11.4122 3.26898,-8.71703 26.45754,-68.87089 54.34781,-140.98464 3.29708,-8.525 7.28817,-18.97203 8.8691,-23.21561 l 2.8744,-7.71561 -5.72694,-3.33042 c -7.91323,-4.60183 -13.49555,-7.09195 -22.02465,-9.82462 l -7.29772,-2.33814 0.29772,-3.5378 0.29771,-3.5378 35.11706,-0.26265 c 27.34993,-0.20455 35.33323,0.0166 36.09439,1 0.53754,0.69446 3.04422,6.43765 5.57041,12.76265 2.52619,6.325 12.88818,31.975 23.02663,57 10.13845,25.025 23.2648,57.425 29.16966,72 5.90486,14.575 11.0254,26.95 11.37898,27.5 0.35358,0.55 0.86787,-7.775 1.14287,-18.5 l 0.5,-19.5 h 2.89101 c 3.56869,0 3.83137,0.51583 6.87473,13.5 3.7829,16.13939 8.04052,25.42845 14.73109,32.13957 4.76749,4.78213 6.45814,5.81309 11.11975,6.78083 12.98421,2.69551 26.55083,-5.06207 30.95701,-17.70166 1.51639,-4.34992 0.50029,-9.12644 -2.9566,-13.89854 -2.74127,-3.78422 -7.06888,-6.96108 -25.10056,-18.42611 -25.21171,-16.0303 -38.07747,-39.51554 -38.28961,-69.89409 -0.12552,-17.97524 4.90872,-31.29512 16.42855,-43.46758 12.15418,-12.84275 25.53721,-18.79015 42.34463,-18.81788 8.44949,-0.0139 11.06506,0.39453 16.86906,2.63448 l 6.86906,2.65098 h 41.86839 41.8684 l 2.33622,3.75 c 1.28492,2.0625 4.73197,8.25 7.6601,13.75 9.78756,18.38428 22.2396,40.99033 23.06864,41.87995 0.45102,0.48397 5.15307,-7.77701 10.44901,-18.35774 5.29594,-10.58072 9.48996,-19.36712 9.32005,-19.52532 -1.77044,-1.64838 -15.01517,-7.91093 -21.30893,-10.07556 -4.4,-1.5133 -8.5625,-3.18228 -9.25,-3.70884 -1.90661,-1.46028 -1.49131,-5.51298 0.68426,-6.67731 2.62808,-1.4065 63.5034,-1.4065 66.13148,0 1.06384,0.56935 1.93426,1.63111 1.93426,2.35945 0,0.72835 -10.575,22.24743 -23.5,47.82019 l -23.5,46.49592 v 61.44463 c 0,46.45693 -0.29271,61.73734 -1.2,62.64463 -0.86293,0.86293 -6.27008,1.13412 -19.25,0.96546 -9.9275,-0.129 -31.42524,-0.36068 -47.77276,-0.51484 z m -10.40878,-4.76842 c 0.31282,-0.81521 1.31299,-1.4822 2.2226,-1.4822 1.35669,0 1.43016,0.2695 0.40894,1.5 -1.08659,1.30926 -0.34668,1.5 5.81854,1.5 3.88488,0 7.34154,-0.45 7.68146,-1 0.33992,-0.55 -0.0835,-1 -0.94098,-1 -0.85746,0 -1.55902,-0.675 -1.55902,-1.5 0,-2.57885 3.72434,-1.73445 4.41064,1 0.70154,2.79512 3.29976,3.27745 6.73358,1.25 1.69367,-1 2.20762,-1 2.56977,0 0.34495,0.95254 6.14411,1.25 24.36934,1.25 h 23.91667 v -10.05902 c 0,-5.78617 -0.38644,-9.82018 -0.90976,-9.49675 -1.59617,0.98649 -4.09024,-0.5906 -4.09024,-2.5864 0,-1.59647 0.33277,-1.75011 1.93426,-0.89301 2.83794,1.51882 2.87036,1.47469 2.91249,-3.96482 0.0401,-5.18335 -0.69061,-6.01328 -3.13896,-3.56494 -1.24675,1.24676 -1.42862,0.8859 -1.386,-2.75 0.027,-2.30178 0.22361,-3.39756 0.43696,-2.43506 0.21334,0.9625 0.79078,1.75 1.28319,1.75 0.95929,0 0.0786,-3.16841 -1.11181,-4 -0.8228,-0.57477 -1.27235,-6.25261 -1.06991,-13.51287 0.1162,-4.16718 0.51936,-5.17941 2.38978,-6 2.53813,-1.11354 3.31219,-4.73994 2.21884,-10.39506 -0.63706,-3.29507 -0.76517,-3.40603 -1.54943,-1.34207 -1.78906,4.70826 -2.91936,2.18597 -2.91282,-6.5 l 0.007,-8.75 1.8757,2.84497 c 2.92963,4.44352 3.45406,1.34025 0.62872,-3.7204 -2.65577,-4.75695 -3.32375,-10.18919 -1.33445,-10.85229 1.02016,-0.34005 3.56272,-9.58489 3.75265,-13.64472 0.0897,-1.91721 -2.85371,0.54855 -3.98428,3.33772 -0.82216,2.02834 -0.82495,2.02821 -0.88813,-0.041 -0.0349,-1.14162 1.06161,-3.13256 2.43661,-4.42431 2.00232,-1.88108 2.5,-3.31723 2.5,-7.21415 0,-2.8846 0.81053,-6.4543 1.99081,-8.76784 1.09495,-2.14628 1.73229,-4.57602 1.41632,-5.39943 -0.34259,-0.89278 0.28878,-2.02621 1.56409,-2.80785 2.3146,-1.41883 11.53988,-18.8107 9.97748,-18.8107 -0.52201,0 -0.94911,-0.69473 -0.94911,-1.54384 0,-0.88558 0.70192,-1.41855 1.64626,-1.25 0.90544,0.16161 1.84294,-0.26866 2.08333,-0.95616 0.24039,-0.6875 -0.27542,-1.25 -1.14626,-1.25 -0.87083,0 -1.58333,-0.4875 -1.58333,-1.08333 0,-0.59584 0.55279,-0.89907 1.22843,-0.67386 0.67563,0.22521 1.94548,-0.29979 2.82187,-1.16667 1.71342,-1.69481 16.03169,-29.56884 15.83263,-30.82209 -0.0659,-0.41473 -0.0146,-1.20405 0.114,-1.75405 0.12857,-0.55 0.29436,-1.675 0.36842,-2.5 0.0741,-0.825 0.69285,-1.38893 1.37509,-1.25319 1.10156,0.21918 9.25956,-14.38012 9.25956,-16.5706 0,-0.47751 -14.175,-0.86834 -31.5,-0.86852 -24.56975,-2.6e-4 -31.5,0.27527 -31.5,1.25237 0,0.76037 0.78603,1.04715 2,0.72969 1.20158,-0.31422 2,-0.0307 2,0.71025 0,0.74452 0.79958,1.02417 2.01759,0.70565 1.10968,-0.29019 2.65253,0.10733 3.42857,0.88337 0.77604,0.77604 1.78063,1.42505 2.23241,1.44225 0.45179,0.0172 3.52143,1.32205 6.82143,2.89967 5.03731,2.40818 6.17814,2.64384 7.11024,1.46874 1.56296,-1.97041 3.61146,-1.74286 3.15369,0.35032 -0.21049,0.9625 -0.91848,1.6375 -1.57332,1.5 -2.53432,-0.53215 -1.00958,0.92883 2.70502,2.59191 l 3.89563,1.74412 -11.7708,23.41538 c -6.47394,12.87845 -12.16447,23.52753 -12.64563,23.66461 -0.48116,0.13708 -1.98342,-2.02462 -3.33836,-4.80378 -1.35495,-2.77915 -3.37995,-5.79759 -4.5,-6.70763 -1.12006,-0.91003 -2.10821,-2.7973 -2.19589,-4.19392 -0.23076,-3.67586 -4.54161,-10.73839 -5.27623,-8.64414 -0.35742,1.01894 -1.04112,1.31584 -1.86192,0.80856 -1.04144,-0.64365 -1.00611,-1.04315 0.17925,-2.02691 1.27812,-1.06075 1.01113,-2.11778 -1.98845,-7.87253 -1.90563,-3.65599 -4.12369,-7.37534 -4.92901,-8.26521 -0.80532,-0.88987 -1.46422,-2.11468 -1.46422,-2.72181 0,-0.60713 -0.85843,-1.37633 -1.90762,-1.70933 -1.04919,-0.333 -2.16007,-1.26332 -2.46861,-2.06739 -0.30855,-0.80406 -1.25012,-1.46193 -2.09239,-1.46193 -0.95693,0 -1.53138,-0.91565 -1.53138,-2.44098 0,-1.34254 -0.47185,-2.73261 -1.04856,-3.08903 -0.71797,-0.44373 -0.68276,-1.08881 0.11167,-2.04603 0.65018,-0.78342 0.8788,-2.51927 0.52005,-3.94864 l -0.64017,-2.55064 -42.22149,0.0736 -42.2215,0.0736 -6.37666,-2.62685 c -5.30947,-2.18723 -7.90353,-2.62316 -15.5,-2.6048 -19.10045,0.0462 -35.99901,9.28641 -46.41237,25.37853 -6.21473,9.60383 -8.48973,17.31921 -8.99506,30.50563 -0.89308,23.30466 5.40241,41.24238 19.92208,56.76396 5.54436,5.92693 11.25832,10.14156 29.0134,21.40032 16.99483,10.77667 21.54542,21.4211 14.38279,33.6432 -10.84323,18.50258 -35.51554,20.25585 -48.40264,3.4396 -1.88469,-2.45931 -3.84375,-4.34783 -4.35346,-4.1967 -0.50971,0.15112 -0.66257,-0.15266 -0.33971,-0.67507 1.04764,-1.6951 -1.69058,-6.26702 -3.4741,-5.80062 -1.40892,0.36844 -1.63987,-0.44829 -1.55909,-5.51365 0.0761,-4.77295 -0.28287,-6.22239 -1.81941,-7.34613 -1.52895,-1.1182 -2.00793,-3.0184 -2.37971,-9.44079 -0.25602,-4.42245 -0.85711,-8.28286 -1.33577,-8.57869 -0.48534,-0.29994 -0.87029,11.15575 -0.87029,25.89872 0,22.84736 -0.214,26.61417 -1.57622,27.74471 -1.30629,1.08413 -1.73178,1.06229 -2.48468,-0.12755 -1.21895,-1.92635 -1.18181,-4.9357 0.0609,-4.9357 0.55,0 1,0.525 1,1.16667 0,0.64166 0.24185,0.92482 0.53744,0.62922 0.72333,-0.72333 -1.63792,-5.79589 -2.69796,-5.79589 -0.46171,0 -0.83948,0.45 -0.83948,1 0,2.03089 -1.99454,0.91123 -3.47432,-1.95034 -1.99458,-3.8571 -1.9254,-4.31624 0.42884,-2.84599 2.76711,1.72809 3.71779,0.21794 1.8788,-2.98444 -0.85884,-1.49557 -1.89867,-4.06923 -2.31073,-5.71923 -0.73499,-2.94314 -0.76889,-2.95735 -1.7887,-0.75 -0.57174,1.2375 -1.42075,2.25 -1.8867,2.25 -1.23066,0 -1.03835,-1.76382 0.28123,-2.57937 0.77149,-0.47681 0.61334,-0.98564 -0.5,-1.6087 -2.04208,-1.14281 -2.11831,-2.81193 -0.12842,-2.81193 0.825,0 1.5,-0.47958 1.5,-1.06574 0,-1.97483 -2.09228,-4.99526 -3.05017,-4.40325 -0.53067,0.32797 -0.94983,-0.95754 -0.94983,-2.91298 0,-1.925 -0.45318,-3.78008 -1.00706,-4.1224 -1.55998,-0.96411 -2.36941,2.34582 -0.98237,4.0171 0.67888,0.818 0.80145,1.48727 0.27239,1.48727 -0.52906,0 -1.42536,-1.01712 -1.99178,-2.26028 -0.76467,-1.67826 -0.68607,-2.58141 0.30524,-3.50744 1.42601,-1.33209 0.80188,-4.59648 -0.7012,-3.66752 -0.49237,0.3043 -0.89522,0.0767 -0.89522,-0.50574 0,-0.58246 0.43588,-1.05902 0.96862,-1.05902 0.53273,0 0.70518,-0.68649 0.38321,-1.52552 -0.44174,-1.15115 -0.9141,-1.25273 -1.92481,-0.41391 -0.73667,0.61138 -1.80912,0.82131 -2.38322,0.4665 -1.7512,-1.0823 -1.16541,-3.26201 1.03102,-3.83638 1.75656,-0.45936 1.90455,-0.86072 0.96481,-2.61664 -1.42346,-2.65976 -3.03963,-2.66775 -3.03963,-0.015 0,1.13246 -0.45,1.7809 -1,1.44098 -1.66218,-1.02728 -1.12439,-3.32574 0.93077,-3.97803 1.90472,-0.60453 1.90494,-0.66955 0.0164,-4.81739 -1.05294,-2.31252 -2.28178,-4.12208 -2.73078,-4.02125 -0.44899,0.10084 -0.81635,-1.39198 -0.81635,-3.31737 0,-3.80786 -1.55253,-5.40034 -4.5107,-4.62676 -1.03911,0.27173 -1.8893,-0.008 -1.8893,-0.62257 0,-0.61415 0.9,-1.11663 2,-1.11663 1.1,0 2,-0.38115 2,-0.84699 0,-1.57406 -3.88625,-5.34135 -4.87783,-4.72852 -0.54119,0.33448 -1.26663,0.15079 -1.61209,-0.40818 -0.34778,-0.56272 0.29084,-1.01631 1.4309,-1.01631 3.17565,0 2.50035,-2.96173 -0.82704,-3.62721 -1.7209,-0.34418 -3.32711,-1.54524 -3.97856,-2.975 -1.25302,-2.75009 0.25074,-3.31715 1.73993,-0.65612 0.53608,0.95792 1.30568,1.41068 1.71022,1.00613 0.40455,-0.40455 -0.0814,-1.6383 -1.07998,-2.74167 -0.99854,-1.10337 -1.40828,-2.05099 -0.91054,-2.10581 0.49775,-0.0548 -0.21765,-0.41205 -1.58976,-0.79385 -1.37211,-0.38179 -2.65287,-1.51522 -2.84613,-2.51874 -0.1944,-1.00943 0.0877,-1.55322 0.63144,-1.21717 0.54056,0.33408 1.48277,0.005 2.09381,-0.73124 0.84037,-1.01257 0.62438,-1.89972 -0.88669,-3.642 -1.09876,-1.26683 -1.99772,-2.83272 -1.99772,-3.47973 0,-0.64702 -1.0125,-1.14066 -2.25,-1.09699 -1.70076,0.06 -2.17847,-0.40881 -1.95696,-1.9206 1.02415,-6.98994 -0.21414,-12.93612 -2.51044,-12.05495 -0.86417,0.33161 -2.12366,-0.1838 -2.87785,-1.17768 -1.76479,-2.32566 -1.73734,-3.26737 0.0952,-3.26737 0.82536,0 1.5,-0.8854 1.5,-1.96862 0,-1.33903 -0.47971,-1.78453 -1.5,-1.39301 -0.825,0.31659 -1.5,1.05246 -1.5,1.63529 0,0.58282 -0.3375,0.72217 -0.75,0.30967 -0.4125,-0.4125 -0.67577,-1.05 -0.58504,-1.41666 0.0907,-0.36667 -0.31354,-1.24324 -0.89838,-1.94793 -0.78026,-0.94015 -0.58125,-1.63377 0.74752,-2.60539 1.29296,-0.94543 1.57459,-1.86599 0.98475,-3.21874 -0.45437,-1.04204 -0.86498,-2.19461 -0.91248,-2.56128 -0.20825,-1.60747 -1.65669,-2.01986 -3.04563,-0.86714 -1.26615,1.05081 -1.67047,0.79337 -2.5246,-1.6075 -0.55935,-1.57228 -1.4771,-3.65655 -2.03943,-4.63172 -0.64734,-1.12258 -0.6806,-2.41175 -0.0907,-3.51405 1.07477,-2.00823 0.97663,-7.21117 -0.13605,-7.21221 -0.4125,-3.9e-4 -0.75,0.64773 -0.75,1.44027 0,4.175 -2.19249,1.55366 -5.39693,-6.45257 -1.98165,-4.95122 -3.60303,-9.27659 -3.60303,-9.61194 0,-0.33535 0.91849,-0.36954 2.04108,-0.076 1.71495,0.44846 1.93478,0.18747 1.37578,-1.63337 -0.91416,-2.97771 -1.15755,-3.12723 -2.83042,-1.73886 -1.2058,1.00072 -1.75616,0.64422 -3.14164,-2.03502 -1.57547,-3.04661 -1.57436,-3.32534 0.0179,-4.48963 0.98337,-0.71907 1.55873,-2.22217 1.36747,-3.57249 l -0.33017,-2.33113 -33.33786,-0.26359 c -26.51898,-0.20968 -33.24675,-0.005 -32.89237,1 0.24502,0.69497 1.29705,1.18116 2.33786,1.08042 3.79117,-0.36696 11.91896,1.993 13.21079,3.83585 0.72513,1.03443 1.69048,1.65084 2.14522,1.36979 0.45473,-0.28104 1.09227,0.18084 1.41674,1.0264 0.46693,1.2168 1.01592,1.3094 2.63279,0.44408 1.12357,-0.60131 1.7426,-1.5791 1.37564,-2.17286 -0.38921,-0.62976 -0.0884,-0.88844 0.72199,-0.62085 0.76406,0.25228 1.9435,1.54816 2.62098,2.87973 0.72528,1.42552 1.92334,2.28476 2.91362,2.08962 2.92788,-0.57695 6.17418,1.80534 5.57619,4.09206 -0.36384,1.39132 -0.16391,1.82174 0.62089,1.3367 0.63663,-0.39346 1.15752,-0.23883 1.15752,0.34363 0,0.58246 -0.375,1.05902 -0.83333,1.05902 -0.45834,0 -0.83623,0.5625 -0.83977,1.25 -0.004,0.6875 -9.1217,24.875 -20.2626,53.75 -11.14089,28.875 -27.46049,71.175 -36.26577,94 -8.80529,22.825 -16.18063,41.68101 -16.38965,41.90225 -0.20903,0.22124 -3.68275,-1.80376 -7.71939,-4.5 l -7.33934,-4.90225 0.45104,-4.73842 c 0.25808,-2.71129 -0.11525,-6.10557 -0.87267,-7.93414 -1.01103,-2.44086 -1.04082,-3.29001 -0.12611,-3.59491 1.71494,-0.57165 1.66602,-19.84726 -0.0524,-20.6492 -0.99653,-0.46504 -0.9942,-0.70239 0.0115,-1.17049 0.99097,-0.46125 1.25021,-10.99371 1.20895,-49.11783 -0.0504,-46.54428 -0.1257,-48.46446 -1.84022,-46.91284 -2.7219,2.46328 -3.17168,2.01156 -2.88964,-2.90209 0.19545,-3.40511 0.62941,-4.44324 1.75944,-4.20901 0.89891,0.18632 1.40042,1.2194 1.2515,2.57801 -0.14293,1.30397 0.17569,2.00494 0.75,1.64999 1.32657,-0.81986 1.3068,-22.79077 -0.0217,-24.11928 -0.6936,-0.69361 -0.21341,-1.45198 1.5,-2.36898 2.47173,-1.32285 3.49054,-4.01081 1.52016,-4.01081 -0.55,0 -1,-0.45 -1,-1 0,-1.42042 10.35509,-1.24491 11.8,0.2 0.93333,0.93333 1.46667,0.93333 2.4,0 1.65864,-1.65864 6.30163,-1.50542 7.76365,0.2562 1.51461,1.82499 0.37989,4.07381 -1.33672,2.64915 -1.27442,-1.05768 -4.11534,-0.95028 -5.26465,0.19904 -0.38259,0.38258 0.66676,0.69561 2.33189,0.69561 2.81349,0 3.28655,0.56668 6.69181,8.01621 4.29498,9.39589 8.1161,20.88201 9.9555,29.92574 1.81776,8.93736 3.67101,9.1535 3.23452,0.37724 -0.18654,-3.75055 -0.39934,-8.39419 -0.47289,-10.31919 -0.10132,-2.6517 -0.36868,-3.13644 -1.10311,-2 -0.53316,0.825 -0.97627,1.1993 -0.98469,0.83179 -0.008,-0.36752 -0.31843,-1.45814 -0.68892,-2.42361 -0.50369,-1.3126 -0.28299,-1.6055 0.87496,-1.16116 1.21098,0.4647 1.68374,-0.39199 2.16866,-3.92988 0.73424,-5.35688 -0.10494,-7.40014 -1.98391,-4.83049 -0.90376,1.23596 -1.01038,2.34687 -0.34465,3.5908 0.55378,1.03474 0.58567,2.03497 0.0749,2.35061 -2.06553,1.27657 -2.86537,-9.16006 -0.97299,-12.696 0.85786,-1.60294 0.85786,-2.23164 0,-2.51759 -1.74144,-0.58048 -1.4376,-7.8876 0.3566,-8.5761 0.825,-0.31658 1.49311,-1.37722 1.48469,-2.35699 -0.0131,-1.51885 -0.16043,-1.56032 -1,-0.28138 -0.83941,1.27869 -1.11858,1.29207 -1.89217,0.0907 -1.315,-2.0422 -0.11658,-4.33024 1.9808,-3.78176 0.98863,0.25853 2.02483,-0.12231 2.30266,-0.84632 0.52337,-1.36388 -1.5191,-3.64879 -3.02072,-3.37927 -2.00327,0.35956 -2.5245,-0.17448 -1.44262,-1.47807 0.63664,-0.76711 1.08845,-1.77961 1.00403,-2.25 -0.38083,-2.12195 0.20117,-3.35526 1.58337,-3.35526 0.825,0 1.5,-0.675 1.5,-1.5 0,-1.31795 -7.88889,-1.5 -65,-1.5 h -65 v 34.5 c 0,22.33333 0.35266,34.5 1,34.5 1.00281,0 1.44424,-1.98037 1.17023,-5.25 -0.0807,-0.9625 0.3338,-1.75 0.92101,-1.75 0.67554,0 0.81559,-1.14771 0.38132,-3.12492 -0.44162,-2.01071 -0.26317,-3.38645 0.50048,-3.85842 1.46134,-0.90316 7.02696,-17.19123 7.02696,-20.56478 0,-1.34853 0.43656,-2.45188 0.97014,-2.45188 0.53358,0 1.99608,-1.79653 3.25,-3.9923 2.41772,-4.2337 2.66719,-4.30454 15.52986,-4.41035 1.2375,-0.0102 2.25,-0.37375 2.25,-0.80793 0,-1.30696 2.04143,-0.89085 3.683,0.75072 1.36242,1.36242 1.55612,12.12313 1.67857,93.25 l 0.13843,91.70986 13.19416,0.21362 c 12.51935,0.20269 13.22744,0.10876 13.8449,-1.83669 l 0.65075,-2.05032 1.94405,2.0867 c 2.05439,2.20512 8.23194,2.92186 9.36614,1.08669 0.33992,-0.55 1.06803,-1 1.61803,-1 0.55,0 0.72189,0.45 0.38197,1 -0.36633,0.59273 0.78461,1 2.82597,1 2.5359,0 3.86041,-0.63551 5.02322,-2.41019 1.2992,-1.98282 2.38348,-2.39802 6.11501,-2.34161 2.49469,0.0377 4.5358,0.48305 4.5358,0.98964 0,0.50659 1.2375,0.67571 2.75,0.37581 9.73414,-1.93003 10.00308,-1.91284 12.35283,0.7896 1.8614,2.14081 3.12559,2.59675 7.19995,2.59675 4.2796,0 4.77523,-0.20108 3.69722,-1.5 -0.68469,-0.825 -2.06323,-1.5 -3.06343,-1.5 -1.00019,0 -2.09665,-0.45 -2.43657,-1 -1.68852,-2.73208 6.66335,0.59244 8.73469,3.4769 0.78143,1.08819 0.98238,0.57398 1.16337,-2.9769 0.0659,-1.29295 0.92391,-2.11645 2.42701,-2.32939 2.27814,-0.32274 2.29096,-0.27733 0.63499,2.25 -1.66464,2.54057 -1.65161,2.57939 0.86591,2.57939 1.4058,0 2.8638,-0.49804 3.24001,-1.10676 0.47683,-0.77153 0.94441,-0.69581 1.54371,0.25 0.66879,1.05548 0.86308,0.96628 0.875,-0.40171 0.0132,-1.51327 0.29846,-1.58299 2.04582,-0.5 1.66383,1.03121 2.1892,1.00345 2.90925,-0.15371 0.73694,-1.18431 1.16562,-1.1253 2.65661,0.36569 1.4995,1.4995 2.64887,1.65223 7.34075,0.97544 3.05958,-0.44133 7.47538,-0.83089 9.81288,-0.86569 2.3375,-0.0348 4.25,-0.36174 4.25,-0.72654 0,-0.36481 -3.0375,-1.6421 -6.75,-2.83842 -6.90066,-2.22369 -21.92608,-9.60523 -26.03926,-12.79231 -2.20371,-1.70753 -2.23173,-1.9115 -0.75,-5.45779 1.90249,-4.5533 1.9051,-4.82581 0.0393,-4.10983 -1.04085,0.39941 -1.5,-0.0693 -1.5,-1.53138 0,-2.29678 1.4484,-2.80852 2.61349,-0.92337 0.50118,0.81093 0.95316,0.57477 1.43543,-0.75 0.38715,-1.06349 0.25442,-2.49612 -0.29495,-3.18362 -0.71787,-0.89836 -0.53548,-1.25 0.64834,-1.25 0.90595,0 2.07492,-1.125 2.59769,-2.5 0.94239,-2.47866 1.05952,-2.50087 13.72525,-2.60221 7.02611,-0.0562 16.71225,-0.0196 21.52475,0.0814 l 8.75,0.18362 v -2.58141 c -4e-5,-1.41977 0.44996,-2.5814 0.99996,-2.5814 0.55,0 0.94671,0.3375 0.88158,0.75 -0.62505,3.95865 -0.0342,4.25 8.61842,4.25 7.1404,0 8.5,-0.25704 8.5,-1.60699 0,-0.9681 -0.55771,-1.39298 -1.4028,-1.06868 -0.77154,0.29607 -2.23404,-0.0915 -3.25,-0.86121 -1.67931,-1.27231 -1.47077,-1.4024 2.29439,-1.43132 3.5959,-0.0276 4.22427,0.2976 4.76905,2.4682 0.59305,2.36287 1.00392,2.5 7.49049,2.5 h 6.86302 l 4.06433,10.05484 4.06433,10.05484 -6.6964,4.27042 c -8.1995,5.22897 -14.1269,7.99375 -23.24452,10.84215 -3.84113,1.2 -6.81574,2.6534 -6.61025,3.22978 0.20549,0.57638 1.22518,0.88662 2.26599,0.68941 1.0408,-0.19721 4.4655,-0.43035 7.61045,-0.51808 3.14494,-0.0877 6.27244,-0.71388 6.95,-1.39144 1.69475,-1.69475 3.83192,-1.54708 3.83192,0.26477 0,2.26884 13.30893,1.92442 15.41144,-0.39884 1.07838,-1.19159 3.43455,-1.75467 8.05634,-1.92531 5.98133,-0.22084 6.53222,-0.0696 6.53222,1.79314 0,1.51418 0.70313,2.07483 2.75,2.19276 6.71782,0.38706 8.76381,-0.57835 5.8073,-2.7402 -1.13783,-0.832 -1.40335,-1.41824 -0.64235,-1.41824 0.71347,0 2.22398,1.1782 3.3567,2.61822 1.90412,2.4207 2.4645,2.57062 7.42787,1.98728 2.9526,-0.34702 6.21655,-1.16065 7.25322,-1.80806 1.4692,-0.91753 2.23355,-0.88772 3.46606,0.13517 1.30613,1.08399 1.86097,1.08009 3.18941,-0.0224 1.349,-1.11957 1.79225,-1.09668 2.75,0.14201 0.85197,1.10187 3.86134,1.5529 11.856,1.77691 l 10.7142,0.30021 -2.79289,-6.81466 c -2.71376,-6.62155 -4.67633,-8.14368 -4.5961,-3.56466 0.0514,2.93321 -0.18018,2.84537 -2.05461,-0.77937 -1.67966,-3.24813 -1.28405,-4.97065 1.14159,-4.97065 1.74384,0 1.21189,-2.40477 -1.76637,-7.98519 -2.43013,-4.55339 -2.35163,-5.41375 0.63997,-7.01481 1.375,-0.73588 2.5,-1.71192 2.5,-2.16898 0,-0.45706 0.65264,-0.83102 1.45031,-0.83102 0.79767,0 1.88114,-0.76986 2.40772,-1.71079 0.82652,-1.47692 1.61937,-0.97383 5.79969,3.68013 5.70008,6.34592 16.0122,13.35024 18.6423,12.66245 1.01816,-0.26625 2.06318,0.15113 2.36814,0.94583 0.72502,1.88937 3.33184,1.82864 3.33184,-0.0776 0,-0.825 0.675,-1.5 1.5,-1.5 0.93333,0 1.5,0.94444 1.5,2.5 0,2.15105 0.45364,2.50191 3.25,2.51365 1.7875,0.008 4.375,0.2375 5.75,0.51109 1.375,0.27359 1.9375,0.22995 1.25,-0.097 -0.6875,-0.32693 -1.25,-1.45692 -1.25,-2.51108 0,-1.66509 0.75475,-1.91846 5.75,-1.93032 3.1625,-0.008 6.82881,-0.30234 8.14735,-0.65517 2.18857,-0.58564 2.33932,-0.41028 1.73095,2.01366 -0.53452,2.12971 -0.31631,2.64887 1.10265,2.62336 0.97298,-0.0175 2.64256,-0.6925 3.71018,-1.5 1.06762,-0.80751 2.64527,-1.4682 3.50589,-1.4682 0.86062,0 2.16233,-1.35 2.89269,-3 0.73036,-1.65 1.77163,-3 2.31393,-3 0.54231,0 3.06524,-1.43055 5.60652,-3.17899 2.93471,-2.01914 4.7639,-2.74884 5.01351,-2 0.47625,1.42875 5.22633,1.59143 5.22633,0.17898 0,-0.55 -0.9,-1 -2,-1 -2.5635,0 -2.55379,-1.17306 0.023,-2.78231 1.39427,-0.87073 2.58987,-0.96004 3.84681,-0.28735 2.74268,1.46784 4.38614,-0.60212 2.63204,-3.3151 -1.1902,-1.84081 -1.13002,-2.40528 0.46381,-4.35076 1.47876,-1.80502 1.94122,-1.94945 2.40149,-0.75 0.31353,0.81704 0.27492,2.27302 -0.0858,3.23552 -0.58368,1.55746 -0.46255,1.59265 1.10091,0.31986 0.97581,-0.79439 1.54477,-2.24077 1.2799,-3.25366 -0.26227,-1.00293 0.34535,-2.83436 1.35027,-4.06985 1.60101,-1.96836 1.64844,-2.44502 0.38322,-3.85173 -2.12764,-2.36559 -0.75599,-5.02316 2.20858,-4.2791 2.80552,0.70415 3.23745,-1.01162 0.64574,-2.56509 -1.54267,-0.92469 -1.57229,-1.19714 -0.25,-2.29969 1.61381,-1.34564 1.97567,-4.51773 0.73369,-6.43164 -0.97512,-1.50267 0.5997,-2.51213 2.67607,-1.71536 1.02529,0.39345 1.59024,0.0684 1.59024,-0.91496 0,-0.83886 0.26913,-2.22655 0.59807,-3.08375 0.39996,-1.04227 -0.26254,-1.95066 -2,-2.7423 -3.1519,-1.4361 -3.37801,-2.86273 -0.45373,-2.86273 2.05558,0 2.12044,-0.31593 1.56706,-7.63294 -0.65021,-8.59723 -1.72777,-10.60947 -3.96838,-7.41056 l -1.48843,2.12504 -0.61364,-2.29077 c -1.09015,-4.06964 -0.8383,-5.19945 0.84722,-3.80059 2.36461,1.96245 2.84987,-0.93575 0.92811,-5.54305 -4.55664,-10.92418 -14.00732,-20.31098 -28.29898,-28.10768 -14.40286,-7.85738 -23.66504,-14.135 -30.17596,-20.45235 -5.01063,-4.86165 -7.11132,-6.31818 -7.93243,-5.5 -1.95939,1.95238 -5.15946,-3.23585 -4.65351,-7.54466 0.23622,-2.01165 -0.0138,-4.10084 -0.5556,-4.64264 -1.16521,-1.16521 0.82278,-5.55109 2.14559,-4.73355 0.99736,0.6164 2.05461,-1.7869 2.05461,-4.67048 0,-1.70054 -0.25001,-1.83317 -1.5,-0.79577 -1.22039,1.01283 -1.5,0.96419 -1.5,-0.26092 0,-0.8282 0.84325,-1.72633 1.87388,-1.99585 2.21994,-0.58052 8.69017,-12.23201 8.43398,-15.18776 -0.13292,-1.53358 -0.0495,-1.61373 0.32835,-0.31569 0.44653,1.53378 0.94208,1.3988 4.18515,-1.13994 4.8218,-3.7746 14.20114,-5.86627 16.95281,-3.78061 1.39557,1.05779 1.48843,1.00575 2.89912,-1.62465 0.91833,-1.71234 1.0935,-1.69553 3.39748,0.32618 1.33608,1.17239 1.89782,1.86499 1.24833,1.53912 -0.6495,-0.32588 -1.4895,-0.0932 -1.86667,0.51708 -0.37717,0.61028 1.12753,2.98012 3.34376,5.26632 7.60475,7.8448 15.48906,24.79351 18.79668,40.40672 0.96125,4.5375 2.1211,8.25 2.57743,8.25 0.45634,0 0.8297,-4.93588 0.8297,-10.96862 0,-9.33903 -0.22285,-10.88309 -1.5,-10.39301 -0.94984,0.36449 -1.5,-0.0138 -1.5,-1.03138 0,-0.88385 0.675,-1.60699 1.5,-1.60699 1.23182,0 1.5,-1.7612 1.5,-9.85078 3e-5,-9.93679 -1.26861,-16.14922 -3.2978,-16.14922 -0.72801,0 -0.68067,-0.4215 0.13947,-1.24164 0.98886,-0.98886 1.4426,-0.93796 2.22871,0.25 0.77258,1.16751 0.94704,0.94839 0.80284,-1.00836 -0.32726,-4.44077 0.0955,-6 1.62681,-6 1.78194,0 2.01274,1.66242 0.30962,2.23013 -0.78177,0.26059 0.0355,2.60622 2.38092,6.83333 1.96422,3.5401 7.38923,13.63654 12.05557,22.43654 4.66634,8.8 9.60401,18.025 10.9726,20.5 1.3686,2.475 5.92927,10.87163 10.13482,18.65918 l 7.64647,14.15917 v 51.08111 51.08111 l -4.75,3.4778 c -6.99906,5.12449 -15.48048,9.44985 -24.59056,12.54072 -4.43962,1.50627 -8.20383,3.13518 -8.36491,3.61979 -0.16109,0.48462 3.71167,0.98561 8.60613,1.11332 7.0925,0.18507 9.01448,-0.0687 9.4678,-1.25 z m 19.63154,-0.86557 c 0,-1.34426 3.9388,-3.01117 4.88333,-2.06663 0.51668,0.51668 -2.93018,3.36718 -4.13333,3.4182 -0.4125,0.0175 -0.75,-0.59072 -0.75,-1.35157 z m 10,-0.61663 c 0,-0.55 0.675,-1 1.5,-1 0.825,0 1.5,0.45 1.5,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,-0.45 -1.5,-1 z m -22,-1 c 0,-0.55 0.9,-1 2,-1 1.1,0 2,0.45 2,1 0,0.55 -0.9,1 -2,1 -1.1,0 -2,-0.45 -2,-1 z m 53.8125,-0.68311 c 0.72187,-0.28887 1.58438,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m -190.5625,-1.97917 c -1.74117,-0.70258 -1.56631,-2.33772 0.25,-2.33772 0.825,0 1.5,0.675 1.5,1.5 0,0.825 -0.1125,1.46447 -0.25,1.42105 -0.1375,-0.0434 -0.8125,-0.30592 -1.5,-0.58333 z m -69.55615,-0.9772 c -1.2102,-1.21021 0.42969,-2.36052 3.36517,-2.36052 3.46983,0 3.90933,1.50723 0.69098,2.36971 -2.87091,0.76938 -3.2785,0.76845 -4.05615,-0.009 z m 39.05615,-0.0498 c -2.91928,-0.76288 -1.95792,-2.39778 1,-1.70061 3.4502,0.81319 5.37348,2.43298 2.7,2.27394 -1.0725,-0.0638 -2.7375,-0.3218 -3.7,-0.57333 z m 25.25,-0.31072 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 205,-4 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z M 697.66427,677.38078 c -1.38591,-1.5314 -1.48962,-2.01991 -0.42638,-2.00832 2.30541,0.0251 3.85405,1.44908 3.02858,2.78472 -0.57612,0.93217 -1.23346,0.73605 -2.6022,-0.7764 z m -203.52139,-6.52363 c 0,-0.825 0.43588,-1.5 0.96862,-1.5 0.53273,0 0.70959,0.675 0.39301,1.5 -0.31659,0.825 -0.75246,1.5 -0.96862,1.5 -0.21615,0 -0.39301,-0.675 -0.39301,-1.5 z M 452.5107,657.87328 c -1.03482,-2.69669 0.13354,-3.72461 1.95093,-1.71641 1.57889,1.74465 1.59881,2.01794 0.18657,2.55987 -0.91352,0.35055 -1.81597,-0.006 -2.1375,-0.84346 z m 49.63218,-5.57515 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z m 25,-0.94098 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 6,0 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -80.98469,-0.75 c 0.0363,-1.77777 1.74659,-3.44427 2.41871,-2.35676 0.37621,0.60872 0.4059,1.55676 0.066,2.10676 -0.72089,1.16642 -2.50707,1.34614 -2.48469,0.25 z m 63.49705,-22.28502 c 0.783,-2.21926 1.15678,-5.36926 0.83064,-7 -0.44803,-2.24014 -0.2236,-2.96498 0.91806,-2.96498 1.74955,0 4.22879,-4.77433 5.56314,-10.71307 0.75455,-3.35828 0.67089,-4.03041 -0.44824,-3.60096 -0.75678,0.29041 -1.37596,1.37986 -1.37596,2.42102 0,1.04115 -0.45,1.89301 -1,1.89301 -1.3772,0 -1.25172,-2.17171 0.34487,-5.96889 1.22976,-2.92474 1.48108,-3.0623 2.93624,-1.60714 0.87526,0.87526 1.84011,1.18891 2.14412,0.69701 0.30401,-0.4919 -0.10784,-1.44261 -0.91523,-2.11268 -1.77556,-1.47358 -0.13743,-5.46305 1.91915,-4.67386 1.86929,0.71731 6.30943,-10.25994 4.58186,-11.32763 -1.54402,-0.95426 -0.43459,-3.10282 1.27102,-2.46148 0.78471,0.29507 2.81872,-3.8427 5.71797,-11.632 2.475,-6.64949 4.76007,-12.25394 5.07792,-12.45432 0.31786,-0.20039 4.54064,9.40185 9.38396,21.33832 4.84331,11.93647 11.67075,28.64811 15.17207,37.13697 3.50133,8.48887 6.36605,15.80137 6.36605,16.25 0,0.44864 -13.48004,0.8157 -29.95564,0.8157 H 514.2316 Z m 44.87963,-22.21498 c -5.22502,-12.7875 -11.11772,-27.23687 -13.09487,-32.1097 -2.55738,-6.30283 -3.83374,-8.43279 -4.42267,-7.38043 -0.84835,1.51591 -23.87445,61.65284 -23.87445,62.35255 0,0.21317 11.45071,0.38758 25.44601,0.38758 h 25.44602 z m -35.15079,18 c 5.11385,-14.04342 18.14501,-47.69712 18.37853,-47.4636 0.94885,0.94885 3.33314,7.80251 2.54491,7.31535 -0.51591,-0.31885 -1.39857,-0.0222 -1.96145,0.65926 -0.92686,1.12208 -6.23229,14.17649 -13.61022,33.48899 -1.75787,4.6014 -3.3245,7.25 -4.28833,7.25 -0.83524,0 -1.31379,-0.5625 -1.06344,-1.25 z m -13.68245,2.34505 c -0.36685,-0.59356 -0.25969,-1.80703 0.23814,-2.69659 0.81814,-1.46193 0.97065,-1.44662 1.5869,0.1593 0.78151,2.03658 -0.78689,4.21706 -1.82504,2.53729 z m 253.5202,-1.67838 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m -57.47264,-11.00023 c -0.37373,-0.97391 -0.15024,-1.43108 0.58051,-1.1875 1.49484,0.49828 2.31789,2.77106 1.0035,2.77106 -0.53699,0 -1.24979,-0.7126 -1.58401,-1.58356 z m -14.60631,-8.41644 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m -239,-1.5 c 0,-0.825 0.17686,-1.5 0.39301,-1.5 0.21616,0 0.65203,0.675 0.96862,1.5 0.31658,0.825 0.13972,1.5 -0.39301,1.5 -0.53274,0 -0.96862,-0.675 -0.96862,-1.5 z m 71.69385,-13.13948 c -0.79893,-0.79893 0.10419,-2.36052 1.36517,-2.36052 0.51754,0 0.94098,0.675 0.94098,1.5 0,1.54641 -1.17996,1.9867 -2.30615,0.86052 z m 328.3851,-17.94385 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z M 536.14288,561.85715 c 0,-2.79295 1.45881,-3.3527 2.39301,-0.91821 0.96023,2.50232 0.72095,3.41821 -0.89301,3.41821 -0.93333,0 -1.5,-0.94444 -1.5,-2.5 z m 69.09264,0.6731 c -1.42677,-2.66595 -1.37876,-3.1731 0.30037,-3.1731 1.75796,0 2.98338,3.02361 1.73241,4.27458 -0.58685,0.58685 -1.35073,0.17294 -2.03278,-1.10148 z m -63.09264,-8.56611 c 0,-0.21616 0.675,-0.65203 1.5,-0.96862 0.825,-0.31658 1.5,-0.13972 1.5,0.39301 0,0.53274 -0.675,0.96862 -1.5,0.96862 -0.825,0 -1.5,-0.17686 -1.5,-0.39301 z m -89.3526,-5.08347 c -0.35782,-0.93247 -0.23013,-2.44423 0.28376,-3.35946 0.86888,-1.54747 0.97995,-1.54571 1.58527,0.0252 0.35801,0.9291 0.23032,2.44085 -0.28376,3.35946 -0.87057,1.55564 -0.97931,1.55391 -1.58527,-0.0252 z m 146.69768,-1.06665 c -0.32569,-0.84872 -0.36872,-1.76657 -0.0956,-2.03966 0.27309,-0.2731 0.73656,0.42131 1.02992,1.54313 0.62315,2.38293 -0.0692,2.75089 -0.9343,0.49653 z m -228.2774,-20.40687 c -0.0516,-2.62976 0.20986,-3.17246 1.09969,-2.28263 0.86315,0.86315 0.88079,1.76224 0.0677,3.45 -1.03275,2.14368 -1.10381,2.07262 -1.16737,-1.16737 z m 503.93232,1.98138 c 0,-0.53273 0.675,-0.70959 1.5,-0.39301 0.825,0.31659 1.5,0.75246 1.5,0.96862 0,0.21615 -0.675,0.39301 -1.5,0.39301 -0.825,0 -1.5,-0.43588 -1.5,-0.96862 z m 3.22917,-7.21888 c 0.61807,-1.85422 2.77083,-2.16176 2.77083,-0.39583 0,0.87083 -0.7125,1.58333 -1.58333,1.58333 -0.87084,0 -1.40521,-0.53437 -1.1875,-1.1875 z m -426.22917,-1.69006 c 0,-1.31134 2.58498,-3.20413 3.34201,-2.4471 1.36904,1.36904 0.57965,3.32466 -1.34201,3.32466 -1.1,0 -2,-0.3949 -2,-0.87756 z m -60,-13.12244 c 0,-0.55 0.675,-1 1.5,-1 0.825,0 1.5,0.45 1.5,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,-0.45 -1.5,-1 z m 348.5312,-13.0595 c -1.63285,-2.20673 -3.99535,-4.26987 -5.25,-4.58477 -1.25466,-0.3149 -2.2812,-0.97376 -2.2812,-1.46414 0,-1.1989 4.72659,-1.14299 5.47301,0.0647 0.32507,0.52598 1.20205,0.72186 1.94885,0.43529 0.74679,-0.28657 2.51193,0.63308 3.92252,2.04367 1.41059,1.4106 3.26017,2.56472 4.11017,2.56472 2.22376,0 1.90189,1.63693 -0.67706,3.4433 -3.18843,2.23327 -3.9319,1.97648 -7.24629,-2.5028 z m -33.5312,2.5595 c 0,-1.01402 3.85234,-4.31433 4.39848,-3.76819 0.31083,0.31083 -0.39553,1.39833 -1.56968,2.41667 -2.20552,1.91284 -2.8288,2.21062 -2.8288,1.35152 z M 463.37551,695.18978 c -0.86315,-0.86315 -1.76224,-0.88079 -3.45,-0.0677 -2.14368,1.03275 -2.07262,1.10381 1.16737,1.16737 2.62976,0.0516 3.17246,-0.20986 2.28263,-1.09969 z m 11.76737,0.16737 c 0,-0.55 -0.92656,-1 -2.05902,-1 -1.13246,0 -1.7809,0.45 -1.44098,1 0.33992,0.55 1.26648,1 2.05902,1 0.79254,0 1.44098,-0.45 1.44098,-1 z m 121,-1 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 114.45729,-13.9309 c 0.82289,-1.33146 -1.25104,-2.36222 -3.22715,-1.60392 -1.4408,0.55289 -1.46897,0.77213 -0.20211,1.5733 1.87622,1.18655 2.71026,1.19399 3.42926,0.0306 z m 28.83255,-7.21768 c 3.71179,-1.89425 3.97341,-2.24105 2.21016,-2.92972 -3.18005,-1.24202 -4.48515,-1.04657 -3.86163,0.5783 0.39941,1.04085 -0.0693,1.5 -1.53138,1.5 -1.20621,0 -2.10699,0.64128 -2.10699,1.5 0,1.94103 0.28362,1.90625 5.28984,-0.64858 z m 115.28159,-22.27999 c 2.26639,-2.2664 1.7425,-4.16551 -0.57143,-2.07143 -1.91494,1.733 -2.63617,3.5 -1.42857,3.5 0.31428,0 1.21428,-0.64286 2,-1.42857 z m 1.42857,-24.57143 c 0,-2.26671 -1.03701,-2.56299 -2.8,-0.8 -1.76299,1.76299 -1.46671,2.8 0.8,2.8 1.33333,0 2,-0.66667 2,-2 z m 0,-21.16667 c 0,-3.64127 -0.43653,-3.50932 -1.37838,0.41667 -0.39164,1.63254 -0.24563,2.75 0.35933,2.75 0.56048,0 1.01905,-1.425 1.01905,-3.16667 z M 695.80602,534.25395 c -0.77674,-2.0723 -1.27362,-2.55465 -1.49572,-1.45196 -0.18291,0.90818 0.20969,2.30462 0.87245,3.1032 1.78306,2.14846 1.91572,1.79699 0.62327,-1.65124 z M 496.14288,513.29813 c 0,-0.51754 -0.45,-0.94098 -1,-0.94098 -0.55,0 -1,0.70156 -1,1.55902 0,0.85746 0.45,1.2809 1,0.94098 0.55,-0.33992 1,-1.04148 1,-1.55902 z M -3.607117,700.69487 c -0.988897,-0.39903 -1.25,-22.50883 -1.25,-105.84825 V 489.50276 l -3.71399,-3.06139 c -5.574494,-4.59497 -16.531162,-10.02766 -27.234126,-13.50361 -8.984422,-2.91783 -9.571833,-3.27678 -9.887672,-6.04205 -0.223064,-1.95301 0.260718,-3.37611 1.44113,-4.23925 1.424023,-1.04127 18.4143,-1.29931 85.550608,-1.29931 81.801127,0 83.798057,0.0455 84.808867,1.93426 0.6124,1.14428 1.03518,9.92518 1.03518,21.5 v 19.56574 l 22.25,0.0153 c 12.2375,0.008 22.86763,0.40655 23.6225,0.88473 1.22116,0.77354 13.52828,30.50913 42.42975,102.5157 l 9.19775,22.91573 0.25729,-65.32206 c 0.18209,-46.22708 0.58328,-65.71485 1.37245,-66.66574 0.76697,-0.92414 3.66454,-1.34367 9.2803,-1.34367 h 8.16514 l 4.54618,4.75 c 2.5004,2.6125 13.27667,14.875 23.94725,27.25 10.67059,12.375 19.85789,22.99769 20.41623,23.60599 0.55834,0.60829 9.34016,10.72193 19.51516,22.47476 10.175,11.75283 19.95032,22.95514 21.72294,24.89402 l 3.22294,3.52523 0.0271,-42.16111 0.0271,-42.1611 -3.13353,-2.63669 c -4.02178,-3.38411 -9.49366,-6.1672 -18.84477,-9.58476 -8.11812,-2.96694 -10.19565,-4.87105 -8.40825,-7.70634 0.99389,-1.57657 3.53168,-1.77648 25.60819,-2.01717 18.8425,-0.20544 24.73909,0.0256 25.51815,1 0.6611,0.82683 1.18195,35.25804 1.49885,99.08358 0.41736,84.05668 0.28402,98.01808 -0.94791,99.25 -2.96571,2.96571 -1.42861,4.41616 -39.78502,-37.54219 -2.75314,-3.01167 -7.95454,-8.63667 -11.55868,-12.5 -3.60421,-3.86332 -8.81564,-9.49922 -11.58103,-12.52422 -2.76539,-3.025 -8.59156,-9.3526 -12.94703,-14.06134 -4.35548,-4.70873 -13.54405,-14.69317 -20.41905,-22.18763 l -12.5,-13.6263 -0.26406,32.09336 c -0.23042,28.00565 -0.0641,32.31431 1.30583,33.82807 2.28718,2.5273 12.50609,7.76407 20.24434,10.37439 6.52846,2.20222 6.71389,2.35888 6.71389,5.67211 v 3.40734 l -24.87616,0.26775 c -17.51279,0.18849 -25.28281,-0.0698 -26.25,-0.87245 -0.78225,-0.64922 -1.37384,-3.02519 -1.37384,-5.51774 v -4.37756 l -12.25,-0.12904 c -6.7375,-0.071 -22.375,-0.40847 -34.75,-0.75 l -22.5,-0.62096 v -2.92711 c 0,-2.7286 0.54253,-3.14164 8,-6.09051 4.4,-1.73988 9.6646,-4.16612 11.69911,-5.39165 3.30912,-1.99331 3.59896,-2.49165 2.74916,-4.7268 -2.60372,-6.84831 -0.52223,-6.36393 -27.3476,-6.36393 H 126.4146 l -1.63586,4.28343 c -0.89972,2.35589 -1.63586,4.59941 -1.63586,4.98561 0,1.04363 11.671,6.74106 17.12926,8.36199 4.78388,1.42066 6.50322,3.55717 5.32774,6.62043 -0.48891,1.27409 -3.99969,1.65184 -20.77267,2.2351 -25.156427,0.87477 -28.093387,0.66978 -28.461427,-1.98656 -0.15241,-1.1 6.659467,-20 15.137497,-42 8.47802,-22 19.99515,-51.87995 25.5936,-66.39988 8.0104,-20.77548 9.89853,-26.59655 8.8625,-27.32298 -2.4389,-1.7101 -13.29302,-6.66291 -16.0665,-7.33126 l -2.75,-0.6627 v 14.17415 c 0,7.85826 -0.46127,15.03604 -1.03518,16.10841 -1.16515,2.17709 -5.19795,2.58784 -6.71825,0.68426 -0.54907,-0.6875 -1.98813,-5.92389 -3.19789,-11.63641 -2.34814,-11.08794 -6.06334,-22.03683 -10.64234,-31.36359 l -2.82298,-5.75 H 82.434563 62.142883 v 31 31 h 24.46482 c 23.164187,0 24.519847,0.10283 25.499997,1.93426 1.34666,2.51627 1.34666,26.61521 0,29.13148 -0.98015,1.83143 -2.33581,1.93426 -25.499997,1.93426 h -24.46482 v 40.99028 40.99029 l 4.75,3.53927 c 6.00162,4.47187 23.17994,12.85787 29.75,14.52317 6.520447,1.65272 7.664167,2.65087 7.301067,6.37182 l -0.30107,3.08517 -20.999997,0.60989 c -26.03071,0.756 -84.557916,0.9106 -86.25,0.22783 z m 8.177164,-7.33772 c 0.449749,0 0.257525,0.675 -0.427164,1.5 -1.030958,1.24223 -0.923114,1.50235 0.627555,1.51365 1.029845,0.008 2.884945,0.285 4.122445,0.61664 1.625032,0.43549 2.25,0.17238 2.25,-0.94724 0,-0.92348 -1.111791,-1.71863 -2.75,-1.9668 -1.5125,-0.22912 0.706202,-0.48401 4.930449,-0.56642 7.191487,-0.14029 7.700793,-0.0105 8,2.03886 0.49211,3.3706 5.809098,3.59583 9.463311,0.40088 l 2.85624,-2.49727 -3.75,0.58469 c -3.853828,0.60088 -4.509671,-0.0595 -2.658556,-2.67699 0.798308,-1.12881 1.186326,-1.19068 1.568016,-0.25 0.27897,0.6875 1.34315,1.25 2.36486,1.25 1.0217,0 2.13576,0.45 2.47568,1 0.33992,0.55 1.49148,1 2.55902,1 1.06754,0 1.94098,0.675 1.94098,1.5 0,1.11399 1.17322,1.5 4.55902,1.5 2.80783,0 4.3198,-0.38706 3.93624,-1.00767 -0.34253,-0.55422 0.0488,-1.67922 0.86955,-2.5 1.9666,-1.9666 21.21662,-2.17934 21.92686,-0.24233 0.36666,1 0.72333,1 1.78333,0 1.53713,-1.45013 4.925,-1.67942 4.925,-0.33333 0,0.50416 -0.5625,1.14364 -1.25,1.42105 -0.74674,0.30132 -0.54544,0.53617 0.5,0.58333 0.9625,0.0434 1.75,-0.30078 1.75,-0.76489 0,-1.34901 9.86972,-0.46943 12.29407,1.09563 1.45453,0.93899 3.14102,1.16854 4.95115,0.6739 1.50987,-0.41259 2.99893,-0.33966 3.30902,0.16207 0.83985,1.35891 3.447187,1.10264 3.436397,-0.33776 -0.005,-0.6875 -3.324787,-2.25648 -7.376977,-3.48663 -10.97214,-3.33087 -19.21356,-7.35061 -27.87475,-13.59586 -4.2686,-3.07793 -8.38558,-5.35659 -9.14885,-5.0637 -2.10851,0.80911 -2.76555,-1.06982 -3.12097,-8.92505 -0.40742,-9.0042 0.19702,-11.67876 2.63932,-11.67876 1.70743,0 1.89159,-0.82941 1.89159,-8.51905 v -8.51905 l -2.5,0.62746 c -1.5404,0.38661 -2.5,0.20201 -2.5,-0.48095 0,-0.60963 1.14852,-1.10841 2.55226,-1.10841 2.45063,0 2.54022,-0.20905 2.25,-5.25 -0.24138,-4.19263 -0.72184,-5.43435 -2.38554,-6.16534 -1.6282,-0.71539 -2.03327,-1.69839 -1.85434,-4.5 0.329,-5.15121 0.29628,-5.07613 1.93762,-4.44629 1.62708,0.62437 1.78605,0.03 0.88781,-3.31917 -0.36002,-1.34238 -1.12368,-1.97405 -1.98635,-1.64301 -0.99348,0.38123 -1.40146,-0.26625 -1.40146,-2.22419 0,-2.70145 0.044,-2.72219 2.00613,-0.94645 1.10337,0.99854 2.32496,1.4967 2.71463,1.10702 1.06997,-1.06997 -1.27803,-4.14924 -2.9404,-3.85616 -1.19258,0.21025 -1.43733,-1.42871 -1.35976,-9.10547 0.0588,-5.82184 0.56115,-9.92402 1.32842,-10.84853 1.48624,-1.79081 14.8673,-2.60866 13.77542,-0.84196 -0.36445,0.5897 -1.03958,0.83921 -1.50028,0.55448 -0.4607,-0.28473 -0.60212,0.38293 -0.31427,1.48369 0.36419,1.39266 1.32431,1.97737 3.15674,1.92243 1.44835,-0.0434 2.0871,-0.30051 1.41943,-0.57131 -0.94825,-0.38461 -0.95032,-0.91448 -0.009,-2.42105 1.92801,-3.08724 11.01857,-2.72442 14.3143,0.57131 3.05397,3.05397 6.77689,3.66888 4.06408,0.67126 -3.55558,-3.92887 -0.32746,-4.44943 4.16264,-0.67126 1.94696,1.63826 4.19359,2.5 6.517707,2.5 3.73433,0 5.79253,-1.6849 3.66466,-3 -0.70992,-0.43876 -0.9187,-1.32253 -0.48008,-2.03223 0.42688,-0.69071 0.71769,-4.42174 0.64623,-8.29117 -0.11267,-6.10149 0.20627,-7.47609 2.40286,-10.35596 l 2.53232,-3.32064 H 83.252793 c -16.24923,0 -26.22354,0.37483 -26.60991,1 -1.28025,2.07149 -2.24833,0.8528 -2.85843,-3.5984 -0.86076,-6.2799 0.0786,-9.70803 2.48763,-9.07806 1.17283,0.3067 1.8708,-0.0355 1.8708,-0.91716 0,-0.83347 -1.01841,-1.40638 -2.5,-1.40638 -2.96795,0 -3.25408,-1.51212 -0.59978,-3.16976 1.04512,-0.65269 1.67297,-1.77892 1.39522,-2.50273 -0.27776,-0.72381 -0.90786,-1.06705 -1.40022,-0.76275 -0.49237,0.3043 -0.89522,-0.26504 -0.89522,-1.2652 0,-1.00015 0.9,-2.38053 2,-3.06749 1.56606,-0.97802 2,-2.33202 2,-6.24054 0,-2.74534 -0.45,-4.99153 -1,-4.99153 -0.55,0 -1,-0.70156 -1,-1.55902 0,-0.85746 0.45,-1.2809 1,-0.94098 0.60208,0.3721 1,-0.95074 1,-3.32435 0,-3.10138 -0.42665,-4.05396 -2,-4.4654 -1.1966,-0.31292 -2,-1.36401 -2,-2.61663 0,-2.74952 1.41648,-2.66983 2.77951,0.15638 0.85323,1.76917 1.09959,-0.13316 1.15281,-8.90181 l 0.06768,-11.15182 6,-0.69637 c 3.94743,-0.45815 6,-1.14742 6,-2.01485 0,-0.72517 -0.5625,-1.5854 -1.25,-1.91163 -0.6875,-0.32623 0.26875,-0.36373 2.125,-0.0833 1.85625,0.28039 4.24531,0.50981 5.30902,0.50981 1.06371,0 1.6559,0.45 1.31598,1 -0.33992,0.55 0.30852,1 1.44098,1 1.13246,0 2.05902,-0.45 2.05902,-1 0,-0.55 0.675,-1 1.5,-1 0.83333,0 1.5,0.88889 1.5,2 0,1.61905 0.66667,2 3.5,2 1.925,0 3.5,-0.45 3.5,-1 0,-0.55 -1.0125,-1.01368 -2.25,-1.03041 -2.05794,-0.0278 -2.09544,-0.12031 -0.43926,-1.08368 2.28659,-1.33007 4.68926,-0.45568 4.68926,1.70653 0,1.39162 0.86162,1.58377 5.41036,1.20655 l 5.410357,-0.44867 3.53275,7.07484 c 4.91151,9.83601 8.91845,21.27295 11.6754,33.32484 1.28962,5.6375 2.59819,10.24844 2.90794,10.24654 0.30976,-0.002 0.59399,-2.90296 0.63163,-6.44681 0.0376,-3.54384 -0.24011,-6.25265 -0.61723,-6.01957 -0.37712,0.23307 -0.97042,-1.65367 -1.31844,-4.19277 -0.97254,-7.09541 -0.83114,-8.35074 0.86723,-7.69902 1.13044,0.4338 1.5,-0.17273 1.5,-2.46183 0,-2.35271 -0.48956,-3.10947 -2.17167,-3.35699 -2.82332,-0.41544 -3.65097,-2.81955 -0.97068,-2.81955 1.11337,0 2.30243,-0.45 2.64235,-1 0.35052,-0.56716 -0.48962,-1 -1.94098,-1 -2.05428,0 -2.55902,-0.48691 -2.55902,-2.46862 0,-1.78348 0.41631,-2.30886 1.5,-1.89301 1.80786,0.69375 1.85543,0.23581 0.32449,-3.12423 -1.02715,-2.25434 -0.90093,-2.7723 1,-4.10376 2.644,-1.85193 3.06184,-7.85629 0.61213,-8.79633 -0.85986,-0.32996 -1.27877,-1.06044 -0.9309,-1.6233 0.34786,-0.56286 1.05138,-0.76448 1.56338,-0.44805 1.39488,0.86209 1.06354,-0.78324 -0.6009,-2.98383 -1.87079,-2.4734 -1.86109,-3.55887 0.0318,-3.55887 2.14325,0 1.85313,-3.37044 -0.47118,-5.47392 -1.9603,-1.77404 -1.9598,-1.79837 0.0907,-4.40499 l 2.06179,-2.62109 -81.840657,-0.2583 c -45.012356,-0.14207 -82.40315,-0.0437 -83.09065,0.21861 -2.37693,0.90688 -1.235567,2.3201 2.5,3.09548 2.0625,0.4281 4.3125,0.68346 5,0.56745 0.6875,-0.116 1.25,0.3076 1.25,0.94133 0,0.6911 0.900481,0.93229 2.25,0.60264 1.2375,-0.30228 3.123508,0.0989 4.19113,0.89159 1.067621,0.79266 2.755121,1.4412 3.75,1.4412 0.994878,0 1.819942,0.5625 1.833474,1.25 0.02654,1.34822 6.125747,4.75 8.516497,4.75 0.802394,0 1.346399,0.40312 1.208899,0.89583 -0.1375,0.4927 1.8875,2.53831 4.5,4.5458 l 4.75,3.64998 v 105.64129 105.64128 l 2.804719,-2.68709 c 1.542595,-1.4779 3.172695,-2.68709 3.622445,-2.68709 z m 59.072836,-206 c -0.33992,-0.55 0.11008,-1 1,-1 0.88992,0 1.33992,0.45 1,1 -0.33992,0.55 -0.78992,1 -1,1 -0.21008,0 -0.66008,-0.45 -1,-1 z m 37.999997,0 c -0.33992,-0.55 0.0835,-1 0.94098,-1 0.85746,0 1.55902,0.45 1.55902,1 0,0.55 -0.42344,1 -0.94098,1 -0.51754,0 -1.2191,-0.45 -1.55902,-1 z M -17.232165,475.64877 c -0.313818,-0.31382 -0.331255,-0.95781 -0.03875,-1.4311 0.702044,-1.13593 3.413797,-1.11012 3.413797,0.0325 0,1.10376 -2.594671,2.17898 -3.375048,1.39861 z m 77.790948,220.06694 c 0.52667,-1.37248 0.38034,-1.43434 -0.89301,-0.37756 -1.73524,1.44013 -1.91584,2.019 -0.62988,2.019 0.49116,0 1.17646,-0.73865 1.52289,-1.64144 z m 4.5841,0.64144 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 20.72917,0.39583 c -0.3323,-0.33229 -1.1948,-0.36781 -1.91667,-0.0789 -0.79773,0.31922 -0.56078,0.55618 0.60417,0.60416 1.05416,0.0434 1.64479,-0.19293 1.3125,-0.52522 z m 269.829867,-5.01663 c -0.36178,-1.44144 -1.24273,-3.20575 -1.95766,-3.92068 -1.21239,-1.21239 -3.09024,-13.303 -2.20382,-14.18941 0.22074,-0.22074 1.34659,0.61326 2.50189,1.85334 l 2.10055,2.25467 v -7.68856 c 0,-6.16761 -0.29673,-7.68856 -1.5,-7.68856 -0.825,0 -1.54486,0.5625 -1.59968,1.25 -0.16292,2.04305 -1.69917,-3.53375 -1.72169,-6.25 -0.0114,-1.375 0.20624,-1.9375 0.48365,-1.25 0.27741,0.6875 1.10439,1.25 1.83772,1.25 0.73333,0 1.56031,0.5625 1.83772,1.25 0.27741,0.6875 0.53991,0.0125 0.58333,-1.5 0.0591,-2.05933 -0.39649,-2.75 -1.81406,-2.75 -1.86998,0 -3.10699,-1.82418 -3.10699,-4.58179 0,-0.78001 0.675,-1.41821 1.5,-1.41821 0.825,0 1.5,0.675 1.5,1.5 0,0.825 0.43332,1.5 0.96292,1.5 0.52961,0 0.9407,-2.89595 0.91353,-6.43543 -0.0409,-5.32563 -0.31064,-6.33518 -1.56434,-5.8541 -1.09231,0.41916 -1.40035,0.0524 -1.10414,-1.31456 0.22594,-1.04275 0.91891,-1.79263 1.53993,-1.66641 1.53585,0.31218 1.76291,-79.90652 0.23426,-82.76283 -0.75135,-1.40391 -0.73641,-1.96667 0.0522,-1.96667 0.6076,0 0.96093,-1.0125 0.78518,-2.25 -0.47228,-3.3254 -3.39897,-2.93218 -3.0105,0.40449 0.16998,1.45997 -0.16752,2.94902 -0.75,3.30902 -1.46351,0.90449 -1.3925,-8.97194 0.0843,-11.73145 0.85786,-1.60294 0.85786,-2.23164 0,-2.51759 -2.34353,-0.78118 -1.08785,-2.41734 1.37987,-1.79799 2.52105,0.63275 2.52302,0.62765 2.25,-5.79578 -0.1503,-3.536 -0.56535,-5.95663 -0.92235,-5.37918 -0.35699,0.57745 -1.36949,0.77346 -2.25,0.43558 -2.28667,-0.87748 -2.01733,-5.38388 0.39908,-6.6771 1.1,-0.5887 2,-1.95453 2,-3.03518 0,-2.43019 -0.87174,-2.502 -2.60795,-0.21482 -1.15123,1.51656 -1.33269,0.9326 -1.36025,-4.37755 -0.022,-4.25776 0.42598,-6.50743 1.46826,-7.37245 1.25091,-1.03816 1.5,-0.90224 1.5,0.81854 0,1.13488 -0.45,2.34154 -1,2.68146 -1.6251,1.00437 -1.14204,3.06433 0.75,3.1983 1.44859,0.10256 1.77736,-0.80807 1.90887,-5.2872 l 0.15887,-5.4111 h -23.40887 c -14.93925,0 -23.40887,0.36181 -23.40887,1 0,0.55 0.7875,1.05191 1.75,1.11535 3.28453,0.2165 3.78665,0.39034 11.875,4.11124 1.39734,0.64282 2.7707,0.632 4.01064,-0.0316 2.76565,-1.48012 6.59562,-0.41475 10.45855,2.90922 2.614,2.2493 3.0912,3.12951 2.05256,3.78604 -1.04376,0.65978 -1.09869,1.33103 -0.24017,2.93518 0.78297,1.46301 1.03601,15.98315 0.85324,48.96177 l -0.25982,46.88197 -12.25827,-14.08458 c -6.74205,-7.74653 -13.49484,-15.43459 -15.00621,-17.08459 -1.51136,-1.65 -4.03982,-4.575 -5.6188,-6.5 -1.57898,-1.925 -5.24943,-6.2 -8.15655,-9.5 -4.88718,-5.54764 -26.5763,-30.52677 -40.80962,-47 -3.32651,-3.85 -6.82579,-7.77435 -7.77619,-8.72078 -0.9504,-0.94642 -2.93934,-3.30892 -4.41987,-5.25 -2.6521,-3.47708 -2.80091,-3.52922 -10.07318,-3.52922 h -7.38131 l -0.0153,73.25 c -0.009,41.26546 -0.39076,72.65746 -0.87516,71.89299 -0.56156,-0.88627 -1.64418,-1.10807 -3.12085,-0.6394 -2.04387,0.6487 -2.19809,0.46691 -1.6058,-1.89298 0.48222,-1.9213 0.26971,-2.61061 -0.80481,-2.61061 -1.84975,0 -2.90823,-1.65677 -1.9987,-3.12842 0.47563,-0.76958 0.99093,-0.6039 1.62047,0.52104 1.82172,3.25522 2.60056,0.50535 1.03381,-3.6501 -2.28416,-6.05823 -3.07326,-6.89872 -5.33866,-5.68632 -2.03044,1.08666 -2.2049,0.70199 -1.26765,-2.79495 0.33002,-1.23132 0.96996,-2.01013 1.42208,-1.73071 0.97531,0.60278 -0.13844,-3.48499 -2.43759,-8.94658 -1.56392,-3.71506 -1.72293,-3.8177 -3.09837,-2 -1.36443,1.80314 -1.45173,1.72747 -1.48166,-1.28427 -0.0195,-1.96752 -0.70591,-3.59295 -1.7818,-4.21959 -0.9625,-0.56061 -1.23998,-1.03297 -0.61663,-1.04969 2.15457,-0.0578 2.1639,-4.01732 0.0193,-8.18433 -2.27064,-4.41185 -4.38391,-5.27053 -3.81618,-1.55063 0.47729,3.12728 -1.293,1.0131 -2.71778,-3.24574 -0.96187,-2.87515 -0.90128,-3.59187 0.36352,-4.29969 1.74556,-0.97686 2.00634,-3.33005 0.474,-4.27709 -0.5741,-0.35481 -1.78335,-0.0439 -2.68724,0.69098 -1.42695,1.1601 -1.55512,1.1006 -0.97305,-0.45176 0.41596,-1.10934 0.14225,-1.99052 -0.72121,-2.32186 -1.7136,-0.65757 -3.99316,-5.90418 -3.15471,-7.26083 0.33695,-0.5452 0.16811,-1.266 -0.37521,-1.60178 -1.18119,-0.73002 -3.95719,-6.82055 -8.67261,-19.02768 -1.91211,-4.95 -4.07004,-10.125 -4.7954,-11.5 -1.71042,-3.24228 -4.0503,-10.27089 -3.76347,-11.30485 0.1228,-0.44267 -0.45996,-1.7803 -1.29502,-2.97251 -1.88508,-2.69133 -1.93819,-3.821 -0.14732,-3.13378 2.11332,0.81095 2.75217,-2.32287 0.85938,-4.21566 -1.57957,-1.57957 -1.72268,-1.53458 -2.29379,0.72106 -0.57141,2.2568 -0.71392,2.16171 -2.30188,-1.53591 -0.93102,-2.1679 -1.9806,-5.08844 -2.33239,-6.49009 -0.60777,-2.42157 -0.55298,-2.46182 1.10048,-0.80836 0.95701,0.95706 2.15791,1.7401 2.66863,1.7401 1.59146,0 1.01789,-1.92727 -0.93688,-3.14804 -1.06614,-0.66582 -1.67045,-1.91069 -1.41035,-2.9053 0.42233,-1.61499 -1.13593,-1.74022 -21.64004,-1.73911 -21.09197,10e-4 -28.61981,0.94101 -18.35351,2.29148 8.13465,1.07006 14.63684,2.77272 17.91078,4.6901 2.83507,1.66037 3.06802,2.15532 2.38866,5.07533 -0.41402,1.77955 -8.06537,22.13554 -17.00299,45.23554 -8.93763,23.1 -17.95393,46.5 -20.03622,52 -2.0823,5.5 -6.3071,16.41657 -9.38844,24.25905 -3.08134,7.84247 -5.602437,14.50541 -5.602437,14.80653 0,0.30112 1.369027,-0.26121 3.042287,-1.24963 2.62594,-1.55119 3.16592,-1.5971 3.94563,-0.3355 0.49683,0.8039 1.21197,1.15299 1.58919,0.77577 0.37722,-0.37722 1.52669,-0.23585 2.55437,0.31415 1.11788,0.59827 1.86852,0.62343 1.86852,0.0626 0,-0.51555 1.41715,-1.43138 3.14922,-2.03518 4.05273,-1.41279 4.17903,-1.39561 3.46271,0.47107 -0.45406,1.18327 -0.0502,1.49052 1.64301,1.25 1.54883,-0.22 2.14725,-0.8907 1.92968,-2.16272 -0.26184,-1.5308 0.16257,-1.74881 2.5,-1.28419 1.54846,0.30778 4.49894,0.84934 6.55663,1.20346 2.05769,0.35412 3.56605,0.93201 3.35192,1.2842 -0.21414,0.35219 1.3648,0.74254 3.50875,0.86743 5.63026,0.32799 4.78989,-1.08881 -1.85192,-3.12218 -3.1625,-0.96819 -8.33668,-3.32744 -11.49817,-5.24277 -3.1615,-1.91533 -6.15839,-3.2289 -6.65976,-2.91903 -1.08307,0.66941 -4.09207,-0.34615 -4.09207,-1.38107 0,-0.39822 1.10964,-1.31789 2.46587,-2.04372 1.35623,-0.72584 2.22514,-1.70922 1.9309,-2.1853 -0.29423,-0.47607 -0.95387,-0.6067 -1.46587,-0.29026 -2.49018,1.53901 1.80202,-11.24223 4.3823,-13.04953 2.04149,-1.42991 2.2285,-1.36809 3.01701,0.99744 0.46233,1.38701 1.27048,2.25617 1.79588,1.93145 0.52539,-0.32471 0.68164,-1.45251 0.3472,-2.50623 -0.53858,-1.6969 -0.0861,-1.91584 3.95932,-1.91584 2.51207,0 4.56739,0.34767 4.56739,0.7726 0,0.42492 1.57769,1.62223 3.50598,2.66069 3.41814,1.84079 4.99402,1.59888 4.99402,-0.76662 0,-0.64167 0.675,-1.16667 1.5,-1.16667 0.87384,0 1.37734,0.73052 1.20616,1.75 -0.21576,1.28505 0.38203,1.75 2.25,1.75 2.70535,0 3.34241,-1.80143 1.34384,-3.8 -0.93333,-0.93333 -0.42222,-1.2 2.3,-1.2 1.925,0 4.04,0.54 4.7,1.2 0.93333,0.93333 1.2,0.93333 1.2,0 0,-0.66 0.45,-1.2 1,-1.2 1.87474,0 1.00665,2.06178 -1.25,2.96884 -2.46696,0.9916 -2.46267,0.99631 1.5,1.6476 2.39547,0.39371 2.75,0.12527 2.75,-2.08223 0,-2.29251 0.38386,-2.53421 4.02475,-2.53421 3.37294,0 4.17869,0.40488 4.97525,2.5 0.52277,1.375 1.41164,2.5 1.97525,2.5 1.37241,0 1.29674,-1.32801 -0.15858,-2.78333 -1.79767,-1.79767 -0.11717,-2.71134 2.95284,-1.60542 2.1659,0.78023 2.67268,1.5315 2.45093,3.63331 -0.15376,1.45733 0.82677,5.37238 2.17895,8.70012 l 2.45851,6.05043 -6.67895,3.94658 c -3.67342,2.17062 -9.26026,4.75922 -12.41519,5.75244 -7.79936,2.45538 -7.85564,4.62659 -0.062,2.3914 2.24004,-0.64244 3.35362,-0.56807 3.7434,0.25 0.41006,0.86064 0.70702,0.83832 1.13815,-0.0855 0.70629,-1.51346 4.04782,-1.65583 4.94107,-0.21052 0.36307,0.58746 3.10118,0.89862 6.29665,0.71556 4.72993,-0.27096 5.84199,-0.70055 6.8029,-2.62793 0.789,-1.58257 1.38095,-1.92819 1.89048,-1.10376 0.40799,0.66014 0.13468,1.57548 -0.60735,2.03408 -0.74204,0.4586 -1.0535,1.12948 -0.69214,1.49084 0.94164,0.9416 10.78508,-0.55714 10.78508,-1.64214 0,-0.49839 0.9,-0.90616 2,-0.90616 1.1,0 2,-0.47851 2,-1.06336 0,-0.5973 1.42444,-0.92601 3.25,-0.75 2.49095,0.24017 3.32463,0.83886 3.56955,2.56336 0.24837,1.74877 0.97237,2.25 3.25,2.25 3.2337,0 3.73864,-1.08437 1.40628,-3.02006 -1.84135,-1.52819 -1.37762,-2.26322 0.88104,-1.39649 0.90372,0.34679 1.64313,1.25738 1.64313,2.02354 0,1.6639 0.51165,1.72474 3.05555,0.36328 1.43536,-0.76818 2.55048,-0.61929 4.39028,0.5862 1.35642,0.88875 2.93601,1.32558 3.51019,0.97071 0.68338,-0.42235 1.04398,1.54517 1.04398,5.69624 v 6.34146 l 7,0.17868 c 6.82495,0.17421 7,0.11693 7,-2.29052 0,-2.285 0.33568,-2.4565 4.5,-2.29898 4.29637,0.16251 5.28919,0.72342 3.84201,2.1706 -0.3619,0.36189 -1.2619,0.15679 -2,-0.45578 -0.73811,-0.61257 -1.34201,-0.77078 -1.34201,-0.35157 0,2.8845 11.95158,4.98808 13.5594,2.38657 0.39828,-0.64443 1.96791,-0.84591 3.80902,-0.48894 11.04686,2.14185 14.05204,0.58703 4.58969,-2.37462 -10.63087,-3.32738 -23.95811,-11.46251 -23.95811,-14.62435 0,-0.77878 -0.48575,-1.41597 -1.07946,-1.41597 -0.69165,0 -0.83343,-1.16758 -0.39464,-3.25 0.55978,-2.65667 0.44649,-3.02179 -0.62055,-2 -2.17876,2.08637 -2.91092,1.43016 -2.78935,-2.5 0.0638,-2.0625 0.3218,-2.9625 0.57333,-2 0.25152,0.9625 1.32432,1.75 2.38399,1.75 1.74749,0 1.92668,-0.77196 1.92668,-8.3 0,-5.12222 -0.45944,-8.75944 -1.2,-9.5 -0.93333,-0.93333 -0.93333,-1.46667 0,-2.4 0.76129,-0.76129 1.2,-4.6 1.2,-10.5 0,-9.51086 -0.24373,-10.05099 -4.25,-9.41842 -0.4125,0.0651 -0.75,-0.71918 -0.75,-1.74291 0,-1.45854 0.5548,-1.75527 2.56379,-1.37123 2.47079,0.47233 2.55241,0.33127 2.25,-3.88867 -0.27303,-3.80996 -0.60607,-4.36846 -2.56379,-4.29937 -1.94358,0.0686 -2.25,-0.42623 -2.25,-3.63337 0,-2.91604 0.44511,-3.82917 2.07421,-4.25519 1.14082,-0.29833 2.34136,-1.564 2.66788,-2.8126 0.55563,-2.12473 0.88725,-1.94341 5.17579,2.82993 4.65384,5.17993 22.04251,24.02053 34.00415,36.84344 3.61788,3.87839 10.85297,11.74785 16.07797,17.4877 13.08181,14.37082 33.16918,36.1413 40.56205,43.96069 3.38,3.575 8.06857,8.6375 10.41906,11.25 2.35048,2.6125 4.49008,4.75 4.75466,4.75 0.26457,0 0.18505,-1.17936 -0.17673,-2.6208 z m -1.90838,-23.84717 c -0.30982,-0.80739 -0.13297,-1.73395 0.39301,-2.05902 0.52598,-0.32508 0.95633,0.33551 0.95633,1.46797 0,2.41457 -0.55611,2.65816 -1.34934,0.59105 z m -117.15066,-3.53203 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -129,-12 c -0.35667,-0.5771 0.5699,-0.99352 2.19098,-0.98469 2.18111,0.0119 2.47372,0.232 1.30902,0.98469 -1.92129,1.24163 -2.73263,1.24163 -3.5,0 z m 71.3125,-0.68311 c 0.72187,-0.28887 1.58437,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 61.70038,-23.17689 c 0.42523,-4.96016 1.13822,-6.2128 2.10389,-3.6963 0.36511,0.95147 -0.043,3.15338 -0.90691,4.89313 l -1.57076,3.16317 z m -0.49757,-14.39 c -0.008,-2.0625 0.15723,-3.75 0.36811,-3.75 0.8666,0 1.25282,4.968 0.48086,6.18535 -0.5314,0.838 -0.83921,-0.045 -0.84897,-2.43535 z m -114.42637,1.39391 c -1.46467,-2.3699 0.26521,-6.14391 2.81617,-6.14391 1.70902,0 2.81565,-0.94545 3.98095,-3.40113 2.01084,-4.23753 2.00617,-4.59158 -0.0806,-6.11749 -1.50615,-1.10132 -1.55054,-1.72517 -0.39918,-5.61024 0.71247,-2.40413 2.37504,-6.74698 3.69458,-9.65078 1.31955,-2.90379 2.39918,-5.7212 2.39918,-6.26089 0,-0.5397 0.86067,-2.88886 1.91261,-5.22037 1.05193,-2.3315 2.42755,-5.89848 3.05693,-7.92662 1.35264,-4.35879 4.63564,-8.81248 6.49605,-8.81248 1.50511,0 2.82292,2.72417 1.97864,4.09024 -0.82979,1.34262 -4.19252,1.1053 -4.82121,-0.34024 -0.29901,-0.6875 -0.28972,-0.0204 0.0206,1.48235 0.31036,1.50279 0.0909,4.09029 -0.48766,5.75 -0.57858,1.65971 -0.6974,3.01765 -0.26404,3.01765 0.43336,0 1.38197,-1.8 2.10804,-4 0.72607,-2.2 1.59696,-4 1.93532,-4 0.33837,0 5.15874,11.3625 10.71194,25.25 l 10.09672,25.25 -19.99411,0.27109 c -13.04,0.17681 -20.43952,-0.0986 -21.27474,-0.79173 -0.96977,-0.80484 -1.50254,-0.39712 -2.1948,1.67965 -0.62892,1.88676 -1.15667,2.35009 -1.69139,1.4849 z m 39.96825,-6.89391 c -3.86181,-10.28972 -15.09011,-37.24777 -15.51095,-37.24027 -0.47321,0.008 -13.32863,32.44857 -14.75762,37.24027 -0.4815,1.6146 0.69471,1.75 15.20174,1.75 14.55841,0 15.67495,-0.12968 15.06683,-1.75 z m -24.55719,-2.7877 c 0,-0.44632 3.69175,-10.14856 8.16651,-21.4623 l 0.98879,-2.5 1.43037,3.38389 c 1.25498,2.96895 1.24586,3.52075 -0.0744,4.5 -2.46105,1.82544 -7.59361,14.94336 -6.19482,15.83287 0.69581,0.44248 0.0503,0.75892 -1.56649,0.76793 -1.5125,0.008 -2.75,-0.22665 -2.75,-0.52239 z m 16.63617,-0.95656 c 0.31537,-0.82184 0.97625,-1.24528 1.46861,-0.94098 1.41193,0.87262 1.04399,2.43524 -0.5734,2.43524 -0.89208,0 -1.24351,-0.5866 -0.89521,-1.49426 z m -20.63617,-9.33907 c 0,-1.30208 -1.18877,-2.16804 -2.15579,-1.57039 -1.03422,0.63919 -0.14245,2.40372 1.21481,2.40372 0.51754,0 0.94098,-0.375 0.94098,-0.83333 z m 2,-6.66667 c 0,-0.825 -0.675,-1.5 -1.5,-1.5 -0.825,0 -1.5,0.675 -1.5,1.5 0,0.825 0.675,1.5 1.5,1.5 0.825,0 1.5,-0.675 1.5,-1.5 z m 4.68311,-13.6875 c -0.31922,-0.79773 -0.55618,-0.56078 -0.60416,0.60417 -0.0434,1.05416 0.19292,1.64479 0.52522,1.3125 0.33229,-0.3323 0.36781,-1.1948 0.0789,-1.91667 z m -14.88311,26.9875 c 0.93333,-0.93333 1.46667,-0.93333 2.4,0 0.93333,0.93333 0.66667,1.2 -1.2,1.2 -1.86667,0 -2.13333,-0.26667 -1.2,-1.2 z m 75.2,-1.21667 c 0,-0.87083 0.7125,-1.58333 1.58333,-1.58333 1.76593,0 1.45839,2.15276 -0.39583,2.77083 -0.65313,0.21771 -1.1875,-0.31666 -1.1875,-1.1875 z m 36.5,0.41667 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 0.0643,-26.29313 c 0.37553,-0.98622 0.93469,-1.54122 1.24258,-1.23333 0.30789,0.30789 6.4e-4,1.11479 -0.68278,1.79313 -0.98762,0.98026 -1.10248,0.8654 -0.5598,-0.5598 z m 110.9357,-16.70687 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -0.5,-29 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 5,152.87756 c 0,-3.60707 -0.19345,-3.9619 -1.54733,-2.83828 -1.24327,1.03183 -1.2924,1.46387 -0.25,2.19858 1.05866,0.74618 1.05969,1.01027 0.006,1.43552 -0.99191,0.40016 -1.02152,0.8467 -0.12755,1.92387 1.72356,2.07725 1.91888,1.80047 1.91888,-2.71969 z M 58.142883,656.19048 c 0,-1.19166 -0.12734,-1.97916 -0.28297,-1.75 -0.15563,0.22917 -0.88573,1.20417 -1.62244,2.16667 -1.14658,1.49798 -1.10583,1.75 0.28297,1.75 0.99737,0 1.62244,-0.83473 1.62244,-2.16667 z m 75.809627,-29.58333 c -0.18536,-0.9625 -0.99969,-1.75 -1.80963,-1.75 -0.80994,0 -1.62427,0.7875 -1.80963,1.75 -0.23646,1.22785 0.30348,1.75 1.80963,1.75 1.50615,0 2.04609,-0.52215 1.80963,-1.75 z m -75.809627,-6.83333 c 0,-3.13272 -2.34847,-2.78984 -2.81955,0.41166 -0.21221,1.44221 0.20766,2.17167 1.25,2.17167 1.02102,0 1.56955,-0.90283 1.56955,-2.58333 z m -1,-23.41667 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 3,-10 c 0,-0.55 -0.45,-1 -1,-1 -0.55,0 -1,0.45 -1,1 0,0.55 0.45,1 1,1 0.55,0 1,-0.45 1,-1 z m 21,0.0936 c 0,-0.49851 -0.9,-0.67103 -2,-0.38337 -1.1,0.28766 -2,0.69553 -2,0.90638 0,0.21085 0.9,0.38337 2,0.38337 1.1,0 2,-0.40787 2,-0.90638 z m 163.999997,-4.0936 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m -187.078947,-27.25 c -0.0755,-4.06645 -0.1228,-4.12981 -1.09433,-1.46701 -0.55846,1.53064 -0.76205,3.44314 -0.45243,4.25 1.01473,2.64434 1.62711,1.54252 1.54676,-2.78299 z M 356.14288,541.29813 c 0,-1.13246 -0.45,-1.7809 -1,-1.44098 -0.55,0.33992 -1,1.26648 -1,2.05902 0,0.79254 0.45,1.44098 1,1.44098 0.55,0 1,-0.92656 1,-2.05902 z m -173.5,0.059 c 0.33992,-0.55 0.14148,-1 -0.44098,-1 -0.58246,0 -1.05902,0.45 -1.05902,1 0,0.55 0.19844,1 0.44098,1 0.24254,0 0.7191,-0.45 1.05902,-1 z m 148.86163,-32.5 c -0.31659,-0.825 -0.75246,-1.5 -0.96862,-1.5 -0.21615,0 -0.39301,0.675 -0.39301,1.5 0,0.825 0.43588,1.5 0.96862,1.5 0.53273,0 0.70959,-0.675 0.39301,-1.5 z m -208.36163,-10.5 c 0,-0.55 -0.19844,-1 -0.44098,-1 -0.24254,0 -0.7191,0.45 -1.05902,1 -0.33992,0.55 -0.14148,1 0.44098,1 0.58246,0 1.05902,-0.45 1.05902,-1 z m 574.08378,190.91476 c -4.07892,-1.05262 -7.67892,-2.20237 -8,-2.55499 -0.32108,-0.35262 0.76622,-0.3128 2.41622,0.0885 16.69166,4.05949 31.62737,2.36087 48,-5.45897 21.84604,-10.43403 35.08168,-33.15635 35.64702,-61.19713 l 0.14702,-7.29216 0.70771,6 c 1.74253,14.77342 -2.72194,33.30745 -10.93712,45.40482 -8.52994,12.5609 -20.35991,20.50959 -36.68913,24.65183 -11.58355,2.93842 -20.88072,3.04481 -31.29172,0.35811 z m 492.70554,-10.05986 -2.6948,-7.19276 4.3181,4.90717 c 3.2946,3.74406 4.0217,5.14697 3.0678,5.91892 -0.6877,0.55648 -1.4182,1.58499 -1.6233,2.2856 -0.2051,0.7006 -1.5857,-1.96291 -3.0678,-5.91893 z m -154.5734,2.90521 c -0.9771,-1.17734 -0.8768,-2.41653 0.4951,-6.11824 l 1.7204,-4.64187 h 34.6773 c 26.8191,0 34.7861,0.28326 35.1576,1.25 0.3794,0.98768 -6.3463,1.19183 -32.0497,0.97283 -32.4197,-0.27624 -32.5379,-0.26965 -34.8951,1.9449 -1.3009,1.22214 -2.7062,3.53757 -3.1228,5.14541 -0.6416,2.47569 -0.9452,2.69726 -1.9828,1.44697 z m -370.9327,-5.63081 -2.21679,-6.17016 3.9488,3.17334 c 3.21679,2.58509 3.68971,3.37671 2.55114,4.27043 -0.76871,0.6034 -1.54811,1.95197 -1.73201,2.99682 -0.20347,1.15603 -1.20218,-0.51575 -2.55114,-4.27043 z m -433.78322,-0.59319 c -2.64435,-1.21082 -0.0568,-1.3833 21.82692,-1.45489 l 24.82693,-0.0812 2.98534,-2.98534 2.98534,-2.98534 -0.31226,3.21253 c -0.51548,5.3031 -2.57333,5.73245 -27.31227,5.6983 -16.48031,-0.0227 -22.75269,-0.37501 -25,-1.40404 z m 277.34527,-1.56289 c -1.5325,-0.89462 -1.52147,-1.3171 0.14941,-5.7196 l 1.80414,-4.75362 34.28724,-0.26335 c 22.17993,-0.17035 34.64507,0.0945 35.30059,0.75 0.68447,0.68447 -9.55526,1.01335 -31.55029,1.01335 h -32.56363 l -2.63637,2.63636 c -2.34367,2.34367 -3.13066,4.23307 -2.75478,6.61364 0.1476,0.93483 0.006,0.91562 -2.03631,-0.27678 z m -41.59527,-0.6915 c -0.98528,-0.35343 -1.25,-16.73753 -1.25,-77.36505 v -76.91667 h 4.44098 c 2.44254,0 4.7191,0.45 5.05902,1 0.35052,0.56716 -0.48962,1 -1.94098,1 -1.40746,0 -3.45902,0.9 -4.55902,2 -1.96368,1.96368 -2,3.33333 -2,75.42668 0,69.13139 0.10237,73.44696 1.75,73.77346 0.9625,0.19073 1.3,0.613 0.75,0.93838 -0.55,0.32537 -1.5625,0.38981 -2.25,0.1432 z m 956.75002,-33.28172 v -32 h 19.8508 c 20.5255,0 25.396,-0.72409 27.1703,-4.03944 0.5384,-1.00599 1.0238,-8.04616 1.0786,-15.64482 0.061,-8.47318 0.4093,-12.84899 0.9003,-11.31574 0.4404,1.375 0.8455,8.25795 0.9003,15.29545 0.096,12.316 0.01,12.88743 -2.3548,15.25 -2.4428,2.4428 -2.5506,2.45455 -22.5,2.45455 -18.8091,0 -20.1707,0.12518 -22.0749,2.02944 -1.9595,1.95949 -2.0199,3.0281 -1.75,31.00059 0.1537,15.93414 -0.058,28.97089 -0.4706,28.97056 -0.4125,-3.2e-4 -0.75,-14.40059 -0.75,-32.00059 z M 66.809553,670.69048 c -0.36667,-0.36666 -0.66667,-17.69166 -0.66667,-38.5 v -37.83333 h 23.17126 c 20.172737,0 23.408287,-0.21451 25.002927,-1.65764 1.75415,-1.58749 1.78509,-1.524 0.73092,1.5 l -1.10076,3.15764 H 92.545053 c -20.15707,0 -21.51998,0.11781 -23.42722,2.02505 -1.9672,1.9672 -2.01718,3.0241 -1.75,37.00043 0.15128,19.23647 0.23755,34.9752 0.19172,34.97496 -0.0458,-2.4e-4 -0.38334,-0.30044 -0.75,-0.66711 z m 35.083327,-5.09888 c -5.594837,-1.21838 0.84137,-1.99228 20.85904,-2.5081 21.88343,-0.5639 22.68837,-0.65711 25.08099,-2.90447 1.95587,-1.83713 2.39774,-3.10052 2.11649,-6.05143 -0.19551,-2.05126 0.10554,-3.90708 0.669,-4.12405 0.63711,-0.24534 0.89835,1.37593 0.6909,4.28774 -0.24182,3.39432 0.11015,5.05051 1.2796,6.02106 1.43301,1.18929 1.18718,1.52953 -2.20127,3.04658 -3.08819,1.38263 -7.90123,1.79402 -25.27959,2.16077 -11.80584,0.24915 -22.25266,0.2815 -23.21516,0.0719 z m 88.75,-0.23445 c -16.68424,-0.27807 -30.97404,-0.94386 -32.19449,-1.5 -1.49984,-0.68346 7.99632,-0.89346 30,-0.66341 17.70697,0.18513 32.35386,0.4945 32.54866,0.6875 1.63763,1.62257 -4.2827,1.91043 -30.35417,1.47591 z m 63.7,-17.2 c -0.87176,-0.87176 -1.2,-8.30824 -1.2,-27.18709 v -25.98709 l 2.97988,2.85491 2.97988,2.8549 -2.22988,1.11099 c -2.1915,1.09187 -2.23452,1.48695 -2.49973,22.95581 -0.18864,15.27107 0.0739,22.25901 0.87245,23.22119 1.405,1.69292 0.74325,1.82223 -0.9026,0.17638 z m 686.3644,-2.33874 c -3.2647,-0.82457 -6.0399,-1.60318 -6.1673,-1.73024 -0.1274,-0.12706 5.3918,-0.0713 12.265,0.12399 11.4861,0.32631 13.0764,0.14305 19.6672,-2.26631 13.4659,-4.9226 24.2632,-15.15901 30.6825,-29.0887 1.852,-4.01865 2.4257,-7.45338 2.92302,-17.5 l 0.6188,-12.5 0.8547,6.89021 c 2.4756,19.95667 -4.67272,37.16088 -20.00532,48.14775 -3.8668,2.77088 -9.4769,5.85069 -12.4668,6.84403 -7.4076,2.46104 -20.8732,2.97327 -28.3718,1.07927 z m -810.93869,-4.74568 c -1.08495,-0.79333 -1.48685,-1.91386 -1.07315,-2.99196 0.5982,-1.55887 2.75409,-1.72362 22.55443,-1.72362 20.8139,0 21.89301,0.0933 21.89301,1.89301 0,1.04116 -0.675,2.15203 -1.5,2.46862 -0.825,0.31658 -1.5,0.13972 -1.5,-0.39301 0,-0.58828 -6.93881,-0.96862 -17.67126,-0.96862 -14.26216,0 -17.9893,0.28783 -19.31986,1.49196 -1.35091,1.22256 -1.96182,1.26294 -3.38317,0.22362 z m 797.81542,-0.27075 c -1.83031,-1.46637 -1.7984,-1.48719 0.55887,-0.36454 3.061,1.45781 3.6283,1.91971 2.3578,1.91971 -0.5365,0 -1.849,-0.69982 -2.91667,-1.55517 z m 3.62017,-3.51473 c -12.59154,-5.82395 -19.83488,-13.1679 -26.24731,-26.61182 -2.01702,-4.22877 -2.29875,-6.34764 -2.30273,-17.31828 -0.004,-11.604 0.19093,-12.89424 2.72224,-18 6.41386,-12.93699 12.59475,-19.27913 24.5362,-25.17631 6.5797,-3.24933 7.0211,-3.32369 19.7303,-3.32369 h 13 l 7.2382,3.86767 c 10.2697,5.48751 17.0139,12.35918 22.0809,22.49813 l 4.1809,8.36579 v 11.6871 c 0,11.58552 -0.035,11.75885 -3.9914,19.94084 -5.307,10.97416 -12.1749,17.84207 -23.1491,23.14906 -8.1937,3.96242 -8.3376,3.99108 -19.8066,3.94552 -10.6587,-0.0423 -12.0513,-0.27641 -17.9916,-3.02401 z m 15.4387,-2.9301 c 1.0029,-3.1598 10.5,-2.61079 10.5,0.60699 0,1.87603 2.9142,1.78027 3.6433,-0.11972 0.3192,-0.83201 0.069,-2.12946 -0.5569,-2.88322 -0.877,-1.05664 -0.7574,-1.51634 0.5223,-2.0074 2.0695,-0.79411 8.3913,0.32334 8.3913,1.48326 0,0.47152 0.7127,0.58382 1.5838,0.24954 1.1413,-0.43793 1.2511,-0.81345 0.393,-1.34377 -0.7178,-0.44366 -0.9143,-1.60738 -0.4945,-2.92985 0.6642,-2.09288 0.7612,-2.11014 2.107,-0.37485 1.2968,1.67222 1.5136,1.6872 2.6856,0.18569 0.7012,-0.89833 2.1265,-1.79833 3.1672,-2 1.0407,-0.20167 2.0952,-0.97639 2.3433,-1.72161 0.3219,-0.96653 -0.1319,-1.16987 -1.5829,-0.70932 -3.1307,0.99362 -3.4294,-0.87662 -0.5656,-3.54038 1.4164,-1.31745 2.9767,-3.43494 3.4673,-4.70553 1.1235,-2.90945 2.8844,-1.9367 2.9312,1.61919 l 0.035,2.69098 1.3768,-2.48745 c 0.7573,-1.3681 1.1648,-2.8306 0.9055,-3.25 -0.2592,-0.4194 -0.043,-0.76255 0.4808,-0.76255 2.1058,0 2.2604,-3.50515 0.2272,-5.15154 -2.4825,-2.01017 -2.6116,-2.84846 -0.4388,-2.84846 1.1827,0 1.3423,-0.33884 0.5887,-1.25 -0.5686,-0.6875 -0.7989,-2.47338 -0.5119,-3.96862 0.3931,-2.04744 1.0501,-2.66464 2.6614,-2.5 2.0007,0.20444 2.1277,-0.19304 1.9586,-6.12984 -0.2207,-7.74947 -0.9016,-9.96912 -2.552,-8.31876 -0.642,0.64197 -1.8523,1.16722 -2.6897,1.16722 -1.0636,0 -0.8526,-0.46925 0.7,-1.5567 2.2582,-1.58173 3.0455,-4.4433 1.2225,-4.4433 -0.55,0 -1,0.45 -1,1 0,0.55 -0.675,1 -1.5,1 -0.825,0 -1.5,-0.81 -1.5,-1.8 0,-0.99 -0.45,-2.34 -1,-3 -0.7273,-0.87273 -0.6727,-0.92727 0.2,-0.2 0.66,0.55 1.9959,1 2.9686,1 2.3957,0 1.5032,-2.08692 -3.9749,-9.29428 -13.9952,-18.41283 -41.0859,-22.20433 -59.84821,-8.37609 -6.99405,5.15476 -10.38321,9.41727 -14.65065,18.42596 -2.9652,6.25964 -3.19414,7.49912 -3.18513,17.24441 0.009,10.06565 0.16205,10.81025 3.69238,18 3.86543,7.87222 4.63496,8.96582 9.12928,12.9738 2.35847,2.10325 2.92727,2.25304 3.79743,1 0.77813,-1.12052 1.14554,-1.17267 1.53274,-0.21757 0.2801,0.69093 0.92085,1.00187 1.42387,0.69098 0.50302,-0.31088 0.91459,0.13631 0.91459,0.99377 0,0.89235 0.85524,1.55902 2,1.55902 1.1,0 2,0.45 2,1 0,0.55 -0.765,1 -1.7,1 -2.6466,0 -0.35438,1.67037 4.6328,3.37601 4.956,1.69495 6.4264,1.33115 5.5668,-1.37729 -0.4638,-1.4614 -0.168,-1.72477 1.4593,-1.29921 1.3346,0.34899 2.0411,1.35877 2.0411,2.91712 0,3.00867 3.5702,3.31283 4.5,0.38337 z m -12.5,-3.03138 c 0,-0.53274 0.675,-0.96862 1.5,-0.96862 0.825,0 1.5,0.17686 1.5,0.39301 0,0.21616 -0.675,0.65203 -1.5,0.96862 -0.825,0.31658 -1.5,0.13972 -1.5,-0.39301 z m 1.5,-7.38301 c -2.75,-1.26456 -7.025,-4.20198 -9.5,-6.52762 l -4.5,-4.22843 4.5,3.46464 c 9.0307,6.95292 12.5293,8.20027 23,8.20027 10.6766,0 14.6575,-1.47993 22.1227,-8.22433 11.7301,-10.5974 13.208,-30.7221 3.2281,-43.95554 -2.7803,-3.68669 -3.0085,-4.2429 -0.9738,-2.37425 1.4614,1.34219 3.9995,5.12657 5.6401,8.40972 2.623,5.24916 2.9829,7.01669 2.9829,14.64993 0,7.66733 -0.3544,9.38979 -3.0363,14.75669 -3.6131,7.23046 -9.2249,12.58437 -16.6172,15.8536 -7.4868,3.31103 -19.6166,3.29988 -26.8465,-0.0247 z m -16.5,-14.08561 c -0.71755,-0.86459 -0.81474,-1.5 -0.22943,-1.5 0.5585,0 1.27447,0.675 1.59106,1.5 0.31658,0.825 0.41982,1.5 0.22943,1.5 -0.19039,0 -0.90637,-0.675 -1.59106,-1.5 z m -4.39301,-7.08179 c -0.33385,-0.86998 -0.60699,-5.14025 -0.60699,-9.48948 0,-14.25808 6.99451,-26.22935 18.7319,-32.0601 4.1953,-2.08409 6.171,-2.36863 16.4462,-2.36863 10.234,0 12.0193,0.25486 14.437,2.06085 4.5123,3.37075 3.822,4.38843 -1.2389,1.82628 -3.8914,-1.9701 -6.2299,-2.38713 -13.386,-2.38713 -7.6564,0 -9.3816,0.35519 -14.7469,3.03628 -7.19546,3.59562 -12.53346,9.17154 -15.97341,16.68537 -2.237,4.88627 -2.45708,6.45286 -2.08894,14.87001 0.38538,8.81135 -0.15842,11.51539 -1.57396,7.82655 z m 73.39301,-13.97723 c 0,-0.85746 0.4573,-1.27636 1.0163,-0.9309 0.559,0.34546 0.7574,1.04702 0.441,1.55902 -0.8572,1.38704 -1.4573,1.12841 -1.4573,-0.62812 z m 288.10042,41.26354 c -1.2649,-2.10631 -1.2436,-2.12762 0.4783,-0.47833 0.9912,0.94941 1.587,1.94144 1.3239,2.20452 -0.2631,0.26308 -1.0741,-0.5137 -1.8022,-1.72619 z m -45.0215,-3.28785 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m -1,-4 c 0.048,-1.16495 0.285,-1.4019 0.6042,-0.60417 0.2889,0.72187 0.2534,1.58437 -0.079,1.91667 -0.3323,0.33229 -0.5687,-0.25834 -0.5253,-1.3125 z m -588.81153,-3.47117 c -1.38112,-3.71286 -1.28728,-4.19386 0.59165,-3.03262 0.71607,0.44256 1.15269,2.05012 0.97104,3.57518 l -0.33008,2.77105 z m 20.81156,0.47117 c 0.048,-1.16495 0.28494,-1.4019 0.60416,-0.60417 0.28887,0.72187 0.25335,1.58437 -0.0789,1.91667 -0.33229,0.33229 -0.56864,-0.25834 -0.52522,-1.3125 z m 596.92107,0.58333 c -0.825,-0.53316 -1.05,-0.96937 -0.5,-0.96937 0.55,0 1.675,0.43621 2.5,0.96937 0.825,0.53316 1.05,0.96937 0.5,0.96937 -0.55,0 -1.675,-0.43621 -2.5,-0.96937 z m -29.8051,-3.5 c 0.02,-1.65 0.2445,-2.20394 0.4981,-1.23097 0.2535,0.97297 0.2369,2.32297 -0.037,3 -0.2739,0.67703 -0.4813,-0.11903 -0.461,-1.76903 z m 22.3051,1.03611 c -1.65,-0.75552 -2.325,-1.38992 -1.5,-1.40979 0.825,-0.0199 2.85,0.58204 4.5,1.33757 1.65,0.75552 2.325,1.38992 1.5,1.40979 -0.825,0.0199 -2.85,-0.58204 -4.5,-1.33757 z m -23.9036,-14.97452 c -3.1876,-36.73091 11.5571,-81.60639 32.0015,-97.39661 3.1024,-2.39614 5.1143,-3.16498 8.2821,-3.16498 3.9817,0 11.12,2.2366 11.12,3.48416 0,0.32241 -0.8704,0.12037 -1.9343,-0.44898 -12.3609,-6.61539 -32.4783,16.77208 -42.0378,48.87126 -3.9353,13.21392 -5.284,22.44784 -5.9291,40.59356 l -0.6399,18 z m -453.43853,6.43841 c 0,-1.375 0.22698,-1.9375 0.50439,-1.25 0.27741,0.6875 0.27741,1.8125 0,2.5 -0.27741,0.6875 -0.50439,0.125 -0.50439,-1.25 z m -555.31489,-4.28571 c -1.51489,-4.0874 -1.50174,-4.28572 0.2843,-4.28572 1.53896,0 1.8727,0.76378 1.8727,4.28572 0,2.35714 -0.12794,4.28571 -0.2843,4.28571 -0.15637,0 -0.99908,-1.92857 -1.8727,-4.28571 z m 936.89542,-9.94061 -1.7615,-4.17564 2.0773,2.22977 c 1.1426,1.22638 1.9353,3.10541 1.7616,4.17564 -0.23,1.4173 -0.7943,0.81161 -2.0774,-2.22977 z m -824.6001,-4.10701 c -0.8376,-1.00925 -0.74583,-1.33334 0.37756,-1.33334 0.81626,0 1.48412,0.6 1.48412,1.33334 0,0.73333 -0.1699,1.33333 -0.37756,1.33333 -0.20765,0 -0.87551,-0.6 -1.48412,-1.33333 z M 117.38072,576.35715 c 0.12012,-8.65771 0.24595,-9.65355 0.50912,-4.02919 0.19227,4.10895 0.78929,7.74258 1.32673,8.07473 0.60636,0.37475 0.41317,1.90368 -0.50913,4.02919 -1.41869,3.26951 -1.47902,2.90232 -1.32672,-8.07473 z m 1195.76218,7 c -1.2255,-0.79197 -1.1085,-0.97218 0.6392,-0.98469 1.1766,-0.008 3.0973,-0.80281 4.2682,-1.76531 2.1207,-1.7432 3.1833,-5.74746 17.1777,-64.72857 1.6937,-7.13821 3.2929,-13.32406 3.5539,-13.74633 0.261,-0.42227 1.8838,-0.039 3.6064,0.85179 l 3.1319,1.61956 -2.6077,1.36626 c -1.4378,0.75334 -3.0795,2.82897 -3.6596,4.62677 -1.0716,3.3211 -6.0477,23.74225 -13.2093,54.20814 -2.1911,9.32119 -4.4702,17.53369 -5.0647,18.25 -1.2648,1.52399 -5.6819,1.69444 -7.836,0.30238 z m 110.2331,-41.75 0.2669,-25.75 15.1066,-0.27527 c 12.5544,-0.22877 15.3204,-0.0176 16.3724,1.25 1.1244,1.35478 -0.3127,1.52527 -12.8566,1.52527 -19.4518,0 -18.1224,-1.85588 -18.1224,25.3 0,15.23333 0.3418,21.64178 1.2,22.5 0.9333,0.93333 0.8185,1.2 -0.5169,1.2 -1.585,0 -1.6964,-1.97845 -1.45,-25.75 z m -928.11626,23.84339 c -1.0175,-0.64442 -0.55521,-1.05784 1.74876,-1.56387 6.15821,-1.35257 6.13438,-1.18845 6.13438,-42.25203 0,-35.44446 -0.0945,-37.37203 -1.92268,-39.20017 -1.55826,-1.55826 -1.65303,-2.02616 -0.5,-2.46862 0.8119,-0.31155 1.42268,0.0539 1.42268,0.85126 0,2.55579 2.78424,4.23705 11.53496,6.96539 4.76844,1.48672 8.469,2.90403 8.22346,3.14957 -0.24554,0.24554 -2.37321,-0.23337 -4.72816,-1.06424 -5.63941,-1.9897 -8.36232,-1.90623 -10.37527,0.31806 -1.47088,1.6253 -1.65499,5.56734 -1.65499,35.4349 0,32.92864 -0.43028,38.11798 -3.31256,39.9507 -1.59656,1.01518 -4.87188,0.95489 -6.57058,-0.12095 z m 982.45486,0.0227 c -0.3004,-0.48617 0.7396,-1.41659 2.3113,-2.06759 1.5717,-0.65101 3.3659,-2.29941 3.9873,-3.66311 0.7688,-1.68729 1.1618,-14.36562 1.2302,-39.68241 0.069,-25.46212 0.3954,-35.94217 1.0352,-33.20795 0.5179,2.21297 0.8076,19.8978 0.6496,39.64622 -0.2675,33.43112 -0.4039,35.78222 -2.1903,37.75499 -1.9289,2.13018 -6.0214,2.84098 -7.0233,1.21985 z m -723.57172,-7.11609 c -1.17173,-0.75723 -0.9067,-0.97273 1.21104,-0.98469 1.49108,-0.008 3.62858,-1.00016 4.75,-2.20387 1.85492,-1.99101 2.04183,-3.50294 2.07076,-16.75 0.0291,-13.32974 0.16244,-14.39227 1.57621,-12.56144 2.30461,2.98446 4.70794,7.8133 3.52476,7.08206 -1.99124,-1.23066 -3.13277,3.37137 -3.13277,12.62969 0,10.65468 -1.32541,13.79842 -5.8067,13.77294 -1.48132,-0.008 -3.3683,-0.45153 -4.1933,-0.98469 z m -687.999997,-32 v -27 h 16.96482 c 16.58348,0 16.990827,0.0506 18.122397,2.25 0.95532,1.85685 0.92652,2.03158 -0.16481,1 -0.93106,-0.88007 -5.554357,-1.25 -15.622407,-1.25 -19.74395,0 -18.3,-2.11463 -18.3,26.8 0,16.4 0.33684,23.13684 1.2,24 0.93333,0.93333 0.82222,1.2 -0.5,1.2 -1.55802,0 -1.7,-2.2549 -1.7,-27 z m 57.260107,24.18192 c -0.8316,-0.52815 -0.12209,-1.19166 2.15462,-2.01492 1.86697,-0.67511 3.74929,-2.00137 4.18293,-2.94724 0.43363,-0.94587 1.03906,-7.37939 1.34538,-14.29672 l 0.55696,-12.57695 3.46431,1.41727 c 3.1856,1.30325 3.30628,1.50046 1.5,2.45128 -3.84057,2.02167 -4.46431,3.91281 -4.46431,13.53551 0,5.72984 0.37279,9.13749 0.95992,8.77462 0.56907,-0.3517 0.5294,0.64171 -0.0974,2.4398 -0.58153,1.66818 -1.4324,2.80125 -1.89082,2.51793 -0.45842,-0.28332 -1.11615,-0.0578 -1.46161,0.50119 -0.74192,1.20045 -4.48499,1.31917 -6.24997,0.19823 z m 579.48107,-18.51371 c -2.82384,-6.97901 2.35216,-21.9124 9.1567,-26.41821 3.90392,-2.58509 9.77499,-2.95593 12.66099,-0.79974 1.88368,1.40734 1.87649,1.434 -0.24281,0.90065 -3.2488,-0.81761 -8.91705,1.40393 -12.35562,4.8425 -4.44865,4.44865 -7.20675,10.50445 -7.88225,17.30659 -0.39961,4.02403 -0.83993,5.39674 -1.33701,4.16821 z m 144.92549,-0.33488 c -1.09421,-1.0942 -0.75998,-2 0.73799,-2 0.77256,0 1.17442,0.6 0.89301,1.33334 -0.58589,1.52679 -0.7172,1.58047 -1.631,0.66666 z m -708.00875,-7.7824 c -0.37092,-0.96661 -0.0755,-1.26467 0.88726,-0.89522 0.79383,0.30462 1.19436,0.95671 0.89006,1.44907 -0.76643,1.24011 -1.13272,1.12596 -1.77732,-0.55385 z m 182.34208,-8.55093 c -1.925,-1.05389 -3.14015,-1.93503 -2.70034,-1.95808 1.0597,-0.0556 6.70034,2.87723 6.70034,3.48376 0,0.65451 -0.0585,0.63219 -4,-1.52568 z m -10,-4 c -1.82797,-1.18132 -0.24909,-1.18132 2.5,0 1.31874,0.56668 1.48906,0.87816 0.5,0.9144 -0.825,0.0302 -2.175,-0.38124 -3,-0.9144 z m 415.87244,-3.75 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37755 1.66575,1.30636 2.19548,2.12755 1.37244,2.12755 -0.20765,0 -0.99515,-0.7875 -1.75,-1.75 z m 333.10858,-1.77289 c -1.0568,-1.27335 -0.9949,-1.41968 0.3776,-0.89301 0.9028,0.34643 1.6414,1.03173 1.6414,1.52289 0,1.28596 -0.5789,1.10536 -2.019,-0.62988 z m -200.94152,-1.79179 c -1.28645,-2.0659 -1.2564,-2.10515 0.54984,-0.71829 1.05087,0.80687 2.0531,1.54931 2.22719,1.64987 0.17409,0.10056 -0.0733,0.42378 -0.54985,0.71828 -0.47651,0.2945 -1.47874,-0.44794 -2.22718,-1.64986 z M 131.32786,484.60715 c 0.18889,-16.08233 0.58242,-14.2114 1.05215,5.00211 0.14458,5.91366 -0.0746,10.75116 -0.48713,10.75 -0.4125,-0.001 -0.66676,-7.08961 -0.56502,-15.75211 z m 402.68746,13 c -1.24387,-1.58606 -1.2085,-1.62143 0.37756,-0.37755 0.9625,0.75484 1.75,1.54234 1.75,1.75 0,0.82303 -0.82119,0.2933 -2.12756,-1.37245 z m 506.62758,-1.25 c -1.3187,-0.56668 -1.4891,-0.87816 -0.5,-0.9144 0.825,-0.0302 2.175,0.38124 3,0.9144 1.828,1.18132 0.2491,1.18132 -2.5,0 z M -10.292824,491.65028 c -0.542685,-1.4252 -0.427821,-1.54006 0.559795,-0.5598 0.683418,0.67834 0.990671,1.48524 0.682784,1.79313 -0.307887,0.30789 -0.867048,-0.24711 -1.242579,-1.23333 z m 365.435704,1.31386 c 0,-0.21616 0.675,-0.65203 1.5,-0.96862 0.825,-0.31658 1.5,-0.13972 1.5,0.39301 0,0.53274 -0.675,0.96862 -1.5,0.96862 -0.825,0 -1.5,-0.17686 -1.5,-0.39301 z M -26.857117,481.35715 c -0.825,-0.53316 -1.05,-0.96937 -0.5,-0.96937 0.55,0 1.675,0.43621 2.5,0.96937 0.825,0.53316 1.05,0.96937 0.5,0.96937 -0.55,0 -1.675,-0.43621 -2.5,-0.96937 z m -11,-4 c -1.827966,-1.18132 -0.249085,-1.18132 2.5,0 1.31874,0.56668 1.489055,0.87815 0.5,0.9144 -0.825,0.0302 -2.175,-0.38124 -3,-0.9144 z\"\n         id=\"path74\"\n         inkscape:connector-curvature=\"0\" />\n      <path\n         style=\"fill:#333333;fill-opacity:1\"\n         d=\"m 1001.4231,711.62088 c 2.6291,-0.20668 6.6791,-0.20418 9,0.006 2.3209,0.20972 0.1698,0.37882 -4.7802,0.37577 -4.95,-0.003 -6.84892,-0.17464 -4.2198,-0.38131 z m 264.7198,-1.94587 c -29.7282,-3.0753 -56.214,-17.16169 -74.9007,-39.83567 -19.1149,-23.19365 -28.2746,-49.14173 -28.283,-80.12211 -0.01,-22.03856 3.5177,-37.1289 13.277,-56.86008 14.5133,-29.34278 40.7517,-51.00983 71.7009,-59.20889 14.0655,-3.72624 33.7529,-4.2788 48.0157,-1.34762 5.6705,1.16534 13.2615,3.22978 16.8691,4.58765 l 6.5591,2.46886 h 79.681 c 60.6407,0 79.9676,0.28675 80.8809,1.2 0.8903,0.89034 1.2,10.80405 1.2,38.41821 0,20.47002 -0.2731,37.93002 -0.607,38.8 -0.3851,1.00362 -1.8226,1.58179 -3.9326,1.58179 -3.7118,0 -3.4256,0.54892 -5.9949,-11.5 -2.0489,-9.60833 -6.6186,-22.86768 -10.605,-30.7715 l -2.911,-5.77151 -19.2248,0.27151 -19.2247,0.2715 -0.2649,29.75 -0.2649,29.75 h 23.3925 c 18.7213,0 23.6222,0.27684 24.543,1.38638 0.7802,0.9401 1.0611,6.01013 0.8724,15.75 l -0.2781,14.36362 -24,0.5 -24,0.5 v 36.5 36.5 l 25.5816,0.26654 25.5816,0.26654 3.5814,-7.34099 c 4.0551,-8.31206 8.2149,-21.01206 10.6268,-32.44335 l 1.6348,-7.74874 h 3.4969 3.4969 l 0.2636,39 c 0.2419,35.77651 0.1227,39.10332 -1.4411,40.25 -1.3233,0.97026 -16.5281,1.25 -67.9422,1.25 -58.8825,0 -66.4119,-0.17449 -67.8089,-1.57143 -1.4077,-1.40778 -1.5714,-12.06467 -1.5714,-102.33048 V 505.69619 l -4.25,-3.03549 c -6.0629,-4.3303 -12.8572,-7.60657 -13.7587,-6.63457 -0.424,0.45706 -1.7591,5.10602 -2.967,10.33102 -1.2078,5.225 -4.3743,18.5 -7.0365,29.5 -2.6622,11 -5.7964,24.05 -6.9647,29 -2.9228,12.38268 -2.9015,12.32663 -4.9334,12.97152 -4.1564,1.3192 -4.7583,-0.0397 -5.4352,-12.27055 -0.8464,-15.29425 -2.1352,-22.89494 -5.5894,-32.96218 -5.1765,-15.08685 -14.146,-26.685 -24.5877,-31.79366 -7.6906,-3.76264 -11.5112,-4.09126 -16.9509,-1.45795 -14.7981,7.16361 -29.3926,33.2367 -35.7179,63.80999 -1.8315,8.85255 -2.2148,13.98751 -2.2174,29.70283 0,11.18658 0.5048,21.4674 1.232,25 3.5926,17.45103 9.475,33.72144 16.3363,45.18558 4.2874,7.16348 14.225,17.34013 19.2506,19.71358 3.0106,1.42181 5.435,1.73756 10.5379,1.37244 11.8639,-0.84885 11.052,1.2976 11.052,-29.21789 v -26.37592 l -2.9238,-2.46021 c -5.1413,-4.32611 -15.6593,-9.64627 -25.493,-12.89476 -10.0183,-3.30946 -11.7062,-4.85598 -9.5984,-8.79445 1.0842,-2.02582 1.6089,-2.04446 50.3054,-1.78777 l 49.2098,0.2594 0.262,48.5 c 0.2995,55.44541 1.1036,50.98776 -9.2031,51.01746 -5.6967,0.0164 -15.9672,1.4468 -28.5589,3.9774 -14.8285,2.98016 -30.627,4.29261 -40,3.323 z m 22.5,-3.85681 c 3.85,-0.34113 9.025,-1.06799 11.5,-1.61526 7.5601,-1.67166 26.1912,-4.64499 33.8101,-5.39573 l 7.2066,-0.71013 -0.037,-46.36996 -0.037,-46.36997 h -47.5545 c -33.8782,0 -47.4501,0.3135 -47.1912,1.09007 0.1998,0.59954 4.1748,2.32382 8.8333,3.83173 10.2311,3.31172 15.481,5.91241 23.72,11.75054 l 6.25,4.42871 v 28.5005 28.5005 l -3.75,1.58492 c -6.2919,2.65922 -16.1364,2.89924 -21.5053,0.52431 -10.2568,-4.5371 -23.7361,-21.55638 -29.6693,-37.46128 -0.5643,-1.5125 -1.5136,-2.75 -2.1097,-2.75 -0.596,0 -0.8163,-0.43273 -0.4894,-0.96163 0.3269,-0.5289 -0.5578,-4.9164 -1.966,-9.75 -7.2822,-24.99641 -7.4135,-56.03953 -0.3503,-82.78837 1.1619,-4.4 2.1637,-8.9 2.2262,-10 0.063,-1.1 0.6763,-2.35986 1.3638,-2.79969 0.6875,-0.43983 1.25,-1.27352 1.25,-1.85265 0,-2.10954 7.7459,-17.50343 11.7482,-23.34766 2.2598,-3.3 5.6491,-7.48595 7.5317,-9.30211 2.5622,-2.47182 3.3052,-3.9176 2.9549,-5.75 -0.3322,-1.73629 -0.023,-2.44789 1.065,-2.44789 0.8433,0 1.6832,0.44929 1.8666,0.99843 0.3887,1.1644 8.8333,-2.75796 8.8333,-4.10293 0,-0.49253 0.7016,-0.8955 1.559,-0.8955 0.8575,0 1.3178,0.39025 1.0231,0.86723 -0.2948,0.47698 1.5695,1.15583 4.1429,1.50855 9.7816,1.34073 18.9441,7.8971 26.4783,18.94716 8.2892,12.15717 12.9989,28.75637 14.3319,50.5122 0.382,6.23433 1.0248,10.95933 1.4284,10.5 1.2275,-1.39687 10.2645,-40.35475 9.7858,-42.18558 -0.2458,-0.93974 0.051,-2.17354 0.6592,-2.74179 0.6083,-0.56825 3.0961,-9.55496 5.5284,-19.97047 2.4324,-10.41552 4.5615,-19.11971 4.7314,-19.34266 0.6062,-0.79528 13.8492,6.4721 18.5481,10.17861 l 4.7835,3.77326 4e-4,101.22674 4e-4,101.22675 49.7496,-0.21497 c 27.3623,-0.11823 57.2871,-0.23073 66.4996,-0.25 l 16.75,-0.035 v -37.08333 c 0,-27.94456 -0.2894,-36.98688 -1.1741,-36.69195 -0.6458,0.21526 -1.7594,3.29026 -2.4746,6.83333 -2.0301,10.05752 -6.1665,22.62906 -10.5921,32.19195 l -4.0493,8.75 h -28.3549 -28.355 v -40 -40 h 24.5 24.5 v -13 -13 h -24.5 -24.5 v -33 -33 h 21.9832 21.9831 l 2.6258,5.18177 c 4.5439,8.96696 9.1304,21.94437 11.5156,32.58338 2.4232,10.80857 4.4248,12.99056 4.2715,4.65657 -0.05,-2.70695 -0.1555,-19.20922 -0.2349,-36.67172 l -0.1443,-31.75 h -79.3104 -79.3104 l -6.1247,-2.40027 c -13.2438,-5.1902 -18.6502,-6.07357 -37.2545,-6.08705 -15.2025,-0.011 -18.6159,0.29117 -26,2.30167 -30.2183,8.22775 -55.3349,28.78168 -69.8801,57.18565 -13.9814,27.30302 -17.2954,57.341 -9.651,87.47621 9.6694,38.118 37.8263,68.93516 73.9424,80.92853 10.6205,3.52685 26.3072,5.73842 35.0887,4.94694 1.65,-0.14872 6.15,-0.5495 10,-0.89063 z m -51.3233,-193.10387 c 0.3693,-1.87666 3.4169,-4.0969 4.3469,-3.16687 0.7127,0.7127 -2.5405,4.80969 -3.8192,4.80969 -0.4681,0 -0.7056,-0.73927 -0.5277,-1.64282 z m 47.3334,-16.37349 c 0.3454,-0.55897 1.047,-0.75742 1.559,-0.44099 1.387,0.85724 1.1284,1.4573 -0.6281,1.4573 -0.8575,0 -1.2764,-0.45734 -0.9309,-1.01631 z m -6.0101,-2.98369 c -0.3399,-0.55 -0.1415,-1 0.441,-1 0.5824,0 1.059,0.45 1.059,1 0,0.55 -0.1984,1 -0.441,1 -0.2425,0 -0.7191,-0.45 -1.059,-1 z M 766.40663,707.63957 c 1.52006,-0.22986 3.77006,-0.22371 5,0.0136 1.22994,0.23736 -0.0137,0.42542 -2.76375,0.41792 -2.75,-0.008 -3.75631,-0.20172 -2.23625,-0.43157 z m 226.16135,-1.61697 c -0.7053,-1.83808 -0.9083,-1.21765 7.57762,-23.16545 3.4024,-8.8 7.9012,-20.5 9.9973,-26 2.0961,-5.5 6.5536,-17.0875 9.9056,-25.75 15.2731,-39.47074 26.1298,-67.64229 32.0827,-83.25 2.0978,-5.5 6.711,-17.48644 10.2517,-26.63652 l 6.4376,-16.63653 -6.0888,-3.50867 c -9.3449,-5.38499 -12.4115,-6.79674 -21.0769,-9.70288 -6.4971,-2.17894 -8.0737,-3.10656 -8.3387,-4.90622 -0.7472,-5.07466 -0.4937,-5.11033 36.1992,-5.09387 18.7702,0.008 34.6057,0.34592 35.19,0.75 1.2337,0.85323 -2.4088,-8.04243 66.2256,161.73469 10.4501,25.85 19.9694,49.22487 21.1538,51.94416 1.1845,2.71928 2.0196,6.09428 1.8559,7.5 l -0.2977,2.55584 h -56.5 -56.5 v -3.90894 -3.90895 l 6.5,-1.81423 c 6.3566,-1.77422 22.5775,-9.35769 26.4488,-12.36518 2.1214,-1.64803 1.895,-2.81783 -2.5675,-13.2649 l -1.8207,-4.2622 -37.1581,0.2622 -37.1581,0.2622 -3.0161,7.72409 c -2.4923,6.38238 -2.795,7.99063 -1.7427,9.25855 1.9886,2.39608 17.7843,9.9362 25.3081,12.08083 7.1541,2.03926 8.6773,3.80171 7.2292,8.36436 -0.6386,2.01212 -1.286,2.07229 -22.3403,2.07623 -11.9254,0.002 -27.4078,0.29605 -34.4053,0.65293 -11.24622,0.57358 -12.79572,0.45851 -13.35222,-0.99154 z m 55.57492,-3.37871 c 1.925,-0.34286 3.95,-0.49465 4.5,-0.33733 0.55,0.15733 1.9,0.28744 3,0.28915 6.573,0.0102 6.0075,-1.67168 -1.25,-3.7176 -7.0912,-1.99905 -25.3511,-10.87026 -27.6866,-13.45096 -1.8005,-1.98949 -1.4285,-3.51287 4.596,-18.82 l 1.2791,-3.25 12.0307,-0.07 c 6.617,-0.0385 18.6683,-0.01 26.7808,0.0643 12.7712,0.1163 14.75,-0.0755 14.75,-1.43 0,-0.86038 0.45,-1.56432 1,-1.56432 0.55,0 1,0.66072 1,1.46826 0,1.19167 2.2121,1.52134 11.7423,1.75 l 11.7423,0.28174 3.8715,9.47325 3.8716,9.47326 -3.3254,2.77621 c -4.2913,3.58254 -17.5321,10.06591 -26.1523,12.80549 -10.4818,3.33123 -8.8481,4.49624 6.2865,4.4831 10.1397,-0.009 13.2304,-0.3251 13.9092,-1.42349 0.7394,-1.19636 1.1198,-1.16517 2.4891,0.20414 1.4322,1.43217 5.9995,1.61704 40.0908,1.62268 21.1609,0.003 38.4744,-0.25709 38.4744,-0.57909 0,-0.50017 -1.3519,-3.79876 -6.0801,-14.83555 -0.4712,-1.1 -1.7201,-4.25 -2.7752,-7 -3.7392,-9.74563 -17.3193,-43.04321 -18.7214,-45.90364 -0.7828,-1.597 -1.4233,-3.49538 -1.4233,-4.21861 0,-0.77717 -0.6343,-1.07159 -1.5508,-0.71988 -1.2199,0.46813 -1.4229,0.0856 -0.9514,-1.793 0.545,-2.17166 0.029,-3.91598 -3.9526,-13.36487 -0.6953,-1.65 -1.8273,-4.35 -2.5155,-6 -0.6883,-1.65 -10.0171,-24.825 -20.7308,-51.5 -10.7136,-26.675 -21.7378,-54.0125 -24.4981,-60.75 l -5.0187,-12.25 h -33.4744 c -23.9939,0 -33.37,0.31298 -33.106,1.10508 0.2026,0.6078 3.5026,2.10168 7.3333,3.31973 8.3156,2.64411 21.459,9.09396 25.6255,12.57519 l 2.9922,2.5 -9.6768,25 c -5.3223,13.75 -14.0936,36.475 -19.4918,50.5 -5.3983,14.025 -15.3012,39.675 -22.0064,57 -6.7053,17.325 -13.4546,34.875 -14.9986,39 -1.5439,4.125 -4.6458,12.19957 -6.89312,17.94348 -2.2473,5.74391 -4.086,10.52515 -4.086,10.62498 0,0.47207 49.93312,-0.73549 53.00002,-1.28172 z m 100,-3.28674 c 0,-0.55 0.9266,-1 2.059,-1 1.1325,0 1.7809,0.45 1.441,1 -0.3399,0.55 -1.2665,1 -2.059,1 -0.7926,0 -1.441,-0.45 -1.441,-1 z m 20.5,0 c 0.3399,-0.55 0.8165,-1 1.059,-1 0.2426,0 0.441,0.45 0.441,1 0,0.55 -0.4766,1 -1.059,1 -0.5825,0 -0.7809,-0.45 -0.441,-1 z m 7,0 c 0.3399,-0.55 1.0415,-1 1.559,-1 0.5176,0 0.941,0.45 0.941,1 0,0.55 -0.7016,1 -1.559,1 -0.8575,0 -1.2809,-0.45 -0.941,-1 z m -95.5,-38.55902 c 0,-0.85746 0.45,-1.2809 1,-0.94098 0.55,0.33992 1,1.04148 1,1.55902 0,0.51754 -0.45,0.94098 -1,0.94098 -0.55,0 -1,-0.70156 -1,-1.55902 z m -51,-0.44098 c 0,-0.55 0.4766,-1 1.059,-1 0.5825,0 0.7809,0.45 0.441,1 -0.3399,0.55 -0.8165,1 -1.059,1 -0.2426,0 -0.441,-0.45 -0.441,-1 z m 4.5,-1 c 0.3399,-0.55 1.604,-0.96837 2.809,-0.92971 2.1124,0.0678 2.1192,0.10112 0.191,0.92971 -2.7525,1.18278 -3.731,1.18278 -3,0 z m 8.7814,-20.75 c 0.6346,-2.15747 11.4096,-30.6202 13.1552,-34.75 0.6975,-1.65 4.3606,-11.20146 8.1403,-21.22548 3.7797,-10.02401 7.1558,-17.89901 7.5026,-17.5 0.5165,0.59438 26.591,63.96817 29.9008,72.67374 l 0.9702,2.55174 h -30.0919 c -28.1883,0 -30.0593,-0.1107 -29.5772,-1.75 z m 54.7186,-2.11688 c 0,-0.47678 -3.5265,-9.36428 -7.8367,-19.75 -4.3102,-10.38571 -10.0141,-24.39562 -12.6752,-31.13312 -2.6611,-6.7375 -5.121,-12.25 -5.4664,-12.25 -0.3453,0 -2.2645,4.3875 -4.2647,9.75 -2.0002,5.3625 -5.961,15.825 -8.8018,23.25 -2.8407,7.425 -6.6462,17.4375 -8.4567,22.25 l -3.2918,8.75 h 25.3967 c 13.9681,0 25.3966,-0.39009 25.3966,-0.86688 z m -44,-4.63312 c 0,-0.825 0.1769,-1.5 0.393,-1.5 0.2162,0 0.652,0.675 0.9686,1.5 0.3166,0.825 0.1398,1.5 -0.393,1.5 -0.5327,0 -0.9686,-0.675 -0.9686,-1.5 z m 17.1147,-44.71429 c 0.5256,-0.98214 1.1124,-1.78571 1.3039,-1.78571 0.1915,0 0.5583,0.80357 0.8151,1.78571 0.3185,1.21783 -0.096,1.78572 -1.3039,1.78572 -1.3901,0 -1.5653,-0.38391 -0.8151,-1.78572 z m -18.6686,15.12716 c -0.3695,-0.59793 -0.171,-1.58793 0.441,-2.2 0.8172,-0.81716 1.1129,-0.52829 1.1129,1.08713 0,2.41451 -0.5195,2.78655 -1.5539,1.11287 z M 14.892883,705.60917 c 8.3875,-0.16726 22.1125,-0.16726 30.5,0 8.3875,0.16726 1.525,0.3041 -15.25,0.3041 -16.775,0 -23.6375,-0.13684 -15.25,-0.3041 z m 781.462687,-2.22678 c -29.88097,-0.44477 -35.43319,-0.75505 -36.23949,-2.02524 -0.52371,-0.825 -0.73192,-2.0993 -0.4627,-2.83179 0.26923,-0.73248 0.4895,-1.70115 0.4895,-2.1526 0,-0.45144 3.24664,-1.80694 7.21476,-3.01222 8.13626,-2.47132 16.78237,-6.60426 24.53524,-11.72814 l 5.25,-3.46973 v -49.95336 -49.95336 l -18.6135,-34.6994 c -10.23742,-19.08467 -19.01242,-35.1269 -19.5,-35.6494 -0.51729,-0.55435 -0.8865,8.05345 -0.8865,20.66821 0,11.89002 -0.27314,22.33002 -0.60699,23.2 -0.72313,1.88445 -4.7294,2.10032 -6.1575,0.33179 -0.55516,-0.6875 -1.33624,-3.275 -1.73574,-5.75 -1.87305,-11.60414 -10.06736,-31.8111 -16.11567,-39.74084 -5.21641,-6.83907 -16.33153,-9.41794 -23.01827,-5.34056 -9.59549,5.85104 -15.25116,23.24007 -10.9257,33.59235 3.23075,7.73228 16.26908,18.45751 34.05987,28.0174 19.79422,10.63643 28.73949,20.31101 34.18457,36.97165 2.19512,6.71657 2.62901,9.92515 2.70456,20 0.14908,19.88211 -5.26785,34.40718 -17.36243,46.55595 -12.066,12.12007 -26.39647,17.83804 -44.88236,17.90843 -16.16242,0.0615 -29.89511,-5.18434 -40.38673,-15.42768 l -5.45805,-5.3289 -3.10712,1.9673 -3.10713,1.96729 1.84506,4.6788 c 1.01479,2.57335 3.53284,8.80455 5.59569,13.84711 2.06284,5.04257 3.47749,9.88007 3.14366,10.75 -0.54342,1.41613 -6.45126,1.5817 -56.43834,1.5817 -42.09107,0 -56.1267,-0.29532 -57.03138,-1.2 -1.56722,-1.56722 -1.53842,-5.30317 0.05,-6.48568 0.6875,-0.51181 3.95,-1.73863 7.25,-2.72626 7.19837,-2.15434 20.91183,-8.70067 24.7901,-11.83393 l 2.79011,-2.25413 -3.16338,-7.75 -3.16338,-7.75 H 544.6593 507.42227 l -3.1343,8.24977 -3.1343,8.24977 2.24461,1.72741 c 3.64002,2.80129 15.67894,8.46524 23.65835,11.13053 8.10213,2.70629 9.91977,4.51773 8.23765,8.20958 -1.05538,2.3163 -1.33667,2.35659 -20.36078,2.91627 -10.60984,0.31214 -40.06226,0.7898 -65.44982,1.06147 -41.29176,0.44186 -46.32695,0.32619 -47.75,-1.09686 -1.43107,-1.43107 -1.5908,-10.72065 -1.5908,-92.51937 v -90.92857 h -7.98315 -7.98316 l -2.39285,4.75 c -4.67899,9.28816 -7.51389,18.394 -11.19881,35.97114 -0.63607,3.03404 -3.84636,4.66802 -6.44203,3.27886 -1.94277,-1.03974 -2,-2.09382 -2,-36.83518 0,-26.48375 0.3114,-36.07622 1.2,-36.96482 1.73498,-1.73498 132.86502,-1.73498 134.6,0 0.8886,0.8886 1.2,10.48107 1.2,36.96482 0,34.74136 -0.0572,35.79544 -2,36.83518 -3.05116,1.63293 -5.7974,-0.35825 -6.56793,-4.76215 -1.89491,-10.8301 -6.88308,-26.10148 -11.5916,-35.48785 l -1.88112,-3.75 h -7.97967 -7.97968 v 79.95196 79.95196 l 4.39979,3.02713 4.39978,3.02713 1.70481,-4.22909 c 0.93764,-2.326 6.11456,-15.70409 11.50426,-29.72909 5.3897,-14.025 15.28862,-39.675 21.99761,-57 6.70898,-17.325 13.90506,-36 15.99127,-41.5 2.08621,-5.5 7.45356,-19.43801 11.92743,-30.97335 l 8.13432,-20.97334 -2.27964,-1.78983 c -3.67273,-2.88362 -15.64352,-8.56781 -24.27963,-11.5289 -7.31176,-2.50701 -8.0284,-2.99139 -8.33008,-5.63028 -0.18736,-1.63891 0.24502,-3.25186 1,-3.73048 0.73155,-0.46376 16.68748,-0.85009 35.45764,-0.85851 26.134,-0.0117 34.35428,0.27747 35.09556,1.23469 0.5324,0.6875 5.28326,12.05 10.55746,25.25 16.20548,40.55821 55.26946,136.73885 57.47054,141.5 l 2.08036,4.5 0.0843,-19.73095 0.0843,-19.73095 2.65559,-0.66651 c 2.87019,-0.72037 5.34441,1.46018 5.34441,4.71006 0,0.93467 1.14727,6.13616 2.54948,11.55887 3.24423,12.54621 9.14774,24.82141 14.52203,30.19569 11.77615,11.77616 32.53304,7.63204 40.35074,-8.05602 3.07365,-6.16802 3.23086,-9.59016 0.66933,-14.57003 -2.69912,-5.24738 -6.00881,-8.06549 -19.09158,-16.25599 -19.03532,-11.9171 -26.18705,-18.44012 -34.76019,-31.70443 -4.16598,-6.44558 -8.83649,-19.20361 -10.33949,-28.24349 -1.44629,-8.69876 -1.17557,-24.00774 0.55662,-31.47679 6.63618,-28.61465 35.87371,-49.45126 63.8286,-45.48849 3.73205,0.52904 8.45705,1.74875 10.5,2.71046 3.30191,1.5544 8.54484,1.80409 47.21438,2.24857 l 43.5,0.5 16.03692,29.3663 c 8.82031,16.15147 16.38033,29.42647 16.80004,29.5 0.77225,0.1353 19.66304,-35.69732 19.66304,-37.29743 0,-1.37435 -16.89417,-9.71184 -23.5,-11.59754 -3.3,-0.94203 -6.5625,-2.16355 -7.25,-2.71449 -1.71884,-1.37745 -1.56713,-4.29685 0.32143,-6.18541 1.36068,-1.36069 5.71053,-1.57143 32.4349,-1.57143 17.63332,0 31.96304,0.41806 33.42857,0.97525 2.5642,0.97491 3.39457,3.7408 1.67364,5.57475 -0.4903,0.5225 -11.0653,21.27489 -23.5,46.11642 l -22.60854,45.16641 v 61.5484 c 0,59.82765 -0.0541,61.57734 -1.93426,62.58359 -1.09666,0.58691 -7.05085,0.93785 -13.75,0.81042 -6.49866,-0.12363 -27.69503,-0.46113 -47.10305,-0.75 z m 59.75609,-64.24811 0.0234,-61.01802 22.12317,-44.12955 c 12.16777,-24.27126 22.44967,-44.57956 22.84869,-45.12956 0.39902,-0.55 1.00622,-1.7875 1.34934,-2.75 0.58577,-1.64318 -1.32747,-1.75 -31.34476,-1.75 -35.16125,0 -37.98069,0.55134 -24.70068,4.83018 9.54474,3.07533 25.73206,11.14347 25.73206,12.82546 0,0.72755 -23.10658,46.34436 -23.47511,46.34436 -0.18038,0 -6.09397,-10.575 -13.14131,-23.5 -7.04734,-12.925 -13.39165,-23.5 -14.09847,-23.5 -0.70681,0 -1.292,-1.0125 -1.30042,-2.25 -0.008,-1.2375 -0.4879,-2.925 -1.06551,-3.75 -0.81355,-1.162 -0.90144,-0.97366 -0.39006,0.83583 0.60049,2.12475 0.46971,2.23391 -1.4472,1.20801 -1.72898,-0.92532 -1.91554,-1.48621 -1.03908,-3.12389 0.81214,-1.5175 0.64917,-2.94599 -0.67973,-5.95801 l -1.74801,-3.96194 h -42.34739 c -40.10638,0 -42.55099,-0.10387 -46.19478,-1.9628 -12.62327,-6.4399 -32.51638,-4.01349 -47.73422,5.82228 -11.4033,7.3703 -21.59542,22.05663 -24.24773,34.93974 -1.75553,8.52714 -1.3409,25.60089 0.8427,34.70078 5.76666,24.03185 17.59402,37.89219 47.39843,55.54559 7.8952,4.6764 15.21348,12.55316 16.66238,17.93393 3.76738,13.99098 -11.54802,30.39548 -28.37752,30.39548 -17.03335,0 -28.33634,-13.57735 -35.12026,-42.18705 -0.82319,-3.47163 -1.49671,-7.44663 -1.49671,-8.83334 0,-1.3867 -0.47819,-2.36188 -1.06265,-2.16706 -0.7154,0.23847 -1.04484,8.76195 -1.00813,26.08333 0.0347,16.38222 -0.3058,25.72912 -0.93735,25.72912 -0.54553,0 -0.99187,-0.43425 -0.99187,-0.96499 0,-0.53074 -2.90603,-8.06824 -6.45785,-16.75 -3.55182,-8.68176 -11.45072,-28.16001 -17.55311,-43.28501 -6.10239,-15.125 -11.49608,-27.64157 -11.98597,-27.81461 -0.48989,-0.17303 -0.66032,-0.91501 -0.37872,-1.64885 0.2816,-0.73383 0.0313,-1.63131 -0.55618,-1.99441 -0.58749,-0.36309 -1.06817,-1.33647 -1.06817,-2.16307 0,-0.8266 -1.07656,-3.83754 -2.39236,-6.69099 -1.3158,-2.85344 -3.3645,-7.85579 -4.55266,-11.11633 -1.18817,-3.26055 -2.87353,-6.44979 -3.74524,-7.0872 -0.87172,-0.63742 -1.35767,-1.7947 -1.0799,-2.57174 0.27778,-0.77704 -0.0706,-2.5378 -0.77418,-3.9128 -0.70357,-1.375 -2.75652,-6.45203 -4.56212,-11.28228 -1.86392,-4.9863 -3.76065,-8.59896 -4.38822,-8.35814 -0.6587,0.25277 -1.11917,-0.84537 -1.13961,-2.71771 -0.0189,-1.72803 -2.92135,-10.43826 -6.45,-19.35608 l -6.41571,-16.2142 -33.33333,-0.0358 c -23.90517,-0.0257 -33.22915,0.27678 -32.96498,1.06929 0.2026,0.6078 3.5026,2.11232 7.33334,3.34339 12.01427,3.86097 27.46497,12.38217 27.46497,15.14718 0,1.23299 -7.30072,20.34869 -50.18631,131.40435 -6.0531,15.675 -13.5075,35.025 -16.56533,43 -3.05783,7.975 -5.67734,14.65019 -5.82112,14.83376 -0.26535,0.33876 -9.57482,-5.63279 -12.55531,-8.05359 -1.48201,-1.20371 -1.61658,-8.67672 -1.5,-83.30125 l 0.12807,-81.97892 10.15718,-0.28396 10.15718,-0.28396 2.99782,5.28396 c 3.78162,6.6655 8.83751,20.90449 11.08612,31.22201 0.95151,4.36593 2.26482,8.11632 2.91847,8.33421 0.90579,0.30193 1.12978,-7.82909 0.94181,-34.18806 l -0.24664,-34.5842 h -65.25597 -65.25597 v 34.44098 c 0,20.05528 0.38691,34.68011 0.92631,35.01347 0.50946,0.31487 1.43084,-2.02107 2.0475,-5.19098 1.78946,-9.19863 8.68222,-29.57818 11.80072,-34.8907 l 2.86036,-4.87277 10.18255,-0.28498 10.18256,-0.28499 v 92.53499 92.53498 l 9.25,0.15753 c 5.0875,0.0866 9.925,0.106 10.75,0.043 2.38118,-0.1818 10.38402,-0.21879 26,-0.12018 7.975,0.0504 29.9125,-0.23322 48.75,-0.63017 37.45177,-0.78921 40.20535,-1.33941 27.5,-5.49477 -7.31529,-2.3925 -22.39231,-9.86077 -25.97024,-12.86413 l -2.22024,-1.86369 4.08816,-10.11381 4.08817,-10.1138 h 39.26415 39.26415 l 4.01308,9.92804 4.01307,9.92803 -5.24053,3.47952 c -7.74332,5.14127 -16.20514,9.19842 -24.33501,11.6678 -14.41893,4.37961 -11.52484,4.67925 47.27922,4.8951 l 54.49397,0.20002 -0.91999,-2.29925 c -0.50599,-1.2646 -3.17342,-7.81991 -5.92762,-14.56738 l -5.00763,-12.26811 5.16222,-3.47645 5.16223,-3.47645 6.02142,5.91248 c 11.88929,11.67417 26.02114,16.80788 43.12268,15.66528 15.90465,-1.06264 26.67094,-5.49759 37.52387,-15.45718 15.44615,-14.17472 22.50675,-40.94793 16.38522,-62.13145 -4.91582,-17.01118 -13.45092,-26.80064 -32.57907,-37.36704 -22.44686,-12.39965 -33.26768,-21.57066 -36.8973,-31.2717 -2.36016,-6.30809 -2.4279,-7.91759 -0.64647,-15.36126 5.21187,-21.77767 22.93974,-30.26644 37.12739,-17.77797 7.31274,6.43693 16.94651,28.09862 20.02563,45.02797 1.67259,9.1961 2.45947,1.9175 2.45947,-22.75 0,-15.60074 0.38111,-26.5 0.92661,-26.5 1.09708,0 3.75233,4.61994 16.09261,28 5.08019,9.625 10.46973,19.75 11.97675,22.5 1.50702,2.75 4.43351,8.15 6.50331,12 2.0698,3.85 5.0542,9.30478 6.63199,12.12173 l 2.86873,5.12172 v 51.11856 51.11856 l -4.75,3.53282 c -6.29421,4.68133 -19.23783,10.95886 -27,13.09473 -3.65801,1.00656 -6.25,2.26946 -6.25,3.04521 0,1.07612 8.13509,1.37445 43.25,1.58605 23.7875,0.14334 44.9252,0.10203 46.97267,-0.0918 l 3.72268,-0.35243 0.0234,-61.01801 z m -146.15628,37.53976 c 0.72187,-0.28887 1.58438,-0.25335 1.91667,0.0789 0.33229,0.33229 -0.25834,0.56864 -1.3125,0.52522 -1.16495,-0.048 -1.4019,-0.28494 -0.60417,-0.60416 z m 140.8125,-21.11464 c -0.27117,-0.43876 -0.1211,-1.39955 0.3335,-2.1351 0.63902,-1.03396 1.08575,-0.85299 1.9692,0.79775 0.9269,1.73193 0.86393,2.1351 -0.3335,2.1351 -0.81189,0 -1.69803,-0.35899 -1.9692,-0.79775 z M 516.22393,626.87008 c 1.12913,-3.01788 1.79501,-5.90445 1.47973,-6.41459 -0.31528,-0.51013 -0.10714,-1.08289 0.46255,-1.27278 0.9171,-0.3057 9.77708,-22.34302 19.42902,-48.32556 6.31602,-17.00242 4.91269,-16.75214 11.04045,-1.96899 11.66443,28.1403 24.26924,59.08359 24.93767,61.21899 l 0.70431,2.25 H 544.2243 514.17095 Z m 52.99317,0.23707 c -2.3496,-6.033 -17.64155,-43.41522 -21.28323,-52.02832 -2.2739,-5.37807 -4.42252,-9.42807 -4.77472,-9 -0.63191,0.76804 -2.99072,6.80314 -13.00679,33.27832 -2.80901,7.425 -6.43771,16.875 -8.06377,21 -1.62605,4.125 -2.95404,7.8375 -2.95109,8.25 0.003,0.4125 11.46924,0.75 25.48063,0.75 h 25.47525 z m -44.07422,-2.75 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 17.17735,-44.55633 c 0.35621,-1.71048 2.09044,-2.14029 2.58991,-0.64188 0.1745,0.52349 -0.40944,1.23066 -1.29764,1.5715 -1.11411,0.42752 -1.51486,0.13923 -1.29227,-0.92962 z m 308.82265,40.49731 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z M 692.80955,537.69048 c -0.36667,-0.36666 -0.66667,-1.13166 -0.66667,-1.7 0,-0.6266 0.46577,-0.56756 1.18333,0.15 0.65084,0.65084 0.95084,1.41584 0.66667,1.7 -0.28417,0.28417 -0.81667,0.21667 -1.18333,-0.15 z M 589.81934,521.95639 c -0.32401,-0.84435 -0.18986,-1.78194 0.29812,-2.08353 1.30755,-0.80811 2.41625,1.49346 1.27107,2.63864 -0.64011,0.64011 -1.18443,0.44756 -1.56919,-0.55511 z m 150.06812,-28.64373 -3.75542,-4.9306 5.15144,2.03051 c 2.83329,1.11678 6.05919,2.51632 7.16867,3.1101 1.98399,1.06179 1.97746,1.11017 -0.39602,2.9348 -1.32729,1.02036 -2.86325,1.83959 -3.41325,1.82049 -0.55,-0.0191 -2.68994,-2.25348 -4.75542,-4.9653 z m -198.74458,-3.95551 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 33,-4 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 774.13872,215.03188 c 0.524,-1.50304 0.7988,-23.12343 0.6399,-50.33369 -0.1532,-26.23439 0.059,-47.69873 0.4714,-47.69854 0.4125,1.9e-4 0.75,22.65035 0.75,50.33368 0,42.30168 -0.2218,50.33334 -1.3899,50.33334 -1.0672,0 -1.1766,-0.61164 -0.4714,-2.63479 z M -3.657117,700.15715 c -0.918056,-0.91806 -1.2,-25.80604 -1.2,-105.9272 V 489.50276 l -3.75,-3.09128 c -5.445863,-4.48924 -17.736448,-10.62583 -27.903721,-13.93209 -8.450169,-2.74788 -8.860312,-3.01655 -9.159685,-6.00011 -0.260056,-2.59172 0.134038,-3.29354 2.315099,-4.12277 1.674474,-0.63664 32.717478,-0.99936 85.528227,-0.99936 80.937057,0 82.924217,0.0458 83.934897,1.93426 0.6124,1.14428 1.03518,9.92518 1.03518,21.5 v 19.56574 l 22.25,0.0153 c 12.2375,0.008 22.83496,0.38636 23.5499,0.83986 1.09626,0.69537 18.59581,43.02802 45.50537,110.08073 l 6.19473,15.43589 0.5,-65.72266 c 0.43336,-56.96251 0.69993,-65.84901 2,-66.67058 0.825,-0.52136 4.93982,-0.95481 9.14405,-0.96324 l 7.64406,-0.0153 6.93082,7.75 c 3.81196,4.2625 17.44499,19.9 30.29562,34.75 36.23564,41.87335 55.1704,63.5 55.5961,63.5 0.21414,0 0.38935,-18.88247 0.38935,-41.96104 0,-41.28312 -0.0338,-41.99253 -2.09117,-43.90927 -3.1024,-2.89033 -13.07583,-7.98011 -20.63074,-10.52858 -7.29111,-2.45949 -9.44568,-4.52592 -7.66464,-7.35111 0.99389,-1.57657 3.53168,-1.77648 25.60819,-2.01717 19.67592,-0.21452 24.72714,5.2e-4 25.63236,1.09126 0.81925,0.98712 1.13516,28.23715 1.15578,99.69636 0.0289,99.99168 0.0319,99.90197 -3.33873,99.96424 -0.89652,0.0166 -6.25977,-5.30392 -14.11871,-14.00614 -2.72121,-3.0132 -8.12121,-8.89457 -12,-13.06972 -3.87879,-4.17514 -23.47734,-25.41919 -43.55234,-47.20901 l -36.5,-39.61784 -0.26385,32.60516 c -0.26307,32.50804 -0.25735,32.60993 1.91967,34.20901 4.25379,3.1245 14.42332,8.05013 20.2117,9.78955 6.28097,1.88745 7.20444,2.89929 6.22127,6.81654 l -0.62689,2.49776 h -24.94577 c -27.95257,0 -27.01613,0.25769 -27.01613,-7.43426 0,-2.99048 -0.36299,-3.58788 -2.25,-3.70295 -1.2375,-0.0755 -16.875,-0.41296 -34.75,-0.75 l -32.5,-0.61279 v -2.96357 c 0,-2.76351 0.48471,-3.1425 7.17972,-5.6138 3.94885,-1.45762 9.21287,-3.84172 11.69783,-5.298 l 4.5181,-2.64779 -1.66352,-4.48842 -1.66353,-4.48842 h -24.80905 -24.80905 l -1.05913,2.75 c -2.30787,5.99233 -1.78281,7.32246 4.10863,10.40833 3.025,1.58446 7.85779,3.62772 10.73953,4.54058 3.36305,1.06532 5.45915,2.35172 5.85278,3.59192 1.30768,4.12016 -0.85444,4.53279 -25.56882,4.87967 -21.531637,0.3022 -23.504687,0.18744 -23.816557,-1.38534 -0.36514,-1.84142 1.13801,-5.91198 22.815507,-61.78516 7.78863,-20.075 14.97203,-38.75 15.9631,-41.5 0.99108,-2.75 4.09977,-10.81233 6.90821,-17.91629 2.80844,-7.10395 5.10625,-13.26687 5.10625,-13.69537 0,-0.9674 -13.50428,-7.59489 -17.25,-8.46578 l -2.75,-0.63938 -0.0137,13.35841 c -0.0161,15.73956 -0.40193,17.67363 -3.69048,18.499 -3.46245,0.86902 -4.83524,-1.03901 -6.21677,-8.64059 -1.78364,-9.81419 -6.8001,-25.42237 -10.81713,-33.6564 l -3.58257,-7.3436 H 82.482553 62.142883 v 30.98253 30.98253 l 24.75,0.26747 24.749997,0.26747 v 16 16 l -24.749997,0.26747 -24.75,0.26747 v 40.9846 40.9846 l 5.90735,4.34874 c 7.02135,5.16882 15.98493,9.6002 25.59265,12.65238 9.796237,3.11206 9.999997,3.25681 9.999997,7.10373 v 3.39101 l -28.499997,0.61266 c -51.503223,1.10717 -77.483258,1.00408 -78.8,-0.31266 z m 35.55057,-3.55 c 0.22885,-0.6875 1.75515,-1.25 3.39178,-1.25 1.72915,0 2.71678,0.41891 2.35765,1 -0.38371,0.62086 1.48962,1 4.94098,1 3.05746,0 5.55902,-0.45 5.55902,-1 0,-0.55 0.92656,-1 2.05902,-1 1.13246,0 1.7809,0.45 1.44098,1 -0.33992,0.55 0.30852,1 1.44098,1 1.21174,0 2.05902,-0.65154 2.05902,-1.58333 0,-0.87084 0.5625,-1.37709 1.25,-1.125 0.6875,0.25208 1.1375,0.96458 1,1.58333 -0.17929,0.80682 5.97222,1.125 21.75,1.125 17.81516,0 21.999997,-0.2571 21.999997,-1.35158 0,-0.81875 -2.607527,-2.0574 -6.614317,-3.14199 -8.68494,-2.35091 -22.32236,-9.08473 -30.16764,-14.89605 l -6.28196,-4.6533 -0.0548,-29.22854 c -0.054,-28.84581 -0.047,-31.84198 0.0912,-38.72143 0.0386,-1.92109 -0.38944,-3.64609 -0.95117,-3.83334 -0.56172,-0.18724 -1.02131,-0.77949 -1.02131,-1.31612 0,-0.53663 0.45,-0.69757 1,-0.35765 0.62784,0.38803 1,-1.82295 1,-5.94098 v -6.55902 h 12.41667 c 8.95555,0 12.57927,-0.34843 13,-1.25 0.46666,-1 0.7,-1 1.16666,0 0.41866,0.89713 3.93731,1.25 12.46432,1.25 h 11.880977 l -0.0404,-7.73801 c -0.0247,-4.73653 -0.49575,-8.0631 -1.21432,-8.57613 -0.88818,-0.63412 -0.86966,-0.96157 0.0761,-1.34532 0.73476,-0.29814 1.25,-2.32771 1.25,-4.92387 l -10e-6,-4.41667 H 83.704623 58.266353 l 0.12145,-2.25 c 0.0668,-1.2375 0.039,-4.5812 -0.0617,-7.43045 -0.15925,-4.50351 -0.4772,-5.23828 -2.43319,-5.62305 l -2.25,-0.4426 2.25,-0.74358 c 2.5388,-0.83902 2.36923,1.30204 2.6143,-33.01032 l 0.1357,-19 22.728,-0.26872 22.727997,-0.26872 3.54027,7.03003 c 5.39944,10.72187 9.83573,23.94628 12.49259,37.23997 0.63013,3.15291 1.56542,5.99197 2.07842,6.30902 0.57085,0.35282 0.93269,-14.5761 0.93269,-38.48256 V 464.35715 H 40.142883 c -70.54942,0 -83,0.2104 -83,1.4026 0,0.87463 2.729052,2.22074 7.25,3.57607 9.1533,2.74405 21.091524,8.70438 28.230946,14.09469 l 5.519054,4.16693 v 105.31599 105.31598 l 16.667238,-0.18613 c 12.309082,-0.13746 16.776042,-0.51298 17.083332,-1.43613 z m -4.75057,-3.75 c 0,-0.91667 0.48375,-1.50542 1.075,-1.30833 0.59125,0.19708 1.075,0.78583 1.075,1.30833 0,0.5225 -0.48375,1.11125 -1.075,1.30833 -0.59125,0.19709 -1.075,-0.39166 -1.075,-1.30833 z m 26.48948,-26.51702 c -0.33893,-0.54841 0.10669,-1.27452 0.99027,-1.61358 2.15306,-0.82621 2.62895,-0.15532 0.97225,1.37064 -0.85537,0.78789 -1.57098,0.87647 -1.96252,0.24294 z m 1.51052,-77.48298 c -1.01957,-1.22851 -0.95124,-1.5 0.37756,-1.5 0.89234,0 1.62244,0.675 1.62244,1.5 0,0.825 -0.1699,1.5 -0.37756,1.5 -0.20765,0 -0.93775,-0.675 -1.62244,-1.5 z m 19.21275,-4.38426 c 0.16922,-0.88866 1.35562,-1.76478 2.63643,-1.94695 1.80378,-0.25654 2.24932,0.0816 1.9764,1.5 -0.20986,1.09066 -1.27604,1.87802 -2.63644,1.94695 -1.59707,0.0809 -2.19153,-0.37024 -1.97639,-1.5 z m -15.21275,-1.11574 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z m 296.999997,14 v -97 h -23.5 c -14.69572,0 -23.5,0.36751 -23.5,0.98095 0,0.53952 1.2375,1.25225 2.75,1.58385 6.20563,1.3605 18.06622,6.69861 22.75,10.23912 l 5,3.77955 0.25973,47.76187 0.25973,47.76188 -7.75973,-8.8838 c -4.26785,-4.88609 -19.23473,-22.10135 -33.25973,-38.25613 -14.025,-16.15479 -27.525,-31.67339 -30,-34.48578 -2.475,-2.81239 -9.45,-10.81925 -15.5,-17.79302 l -11,-12.67959 -7.24351,-0.004 -7.24351,-0.004 -0.25649,73.24586 -0.25649,73.24587 -10.62947,-26.49587 c -7.93303,-19.77451 -11.16739,-26.74627 -12.75,-27.48299 -2.26105,-1.05254 -2.84923,-2.51287 -1.01212,-2.51287 1.30299,0 0.33209,-4.76431 -1.39497,-6.84529 -0.61918,-0.74606 -1.203,-1.88259 -1.29737,-2.52563 -0.14312,-0.97513 -15.72302,-40.30088 -19.85991,-50.12908 -2.79542,-6.64119 -5.47527,-13.25797 -7.29016,-18 l -1.91362,-5 -21.85619,-0.27 c -22.22692,-0.27459 -27.82695,0.53355 -19.37339,2.79577 5.01392,1.34175 15.29658,6.17185 18.64525,8.75828 l 2.26805,1.75179 -3.96542,9.98208 c -2.18099,5.49014 -6.73301,17.18208 -10.1156,25.98208 -3.38259,8.8 -8.75407,22.75 -11.93661,31 -3.18254,8.25 -9.50642,24.675 -14.05307,36.5 -4.54665,11.825 -9.09885,23.44981 -10.11601,25.83291 -1.017167,2.38309 -1.849387,4.7519 -1.849387,5.26401 0,0.54074 4.087697,0.74963 9.749997,0.49826 5.3625,-0.23807 12.13906,-0.46937 15.05902,-0.51402 3.26661,-0.0499 5.07125,-0.46587 4.69098,-1.08116 -0.36506,-0.59067 0.73644,-0.99373 2.69098,-0.98469 2.50438,0.0116 2.94427,0.25104 1.80902,0.98469 -1.06149,0.68599 0.23943,0.97385 4.45,0.98469 6.46983,0.0166 6.48624,-0.97129 0.05,-3.01028 -5.27382,-1.67075 -13.40768,-5.56803 -16.37017,-7.84366 l -2.37017,-1.82064 2.22063,-6.2546 c 1.61557,-4.55038 1.92079,-6.55443 1.12017,-7.35505 -1.3747,-1.3747 -1.44578,-4.70046 -0.10046,-4.70046 0.55,0 1,1.08287 1,2.40638 0,1.99733 0.38247,2.30972 2.25,1.83772 1.2375,-0.31277 2.58061,-1.05814 2.98469,-1.65638 0.5017,-0.74278 0.73954,-0.69131 0.75,0.16228 0.0117,0.95342 4.31183,1.25 18.12372,1.25 h 18.10841 l -0.62746,-2.5 c -0.54492,-2.1711 -0.29606,-2.5 1.89159,-2.5 2.02032,0 2.51905,0.49496 2.51905,2.5 0,2.19837 0.4294,2.5 3.55902,2.5 2.11803,0 3.30878,-0.40488 2.94098,-1 -0.33992,-0.55 0.11008,-1 1,-1 0.88992,0 1.35719,0.42206 1.03837,0.93791 -0.31881,0.51585 0.6092,3.90762 2.06225,7.53727 2.46845,6.16609 2.5334,6.71925 0.98923,8.42554 -2.04971,2.2649 -14.94745,8.64999 -19.33985,9.57429 -1.7875,0.37615 -3.25,1.1153 -3.25,1.64256 0,0.59275 11.92777,0.929 31.25,0.88096 17.1875,-0.0427 32.9375,-0.0599 35,-0.0381 l 3.75,0.0396 v 6.01983 6.01984 l 23.5442,-0.13725 c 15.32067,-0.0893 23.42681,-0.4894 23.20811,-1.14549 -0.18485,-0.55454 -2.79224,-1.77701 -5.7942,-2.71661 -6.64095,-2.07856 -14.01833,-5.80454 -19.70811,-9.95366 l -4.25,-3.0992 v -36.99373 c 0,-22.51329 0.36923,-36.99373 0.9433,-36.99373 0.51881,0 1.53131,0.83727 2.25,1.8606 0.71868,1.02332 9.81672,11.03582 20.21786,22.25 24.30089,26.20044 24.8537,26.79902 46.07437,49.8894 22.50944,24.49271 40.77187,44 41.19212,44 0.17729,0 0.32235,-43.65 0.32235,-97 z m -112.5,67 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -40,-12 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m -73.5,-39.48948 c 0,-0.731 5.78792,-15.76416 7.99301,-20.76052 2.47512,-5.60818 3.81613,-10.76384 3.30657,-12.7124 -0.36907,-1.41133 -0.12809,-2.02472 0.71901,-1.83019 0.76568,0.17583 2.5605,-2.87089 4.49766,-7.63479 2.87994,-7.08245 3.34149,-7.70695 4.3304,-5.85916 0.60878,1.13752 5.21173,12.35484 10.22877,24.92738 5.01705,12.57254 9.32906,23.19666 9.58226,23.60916 0.25319,0.4125 -8.7912,0.75 -20.09866,0.75 -11.30746,0 -20.55902,-0.22027 -20.55902,-0.48948 z m 36.00201,-3.26052 c 0.004,-1.33098 -15.40678,-38.25 -15.9659,-38.25 -0.52494,0 -15.03611,36.99292 -15.03611,38.33114 0,0.36787 6.975,0.66886 15.5,0.66886 8.525,0 15.5009,-0.3375 15.50201,-0.75 z m -24.50201,-5.25 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 9.95787,-17.06817 c -0.3631,-0.5875 -1.27016,-0.8341 -2.01571,-0.54801 -1.10449,0.42383 -1.13906,0.0451 -0.18666,-2.04525 0.74577,-1.63676 1.32198,-2.07187 1.59182,-1.20199 0.23261,0.74988 0.82796,2.15092 1.32299,3.11342 0.96886,1.88377 0.37918,2.44811 -0.71244,0.68183 z m -8.45787,-21.49085 c 0,-0.85746 0.45,-1.2809 1,-0.94098 0.55,0.33992 1,1.04148 1,1.55902 0,0.51754 -0.45,0.94098 -1,0.94098 -0.55,0 -1,-0.70156 -1,-1.55902 z m 43.5,-10.44098 c 0.33992,-0.55 1.04148,-1 1.55902,-1 0.51754,0 0.94098,0.45 0.94098,1 0,0.55 -0.70156,1 -1.55902,1 -0.85746,0 -1.2809,-0.45 -0.94098,-1 z m -44.5,-42 c 0,-0.55 0.45,-1 1,-1 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 z m 1047.05442,163.72618 -1.094,-3.13834 3.0198,2.89317 c 1.6609,1.59125 3.0198,2.93822 3.0198,2.99328 0,0.055 -0.8666,0.16538 -1.9258,0.24517 -1.3231,0.0997 -2.2682,-0.83717 -3.0198,-2.99328 z m -525.99079,-3.9735 -1.08964,-3.12575 2.513,2.36085 c 2.94933,2.77075 2.9088,2.64636 1.08964,3.34444 -0.93982,0.36064 -1.79353,-0.51568 -2.513,-2.57954 z m -197.08263,-0.27557 c -1.05678,-1.27335 -0.99492,-1.41968 0.37756,-0.89301 0.90279,0.34643 1.64144,1.03173 1.64144,1.52289 0,1.28596 -0.57887,1.10536 -2.019,-0.62988 z m 40.644,0.72514 c -0.27117,-0.43876 -0.0796,-1.45126 0.42567,-2.25 0.71729,-1.13385 0.92206,-0.95896 0.93402,0.79775 0.0157,2.31303 -0.49232,2.85568 -1.35969,1.45225 z m -287.125,-9.20225 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -70.42971,-4.91667 c 0.0386,-0.32083 0.41709,-1.47075 0.84097,-2.55538 0.70479,-1.80342 0.81246,-1.75355 1.25918,0.58334 0.32575,1.70405 0.0456,2.55538 -0.84097,2.55538 -0.73121,0 -1.29784,-0.2625 -1.25918,-0.58334 z m 0.63996,-7.08333 c -0.28766,-1.1 -0.11514,-2 0.38337,-2 0.49851,0 0.90638,0.9 0.90638,2 0,1.1 -0.17252,2 -0.38337,2 -0.21085,0 -0.61872,-0.9 -0.90638,-2 z m -20.49412,-11.84526 c -0.70776,-0.44909 -0.9963,-1.56404 -0.64301,-2.48469 0.57106,-1.48816 2.97428,-1.67005 22.06525,-1.67005 18.38754,0 21.50834,0.21873 22.01655,1.54313 0.87681,2.28491 -0.48376,3.0732 -1.91826,1.11141 -1.10827,-1.51566 -3.35131,-1.66999 -20.73967,-1.427 -17.86004,0.24958 -19.48533,0.41939 -19.3581,2.02246 0.0764,0.9625 0.0764,1.74311 0,1.73469 -0.0764,-0.008 -0.71663,-0.3819 -1.42276,-0.82995 z m 807.78387,-0.82023 c -6.7203,-2.64184 -12.43287,-5.79377 -17.72945,-9.78222 -7.71797,-5.81182 -14.86174,-17.55632 -16.45495,-27.05229 -1.55572,-9.27255 -0.27841,-22.00058 2.80973,-27.99806 6.86289,-13.32844 11.58874,-18.11124 24.37467,-24.66845 6.3441,-3.25353 6.7998,-3.33349 19,-3.33349 12.4184,0 12.5497,0.0244 20.1084,3.74293 10.3677,5.10039 17.5008,12.15058 22.4664,22.20521 l 3.9252,7.94813 v 12.60373 12.60373 l -3.9252,7.94813 c -4.9429,10.00868 -12.1267,17.12763 -22.4249,22.22229 -7.2537,3.5885 -7.9574,3.73367 -19.0906,3.93794 -6.3576,0.11666 -12.2343,-0.0533 -13.0593,-0.37758 z m 24.5063,-3.9753 c 1.1071,-0.42482 1.5231,-1.42492 1.2302,-2.95709 -0.3696,-1.93388 -0.159,-2.16343 1.279,-1.39382 0.9468,0.50673 2.0778,0.59967 2.5133,0.20652 0.4355,-0.39315 0.4681,-0.15232 0.072,0.53518 -1.5324,2.6629 2.4246,1.08159 8.2484,-3.29628 11.107,-8.34927 16.9351,-18.93005 17.8762,-32.45372 1.276,-18.33748 -8.0783,-34.61532 -24.5808,-42.77419 -7.3259,-3.62191 -7.8443,-3.72581 -18.5906,-3.72581 -9.1521,0 -12.001,0.38599 -16.5545,2.24288 -11.13998,4.54284 -20.84138,14.26933 -25.19195,25.25712 -2.90839,7.34542 -3.16887,23.03308 -0.50901,30.6557 4.80206,13.76171 18.82729,25.70453 33.70096,28.69715 3.0784,0.61938 18.214,-0.11401 20.5063,-0.99364 z m -19.5063,-9.91493 c 3.4682,-0.74847 18.3189,-1.0756 16.4943,-0.36333 -1.0969,0.42816 -5.5943,0.75791 -9.9943,0.73276 -4.4,-0.0251 -7.325,-0.19139 -6.5,-0.36943 z m 19.0833,-1.80883 c 0.2292,-0.2005 1.5417,-0.90032 2.9167,-1.55516 2.3573,-1.12265 2.3892,-1.10183 0.5589,0.36454 -1.593,1.27626 -4.8479,2.39128 -3.4756,1.19062 z m 10.0809,-6.76911 c 2.5653,-2.54371 5.5829,-6.36674 6.7058,-8.49563 1.1229,-2.12889 2.0615,-3.35735 2.0858,-2.7299 0.077,1.98721 -6.3616,10.53325 -9.9778,13.24363 -2.7453,2.05762 -2.4954,1.63244 1.1862,-2.0181 z m -56.28163,-15.61634 c -0.58735,-1.5125 -0.87871,-6.35 -0.64745,-10.75 1.01233,-19.26055 14.77648,-32.5 33.78808,-32.5 7.7617,0 15.6683,1.75357 16.3903,3.63513 0.3442,0.89696 -0.6775,0.80579 -3.7195,-0.3319 -5.8738,-2.19678 -17.0007,-2.17204 -23.4555,0.0521 -6.559,2.26008 -14.88728,9.68805 -18.25459,16.28118 -2.18956,4.28712 -2.48391,6.13733 -2.48391,15.61344 0,5.9125 -0.12364,10.75 -0.27475,10.75 -0.15111,0 -0.75532,-1.2375 -1.34268,-2.75 z m 66.31233,-2.75 c 0.02,-1.65 0.2445,-2.20394 0.4981,-1.23097 0.2535,0.97297 0.2369,2.32297 -0.037,3 -0.2739,0.67703 -0.4813,-0.11903 -0.461,-1.76903 z m -339.86023,20.57568 c -0.90349,-2.39362 -0.85254,-2.8279 0.28076,-2.39301 0.76151,0.29222 1.38457,1.60816 1.38457,2.92432 0,3.12199 -0.32557,3.01812 -1.66533,-0.53131 z m -422.07269,-13.15 c -0.98402,-2.64082 -0.98402,-3.48165 0,-4.09842 1.3584,-0.85142 2.10206,1.67754 1.55757,5.29681 -0.26702,1.77486 -0.52308,1.57785 -1.55757,-1.19839 z m 33.73802,-9.29495 c 0,-1.87736 0.0653,-1.88163 2,-0.13073 1.1,0.99549 2,1.8688 2,1.9407 0,0.0719 -0.9,0.13073 -2,0.13073 -1.31296,0 -2,-0.66667 -2,-1.9407 z m 903.33472,-0.55505 c -0.9035,-2.39362 -0.8526,-2.8279 0.2807,-2.39301 0.7615,0.29222 1.3846,1.60816 1.3846,2.92432 0,3.12199 -0.3256,3.01812 -1.6653,-0.53131 z M 112.40638,595.52 c -0.83045,-0.51325 -0.59875,-1.0969 0.77639,-1.95569 2.01448,-1.25806 2.51203,-0.62353 1.1684,1.49005 -0.41859,0.65847 -1.29375,0.86801 -1.94479,0.46564 z m 1114.98872,-2.66285 c 0.011,-2.2 0.2159,-2.98225 0.4551,-1.73834 0.2392,1.24391 0.2301,3.04391 -0.02,4 -0.2503,0.95609 -0.446,-0.0617 -0.4349,-2.26166 z m -895.75222,-1.5 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -214.43232,-7.95 c -0.0516,-2.62976 0.20986,-3.17246 1.09969,-2.28263 0.86315,0.86315 0.88079,1.76224 0.0677,3.45 -1.03275,2.14368 -1.10381,2.07262 -1.16737,-1.16737 z M 1423.1429,566.29813 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z M 364.14288,565.35715 c 0,-0.55 0.47656,-1 1.05902,-1 0.58246,0 0.7809,0.45 0.44098,1 -0.33992,0.55 -0.81648,1 -1.05902,1 -0.24254,0 -0.44098,-0.45 -0.44098,-1 z M 66.142883,552.29813 c 0,-0.58246 0.45,-0.7809 1,-0.44098 0.55,0.33992 1,0.81648 1,1.05902 0,0.24254 -0.45,0.44098 -1,0.44098 -0.55,0 -1,-0.47656 -1,-1.05902 z M 1485.5905,520.85715 c -4e-4,-18.15 0.1347,-25.71608 0.3003,-16.81351 0.1656,8.90257 0.1659,23.75257 7e-4,33 -0.1652,9.24743 -0.3007,1.96351 -0.301,-16.18649 z m -637.94762,10.5 c -0.33992,-0.55 -0.14148,-1 0.44098,-1 0.58246,0 1.05902,0.45 1.05902,1 0,0.55 -0.19844,1 -0.44098,1 -0.24254,0 -0.7191,-0.45 -1.05902,-1 z m -145.22764,-5 c 0,-2.475 0.19502,-3.4875 0.43337,-2.25 0.23836,1.2375 0.23836,3.2625 0,4.5 -0.23835,1.2375 -0.43337,0.225 -0.43337,-2.25 z m 60.72764,1.30887 c 0,-2.58095 0.0601,-2.61166 1.4682,-0.75 1.88945,2.49809 1.89817,3.44113 0.0318,3.44113 -0.96174,0 -1.5,-0.96568 -1.5,-2.69113 z m -632,-7.34025 c 0,-0.53274 0.675,-0.96862 1.5,-0.96862 0.825,0 1.5,0.17686 1.5,0.39301 0,0.21616 -0.675,0.65203 -1.5,0.96862 -0.825,0.31658 -1.5,0.13972 -1.5,-0.39301 z M 1338.1429,503.32255 c 0,-1.36217 1.4898,-1.89876 2.8823,-1.03815 0.9382,0.57987 0.7222,0.94292 -0.7978,1.34039 -1.1465,0.29982 -2.0845,0.16381 -2.0845,-0.30224 z m -981.50002,-10.9654 c 0.33992,-0.55 0.81648,-1 1.05902,-1 0.24254,0 0.44098,0.45 0.44098,1 0,0.55 -0.47656,1 -1.05902,1 -0.58246,0 -0.7809,-0.45 -0.44098,-1 z m 145.37647,-8.59198 c -0.89295,-1.87441 -1.23045,-3.40802 -0.75,-3.40802 0.48044,0 0.87353,0.41786 0.87353,0.92857 0,0.51072 0.73607,1.66464 1.63571,2.56429 0.93607,0.93606 1.25687,1.9966 0.75,2.47945 -0.49828,0.47466 -1.59588,-0.64701 -2.50924,-2.56429 z\"\n         id=\"path72\"\n         inkscape:connector-curvature=\"0\" />\n    </g>\n  </g>\n</svg>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import {writable} from 'svelte/store';\n\nexport const applicationName = writable(\"Fantasy AGE Character Sheet\" );\nexport const sheetName = writable(\"Fantasy AGE Character Sheet\" );\nexport const fileExtension = writable(\"fachar\");\nexport const sheetSuffix = writable(\"character-sheet-data\");\nexport const sheetPrefix = writable(\"fantasy-age-character-sheet-\");\n","export default(e,t)=>{let r=new Set(Object.keys(t));return r.forEach(r=>{e.style.setProperty(`--${r}`,t[r])}),{update(t){const o=new Set(Object.keys(t));o.forEach(o=>{e.style.setProperty(`--${o}`,t[o]),r.delete(o)}),r.forEach(t=>e.style.removeProperty(`--${t}`)),r=o}}};\n","<style>\n    @import \"CircleInput.css\";\n</style>\n\n<script>\n    import cssVars from 'svelte-css-vars';\n    export let title = \"\";\n    export let radius= \"20pt\";\n    export let textAlign=\"center\";\n    export let value = 0;\n    $: styleVars = {\n        radius: radius,\n        \"text-align\": textAlign\n    };\n    export let props={};\n</script>\n\n<div use:cssVars=\"{styleVars}\" {...props}>\n    <input type=\"number\" bind:value={value}>\n    <span>{title}</span>\n</div>","<style>\n    @import \"SimpleField3.css\";\n</style>\n\n<script>\n    export let title=\"\";\n    export let value=\"\";\n    export let width=\"\";\n    export let props={};\n    if (!!width) {\n        if (!!props.style) {\n            props.style = props.style + `width:${width}`;\n        }\n        else\n        {\n            props.style= `width:${width}`;\n        }\n    }\n</script>\n\n<div {...props} class=\"container\">\n    <div  class=\"field-title\"><span>&nbsp;{title}&nbsp;</span></div>\n    <input type=\"text\" bind:value={value}>\n</div>\n","<style>\n    @import \"SimpleField2.css\";\n</style>\n\n<script>\n    export let title=\"\";\n    export let value=\"\";\n    export let width=\"\";\n    export let props={};\n    if (!!width) {\n        if (!!props.style) {\n            props.style = props.style + `width:${width}`;\n        }\n        else\n        {\n            props.style= `width:${width}`;\n        }\n    }\n</script>\n\n<div {...props} class=\"container\">\n    <div  class=\"field-title\"><span>&nbsp;{title}&nbsp;</span></div>\n    <input type=\"number\" min=\"0\" bind:value={value}>\n</div>\n","<style>\n    @import \"LogoBar.css\";\n</style>\n\n<script>\n    import Logo from \"./logo.svg\"\n    import {sheetName} from '../../../applicationSettings'\n    import CircleInput from \"../CircleInput\";\n    import SimpleField3 from \"../SimpleField3\";\n    import SimpleField2 from \"../SimpleField2\";\n\n    let worksheet_name = \"\";\n    const unsubscribe = sheetName.subscribe(value => {\n        worksheet_name = value;\n    });\n\n    export let worksheet = {}\n</script>\n<div class=\"logo-bar\" style=\"margin-top: -1.25rem;\">\n    <div class=\"logo\" style=\"margin-right: 0.25rem;margin-top: 1.1rem;margin-left: -0.6rem\">\n        <Logo height=\"100%\" width=\"100%\"/>\n    </div>\n    <div style=\"margin-bottom: 0.25rem;\">\n        <SimpleField3 title=\"Name\" width=\"12em\" bind:value={worksheet.name}/>\n        <SimpleField3 title=\"Class\" width=\"10rem\" bind:value={worksheet.class}/>\n        <CircleInput title=\"Level\" radius=\"1.5rem\" bind:value={worksheet.level}  props={{style:\"margin-top:1.25rem; \"}}/>\n        <SimpleField2 title=\"Experience Points\" bind:value={worksheet.experiencePoints} width=\"14.5rem\"/>\n    </div>\n    <SimpleField3 title=\"Race\" width=\"12em\" bind:value={worksheet.race}/>\n    <SimpleField3 title=\"Background\" width=\"13.8rem\" bind:value={worksheet.background}/>\n    <SimpleField3 title=\"Social Class\" width=\"13.8rem\" bind:value={worksheet.socialClass}/>\n</div>","export default function getNewWorksheet() {\n    return {\n        name: \"\",\n        health:null,\n        healthNotes1:\"\",\n        healthNotes2:\"\",\n        race:\"\",\n        class:\"\",\n        level:null,\n        experiencePoints:null,\n        move:null,\n        speed:null,\n        charge:null,\n        run:null,\n        background:\"\",\n        socialClass:\"\",\n        powersTalentsAndSpecializations:\"\",\n        goalsAndTies:\"\",\n        equipment:\"\",\n        spells:makeClones(25,{\n            name:\"\",\n            targetNumber:\"\",\n            magicPoints:\"\",\n            castingTime:\"\",\n            testOrNotes:\"\"\n        }),\n        armor:{\n            type:\"\",\n            rating:null,\n            penalty:null\n        },\n        defense:null,\n        weapons:makeClones(9,{\n            name:\"\",\n            attackRoll:\"\",\n            damage:\"\",\n            shortRange:\"\",\n            longRange:\"\",\n            reloadTime:\"\"\n        }),\n        abilities:{\n            accuracy:{name:\"Accuracy\", primary:false,value:null,focuses:\"\"},\n            communication:{name:\"Communication\", primary:false,value:null,focuses:\"\"},\n            constitution:{name:\"Constitution\", primary:false,value:null,focuses:\"\"},\n            dexterity:{name:\"Dexterity\", primary:false,value:null,focuses:\"\"},\n            fighting:{name:\"Fighting\", primary:false,value:null,focuses:\"\"},\n            intelligence:{name:\"Intelligence\", primary:false,value:null,focuses:\"\"},\n            perception:{name:\"Perception\", primary:false,value:null,focuses:\"\"},\n            strength:{name:\"Strength\", primary:false,value:null,focuses:\"\"},\n            willpower:{name:\"Willpower\", primary:false,value:null,focuses:\"\"}\n        },\n        magicPoints:null,\n        spellPower:null,\n        gold:null,\n        silver:null,\n        copper:null\n\n\n    };\n}\n\nfunction makeClones(n,obj){\n    let result=[];\n    for (let i =0; i< n; i++) {\n        result.push({...obj});\n    }\n    return result;\n}\n\nexport function validateWorksheet(worksheet) {\n    let result = true;\n    try {\n\n        /* TODO: There has to be a better way.\n                 like maybe a JSON DTD? */\n\n        // for now try accessing things in a way that will throw an exception.\n        let _ = worksheet.name.toString();\n        _ = worksheet.abilities.accuracy;\n        _ = worksheet.weapons.length;\n        _ = worksheet.armor.rating;\n\n    } catch (err) {\n        console.log(err);\n        result = false;\n    } finally {\n    }\n    return result;\n}","\n<style>\n    @import \"Section.css\";\n</style>\n\n<script>\n    export let title;\n    export let hint=\"\";\n    export let indent=\"0\";\n    export let props={};\n</script>\n\n<div class=\"section\" {...props}>\n    <div class=\"header\" style=\"padding-left:0.1in\">\n        <slot name=\"title\">\n            <span>{title}</span>\n        </slot>\n    </div>\n    <div class=\"content\" style=\"padding-left:{indent}\">\n        {#if (!!hint)}\n            <span class=\"hint\">{hint}</span>\n        {/if}\n        <slot>\n\n        </slot>\n    </div>\n</div>","<style>\n    @import \"Ability.css\";\n</style>\n\n<script>\n    export let ability={primary:false,name:\"name\",value:0, focuses:\"\"}\n</script>\n\n<div class=\"container\">\n    <div class=\"ability-title\" >\n        <input type=\"checkbox\" bind:checked={ability.primary} />\n        <span class=\"ability-name\">{ability.name}</span>\n    </div>\n    <div class=\"input-area\">\n        <textarea bind:value={ability.focuses} style=\"float: left;\" rows=\"3\"/>\n        <input bind:value={ability.value} type=\"number\" min=\"-3\" style=\"float: left;\"/>\n    </div>\n</div>","<style>\n    @import \"SimpleTextField.css\";\n</style>\n\n<script>\n    export let title=\"\";\n    export let value=\"\";\n    export let width=\"\";\n    export let props={};\n    export let hint=\"\";\n\n    if (!!width) {\n        if (!!props.style) {\n            props.style = props.style + `width:${width}`;\n        }\n        else\n        {\n            props.style= `width:${width}`;\n        }\n    }\n</script>\n\n<div {...props} class=\"container\">\n    <div  class=\"field-title\"><span>&nbsp;{title}&nbsp;</span></div><input type=\"text\" bind:value={value} placeholder=\"{hint}\">\n</div>\n","<style>\n    @import \"SimpleNumberField.css\";\n</style>\n\n<script>\n    export let title=\"\";\n    export let value=\"\";\n    export let width=\"\";\n    export let props={};\n    export let hint=\"\";\n\n    if (!!width) {\n        if (!!props.style) {\n            props.style = props.style + `width:${width}`;\n        }\n        else\n        {\n            props.style= `width:${width}`;\n        }\n    }\n</script>\n\n<div {...props} class=\"container\">\n    <div  class=\"field-title\"><span>&nbsp;{title}&nbsp;</span></div><input type=\"number\" style=\"text-align: right\" bind:value={value} placeholder=\"{hint}\">\n</div>\n","<style>\n    @import \"Page1.css\";\n    @import \"../../styles/Page.css\";\n</style>\n\n<script>\n\n    import LogoBar from '../../shared/LogoBar';\n    import getNewWorksheet from '../../../model/worksheet'\n    import Section from \"../../shared/Section\";\n    import CircleInput from \"../../shared/CircleInput\"\n    import Ability from \"./Ability\"\n    import SimpleTextField from \"../../shared/SimpleTextField\";\n    import SimpleNumberField from \"../../shared/SimpleNumberField\";\n\n    export let worksheet = getNewWorksheet();\n\n</script>\n\n<div class=\"page\">\n    <LogoBar bind:worksheet={worksheet}/>\n    <div class=\"flex-row\">\n        <div class=\"abilities\">\n            {#if !!worksheet && !!worksheet.abilities}\n                <Ability bind:ability={worksheet.abilities.accuracy}/>\n                <Ability bind:ability={worksheet.abilities.communication}/>\n                <Ability bind:ability={worksheet.abilities.constitution}/>\n                <Ability bind:ability={worksheet.abilities.dexterity}/>\n                <Ability bind:ability={worksheet.abilities.fighting}/>\n                <Ability bind:ability={worksheet.abilities.intelligence}/>\n                <Ability bind:ability={worksheet.abilities.perception}/>\n                <Ability bind:ability={worksheet.abilities.strength}/>\n                <Ability bind:ability={worksheet.abilities.willpower}/>\n            {/if}\n        </div>\n        <div>\n            <div class=\"armor-move-and-health flex-row\">\n                <Section title=\"Armor & Defense\" width=\"12em\" props={{style:\"flex-grow:2;flex-shrink:2\"}}>\n                    <div class=\"flex-column content\">\n                        <SimpleTextField title=\"Armor Type\" bind:value={worksheet.armor.type}/>\n                        <SimpleNumberField title=\"Rating (AR)\" bind:value={worksheet.armor.rating}/>\n                        <SimpleNumberField title=\"Penalty (AP)\" bind:value={worksheet.armor.penalty}/>\n                        <SimpleNumberField title=\"Defense\" hint=\"10 + Dex + Shield Bonus\"\n                                           bind:value={worksheet.defense}/>\n                    </div>\n                </Section>\n                <Section title=\"Movement\" props={{style:\"flex-grow:2;flex-shrink:2\"}}>\n                    <div class=\"flex-column content-middle\" style=\"height: 100%\">\n                        <SimpleNumberField title=\"Speed\" bind:value={worksheet.speed}/>\n                        <SimpleNumberField title=\"Move\" hint=\"Speed - AP\" bind:value={worksheet.move}/>\n                        <SimpleNumberField title=\"Charge\" hint=\"1/2 x Move\" bind:value={worksheet.charge}/>\n                        <SimpleNumberField title=\"Run\" hint=\"2 x Move\" bind:value={worksheet.run}/>\n                    </div>\n                </Section>\n                <Section title=\"Health\" props={{style:\"flex-grow:1;flex-shrink:0; width:8rem\"}}>\n                    <textarea style=\"width:100%;resize: none;height:2.9rem;border: none; overflow: hidden\" rows=\"3\"\n                              bind:value={worksheet.healthNotes1}/>\n                    <textarea style=\"width:60%;resize: none;height:2.8rem;border: none; overflow: hidden\" rows=\"3\"\n                              bind:value={worksheet.healthNotes2}/>\n                    <div class=\"points\" style=\"float: right;margin-right:-0.08rem;margin-bottom:-0.08rem;z-index: 1\">\n                        <CircleInput title=\"Max\" bind:value={worksheet.health}/>\n                    </div>\n                </Section>\n            </div>\n            <div class=\"flex-row\">\n                <Section title=\"Powers, Talents, and Specializations\"\n                         props={{style:\"margin-top:0.3rem;flex-grow:5;flex-shrink:0\"}}>\n                    <textarea style=\"border-top:none;border-color:black;border-width:1pt; resize: none; width:100%\"\n                              rows=\"15\" bind:value={worksheet.powersTalentsAndSpecializations}/>\n                </Section>\n                <Section title=\"Concept, Goals & Ties\" props={{style:\"margin-top:0.3rem;flex-grow:1;flex-shrink:3;width:25%\"}}>\n                    <textarea\n                            style=\"border-top:none;border-left: none;border-color:black;border-width:1pt; resize: none; width:100%\"\n                            rows=\"15\" bind:value={worksheet.goalsAndTies}/>\n                </Section>\n            </div>\n            <div class=\"flex-row weapons\">\n                <Section props={{style:\"width:100%\"}}>\n                    <div class=\"flex-row weapons-header\" slot=\"title\">\n                        <span>Weapon</span>\n                        <span>Attack Roll</span>\n                        <span>Damage</span>\n                        <span>Short Range</span>\n                        <span>Long Range</span>\n                        <span>Reload Time</span>\n                    </div>\n\n                    {#each worksheet.weapons as weapon}\n                        <div class=\"flex-row data\">\n                            <input type=\"text\" class=\"input-row\" bind:value={weapon.name}>\n                            <input type=\"text\" class=\"input-row\" bind:value={weapon.attackRoll}>\n                            <input type=\"text\" class=\"input-row\" bind:value={weapon.damage}>\n                            <input type=\"text\" class=\"input-row\" bind:value={weapon.shortRange}>\n                            <input type=\"text\" class=\"input-row\" bind:value={weapon.longRange}>\n                            <input type=\"text\" class=\"input-row\" bind:value={weapon.reloadTime}>\n                        </div>\n                    {/each}\n                </Section>\n            </div>\n        </div>\n    </div>\n</div>\n","<style>\n    @import \"Page2.css\";\n    @import \"../../styles/Page.css\";\n</style>\n\n<script>\n\n    import LogoBar from '../../shared/LogoBar';\n    import getNewWorksheet from '../../../model/worksheet'\n    import Section from \"../../shared/Section\";\n    import CircleInput from \"../../shared/CircleInput\"\n    import SimpleTextField from \"../../shared/SimpleTextField\";\n    import SimpleNumberField from \"../../shared/SimpleNumberField\";\n\n    export let worksheet = getNewWorksheet();\n\n</script>\n\n<div class=\"page\">\n    <LogoBar bind:worksheet={worksheet}/>\n    <div class=\"flex-row\">\n        <div class=\"spells\">\n            <h2>Spells</h2>\n            <div class=\"flex-row\" style=\"margin-bottom: 0.5rem;margin-top:0.5rem;\">\n                <CircleInput title=\"MP\" bind:value={worksheet.magicPoints}/>\n                <CircleInput title=\"Power\" bind:value={worksheet.spellPower} props={{style:\"margin-left:13rem\"}}/>\n            </div>\n            <div class=\"flex-row spell-list\">\n                <Section props={{style:\"width:100%\"}}>\n                    <div class=\"flex-row spells-header\" slot=\"title\">\n                        <span>Name</span>\n                        <span>TN</span>\n                        <span>MP</span>\n                        <span>Time</span>\n                        <span>Test/Notes</span>\n                    </div>\n\n                    {#each worksheet.spells as spell}\n                        <div class=\"flex-row data\">\n                            <input type=\"text\" class=\"input-row\" bind:value={spell.name}>\n                            <input type=\"text\" class=\"input-row\" bind:value={spell.targetNumber}>\n                            <input type=\"text\" class=\"input-row\" bind:value={spell.magicPoints}>\n                            <input type=\"text\" class=\"input-row\" bind:value={spell.castingTime}>\n                            <input type=\"text\" class=\"input-row\" bind:value={spell.testOrNotes}>\n                        </div>\n                    {/each}\n\n                </Section>\n            </div>\n        </div>\n        <div style=\"width:0.3rem;flex-shrink: 0; flex-grow: 0\"></div>\n        <div class=\"money-and-equipment\" style=\"flex-grow:0;flex-shrink:0;\">\n            <h2>Money and Equipment</h2>\n            <div class=\"flex-row\" style=\"margin-bottom: 0.5rem;margin-top:0.5rem;\">\n                <CircleInput title=\"Gold\" bind:value={worksheet.gold}/>\n                <CircleInput title=\"Silver\" bind:value={worksheet.silver} props={{style:\"margin-left:3rem\"}}/>\n                <CircleInput title=\"Copper\" bind:value={worksheet.copper} props={{style:\"margin-left:3rem\"}}/>\n            </div>\n            <Section title=\"Equipment\">\n                <div>\n                    <textarea class=\"equipment-input\" bind:value={worksheet.equipment} rows=\"32\"/>\n                </div>\n            </Section>\n        </div>\n    </div>\n</div>\n","<script>\n    import Page1 from './Page1';\n    import Page2 from './Page2';\n    import getNewWorksheet from '../../model/worksheet'\n    export let worksheet=getNewWorksheet()\n</script>\n\n<Page1 bind:worksheet={worksheet} />\n<Page2 bind:worksheet={worksheet} />","'use strict';\n\nvar ms = {};\n\nfunction getItem (key) {\n  return key in ms ? ms[key] : null;\n}\n\nfunction setItem (key, value) {\n  ms[key] = value;\n  return true;\n}\n\nfunction removeItem (key) {\n  var found = key in ms;\n  if (found) {\n    return delete ms[key];\n  }\n  return false;\n}\n\nfunction clear () {\n  ms = {};\n  return true;\n}\n\nmodule.exports = {\n  getItem: getItem,\n  setItem: setItem,\n  removeItem: removeItem,\n  clear: clear\n};\n","'use strict';\n\nfunction parse (rawValue) {\n  const parsed = parseValue(rawValue);\n\n  if (parsed === undefined) {\n    return null;\n  }\n\n  return parsed;\n}\n\nfunction parseValue (rawValue) {\n  try {\n    return JSON.parse(rawValue);\n  } catch (err) {\n    return rawValue;\n  }\n}\n\nmodule.exports = parse;\n","'use strict';\n\nvar parse = require('./parse');\nvar listeners = {};\nvar listening = false;\n\nfunction listen () {\n  if (global.addEventListener) {\n    global.addEventListener('storage', change, false);\n  } else if (global.attachEvent) {\n    global.attachEvent('onstorage', change);\n  } else {\n    global.onstorage = change;\n  }\n}\n\nfunction change (e) {\n  if (!e) {\n    e = global.event;\n  }\n  var all = listeners[e.key];\n  if (all) {\n    all.forEach(fire);\n  }\n\n  function fire (listener) {\n    listener(parse(e.newValue), parse(e.oldValue), e.url || e.uri);\n  }\n}\n\nfunction on (key, fn) {\n  if (listeners[key]) {\n    listeners[key].push(fn);\n  } else {\n    listeners[key] = [fn];\n  }\n  if (listening === false) {\n    listen();\n  }\n}\n\nfunction off (key, fn) {\n  var ns = listeners[key];\n  if (ns.length > 1) {\n    ns.splice(ns.indexOf(fn), 1);\n  } else {\n    listeners[key] = [];\n  }\n}\n\nmodule.exports = {\n  on: on,\n  off: off\n};\n","'use strict';\n\nvar stub = require('./stub');\nvar parse = require('./parse');\nvar tracking = require('./tracking');\nvar ls = 'localStorage' in global && global.localStorage ? global.localStorage : stub;\n\nfunction accessor (key, value) {\n  if (arguments.length === 1) {\n    return get(key);\n  }\n  return set(key, value);\n}\n\nfunction get (key) {\n  const raw = ls.getItem(key);\n  const parsed = parse(raw);\n  return parsed;\n}\n\nfunction set (key, value) {\n  try {\n    ls.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction remove (key) {\n  return ls.removeItem(key);\n}\n\nfunction clear () {\n  return ls.clear();\n}\n\nfunction backend (store) {\n  store && (ls = store);\n\n  return ls;\n}\n\naccessor.set = set;\naccessor.get = get;\naccessor.remove = remove;\naccessor.clear = clear;\naccessor.backend = backend;\naccessor.on = tracking.on;\naccessor.off = tracking.off;\n\nmodule.exports = accessor;\n","import localStorage from 'local-storage'\nconst worksheetPrefix=\"fate-worksheet-\";\nexport default class LocalStorageRepository {\n    prefix=worksheetPrefix;\n    constructor(\n        prefix=worksheetPrefix\n    ) {\n        this.prefix=prefix;\n    }\n\n    save(itemName, object) {\n        console.log(`save(${itemName},[object])`);\n        let key=this.prefix+itemName;\n        let text = JSON.stringify(object);\n        console.log(text);\n        console.log(\"saving to key:\"+key);\n        localStorage.set(key,text);\n    }\n\n    load(itemName,defaultItemGenerator= ()=>null) {\n        console.log(`load(${itemName})`);\n        let key=this.prefix+itemName;\n        console.log(\"loading from key:\"+key);\n        let text = localStorage.get(key);\n        console.log(\"loaded:\", text);\n        if (text === \"undefined\" || text === \"null\") return defaultItemGenerator();\n        return JSON.parse(text);\n    }\n}","<script>\n    import GlobalCss from \"../GlobalCss\";\n    /*-- Add support for Web Components to older browsers. --*/\n    import \"@webcomponents/webcomponentsjs/webcomponents-loader.js\";\n    import '@material/mwc-top-app-bar-fixed';\n    import '@material/mwc-icon-button';\n    import '@material/mwc-drawer';\n    import '@material/mwc-tab';\n    import '@material/mwc-tab-bar';\n    import '@material/mwc-icon';\n    import '@material/mwc-snackbar';\n    import downloadToClient from 'file-saver';\n    import Dropzone from \"svelte-file-dropzone\";\n    import Worksheet from \"../components/Worksheet\";\n    import getNewWorksheet, {validateWorksheet} from \"../model/worksheet\";\n    import LocalStorageRepository from '../repository/localStorageRepository';\n    import {applicationName, fileExtension, sheetPrefix, sheetSuffix} from '../applicationSettings'\n\n    import About from '../components/About/About.md';\n\n    let activeIndex;\n\n    let snackBarElement, tabBarElement;\n\n    let disabled = \"\";\n    let showLoadPane = false;\n    let firstCall = true;\n    let saveAlsoDownloads = true;\n    let ls;\n\n    let snackBarText = 'Replace this with a real message';\n    let app_name=\"\",file_ext=\"\", prefix=\"\", suffix=\"\";\n    const unsubscribe_name = applicationName.subscribe(value => {\n        app_name = value;\n    });\n    const unsubscribe_ext= fileExtension.subscribe(value => {\n        file_ext = value;\n    });\n    const unsubscribe_prefix= sheetPrefix.subscribe(value => {\n        prefix = value;\n        ls=new LocalStorageRepository(prefix);\n    });\n    const unsubscribe_suffix= sheetSuffix.subscribe(value => {\n        suffix = value;\n    });\n\n    let {tempWorksheet, isValid} = doInitialWorksheetLoad();\n\n    let worksheet = isValid ? tempWorksheet : getNewWorksheet();\n\n    scheduleAutosave();\n\n    function doInitialWorksheetLoad() {\n        let tempWorksheet;\n        let isValid = false;\n        try {\n\n            tempWorksheet = ls.load(suffix,getNewWorksheet);\n            isValid = validateWorksheet(tempWorksheet);\n        } catch (err){\n            console.log(err);\n            isValid = false;\n        }\n        return {tempWorksheet, isValid};\n    }\n\n    function handleSaveWorksheetClicked() {\n        let blob = new Blob([JSON.stringify(worksheet, null, 2)], {type: 'text/plain;charset=utf-8'});\n        ls.save(suffix,worksheet);\n        showSnackBar('Character sheet saved to local storage.');\n        if (saveAlsoDownloads) {\n            setTimeout(() => {\n                let fileName = `${worksheet.name}.${file_ext}`;\n                downloadToClient(blob, fileName);\n                showSnackBar(`Sending file: ${fileName}. Check your downloads folder.`);\n            }, 2000);\n        }\n    }\n\n    function handleLoadWorksheetClicked() {\n        showLoadPane = true;\n        disabled = 'disabled';\n    }\n\n    function handleNewWorksheetClicked() {\n        worksheet = getNewWorksheet();\n        activeIndex = 0;\n        showSnackBar('Created a new character sheet.');\n    }\n\n    function handleFilesSelect(e) {\n        let files = e.detail.acceptedFiles;\n        const reader = new FileReader();\n        reader.onload = function (e) {\n            // e.target.result should contain the text\n            try {\n                let text = e.target.result;\n                let tempWorksheet = JSON.parse(text);\n                if (validateWorksheet(tempWorksheet)) {\n                    setTimeout(() => showSnackBar(\"Character sheet loaded.\"), 250);\n                    worksheet = tempWorksheet;\n                    activeIndex = 0;\n                }\n            } catch (err) {\n                console.log(err);\n                setTimeout(() => showSnackBar(\"Invalid data format encountered. Nothing loaded.\"), 250);\n            } finally {\n                hideLoadPane();\n            }\n        };\n        reader.readAsText(files[0]);\n    }\n\n    function hideLoadPane() {\n        showLoadPane = false;\n        disabled = \"\";\n    }\n\n    function handlePrintClicked() {\n        setTimeout(() => window.print(), 500);\n    }\n\n    function handleTabActivated(e) {\n        activeIndex = tabBarElement.activeIndex;\n    }\n\n    function scheduleAutosave() {\n        if (!firstCall) {\n            return;\n        }\n        firstCall = false;\n        setInterval(() => ls.save(suffix,worksheet), 5 * 1000);\n    }\n\n    function showSnackBar(text) {\n        snackBarText = text;\n        snackBarElement.show();\n    }\n\n</script>\n<style>\n    @import \"App.css\";\n    @import \"../components/styles/Page.css\";\n</style>\n\n<svelte:head>\n    <title>{ !!worksheet.name ? worksheet.name+\" - \" : \"\"} {app_name}</title>\n\n    <!-- Your application must load the Roboto and Material Icons fonts. -->\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css?family=Material+Icons&display=block\" rel=\"stylesheet\">\n</svelte:head>\n\n<GlobalCss/>\n\n<main class=\"noprint\">\n    <mwc-top-app-bar-fixed>\n        <div slot=\"title\"><span>{app_name}</span></div>\n        <mwc-tab-bar slot=\"actionItems\" style=\"display: inline-block\" bind:this={tabBarElement}\n                     activeIndex={activeIndex} on:MDCTabBar:activated={handleTabActivated}>\n            <mwc-tab label=\"Character Sheet\"></mwc-tab>\n            <mwc-tab label=\"About\"></mwc-tab>\n        </mwc-tab-bar>\n        <mwc-icon-button icon=\"note_add\" slot=\"actionItems\" on:click={handleNewWorksheetClicked}\n                         {disabled}></mwc-icon-button>\n        {#if showLoadPane}\n            <mwc-icon-button icon=\"cancel\" slot=\"actionItems\" on:click={hideLoadPane}></mwc-icon-button>\n        {:else}\n            <mwc-icon-button icon=\"folder_open\" slot=\"actionItems\"\n                             on:click={handleLoadWorksheetClicked}></mwc-icon-button>\n        {/if}\n        <mwc-icon-button icon=\"save\" slot=\"actionItems\" on:click={handleSaveWorksheetClicked}\n                         {disabled}></mwc-icon-button>\n        <mwc-icon-button icon=\"print\" slot=\"actionItems\" on:click={handlePrintClicked} {disabled}></mwc-icon-button>\n        {#if (showLoadPane)}\n            <div id=\"content\" class=\"file-loader\" style=\"height: 100%\">\n                <Dropzone on:drop={handleFilesSelect}\n                          containerStyles=\"height:92vh;color:#333333; background-color:#EFEFEF;\"/>\n            </div>\n        {:else}\n            <div id=\"content\" style=\"padding:0\">\n                {#if activeIndex === 0}\n                    <Worksheet bind:worksheet={worksheet}/>\n                {:else if activeIndex === 1}\n                    <About />\n                {:else}\n                    <div class=\"page\">\n                        <h3>TBD/Coming Soon</h3>\n                    </div>\n                {/if}\n            </div>\n        {/if}\n        <mwc-snackbar labelText=\"{snackBarText}\" bind:this={snackBarElement}>\n            <mwc-icon-button icon=\"close\" slot=\"dismiss\"></mwc-icon-button>\n        </mwc-snackbar>\n    </mwc-top-app-bar-fixed>\n</main>\n\n<main class=\"printme\">\n    <!-- This section is intended for print rendering only. You may suppress the rendering of this entire section\n         to HTML if you like, but you'll need to ensure it's been rendered right before the print dialog is invoked.\n         (i.e. print() )\n     -->\n    <Worksheet bind:worksheet={worksheet}/>\n\n</main>\n","import App from './App';\n\nconst app = new App({\n    target: document.body,\n    props: {\n\n    }\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","exclude_internal_props","props","result","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","set_svg_attributes","set_custom_element_data","prop","to_number","children","Array","from","childNodes","claim_element","nodes","svg","nodeName","j","remove","push","splice","set_data","wholeText","set_input_value","input","set_style","important","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","bind","index","bound","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","ret","rest","hydrate","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","$$props","obj","$$set","keys","flushFn","polyfillsLoaded","whenLoadedFns","allowUpgrades","fireEvent","window","WebComponents","dispatchEvent","CustomEvent","bubbles","batchCustomElements","customElements","polyfillWrapFlushCallback","flushCallback","HTMLTemplateElement","bootstrap","runWhenLoadedFns","fnsMap","Function","all","catch","err","console","error","waitFor","waitFn","_batchCustomElements","polyfills","Element","prototype","ShadyDOM","force","forcePolyfill","needsTemplate","t","content","cloneNode","DocumentFragment","t2","clone","firstChild","URL","Symbol","url","polyfillFile","join","root","script","querySelector","replace","newScript","readyState","write","outerHTML","head","extendStatics","setPrototypeOf","hasOwnProperty","__extends","__","constructor","__assign","s","arguments","apply","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","isCEPolyfill","removeNodes","container","start","end","nextSibling","marker","String","random","nodeMarker","markerRegex","RegExp","Template","parts","nodesToRemove","stack","walker","createTreeWalker","lastPartIndex","partIndex","strings","values","nextNode","nodeType","hasAttributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","statics","split","tagName","currentNode","parent","lastIndex","createMarker","match","previousSibling","str","suffix","isTemplatePartActive","part","createComment","removeNodesFromTemplate","template","nextActiveIndexInTemplateParts","nodeIndex","removeCount","nodesToRemoveInTemplate","currentRemovingNode","countNodes","startIndex","directives","WeakMap","directive","f","args","isDirective","noChange","nothing","TemplateInstance","processor","__parts","setValue","commit","importNode","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","commentMarker","TemplateResult","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","innerHTML","getHTML","isPrimitive","isIterable","isArray","iterator","AttributeCommitter","_createPart","AttributePart","v","_getValue","committer","NodePart","__pendingValue","startNode","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","valueAsString","templateFactory","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","BooleanAttributePart","PropertyCommitter","super","single","PropertyPart","eventOptionsSupported","capture","_e","EventPart","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","templateCache","templateCaches","get","stringsArray","keyString","getTemplateElement","defaultTemplateProcessor","prefix","getTemplateCacheKey","scopeName","compatibleShadyCSSVersion","ShadyCSS","prepareTemplateDom","warn","shadyTemplateFactory","cacheKey","TEMPLATE_TYPES","shadyRenderSet","prepareTemplateStyles","renderedDOM","templateElement","styles","querySelectorAll","condensedStyle","textContent","templates","removeStylesFromLitTemplates","refNode","insertCount","walkerIndex","insertNodeIntoTemplate","nativeShadow","removes","JSCompiler_renameProperty","_obj","defaultConverter","Boolean","JSON","stringify","Number","parse","notEqual","old","defaultPropertyDeclaration","converter","reflect","hasChanged","UpdatingElement","HTMLElement","_updateState","_instanceProperties","_updatePromise","res","_enableUpdatingResolver","_changedProperties","_reflectingProperties","initialize","observedAttributes","finalize","_classProperties","_attributeNameForProperty","_attributeToPropertyMap","superProperties","getPrototypeOf","_ensureClassProperties","noAccessor","descriptor","getPropertyDescriptor","_options","oldValue","_requestUpdate","configurable","enumerable","superCtor","properties","propKeys","getOwnPropertyNames","getOwnPropertySymbols","createProperty","fromAttribute","toAttribute","_saveInstanceProperties","_v","enableUpdating","_attributeToProperty","ctor","attrValue","_propertyValueToAttribute","propName","getPropertyOptions","_propertyValueFromAttribute","shouldRequestUpdate","_valueHasChanged","_hasRequestedUpdate","_enqueueUpdate","updateComplete","performUpdate","hasUpdated","_applyInstanceProperties","shouldUpdate","changedProperties","_markUpdated","firstUpdated","updated","_getUpdateComplete","size","_propertyToAttribute","customElement","classOrDescriptor","clazz","define","legacyCustomElement","kind","elements","standardCustomElement","standardProperty","placement","initializer","property","protoOrDescriptor","proto","legacyProperty","internalProperty","query","selector","renderRoot","legacyQuery","standardQuery","eventOptions","legacyEventOptions","standardEventOptions","supportsAdoptingStyleSheets","Document","CSSStyleSheet","constructionToken","CSSResult","safeToken","styleSheet","_styleSheet","replaceSync","css","reduce","acc","idx","textFromCSSResult","renderNotImplemented","LitElement","userStyles","getStyles","_styles","addStyles","reduceRight","unshift","_getUniqueStyles","createRenderRoot","ShadowRoot","adoptStyles","attachShadow","mode","adoptedStyleSheets","_needsShimAdoptedStyleSheets","ScopingShim","prepareAdoptedCssText","localName","connectedCallback","styleElement","templateResult","render","hasRendered","needsScoping","host","firstScopeRender","renderContainer","createDocumentFragment","appendInto","litRender","cssClasses","FIXED_CLASS","FIXED_SCROLLED_CLASS","SHORT_CLASS","SHORT_COLLAPSED_CLASS","SHORT_HAS_ACTION_ITEM_CLASS","numbers","DEBOUNCE_THROTTLE_RESIZE_TIME_MS","MAX_TOP_APP_BAR_HEIGHT","ACTION_ITEM_SELECTOR","NAVIGATION_EVENT","NAVIGATION_ICON_SELECTOR","ROOT_SELECTOR","TITLE_SELECTOR","MDCFoundation","adapter","destroy","MDCTopAppBarBaseFoundation","_super","defaultAdapter","addClass","removeClass","hasClass","setStyle","getTopAppBarHeight","notifyNavigationIconClicked","getViewportScrollY","getTotalActionItems","handleTargetScroll","handleWindowResize","handleNavigationClick","MDCTopAppBarFoundation","_this","wasDocked_","isDockedShowing_","currentAppBarOffsetTop_","isCurrentlyBeingResized_","resizeThrottleId_","resizeDebounceId_","lastScrollPosition_","topAppBarHeight_","currentScrollPosition","diff","abs","moveTopAppBar_","setTimeout","throttledResizeHandler_","clearTimeout","checkForUpdate_","offscreenBoundaryTop","hasAnyPixelsOffscreen","hasAnyPixelsOnscreen","partiallyShowing","offset","currentHeight","matches","webkitMatchesSelector","msMatchesSelector","addHasRemoveClass","className","contains","supportsPassive","optionsBlock","supportsPassiveEventListener","BaseElement","mdcFoundation","mdcFoundationClass","createAdapter","createFoundation","ClassList","classes","changed","cls","classString","previousClassesCache","classMap","classInfo","previousClasses","passiveEventOptionsIfSupported","TopAppBarBaseBase","centerTitle","scrollTarget","_scrollTarget","unregisterScrollListener","updateRootPosition","requestUpdate","registerScrollListener","mdcRoot","windowScroller","position","title","barClasses","contentClasses","clientHeight","Event","cancelable","Window","pageYOffset","scrollTop","_actionItemsSlot","assignedNodes","flatten","registerListeners","disconnectedCallback","unregisterListeners","TopAppBarBase","prominent","dense","handleResize","mdc-top-app-bar--dense","mdc-top-app-bar--prominent","center-title","mdc-top-app-bar--fixed-adjust","mdc-top-app-bar--dense-fixed-adjust","mdc-top-app-bar--prominent-fixed-adjust","mdc-top-app-bar--dense-prominent-fixed-adjust","MDCFixedTopAppBarFoundation","wasScrolled_","TopAppBarFixedBase","mdc-top-app-bar--fixed","TopAppBarFixed","supportsCssVariables_","BG_FOCUSED","FG_ACTIVATION","FG_DEACTIVATION","ROOT","UNBOUNDED","VAR_FG_SCALE","VAR_FG_SIZE","VAR_FG_TRANSLATE_END","VAR_FG_TRANSLATE_START","VAR_LEFT","VAR_TOP","DEACTIVATION_TIMEOUT_MS","FG_DEACTIVATION_MS","INITIAL_ORIGIN_SCALE","PADDING","TAP_DELAY_MS","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","activationAnimationHasEnded_","activationTimer_","fgDeactivationRemovalTimer_","fgScale_","frame_","width","height","initialSize_","layoutFrame_","maxRadius_","unboundedCoords_","left","top","activationState_","defaultActivationState_","activationTimerCallback_","runDeactivationUXLogicIfReady_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","handleFocus","blurHandler_","handleBlur","resizeHandler_","layout","browserSupportsCssVars","computeBoundingRect","right","bottom","containsEventTarget","deregisterDocumentInteractionHandler","deregisterInteractionHandler","deregisterResizeHandler","getWindowPageOffset","x","y","isSurfaceActive","isSurfaceDisabled","isUnbounded","registerDocumentInteractionHandler","registerInteractionHandler","registerResizeHandler","updateCssVariable","supportsPressRipple","supportsPressRipple_","registerRootHandlers_","_a","ROOT_1","UNBOUNDED_1","requestAnimationFrame","layoutInternal_","ROOT_2","UNBOUNDED_2","removeCssVars_","deregisterRootHandlers_","deregisterDeactivationHandlers_","activate","evt","deactivate","cancelAnimationFrame","setUnbounded","unbounded","activationEvent","hasDeactivationUXRun","isActivated","isProgrammatic","wasActivatedByPointer","wasElementMadeActive","evtType","registerDeactivationHandlers_","rippleStrings","activationState","previousActivationEvent","previousActivationEvent_","some","resetActivationState_","checkElementMadeActive_","animateActivation_","keyCode","_b","translateStart","translateEnd","_c","getFgTranslationCoordinates_","startPoint","endPoint","rmBoundedActivationClasses_","pageOffset","clientRect","normalizedX","normalizedY","documentX","documentY","touchEvent","changedTouches","pageX","pageY","mouseEvent","getNormalizedEventCoords","state","animateDeactivation_","maxDim","sqrt","pow","initialSize","floor","updateLayoutCssVars_","round","previousStylePropertyCache","styleMap","styleInfo","previousStyleProperties","removeProperty","RippleBase","primary","accent","disabled","activated","selected","hovering","bgFocused","fgActivation","fgDeactivation","fgScale","fgSize","leftPos","topPos","isActive","parentElement","varName","getBoundingClientRect","pageXOffset","ev","waitForFoundation","mdc-ripple-upgraded--unbounded","mdc-ripple-upgraded--background-focused","mdc-ripple-upgraded--foreground-activation","mdc-ripple-upgraded--foreground-deactivation","hover","--mdc-ripple-fg-scale","--mdc-ripple-fg-size","--mdc-ripple-fg-translate-end","--mdc-ripple-fg-translate-start","--mdc-ripple-left","--mdc-ripple-top","Ripple","RippleHandlers","rippleFn","startPress","endPress","startFocus","endFocus","startHover","endHover","IconButtonBase","icon","label","shouldRenderRipple","rippleHandlers","ripple","buttonElement","focus","blur","handleRippleFocus","handleRippleBlur","handleRippleMouseDown","handleRippleMouseEnter","handleRippleMouseLeave","handleRippleTouchStart","handleRippleDeactivate","renderRipple","onUp","IconButton","_blockingElements","_alreadyInertElements","_topElParents","_siblingsToRestore","_parentMO","_topChanged","_swapInertedSibling","_inertSiblings","_restoreInertedSiblings","_getParents","_getDistributedChildren","_isInertable","_handleMutations","BlockingElementsImpl","elems","newTop","toKeepInert","oldParents","newParents","body","toSkip","oldInert","newInert","siblingsToRestore","inert","disconnect","siblings","sibling","inertedSiblings","mo","MutationObserver","parentToObserve","maybeShadyRoot","__shady","observe","childList","mutations","parents","mutation","inertedChild","removedNodes","info","addedNodes","test","current","ELEMENT_NODE","assignedSlot","shadowRoot","slots","$blockingElements","_focusableElementsString","InertRoot","rootElement","inertManager","_inertManager","_rootElement","_managedNodes","hasAttribute","_savedAriaHidden","_makeSubtreeUnfocusable","_observer","_onMutation","subtree","inertNode","_unmanageNode","managedNodes","hasSavedAriaHidden","savedAriaHidden","ariaHidden","composedTreeWalk","_visitNode","activeElement","DOCUMENT_FRAGMENT_NODE","_adoptInertRoot","_manageNode","register","deregister","inertSubroot","getInertRoot","setInert","savedInertNode","records","self","record","_unmanageSubtree","attributeName","managedNode","InertNode","inertRoot","_node","_overrodeFocusMethod","_inertRoots","_savedTabIndex","_destroyed","ensureUntabbable","_throwIfDestroyed","destroyed","hasSavedTabIndex","savedTabIndex","tabIndex","destructor","shadowRootAncestor","distributedNodes","getDistributedNodes","child","addInertStyle","_document","_watchForInert","documentElement","_onDocumentLoaded","addInertRoot","removeInertRoot","inertElement","inertElements","ANIMATE","CLOSING","DISMISSIBLE","MODAL","OPEN","OPENING","APP_CONTENT_SELECTOR","CLOSE_EVENT","OPEN_EVENT","SCRIM_SELECTOR","MDCDismissibleDrawerFoundation","animationFrame_","animationTimer_","elementHasClass","notifyClose","notifyOpen","saveFocus","restoreFocus","focusActiveNavigationItem","trapFocus","releaseFocus","open","isOpen","isOpening","isClosing","runNextAnimationFrame_","close","handleKeydown","handleTransitionEnd","isElement_","closed_","opened_","MDCModalDrawerFoundation","handleScrimClick","observer","_observers","observers","userUpdated","blockingElements","DrawerBase","_previousFocus","hasHeader","getRootNode","appContent","dismissible","modal","header","mdc-drawer--dismissible","mdc-drawer--modal","_handleScrimClick","Drawer","ACTIVE","FADE","NO_TRANSITION","CONTENT_SELECTOR","MDCTabIndicatorFoundation","computeContentClientRect","setContentStyleProperty","MDCFadingTabIndicatorFoundation","MDCSlidingTabIndicatorFoundation","previousIndicatorClientRect","currentClientRect","widthDelta","xPosition","TabIndicatorBase","fade","mdc-tab-indicator__content--icon","material-icons","mdc-tab-indicator__content--underline","mdc-tab-indicator--fade","contentElement","TabIndicator","applyPassive","globalObj","passiveSupported","supportsPassiveOption","supportsCssVariablesWin","windowObj","forceRefresh","supportsCssVars","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","supportsCssVariables","RippleIntermediate","foundation","isSafari","navigator","userAgent","didApplyRippleStyle","rippleNode","applyRippleStyle","surfaceNode","interactionNode","rippleFoundation","rippleInteractionNodes","existingInteractionNode","active","ARIA_SELECTED","INTERACTED_EVENT","RIPPLE_SELECTOR","TABINDEX","TAB_INDICATOR_SELECTOR","MDCTabFoundation","focusOnActivate_","setAttr","activateIndicator","deactivateIndicator","notifyInteracted","getOffsetLeft","getOffsetWidth","getContentOffsetLeft","getContentOffsetWidth","handleClick","setFocusOnActivate","focusOnActivate","computeDimensions","rootWidth","rootLeft","contentWidth","contentLeft","contentRight","rootRight","tabIdCounter","TabBase","hasImageIcon","isFadingIndicator","minWidth","isMinWidthIndicator","indicatorIcon","stacked","_active","initFocus","delegatesFocus","dir","id","mdc-tab--min-width","mdc-tab--stacked","iconTemplate","labelTemplate","rippleDirective","_handleClick","renderIndicator","_tabIndicator","tabId","composed","offsetLeft","offsetWidth","_contentElement","setActive","newValue","tabIndicator","async","Tab","ANIMATING","SCROLL_AREA_SCROLL","SCROLL_TEST","AREA_SELECTOR","MDCTabScrollerRTL","MDCTabScrollerRTLDefault","getScrollPositionRTL","currentScrollLeft","getScrollAreaScrollLeft","calculateScrollEdges_","scrollToRTL","scrollX","edges","clampedScrollLeft","clampScrollValue_","finalScrollPosition","scrollDelta","incrementScrollRTL","getAnimatingScrollPosition","getScrollContentOffsetWidth","getScrollAreaOffsetWidth","min","MDCTabScrollerRTLNegative","translateX","MDCTabScrollerRTLReverse","MDCTabScrollerFoundation","isAnimating_","eventTargetMatchesSelector","addScrollAreaClass","setScrollAreaStyleProperty","setScrollContentStyleProperty","getScrollContentStyleValue","setScrollAreaScrollLeft","computeScrollAreaClientRect","computeScrollContentClientRect","computeHorizontalScrollbarHeight","horizontalScrollbarHeight","getScrollPosition","isRTL_","computeCurrentScrollPositionRTL_","currentTranslateX","calculateCurrentTranslateX_","handleInteraction","stopScrollAnimation_","evtTarget","incrementScroll","scrollXIncrement","animate_","getIncrementScrollOperation_","incrementScrollImmediate","operation","scrollTo","scrollToRTL_","scrollTo_","getRTLScroller","rtlScrollerInstance_","rtlScrollerFactory_","transformValue","ar","next","done","__read","tx","parseFloat","currentScrollX","safeScrollX","animation","targetScrollX","getAnimatingScrollPosition_","scrollLeft","initialScrollLeft","newScrollLeft","rootClientRect","contentClientRect","rightEdgeDelta","TabScrollerBase","_scrollbarHeight","_handleInteraction","_handleTransitionEnd","scrollAreaElement","scrollContentElement","getComputedStyle","getPropertyValue","overflowX","offsetHeight","TabScroller","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","END_KEY","ENTER_KEY","HOME_KEY","SPACE_KEY","TAB_ACTIVATED_EVENT","TAB_SCROLLER_SELECTOR","TAB_SELECTOR","ARROW_LEFT_KEYCODE","ARROW_RIGHT_KEYCODE","END_KEYCODE","ENTER_KEYCODE","EXTRA_SCROLL_AMOUNT","HOME_KEYCODE","SPACE_KEYCODE","ACCEPTABLE_KEYS","KEYCODE_MAP","MDCTabBarFoundation","useAutomaticActivation_","getScrollContentWidth","isRTL","setActiveTab","activateTabAtIndex","deactivateTabAtIndex","focusTabAtIndex","getTabIndicatorClientRectAtIndex","getTabDimensionsAtIndex","getPreviousActiveTabIndex","getFocusedTabIndex","getIndexOfTabById","getTabListLength","notifyTabActivated","setUseAutomaticActivation","useAutomaticActivation","activateTab","previousClientRect","previousActiveIndex","indexIsInRange_","scrollIntoView","handleKeyDown","getKeyFromEvent_","isActivationKey_","preventDefault","determineTargetFromKey_","focusedTabIndex","handleTabInteraction","scrollIntoViewRTL_","scrollIntoView_","origin","maxIndex","calculateScrollIncrement_","nextIndex","scrollPosition","barWidth","nextTabDimensions","relativeContentLeft","leftIncrement","rightIncrement","calculateScrollIncrementRTL_","scrollContentWidth","findAdjacentTabIndexClosestToEdge_","tabDimensions","relativeRootLeft","relativeRootRight","relativeRootDelta","findAdjacentTabIndexClosestToEdgeRTL_","rootDelta","scrollIncrement","scrollWidth","TabBarBase","activeIndex","_previousActiveIndex","_handleTabInteraction","_handleKeydown","tabsSlot","_getTabs","scrollerElement","scrollToPosition","incrementScrollPosition","tab","_getTab","computeIndicatorClientRect","DOMRect","tabElements","TabBar","Icon","ACTION_SELECTOR","ARIA_LIVE_LABEL_TEXT_ATTR","CLOSED_EVENT","CLOSING_EVENT","DISMISS_SELECTOR","LABEL_SELECTOR","OPENED_EVENT","OPENING_EVENT","REASON_ACTION","REASON_DISMISS","SURFACE_SELECTOR","DEFAULT_AUTO_DISMISS_TIMEOUT_MS","INDETERMINATE","MAX_AUTO_DISMISS_TIMEOUT_MS","MIN_AUTO_DISMISS_TIMEOUT_MS","SNACKBAR_ANIMATION_CLOSE_TIME_MS","SNACKBAR_ANIMATION_OPEN_TIME_MS","ARIA_LIVE_DELAY_MS","MDCSnackbarFoundation","isOpen_","autoDismissTimer_","autoDismissTimeoutMs_","closeOnEscape_","announce","notifyClosed","notifyClosing","notifyOpened","notifyOpening","clearAutoDismissTimer_","timeoutMs","getTimeoutMs","handleAnimationTimerEnd_","reason","setTimeoutMs","minValue","maxValue","getCloseOnEscape","setCloseOnEscape","closeOnEscape","handleActionButtonClick","_evt","handleActionIconClick","stateMap","accessibleSnackbarLabel","labelText","maybeState","labelEl","timerId","SnackbarBase","leading","mdc-snackbar--stacked","mdc-snackbar--leading","_handleActionClick","_handleDismissClick","Snackbar","XMLHttpRequest","responseType","onload","response","onerror","send","status","MouseEvent","initMouseEvent","global","saveAs","HTMLAnchorElement","g","h","webkitURL","download","rel","href","location","createObjectURL","revokeObjectURL","msSaveOrOpenBlob","autoBom","Blob","innerText","safari","FileReader","onloadend","readAsDataURL","module","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","rejected","__generator","_","sent","trys","ops","verb","throw","return","op","TypeError","COMMON_MIME_TYPES","toFileWithPath","file","path","ext","writable","withMimeType","webkitRelativePath","FILES_TO_IGNORE","fromEvent","dataTransfer","getDataTransferFiles","getInputFiles","files","fromList","dt","items","toFilePromises","noIgnoredFiles","webkitGetAsEntry","fromDataTransferItem","entry","isDirectory","fromDirEntry","concat","__spread","getAsFile","fwp","fromEntry","fromFileEntry","reader","createReader","entries","readEntries","batch","err_1","fullPath","exports","acceptedFiles","acceptedFilesArray","fileName","mimeType","baseMimeType","validType","trim","charAt","getInvalidTypeRejectionErr","accept","code","message","getTooLargeRejectionErr","maxSize","getTooSmallRejectionErr","minSize","TOO_MANY_FILES_REJECTION","isDefined","isPropagationStopped","cancelBubble","isEvtWithFiles","types","onDocumentDragOver","onInputElementClick","stopPropagation","getFilesFromEvent","Infinity","multiple","preventDropOnDocument","noClick","noKeyboard","noDrag","noDragEventsBubbling","containerClasses","containerStyles","disableDefaultStyles","dispatch","rootRef","inputRef","isFocused","isFileDialogActive","isDragActive","isDragAccept","isDragReject","draggedFiles","fileRejections","openFileDialog","click","composeHandler","dragTargetsRef","onDocumentDrop","onWindowFocus","onMount","onDestroy","isEqualNode","isIe","isEdge","isIeOrEdge","dragEvent","dropEffect","targets","targetIdx","accepted","acceptError","isAcceptable","accepts","fileAccepted","sizeMatch","sizeError","fileMatchSize","errors","subscriber_queue","stop","subscribers","new_value","run_queue","subscribe","invalidate","subscriber","applicationName","sheetName","fileExtension","sheetSuffix","sheetPrefix","action_result","radius","textAlign","styleVars","text-align","class","level","experiencePoints","race","background","socialClass","worksheet","getNewWorksheet","health","healthNotes1","healthNotes2","move","speed","charge","powersTalentsAndSpecializations","goalsAndTies","equipment","spells","makeClones","targetNumber","magicPoints","castingTime","testOrNotes","armor","rating","penalty","defense","weapons","attackRoll","damage","shortRange","longRange","reloadTime","abilities","accuracy","focuses","communication","constitution","dexterity","fighting","intelligence","perception","strength","willpower","spellPower","gold","silver","copper","validateWorksheet","toString","log","hint","indent","ability","ms","getItem","setItem","removeItem","rawValue","parsed","parseValue","listeners","change","listener","uri","attachEvent","onstorage","ns","ls","localStorage","stub","accessor","raw","backend","store","on","tracking","off","LocalStorageRepository","itemName","object","defaultItemGenerator","handlePrintClicked","print","snackBarElement","tabBarElement","showLoadPane","firstCall","snackBarText","app_name","file_ext","tempWorksheet","isValid","load","doInitialWorksheetLoad","hideLoadPane","showSnackBar","show","setInterval","save","scheduleAutosave","blob","downloadToClient","readAsText"],"mappings":"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"}